+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   statsmodels/sandbox/stats/multicomp.py
	modified:   statsmodels/stats/multicomp.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 8600926f2f22e58779a667d82047a90318b20431
Merge: cfd370fc4 afc39eae1
Author: Kevin Sheppard <bashtage@users.noreply.github.com>
Date:   Mon Jan 20 15:58:02 2025 +0000

    Merge pull request #9483 from boringbyte/fix/tsa-arma-0-doc
    
    DOC: remove empty cell in tsa_arma_0.ipyb file

+ git diff 8600926f2f22e58779a667d82047a90318b20431
diff --git a/statsmodels/sandbox/stats/multicomp.py b/statsmodels/sandbox/stats/multicomp.py
index ea0cef082..f35c26884 100644
--- a/statsmodels/sandbox/stats/multicomp.py
+++ b/statsmodels/sandbox/stats/multicomp.py
@@ -71,6 +71,7 @@ import math
 import numpy as np
 from numpy.testing import assert_almost_equal, assert_equal
 from scipy import interpolate, stats
+import pandas as pd
 
 from statsmodels.graphics import utils
 from statsmodels.iolib.table import SimpleTable
@@ -646,6 +647,9 @@ class TukeyHSDResults:
         reject2=None,
         variance=None,
         pvalues=None,
+        alpha=None,
+        group_t=None,
+        group_c=None,
     ):
         self._multicomp = mc_object
         self._results_table = results_table
@@ -658,11 +662,24 @@ class TukeyHSDResults:
         self.reject2 = reject2
         self.variance = variance
         self.pvalues = pvalues
+        self.alpha = alpha
+        self.group_t = group_t
+        self.group_c = group_c
         # Taken out of _multicomp for ease of access for unknowledgeable users
         self.data = self._multicomp.data
         self.groups = self._multicomp.groups
         self.groupsunique = self._multicomp.groupsunique
 
+        if np.size(df_total) > 1:  # or should it be np.isscalar
+            # assume we have Games-Howell, unequal var case
+            self._qcrit_hsd = None
+        else:
+            self._qcrit_hsd = q_crit
+
+        nobs_group = self._multicomp.groupstats.groupnobs
+        self.df_total_hsd = np.sum(nobs_group - 1)
+
+
     def __str__(self):
         return str(self._results_table)
 
@@ -670,10 +687,60 @@ class TukeyHSDResults:
         """Summary table that can be printed"""
         return self._results_table
 
+    def summary_frame(self):
+        """Summary DataFrame
+
+        The group columns are labeled as "group_t" and "group_c" with mean
+        difference defined as treatment minus control.
+        This should be less confusing than numeric labels group1 and group2.
+
+        Returns
+        -------
+        pandas.DataFrame
+
+        Notes
+        -----
+        The number of columns will likely increase in a future version of
+        statsmodels. Do not use numeric indices for the DataFrame in order
+        to be robust to the addition of columns.
+        """
+        frame = pd.DataFrame({
+            "group_t": self.group_t,
+            "group_c": self.group_c,
+            "meandiff": self.meandiffs,
+            "p-adj": self.pvalues,
+            "lower": self.confint[:, 0],
+            "upper": self.confint[:, 1],
+            "reject": self.reject,
+            })
+        return frame
+
+    def _get_q_crit(self, hsd=True, alpha=None):
+        n_means = len(self.groupsunique)
+
+        if alpha is None:
+            alpha = self.alpha
+            use_attr = True
+
+        if hsd is True:
+            if use_attr and self._qcrit_hsd is not None:
+                q_crit = self._qcrit_hsd
+            else:  # compute it
+                q_crit = get_tukeyQcrit2(n_means, self.df_total_hsd, alpha=alpha)
+            if use_attr:
+                self._qcrit_hsd = q_crit
+        else:
+            raise NotImplementedError("not yet")
+
+        return q_crit
+
     def _simultaneous_ci(self):
         """Compute simultaneous confidence intervals for comparison of means."""
+
+        q_crit_hsd = self._get_q_crit(hsd=True)
+
         self.halfwidths = simultaneous_ci(
-            self.q_crit,
+            q_crit_hsd,
             self.variance,
             self._multicomp.groupstats.groupnobs,
             self._multicomp.pairindices,
@@ -720,6 +787,16 @@ class TukeyHSDResults:
         confidence intervals, any two pairs can be compared for significance
         by looking for overlap.
 
+        The derivation in Hochberg and Tamhane is under the equal variance
+        assumption. We use the same computation in the case of unequal
+        variances, however, with replacement of the common pooled variance
+        by the unequal estimates of the whithin group variances.
+        This provides a plot that looks more informative and plausible in the
+        case where there are large differences in variances. In the equal
+        sample size and equal variance case, the confidence intervals computed
+        by the two methods, equal and unequal variance, are very close to
+        each other in larger samples.
+
         References
         ----------
         .. [*] Hochberg, Y., and A. C. Tamhane. Multiple Comparison Procedures.
@@ -1042,7 +1119,7 @@ class MultiComparison:
             resarr,
         )
 
-    def tukeyhsd(self, alpha=0.05):
+    def tukeyhsd(self, alpha=0.05, use_var='equal'):
         """
         Tukey's range test to compare means of all pairs of groups
 
@@ -1050,12 +1127,25 @@ class MultiComparison:
         ----------
         alpha : float, optional
             Value of FWER at which to calculate HSD.
+        use_var : {"unequal", "equal"}
+            If ``use_var`` is "equal", then the Tukey-hsd pvalues are returned.
+            Tukey-hsd assumes that (within) variances are the same across groups.
+            If ``use_var`` is "unequal", then the Games-Howell pvalues are
+            returned. This uses Welch's t-test for unequal variances with
+            Satterthwait's corrected degrees of freedom for each pairwise
+            comparison.
 
         Returns
         -------
         results : TukeyHSDResults instance
             A results class containing relevant data and some post-hoc
             calculations
+
+        Notes
+        -----
+
+        .. versionadded:: 0.15
+   `       The `use_var` keyword and option for Games-Howell test.
         """
         self.groupstats = GroupsStats(
             np.column_stack([self.data, self.groupintlab]), useranks=False
@@ -1063,9 +1153,13 @@ class MultiComparison:
 
         gmeans = self.groupstats.groupmean
         gnobs = self.groupstats.groupnobs
-        # var_ = self.groupstats.groupvarwithin()
-        # #possibly an error in varcorrection in this case
-        var_ = np.var(self.groupstats.groupdemean(), ddof=len(gmeans))
+        if use_var == 'unequal':
+            var_ = self.groupstats.groupvarwithin()
+        elif use_var == 'equal':
+            var_ = np.var(self.groupstats.groupdemean(), ddof=len(gmeans))
+        else:
+            raise ValueError('use_var should be "unequal" or "equal"')
+
         # res contains: 0:(idx1, idx2), 1:reject, 2:meandiffs, 3: std_pairs,
         # 4:confint, 5:q_crit, 6:df_total, 7:reject2, 8: pvals
         res = tukeyhsd(gmeans, gnobs, var_, df=None, alpha=alpha, q_crit=None)
@@ -1096,18 +1190,21 @@ class MultiComparison:
         )
 
         return TukeyHSDResults(
-            self,
+            self,  # mc_object, attached as _multicomp
             results_table,
-            res[5],
-            res[1],
-            res[2],
-            res[3],
-            res[4],
-            res[6],
-            res[7],
-            var_,
-            res[8],
-        )
+            res[5],  # q_crit, positional
+            reject=res[1],
+            meandiffs=res[2],
+            std_pairs=res[3],
+            confint=res[4],
+            df_total=res[6],
+            reject2=res[7],
+            variance=var_,
+            pvalues=res[8],
+            alpha=alpha,
+            group_t=self.groupsunique[res[0][1]],
+            group_c=self.groupsunique[res[0][0]],
+            )
 
 
 def rankdata(x):
@@ -1326,7 +1423,6 @@ def varcorrection_pairs_unequal(var_all, nobs_all, df_all):
     error, MSE. To obtain the correction factor for the standard deviation,
     square root needs to be taken.
 
-    TODO: something looks wrong with dfjoint, is formula from SPSS
     """
     # TODO: test and replace with broadcasting
     v1, v2 = np.meshgrid(var_all, var_all)
@@ -1334,8 +1430,7 @@ def varcorrection_pairs_unequal(var_all, nobs_all, df_all):
     df1, df2 = np.meshgrid(df_all, df_all)
 
     varjoint = v1 / n1 + v2 / n2
-
-    dfjoint = varjoint**2 / (df1 * (v1 / n1) ** 2 + df2 * (v2 / n2) ** 2)
+    dfjoint = varjoint**2 / ((v1 / n1) ** 2 / df1 + (v2 / n2) ** 2 / df2)
 
     return varjoint, dfjoint
 
@@ -1368,6 +1463,7 @@ def tukeyhsd(mean_all, nobs_all, var_all, df=None, alpha=0.05, q_crit=None):
     else:
         df_total = np.sum(df)
 
+    df_pairs_ = None
     if (np.size(nobs_all) == 1) and (np.size(var_all) == 1):
         # balanced sample sizes and homogenous variance
         var_pairs = 1.0 * var_all / nobs_all * np.ones((n_means, n_means))
@@ -1376,8 +1472,8 @@ def tukeyhsd(mean_all, nobs_all, var_all, df=None, alpha=0.05, q_crit=None):
         # unequal sample sizes and homogenous variance
         var_pairs = var_all * varcorrection_pairs_unbalanced(nobs_all, srange=True)
     elif np.size(var_all) > 1:
-        var_pairs, df_sum = varcorrection_pairs_unequal(nobs_all, var_all, df)
-        var_pairs /= 2.0
+        var_pairs, df_pairs_ = varcorrection_pairs_unequal(var_all, nobs_all, df)
+        var_pairs /= 2.
         # check division by two for studentized range
 
     else:
@@ -1391,10 +1487,13 @@ def tukeyhsd(mean_all, nobs_all, var_all, df=None, alpha=0.05, q_crit=None):
     idx1, idx2 = np.triu_indices(n_means, 1)
     meandiffs = meandiffs_[idx1, idx2]
     std_pairs = std_pairs_[idx1, idx2]
+    if df_pairs_ is not None:
+        df_total = df_pairs_[idx1, idx2]
 
     st_range = np.abs(meandiffs) / std_pairs  # studentized range statistic
 
-    max(df_total, 5)  # TODO: smallest df in table
+    # df_total_ = np.maximum(df_total, 5)  # TODO: smallest df in table
+
     if q_crit is None:
         q_crit = get_tukeyQcrit2(n_means, df_total, alpha=alpha)
 
@@ -1513,10 +1612,9 @@ def distance_st_range(mean_all, nobs_all, var_all, df=None, triu=False):
         # unequal sample sizes and homogenous variance
         var_pairs = var_all * varcorrection_pairs_unbalanced(nobs_all, srange=True)
     elif np.size(var_all) > 1:
-        var_pairs, df_sum = varcorrection_pairs_unequal(nobs_all, var_all, df)
-        var_pairs /= 2.0
+        var_pairs, df_sum = varcorrection_pairs_unequal(var_all, nobs_all, df)
+        var_pairs /= 2.
         # check division by two for studentized range
-
     else:
         raise ValueError("not supposed to be here")
 
@@ -1592,7 +1690,10 @@ def contrast_diff_mean(nm):
 
 
 def tukey_pvalues(std_range, nm, df):
+    """compute tukey p-values by numerical integration of multivariate-t distribution
+    """
     # corrected but very slow with warnings about integration
+    # need to increase maxiter or similar
     # nm = len(std_range)
     contr = contrast_allpairs(nm)
     corr = np.dot(contr, contr.T) / 2.0
@@ -1601,7 +1702,11 @@ def tukey_pvalues(std_range, nm, df):
 
 
 def multicontrast_pvalues(tstat, tcorr, df=None, dist="t", alternative="two-sided"):
-    """pvalues for simultaneous tests"""
+    """pvalues for simultaneous tests
+
+    currently only for t distribution, normal distribution not added yet
+    alternative is ignored
+    """
     from statsmodels.sandbox.distributions.multivariate import mvstdtprob
 
     if (df is None) and (dist == "t"):
diff --git a/statsmodels/stats/multicomp.py b/statsmodels/stats/multicomp.py
index 79ba99c1e..40c731a92 100644
--- a/statsmodels/stats/multicomp.py
+++ b/statsmodels/stats/multicomp.py
@@ -10,9 +10,9 @@ from statsmodels.sandbox.stats.multicomp import (  # noqa:F401
 __all__ = ['tukeyhsd', 'MultiComparison']
 
 
-def pairwise_tukeyhsd(endog, groups, alpha=0.05):
+def pairwise_tukeyhsd(endog, groups, alpha=0.05, use_var='equal'):
     """
-    Calculate all pairwise comparisons with TukeyHSD confidence intervals
+    Calculate all pairwise comparisons with TukeyHSD or Games-Howell.
 
     Parameters
     ----------
@@ -22,6 +22,13 @@ def pairwise_tukeyhsd(endog, groups, alpha=0.05):
         array with groups, can be string or integers
     alpha : float
         significance level for the test
+    use_var : {"unequal", "equal"}
+        If ``use_var`` is "equal", then the Tukey-hsd pvalues are returned.
+        Tukey-hsd assumes that (within) variances are the same across groups.
+        If ``use_var`` is "unequal", then the Games-Howell pvalues are
+        returned. This uses Welch's t-test for unequal variances with
+        Satterthwaite's corrected degrees of freedom for each pairwise
+        comparison.
 
     Returns
     -------
@@ -31,7 +38,17 @@ def pairwise_tukeyhsd(endog, groups, alpha=0.05):
 
     Notes
     -----
-    This is just a wrapper around tukeyhsd method of MultiComparison
+    This is just a wrapper around tukeyhsd method of MultiComparison.
+    Tukey-hsd is not robust to heteroscedasticity, i.e. variance differ across
+    groups, especially if group sizes also vary. In those cases, the actual
+    size (rejection rate under the Null hypothesis) might be far from the
+    nominal size of the test.
+    The Games-Howell method uses pairwise t-tests that are robust to differences
+    in variances and approximately maintains size unless samples are very
+    small.
+
+    .. versionadded:: 0.15
+   `   The `use_var` keyword and option for Games-Howell test.
 
     See Also
     --------
@@ -40,4 +57,5 @@ def pairwise_tukeyhsd(endog, groups, alpha=0.05):
     statsmodels.sandbox.stats.multicomp.TukeyHSDResults
     """
 
-    return MultiComparison(endog, groups).tukeyhsd(alpha=alpha)
+    return MultiComparison(endog, groups).tukeyhsd(alpha=alpha,
+                                                   use_var=use_var)
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ pip install -e '.[all, dev, test]'
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: numpy<3,>=1.22.3 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.24.3)
Requirement already satisfied: scipy!=1.9.2,>=1.8 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.10.1)
Requirement already satisfied: pandas!=2.1.0,>=1.4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.5.3)
Requirement already satisfied: patsy>=0.5.6 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.0.1)
Requirement already satisfied: packaging>=21.3 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from statsmodels==0.15.0.dev596+g8600926f2.d20250312) (24.2)
Requirement already satisfied: formulaic>=1.1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.1.1)
WARNING: statsmodels 0.15.0.dev596+g8600926f2.d20250312 does not provide the extra 'all'
WARNING: statsmodels 0.15.0.dev596+g8600926f2.d20250312 does not provide the extra 'dev'
WARNING: statsmodels 0.15.0.dev596+g8600926f2.d20250312 does not provide the extra 'test'
Requirement already satisfied: interface-meta>=1.2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from formulaic>=1.1.0->statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.3.0)
Requirement already satisfied: typing-extensions>=4.2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from formulaic>=1.1.0->statsmodels==0.15.0.dev596+g8600926f2.d20250312) (4.12.2)
Requirement already satisfied: wrapt>=1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from formulaic>=1.1.0->statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.17.2)
Requirement already satisfied: python-dateutil>=2.8.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pandas!=2.1.0,>=1.4->statsmodels==0.15.0.dev596+g8600926f2.d20250312) (2.9.0.post0)
Requirement already satisfied: pytz>=2020.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pandas!=2.1.0,>=1.4->statsmodels==0.15.0.dev596+g8600926f2.d20250312) (2025.1)
Requirement already satisfied: six>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from python-dateutil>=2.8.1->pandas!=2.1.0,>=1.4->statsmodels==0.15.0.dev596+g8600926f2.d20250312) (1.17.0)
Building wheels for collected packages: statsmodels
  Building editable for statsmodels (pyproject.toml): started
  Building editable for statsmodels (pyproject.toml): still running...
  Building editable for statsmodels (pyproject.toml): finished with status 'done'
  Created wheel for statsmodels: filename=statsmodels-0.15.0.dev596+g8600926f2.d20250312-0.editable-cp39-cp39-linux_aarch64.whl size=7455 sha256=e1362986f0299fd5b5344fa9697fc2ae3b09ddcb985e1db78fe8a5bfd982cd01
  Stored in directory: /tmp/pip-ephem-wheel-cache-zcwwusfn/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built statsmodels
Installing collected packages: statsmodels
  Attempting uninstall: statsmodels
    Found existing installation: statsmodels 0.15.0.dev596+g8600926f2
    Uninstalling statsmodels-0.15.0.dev596+g8600926f2:
      Successfully uninstalled statsmodels-0.15.0.dev596+g8600926f2
Successfully installed statsmodels-0.15.0.dev596+g8600926f2.d20250312
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout 8600926f2f22e58779a667d82047a90318b20431 statsmodels/stats/tests/test_pairwise.py
Updated 0 paths from 176a11a06
+ git apply -v -
Checking patch statsmodels/stats/tests/test_pairwise.py...
Applied patch statsmodels/stats/tests/test_pairwise.py cleanly.
+ pytest -rA --tb=long statsmodels/stats/tests/test_pairwise.py
============================= test session starts ==============================
platform linux -- Python 3.9.21, pytest-7.4.0, pluggy-1.5.0
rootdir: /testbed
configfile: setup.cfg
plugins: cov-4.1.0
collected 31 items

statsmodels/stats/tests/test_pairwise.py ............................... [100%]

==================================== PASSES ====================================
=========================== short test summary info ============================
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2::test_multicomptukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2::test_group_tukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2::test_shortcut_function
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2::test_plot_simultaneous_ci
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2::test_table_names_default_group_order
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2::test_table_names_custom_group_order
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2Pandas::test_multicomptukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2Pandas::test_group_tukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2Pandas::test_shortcut_function
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2Pandas::test_plot_simultaneous_ci
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2Pandas::test_table_names_default_group_order
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2Pandas::test_table_names_custom_group_order
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2Pandas::test_incorrect_output
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2s::test_multicomptukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2s::test_group_tukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2s::test_shortcut_function
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD2s::test_plot_simultaneous_ci
PASSED statsmodels/stats/tests/test_pairwise.py::TestTukeyHSD2sUnequal::test_multicomptukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTukeyHSD2sUnequal::test_group_tukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTukeyHSD2sUnequal::test_shortcut_function
PASSED statsmodels/stats/tests/test_pairwise.py::TestTukeyHSD2sUnequal::test_plot_simultaneous_ci
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD3::test_multicomptukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD3::test_group_tukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD3::test_shortcut_function
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD3::test_plot_simultaneous_ci
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD4::test_multicomptukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD4::test_group_tukey
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD4::test_shortcut_function
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD4::test_plot_simultaneous_ci
PASSED statsmodels/stats/tests/test_pairwise.py::TestTuckeyHSD4::test_hochberg_intervals
PASSED statsmodels/stats/tests/test_pairwise.py::test_plot
============================== 31 passed in 3.05s ==============================
+ git checkout 8600926f2f22e58779a667d82047a90318b20431 statsmodels/stats/tests/test_pairwise.py
Updated 1 path from 176a11a06
