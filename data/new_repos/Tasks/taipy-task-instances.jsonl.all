{"repo": "Avaiga/taipy", "pull_number": 2464, "instance_id": "Avaiga__taipy-2464", "issue_numbers": ["2126", "2126"], "base_commit": "cf9f976645d883291f73d212528d796699c3ac65", "patch": "diff --git a/taipy/gui/_renderers/_markdown/preproc.py b/taipy/gui/_renderers/_markdown/preproc.py\nindex d819074be..2f5a4f7de 100644\n--- a/taipy/gui/_renderers/_markdown/preproc.py\n+++ b/taipy/gui/_renderers/_markdown/preproc.py\n@@ -61,7 +61,7 @@ class _Preprocessor(MdPreprocessor):\n     __PROPERTY_RE = re.compile(r\"((?:don'?t|not?)\\s+)?([a-zA-Z][\\.a-zA-Z_$0-9]*(?:\\[(?:.*?)\\])?)\\s*(?:=(.*))?$\")\n \n     # Error syntax detection regex\n-    __MISSING_LEADING_PIPE_RE = re.compile(r\"^<[^|](.*?)\\|>\")\n+    __MISSING_LEADING_PIPE_RE = re.compile(r\"^<[^|]([^>]*?)\\|>\")\n \n     _gui: \"Gui\"\n \n", "test_patch": "diff --git a/tests/gui/renderers/test_md_parsing.py b/tests/gui/renderers/test_md_parsing.py\nindex 62877cc34..b5d955646 100644\n--- a/tests/gui/renderers/test_md_parsing.py\n+++ b/tests/gui/renderers/test_md_parsing.py\n@@ -52,3 +52,9 @@ def test_md_link(gui: Gui, helpers):\n     md_string = \"[content](link)\"\n     expected_list = [\"<a\", 'href=\"link\"', \"content</a>\"]\n     helpers.test_control_md(gui, md_string, expected_list)\n+\n+\n+def test_html_in_md(gui: Gui, helpers):\n+    md_string = \"<center> <|Hello|text|> </center>\"\n+    expected_list = [\"<center>\", \"<div\", \"Hello\", \"</div>\", \"</center>\"]\n+    helpers.test_control_md(gui, md_string, expected_list)\n", "problem_statement": "[\ud83d\udc1b BUG] Issue with center tag\n### What went wrong? \ud83e\udd14\r\n\r\nUsing center tags along with visual elements will break the UI.\r\n\r\n```\r\n--- 1 warning(s) were found for page '/' in variable 'md' ---\r\n - Warning 1: Missing leading pipe '|' in opening tag line 2: '<center> <|Hello|text|> </center>'.\r\n--------------------------------------------------------------\r\n```\r\n\r\nThe workaround is to:\r\n\r\n```\r\nmd = \"\"\"\r\n<center> <|Hello|text|> </center>\r\n\"\"\"\r\n```\r\n\r\n->\r\n\r\n```\r\nmd = \"\"\"\r\n<center>\r\n<|Hello|text|>\r\n</center>\r\n\"\"\"\r\n```\r\n\r\n### Expected Behavior\r\n\r\nIt shouldn't break like in 3.1 and should center the viz element. It should be backported.\r\n\r\n### Steps to Reproduce Issue\r\n\r\n```python\r\nfrom taipy import Gui\r\n\r\nmd = \"\"\"\r\n<center> <|Hello|text|> </center>\r\n\"\"\"\r\n\r\nGui(md).run()\r\n```\r\n\r\n### Screenshots\r\n\r\n![image](https://github.com/user-attachments/assets/7b1fe943-e595-4e42-8433-2a634580266f)\r\n\r\n### Version of Taipy\r\n\r\n4.0\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Issue with center tag\n### What went wrong? \ud83e\udd14\r\n\r\nUsing center tags along with visual elements will break the UI.\r\n\r\n```\r\n--- 1 warning(s) were found for page '/' in variable 'md' ---\r\n - Warning 1: Missing leading pipe '|' in opening tag line 2: '<center> <|Hello|text|> </center>'.\r\n--------------------------------------------------------------\r\n```\r\n\r\nThe workaround is to:\r\n\r\n```\r\nmd = \"\"\"\r\n<center> <|Hello|text|> </center>\r\n\"\"\"\r\n```\r\n\r\n->\r\n\r\n```\r\nmd = \"\"\"\r\n<center>\r\n<|Hello|text|>\r\n</center>\r\n\"\"\"\r\n```\r\n\r\n### Expected Behavior\r\n\r\nIt shouldn't break like in 3.1 and should center the viz element. It should be backported.\r\n\r\n### Steps to Reproduce Issue\r\n\r\n```python\r\nfrom taipy import Gui\r\n\r\nmd = \"\"\"\r\n<center> <|Hello|text|> </center>\r\n\"\"\"\r\n\r\nGui(md).run()\r\n```\r\n\r\n### Screenshots\r\n\r\n![image](https://github.com/user-attachments/assets/7b1fe943-e595-4e42-8433-2a634580266f)\r\n\r\n### Version of Taipy\r\n\r\n4.0\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "Hello @FlorianJacta \r\nI am sorry the screenshot is not visible.\nIt is @naaa760 . This is the screenshot; there is nothing when there should be something\nThIs looks like a markdown parsing issue and not a center tag issue.\n@FlorianJacta \n\nfrom taipy import Gui\n\nmd = \"\"\"\n<center>\n<|Hello|text|>\n</center>\n\"\"\"\n\nGui(md).run()\n\nTry this\n[center tag is not supported in HTML5](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center)\n\nbut I'll look into it\nHello @FlorianJacta \r\nI am sorry the screenshot is not visible.\nIt is @naaa760 . This is the screenshot; there is nothing when there should be something\nThIs looks like a markdown parsing issue and not a center tag issue.\n@FlorianJacta \n\nfrom taipy import Gui\n\nmd = \"\"\"\n<center>\n<|Hello|text|>\n</center>\n\"\"\"\n\nGui(md).run()\n\nTry this\n[center tag is not supported in HTML5](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center)\n\nbut I'll look into it", "created_at": "2025-02-27T10:37:38Z"}
{"repo": "Avaiga/taipy", "pull_number": 2463, "instance_id": "Avaiga__taipy-2463", "issue_numbers": ["2441", "2441"], "base_commit": "92962a591d66b702fd17497eeeeef54fc9e738ed", "patch": "diff --git a/taipy/gui/gui.py b/taipy/gui/gui.py\nindex 1db837843..d49cc624f 100644\n--- a/taipy/gui/gui.py\n+++ b/taipy/gui/gui.py\n@@ -2298,6 +2298,8 @@ def _get_partial(self, route: str) -> t.Optional[Partial]:\n         partial = partials.get(route)\n         if partial is None:\n             partial = next((p for p in self._config.partials if p._route == route), None)\n+            partials[route] = partial\n+            _setscopeattr(self, Partial._PARTIALS, partials)\n         return partial\n \n     # Main binding method (bind in markdown declaration)\ndiff --git a/taipy/gui/utils/_evaluator.py b/taipy/gui/utils/_evaluator.py\nindex 0db9f1478..f24c6ed2d 100644\n--- a/taipy/gui/utils/_evaluator.py\n+++ b/taipy/gui/utils/_evaluator.py\n@@ -35,6 +35,7 @@\n     _TaipyBase,\n     _variable_decode,\n     _variable_encode,\n+    is_debugging,\n )\n \n \n@@ -374,14 +375,17 @@ def re_evaluate_expr(self, gui: Gui, var_name: str) -> t.Set[str]:  # noqa C901\n                         expr_evaluated = eval(expr_string, ctx)\n                         _setscopeattr(gui, hash_expr, expr_evaluated)\n                     except Exception as e:\n-                        _warn(f\"Exception raised evaluating {_Evaluator._clean_exception_expr(expr_string)}\", e)\n+                        if is_debugging():\n+                            _warn(f\"Exception raised evaluating {_Evaluator._clean_exception_expr(expr_string)}\", e)\n+                        hash_expr = \"\"\n             # refresh holders if any\n             for h in self.__expr_to_holders.get(expr, []):\n                 holder_hash = self.__get_holder_hash(h, self.get_hash_from_expr(expr))\n                 if holder_hash not in modified_vars:\n                     _setscopeattr(gui, holder_hash, self.__evaluate_holder(gui, h, expr))\n                     modified_vars.add(holder_hash)\n-            modified_vars.add(hash_expr)\n+            if hash_expr:\n+                modified_vars.add(hash_expr)\n         return modified_vars\n \n     def _get_instance_in_context(self, name: str):\n", "test_patch": "", "problem_statement": "[OTHER] Taipy unable to assign a state variable, apparent leak between clients?\n### What went wrong? \ud83e\udd14\n\nI've been stuck on a really critical bug for the past week. It's preventing pages from loading, and the only current workaround is restarting the server. It occurs (seemingly) random, even with automated tests.\n\nThe issue arises a nested dict-like data structure object is saved to a state variable. This object is used to save datasets, figures, values, etc. The size of this data structure is dynamic and is different for each client session, defined by a query parameter in the URL called `client_handle` (important). The data structure is constructed during `on_init()` of the page without any issue, and then assigned to a state variable in a simple line: `state.risk_tree = tree` which causes the (occasional) error.\n\nThe first client to connect to the server (since server startup) always initializes without a problem. Subsequent clients can have the issue, *if they use a different `client_handle`*. For example, assuming each client connects from an isolated browser and creates its own Taipy session:\n\n1. `client_handle = vm_groningen_dev` (initialization OK)\n2. `client_handle = vm_gelderland_dev` (initialization OK)\n3. `client_handle = vm_limburg_dev` (ERROR)\n\n\nThe error raised by during the initialization of connection #3 (`vm_limburg_dev`) is: \n```\nFile \"taipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill \n  return attrgetter(name)(gui._get_data_scope())\nAttributeError(\"'types.SimpleNamespace' object has no attribute 'tp_TpExPr_gui_get_adapted_lov_risk_tree_vm_gelderland_dev_root_0_thema_2_rp_0_ind_0_var_CHART_AGG_LOV_str_TPMDL_9_0'\")\n```\nThis long attribute id refers to the key which is used to retrieve an element from the data structure (in this case an LOV).\n\n**Note:** in the middle of the attribute id is a part `vm_gelderland_dev` (the  `client_handle`). The currently connected client is `vm_limburg_dev`. **This indicates Taipy is trying to bind a callback from another client session, which it obviously cannot find in this session.**\n\n\n\n### Expected Behavior\n\nThe state variable `state.risk_tree` should be set. 9/10 times this works without a problem.\n\n### Steps to Reproduce Issue\n\nThe biggest difficulty is that this bug is not consistent. 9/10 times it works fine, even when I reproduce client page-visit combinations that previously caused an error. So the only way to debug this is by inspecting the logs. I realize this is very little to go off, but since I can't even reliably reproduce the error, creating a minimum example is pretty much impossible. \n\nSee [isolated_error.log](https://github.com/user-attachments/files/18706548/bug951_isolated_error.log), which also contains the variables. The actions to produce this:\n- The first 5 entries show how a client with `client_handle = vm_gelderland_dev` initializes without an issue. \n- Browser is then closed.\n- New browser is opened, client with `client_handle = vm_limburg_dev` fails to initialize.\n   - *Note that the error contains the `client_handle` of the previous client*\n\n\n\nThe issue occurs in the page `on_init()`. Constructing the object works without an issue. Saving the object to a state variable causes the issue.\n\n```python\n<imports>\n# Declare page state variable\nrisk_tree = None\n\ndef on_init(state):\n    # Create the basic tree structure based on client settings. Data is added later in Long-Running Callback\n    state_var_name = \"risk_tree\"\n    tree = TreeRoot(\n        client_subniveau=state.client_settings[\"subniveau\"],\n        client_alt_subniveaus=state.client_settings[\"subniveau_alt\"],\n        state_var_name=state_var_name,\n        client_handle=state.client_handle,\n        children=[\n            ThemaNode(\n                id=idx,\n                thema_naam=thema,\n                risico_profielen=risicos,\n                state_var_name=state_var_name,\n            )\n            for idx, (thema, risicos) in enumerate(state.client_settings[\"risico_themas\"].items())\n        ],\n        client_settings=state.client_settings,\n        client_data_ops_fn=apply_client_allpages_data_operations,\n    )\n\n    state.risk_tree = tree # ERROR OCCURS HERE\n    \n    tpgui.invoke_long_callback(\n        state=state,\n        user_function=LRCB_load_risicotree_data,\n        user_function_args=[\n            state.get_gui(),\n            tpgui.get_state_id(state),\n            tree,\n            state.client_handle,\n            state.pg_uri,\n        ],\n        user_status_function=status_LRCB_tree_loading,  # invoked at the end of and possibly during the runtime of user_function\n        period=10000,  # Interval in milliseconds to check the status of the long callback\n    )\n```\n\nAfter the Long-Running Callback is complete, a Taipy Partial generates the content of the page. As seen below, the GUI elements reference attributes inside the data structure.\n\n```python\ndef create_taipy_partial_content(tree_node, page_context=None):\n    \"\"\"Create the content for the current node in the Taipy Page format\n    \"\"\"\n    class_name = f\"{tree_node.css_class_name} content-block\"\n\n    # All other nodes (RisicoNode, IndicatorNode, VariabeleNode)\n    with tgb.part(class_name=class_name) as content:\n        if is_thema_node:\n            # Just title\n            tgb.text(\n                f\"## {tree_node.get_label_text().upper()}\",\n                mode=\"markdown\",\n                class_name=\"card-title\",\n            )\n\n        else:\n            # Title and link to docs\n            with tgb.layout(columns=\"2 1\"):\n                tgb.text(\n                    f\"**{tree_node.get_label_text().title()}**\",\n                    mode=\"markdown\",\n                    class_name=\"card-title\",\n                )\n                tgb.button(\n                    \"{docs_icon}\",                   # docs_icon is defined in main.py\n                    on_action=\"{navigate_to_docs}\",  # navigate_to_docs is defined in main.py\n                    class_name=\"docs-button\",\n                    hover_text=\"Open documentatie\",\n                )\n\n        # Description\n        tgb.text(f\"{tree_node.help}\", mode=\"markdown\")\n\n        # Figure\n        if tree_node.figure is not None and tree_node.selected:\n            tgb.toggle(\n                value=\"{\"\n                + f\"{tree_node.state_var_name}['{tree_node.id}']\" #client_handle is part of the tree_node.id\n                + \".chart_agg_toggle}\",\n                lov=\"{\"\n                + f\"{tree_node.state_var_name}['{tree_node.id}']\"\n                + \".CHART_AGG_LOV}\",\n                on_change=callback_chart_agg_toggle,\n            )\n            tgb.chart(\n                figure=\"{\"\n                + f\"{tree_node.state_var_name}['{tree_node.id}']\"\n                + \".figure}\"\n            )\n\n        # Build children in nested content blocks\n        for child in tree_node.children:\n            if child.count_selected() == 0:\n                continue\n            create_taipy_partial_content(child)\n\n    return content\n```\n\n### Runtime Environment\n\nDocker Container: python:3.12-slim-bookworm\n\n### Browsers\n\nChrome, Firefox, Safari\n\n### Version of Taipy\n\n4.0.2\n\n### Additional Context\n\n```bash\n\n```\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [x] I am willing to work on this issue (optional)\n[OTHER] Taipy unable to assign a state variable, apparent leak between clients?\n### What went wrong? \ud83e\udd14\n\nI've been stuck on a really critical bug for the past week. It's preventing pages from loading, and the only current workaround is restarting the server. It occurs (seemingly) random, even with automated tests.\n\nThe issue arises a nested dict-like data structure object is saved to a state variable. This object is used to save datasets, figures, values, etc. The size of this data structure is dynamic and is different for each client session, defined by a query parameter in the URL called `client_handle` (important). The data structure is constructed during `on_init()` of the page without any issue, and then assigned to a state variable in a simple line: `state.risk_tree = tree` which causes the (occasional) error.\n\nThe first client to connect to the server (since server startup) always initializes without a problem. Subsequent clients can have the issue, *if they use a different `client_handle`*. For example, assuming each client connects from an isolated browser and creates its own Taipy session:\n\n1. `client_handle = vm_groningen_dev` (initialization OK)\n2. `client_handle = vm_gelderland_dev` (initialization OK)\n3. `client_handle = vm_limburg_dev` (ERROR)\n\n\nThe error raised by during the initialization of connection #3 (`vm_limburg_dev`) is: \n```\nFile \"taipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill \n  return attrgetter(name)(gui._get_data_scope())\nAttributeError(\"'types.SimpleNamespace' object has no attribute 'tp_TpExPr_gui_get_adapted_lov_risk_tree_vm_gelderland_dev_root_0_thema_2_rp_0_ind_0_var_CHART_AGG_LOV_str_TPMDL_9_0'\")\n```\nThis long attribute id refers to the key which is used to retrieve an element from the data structure (in this case an LOV).\n\n**Note:** in the middle of the attribute id is a part `vm_gelderland_dev` (the  `client_handle`). The currently connected client is `vm_limburg_dev`. **This indicates Taipy is trying to bind a callback from another client session, which it obviously cannot find in this session.**\n\n\n\n### Expected Behavior\n\nThe state variable `state.risk_tree` should be set. 9/10 times this works without a problem.\n\n### Steps to Reproduce Issue\n\nThe biggest difficulty is that this bug is not consistent. 9/10 times it works fine, even when I reproduce client page-visit combinations that previously caused an error. So the only way to debug this is by inspecting the logs. I realize this is very little to go off, but since I can't even reliably reproduce the error, creating a minimum example is pretty much impossible. \n\nSee [isolated_error.log](https://github.com/user-attachments/files/18706548/bug951_isolated_error.log), which also contains the variables. The actions to produce this:\n- The first 5 entries show how a client with `client_handle = vm_gelderland_dev` initializes without an issue. \n- Browser is then closed.\n- New browser is opened, client with `client_handle = vm_limburg_dev` fails to initialize.\n   - *Note that the error contains the `client_handle` of the previous client*\n\n\n\nThe issue occurs in the page `on_init()`. Constructing the object works without an issue. Saving the object to a state variable causes the issue.\n\n```python\n<imports>\n# Declare page state variable\nrisk_tree = None\n\ndef on_init(state):\n    # Create the basic tree structure based on client settings. Data is added later in Long-Running Callback\n    state_var_name = \"risk_tree\"\n    tree = TreeRoot(\n        client_subniveau=state.client_settings[\"subniveau\"],\n        client_alt_subniveaus=state.client_settings[\"subniveau_alt\"],\n        state_var_name=state_var_name,\n        client_handle=state.client_handle,\n        children=[\n            ThemaNode(\n                id=idx,\n                thema_naam=thema,\n                risico_profielen=risicos,\n                state_var_name=state_var_name,\n            )\n            for idx, (thema, risicos) in enumerate(state.client_settings[\"risico_themas\"].items())\n        ],\n        client_settings=state.client_settings,\n        client_data_ops_fn=apply_client_allpages_data_operations,\n    )\n\n    state.risk_tree = tree # ERROR OCCURS HERE\n    \n    tpgui.invoke_long_callback(\n        state=state,\n        user_function=LRCB_load_risicotree_data,\n        user_function_args=[\n            state.get_gui(),\n            tpgui.get_state_id(state),\n            tree,\n            state.client_handle,\n            state.pg_uri,\n        ],\n        user_status_function=status_LRCB_tree_loading,  # invoked at the end of and possibly during the runtime of user_function\n        period=10000,  # Interval in milliseconds to check the status of the long callback\n    )\n```\n\nAfter the Long-Running Callback is complete, a Taipy Partial generates the content of the page. As seen below, the GUI elements reference attributes inside the data structure.\n\n```python\ndef create_taipy_partial_content(tree_node, page_context=None):\n    \"\"\"Create the content for the current node in the Taipy Page format\n    \"\"\"\n    class_name = f\"{tree_node.css_class_name} content-block\"\n\n    # All other nodes (RisicoNode, IndicatorNode, VariabeleNode)\n    with tgb.part(class_name=class_name) as content:\n        if is_thema_node:\n            # Just title\n            tgb.text(\n                f\"## {tree_node.get_label_text().upper()}\",\n                mode=\"markdown\",\n                class_name=\"card-title\",\n            )\n\n        else:\n            # Title and link to docs\n            with tgb.layout(columns=\"2 1\"):\n                tgb.text(\n                    f\"**{tree_node.get_label_text().title()}**\",\n                    mode=\"markdown\",\n                    class_name=\"card-title\",\n                )\n                tgb.button(\n                    \"{docs_icon}\",                   # docs_icon is defined in main.py\n                    on_action=\"{navigate_to_docs}\",  # navigate_to_docs is defined in main.py\n                    class_name=\"docs-button\",\n                    hover_text=\"Open documentatie\",\n                )\n\n        # Description\n        tgb.text(f\"{tree_node.help}\", mode=\"markdown\")\n\n        # Figure\n        if tree_node.figure is not None and tree_node.selected:\n            tgb.toggle(\n                value=\"{\"\n                + f\"{tree_node.state_var_name}['{tree_node.id}']\" #client_handle is part of the tree_node.id\n                + \".chart_agg_toggle}\",\n                lov=\"{\"\n                + f\"{tree_node.state_var_name}['{tree_node.id}']\"\n                + \".CHART_AGG_LOV}\",\n                on_change=callback_chart_agg_toggle,\n            )\n            tgb.chart(\n                figure=\"{\"\n                + f\"{tree_node.state_var_name}['{tree_node.id}']\"\n                + \".figure}\"\n            )\n\n        # Build children in nested content blocks\n        for child in tree_node.children:\n            if child.count_selected() == 0:\n                continue\n            create_taipy_partial_content(child)\n\n    return content\n```\n\n### Runtime Environment\n\nDocker Container: python:3.12-slim-bookworm\n\n### Browsers\n\nChrome, Firefox, Safari\n\n### Version of Taipy\n\n4.0.2\n\n### Additional Context\n\n```bash\n\n```\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [x] I am willing to work on this issue (optional)\n", "hints_text": "Hi,\n\nI've been able to isolate the error and produce a minimum example that (mostly) reproduces the error. \n\nRunning this example causes warnings to appear in the terminal, but the dashboard still functions okay. These warnings are nearly identical to the issue above, and the current (temporary) workaround to resolve these warnings has also resolved the issue above.\n\n## Minimum working example\nTaipy version: 4.0.2\n```python\nimport taipy.gui.builder as tgb\nimport taipy.gui as tpg\n\nclient_handle = None\nui_elements_data = {} # In the real application, this is a dictionary-like object with the workaround implemented in its __getitem__ method. \n\nclass ClientUiElementStruct:\n    \"\"\"Very simplified example\"\"\"\n    TOGGLE_LOV = ['item1', 'item2']\n    \n    def __init__(self):\n        self.toggle_value = 'item1'\n    \n    def __repr__(self):\n        return f\"{self.__class__.__name__}(toggle_value={self.toggle_value!r})\"\n\n\ndef refresh_partial(state):\n    \"\"\"Only create content for the client if a client name is set. This implies that the necessary datastructure is also available\"\"\"\n    if cname := state.client_handle:\n        with tgb.Page() as client_part:\n            with tgb.part(\"card\"):\n                tgb.text(\"The client name is: \" + cname)\n                \n                tgb.toggle(\n                    value=\"{\" + f\"ui_elements_data['{cname}']\" + \".toggle_value}\",\n                    lov=\"{\" + f\"ui_elements_data['{cname}']\" + \".TOGGLE_LOV}\",\n                    on_change=callback_toggle\n                )\n                \n                tgb.text(\"The active selected toggle value is: {ui_elements_data['\" + cname + \"'].toggle_value}\")\n    \n                tgb.text(\"The complete content of state.ui_elements_data: {str(dict(ui_elements_data))}\")\n                \n        state.client_partial.update_content(state, client_part)     \n\n\ndef callback_toggle(state, var_name, value):\n    state.ui_elements_data[state.client_handle].toggle_value = value\n    state.refresh('ui_elements_data')\n\n\n# Initialize the application state\ndef on_init(state):\n    refresh_partial(state)\n\n\ndef on_navigate(state: tpg.State, page_name: str, params: dict = {}) -> str:\n    \"\"\"Extract the client name from the query parameters and update the state\"\"\"\n    # If a client parameter is provided, update client-specific settings\n    if handle := params.get(\"client\", False):\n        if len(handle) > 0:\n            print(f\"Client name query parameter provided: {handle}\")\n            \n            # Theoretically, state variable 'ui_elements_data' should be unique for each client (empty for a new client)\n            #   (as per documentation: https://docs.taipy.io/en/latest/refmans/reference/pkg_taipy/pkg_gui/State/)\n            # However, since this (for some reason) is not the case, we manually set any previous client data to 'None'. This simulates the behavior of the actual application. (Alternative: remove the entries, but this causes issues)\n            # For context: a new client connecting to the dashboard will ALWAYS have the query parameter 'client' set\n            previous_handles = [k for k in state.ui_elements_data.keys() if k != handle]\n            if len(previous_handles) > 0:\n                for k in previous_handles:\n                    state.ui_elements_data[k] = None\n                    # state.ui_elements_data.pop(k) # Alternative: Removing the entries also causes issues\n            \n            state.client_handle = handle\n            state.ui_elements_data[handle] = ClientUiElementStruct()\n            state.refresh('ui_elements_data') # Just to be sure that the ui_elements_data is updated\n            \n            refresh_partial(state)\n            \n            tpg.navigate(state, to=\"/\", tab=\"_self\") # force navigation to the root page without query parameters. Prevents endless loop\n\n    return page_name\n\nif __name__ == \"__main__\":\n    \n    # Define the main page layout\n    with tgb.Page() as main_page:\n        tgb.text(\"Multi-Client DEBUG Dashboard\", class_name=\"h1\")\n        tgb.part(partial=\"{client_partial}\")\n    \n    pages = {\"/\": main_page}\n\n    # Create and run the Taipy GUI\n    gui = tpg.Gui(main_page)\n    client_partial = gui.add_partial(\"\")\n    gui.run()\n```\n\n## Steps to reproduce\n\nNote: ensure the query parameter `?client=...` is provided for each new client connection. This simulates the proper behavior. \n\n\n1. Run the example dashboard above\n2. Go to http://localhost:5000?client=first\n3. Verify in python terminal that there are no errors\n4. Close browser (no longer needed)\n5. In new browser (incognito to ensure independent client), go to http://localhost:5000?client=second\n6. Note in the webUI the final line: `state.ui_elements_data: {'first': None, 'second': ClientUiElementStruct(toggle_value='item1')}` \n  a. **See issue 1) below**...\n8. See errors in python terminal. **See issue 2) below**. Should start like this:\n```python\n.venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py:372: TaipyGuiWarning: Exception raised evaluating dataset['first'].toggle_value:\nTraceback (most recent call last):\n  File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr\n    expr_evaluated = eval(expr_string, ctx)\n                     ^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 1, in <module>\nAttributeError: 'NoneType' object has no attribute 'toggle_value'\n\n  _warn(f\"Exception raised evaluating {expr_string}\", e)\n...\n```\n\n### Issue Descriptions:\n\n#### 1) State variable shared across clients\nEach time a new client connects to the dashboard and provides the query parameter `client=<handle>`, this handle is stored in the state variable `state.dataset[<handle>] = ClientUiElementStruct()`. The `ClientUiElementStruct()` object contains the `LOV` and `value` attributes to be used for the toggle. \n\nIn theory, this state variable should be unique to each client. To track this, its contents are displayed in the partial. The expected value is a dictonary with one key-value pair. For the second client, this should be `{'second': ClientUiElementsStruct(toggle_value='item1')}`\n\nIn practice, once the second client has connected, the state variable used by the second client contains BOTH the first client's handle and the second client's handle: `{'first': None, 'second': ClientUiElementStruct(toggle_value='item1')}`\n\nMaybe I misunderstand how this should work, but the way I read the [documentation](https://docs.taipy.io/en/latest/refmans/reference/pkg_taipy/pkg_gui/State/), each connection (client) should hold it's own independent set of state variables.\n\n#### 2) Taipy backend - trying to access attribute of NoneType object, for binding of different client\n\nTo further simulate the behavior of the actual application, any unwanted 'shared' variables are set to `None` in the `on_navigate()` method.\n\nThe Taipy partial only updates content if the `state.client_handle` has been specified and the necessary `ClientUiElementStruct()` is available.\n\nTwo types of errors can be observed:\n1. Taipy can no longer bind the ui elements of client 'first', giving errors such as `Failed to get: tp_TpExPr_ui_elements_data_first_TOGGLE_LOV_TPMDL_0_0`. This makes sense, since the first client session state is technically still active on the server-side, and the state-variable has suddenly been set to None.\n  a. *Nonetheless, it would be helpful if there was a proper way of 'disconnecting' the bindings*\n2. `AttributeError: 'NoneType' object has no attribute 'toggle_value'` Also logical since what was previously an object is now `NoneType`. However, in the context of the actual application this is more complex. The data structure there is dynamic and can change in size, therefore it's not unreasonable that certain entries may be deleted or set to None. \n\n**Suggested fixes**\n1. New Taipy functionality to 'disconnect' or 'delete' bindings. Since gui elements can be 'created' through a partial, there should also be a way to 'remove' them. In this case that would be useful when the bound state variable is modified or deleted.\n2. The current Taipy code handles an `AttributeError` fine using a try-except for `\"taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr: expr_evaluated = eval(expr_string, ctx)`. However, in the case of the actual application, the critical error was nearly identical but found in a slightly different place:\n```\ntaipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill\n    return attrgetter(name)(gui._get_data_scope())\n \nbuiltins.AttributeError: 'types.SimpleNamespace' object has no attribute 'tp_TpExPr_gui_get_adapted_lov_risk_tree_vm_gelderland_dev_root_0_thema_2_rp_0_ind_0_var_CHART_AGG_LOV_str_TPMDL_9_0'\n```\nThe cause is the same: the state variable which contains an attribute that is bound to a UI element is either missing or replaced. Thus, a similar try-except error handling should be applied here. This would also effectively 'unbind' the UI connection, without raising an execption that reaches the highest level and prevents any other bindings from being updated.\n\n## Current workaround\nFor now, I've ensured that the dict-like data structure `risk_tree` in which the variables are stored (similar to the variable `ui_elements-data` in minimum example above) uses a custom `__getitem__` method. This ensures that if the item cannot be found (which would normally raise a `KeyError` or return `None`), now returns an empty instance of the class with the necessary attributes that Taipy has previously bound UI elements to (such as `toggle_lov`)\n\nOf course this only works for this case and is not scalable for use with other data structures.\n\nI hope this gives you more insights into the issue. Thanks!\nThanks a lot for the really detailed issue and description\n \nThe doc might want to be more precise on the variable state description:\n- each state (1 per client) has its own value for each variable *except* for the non scalar variables where the instances are shared.\nif you want a non scalar variable to be specific for each state, you need to set it in the `on_init`\n```py\ndef on_init(state):\n    state.ui_elements_data = {}\n```\nIn your case, would it be a good idea to instantiate the `ClientUiElementStruct` class for each state ? \nI tried the following modifications: \n```python\n...\nclient_handle = None\nui_elements_data = None # Must be declared, otherwise error in on_init(): AttributeError: Variable 'ui_elements_data' is not accessible.\n\n...\n\n# Initialize the application state\ndef on_init(state):\n    state.ui_elements_data = {}\n    refresh_partial(state)\n\n...\n```\n\nThe dashboard works fine for the first client, but then throws an error when loading the second client:\n```python\n.venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py:372: TaipyGuiWarning: Exception raised evaluating ui_elements_data['first'].toggle_value:\nTraceback (most recent call last):\n  File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr\n    expr_evaluated = eval(expr_string, ctx)\n                     ^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 1, in <module>\n  File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_map_dict.py\", line 37, in __getitem__\n    value = self._dict.__getitem__(key)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nKeyError: 'first'\n...\n```\n\nI'm not sure what you mean by this exactly? \n> I tried the following modifications:\n> \n> ...\n> client_handle = None\n> ui_elements_data = None # Must be declared, otherwise error in on_init(): AttributeError: Variable 'ui_elements_data' is not accessible.\n> \n> ...\n> \n> # Initialize the application state\n> def on_init(state):\n>     state.ui_elements_data = {}\n>     refresh_partial(state)\n> \n> ...\n> The dashboard works fine for the first client, but then throws an error when loading the second client:\n> \n> .venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py:372: TaipyGuiWarning: Exception raised evaluating ui_elements_data['first'].toggle_value:\n> Traceback (most recent call last):\n>   File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr\n>     expr_evaluated = eval(expr_string, ctx)\n>                      ^^^^^^^^^^^^^^^^^^^^^^\n>   File \"<string>\", line 1, in <module>\n>   File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_map_dict.py\", line 37, in __getitem__\n>     value = self._dict.__getitem__(key)\n>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n> KeyError: 'first'\n> ...\n> I'm not sure what you mean by this exactly?\n\nThe technical explanation is that:\n- we calculate variable depencency \n- from your page, we have a dependency between ui_elements_data and ui_elements_data['first'].toggle_love\n- when the state.ui_elements_data, the system tries to refresh ui_elements_data['first'].toggle_love which doesn't exist anymore\n> I'm not sure what you mean by this exactly?\n\ndo you really need your client_handle ?\nYou could set an instance of ClientUiElementStruct for each client state in the on_init callback\nYes, `client_handle` is the core of the application and defines which database schema should be referenced for that client. In this database is a configuration table that effectively defines the extent of the ClientUiElementStruct and therefore also which UI elements need to be constructed. \n\nFor example, based on the config table:\n- Client1 needs 5 Toggles + 1 figure\n- Client2 needs 8 Toggles + 3 figures + 1 slider\n- ClientX needs ... \n\nThe database is dynamic, so all the possible combinations cannot be known before the client connects\nI think you should avoid this `ui_elements_data` dict. That is what's causing your trouble.\nI would recommend that you instantiate a `ClientUiElementStruct` in `on_init`.\nThen you fill it in `on_navigate` depending on your `client_handle`.\nDo you think that would work ?\nTo further clarify: in the actual application, just as you describe, the state variable is only the ClientUIElementStruct.\n\nThere is no separate dictionary in which the `ClientUiElementStruct` is placed. The structure itself resembles a dictionary and is populated based on the client_handle.\n\n**Referring back to the original issue:** (where `TreeRoot()` is the real implementation of  `ClientUiElementStruct()`)\n\n`state.risk_tree` is a single instance of the class `TreeRoot()`, as can be seen in the `on_init()` function. As seen in the code, this `TreeRoot()` is populated with data specific to the client_handle\n\nNOTE: the specific `on_init()` function shown above is located inside a page definition, and is manually called in the `main.py`. (Apologies for the confusing naming, this should maybe better be named `init_client()`)\n\n\n> The issue occurs in the page on_init(). Constructing the object works without an issue. Saving the object to a state variable causes the issue.\n>\n> `page.py`:\n> ```python\n> <imports>\n> # Declare page state variable\n> risk_tree = None\n> \n> def on_init(state):\n>     # Create the basic tree structure based on client settings. Data is added later in Long-Running Callback\n>     state_var_name = \"risk_tree\"\n>     tree = TreeRoot(...\n> ```\n\nIn the `main.py`, this page's `on_init()` is manually called BY the global `on_navigate()`.\n\nTo clarify, the overall control logic of a new client connecting is as follows:\n```mermaid\ngraph TD\n    A[New client connects<br>with client_handle in query params] -->| Taipy calls | C[on_navigate]\n\n    C -->|Extract client_handle query parameter| D[Start client setup<br>to initialize pages]\n\n    D --> J[Setup database connection]\n    J --> L[Get client pages config from SQL]\n    L --> M[Initialize pages: <br>run on_init of each page]\n    M --> |Instantiate TreeRoot object| N[Save<br>state.risk_tree = TreeRoot]\n    N --> |Start Long-Running callback| X[Retrieve data + create figures]\n    N --> Y\n    X -- LR Callback complete -->V[Update state.risk_tree object with new data + figures]\n    V --> Y[Update partials]\n    Y --> O{Check for failed pages}\n    O -->|Success| E[Navigate user to dashboard]\n    O -->|Failures| P[Remove failed pages]\n    P --> E\n```\nNote: When the `TreeRoot` object is instantiated, all variables needed for UI elements are immediately created in the object. The long-running callback simply updates the values of these variables with actual data.\nThanks for the clarification.\nSadly I think the issue shown in your replication code is not the one that you encounter in your real code (even it is has the same output).\nthe naming could be indeed a problem as taipy looks for `on_init` function automatically and invokes it on the first render ...\n> value=\"{\"\n>                 + f\"{tree_node.state_var_name}['{tree_node.id}']\" #client_handle is part of the tree_node.id\n>                 + \".chart_agg_toggle}\"\n\nI think that your problem here is that with such an expression your creating a huge dependency network between your variables.\n\nfor each toggle you create, the value property is bound to `risk_tree['nodeid'].chart_agg_toggle`.\n\nCan you share your definition of the `TreeRoot` and `ThemaNode` classes ?\nIf you use the dot notation for dict access your values will be changed without needing a callback.\nie `risk_tree['nodeid'].chart_agg_toggle` will have no effect unless you specify a callback and manage the change\nwhile `risk_tree.nodeid..chart_agg_toggle` will have an effect on the variable on click.\n\nPS: I know this will not solve your issue but it might help\nAn example that outlines how `state` seems to have the same id between two clients.\n(Perhaps this is unexpected & could help understand OP's issue?)\n```\nfrom types import SimpleNamespace\nfrom taipy.gui import Gui\nimport taipy.gui.builder as tgb\nimport numpy as np\n\nclass Status():\n    def __init__(self):    \n        self.login_attempt = True\n        self.rat = 7\n        self.dog = SimpleNamespace(a = 5)\n        self.fish = np.random.rand()\n\ndef on_init(state):\n    status = Status()\n    state.status = status\n        \nstatus = None\n\nif __name__ == \"__main__\":    \n    with tgb.Page() as page:\n        tgb.slider(\"{status.dog.a}\")\n        tgb.text(\"{status.dog.a}\")\n                 \n        tgb.button(\"print\", on_action = lambda state: print(id(state), state.status.__dict__))\n        tgb.button(\"print\", on_action = lambda state: print(id(state.status.dog), state.status.dog.a, \"\\n\"))\n        \n    app = Gui(page = page)\n\n    app.run()\n```\n\n![Image](https://github.com/user-attachments/assets/85dcf46b-7c34-4605-bd32-77892d2c8bbd)\n\nThe output below the code follows a sequence of events A, B and C.\nA. Client 1 starts, and presses the first & second buttons.  Client 1 then moves the sliders, and presses first & second buttons again.\nB. Client 2 starts, and does exactly as Client 1 did in event A.\nC. Client 1 presses the first & second buttons.\n\nThe app works as expected and both clients appear to have independent `Status` objects tied to their state, and both seemingly can update the value of `dog.a` independently from each other (as event C points out).  The sliders' behavior matches the output too.\n\nBut, notice the print outs for `id(state)` and `id(state.status.dog)`: we see different ids for each client's `dog`, but the same id for each client's `state`...\n(I wouldn't know if this is expected or not, but it might be unsettling especially with respect to the documentation!)\n\n`same id for each client's state` this is expected and normal as the state is only a proxy to each client data\n\nHi Fred, \nThanks again for your time and effort looking into this!\n\n> the naming could be indeed a problem as taipy looks for `on_init` function automatically and invokes it on the first render\n\nI changed the naming to `page_init`. This gets imported into `main.py` and is explicitly called inside the `on_navigate()` function. This change had no effect on the issue.\n\n\nI'd like to clarify that there are two separate issues here. Just to make sure we're not confusing them with each other:\n1. State variable value shared across clients \n   - Observation during debugging\n3. Taipy backend trying to access an attribute of a `NoneType object` (or of a `SimpleNamespace object` in production)\n   - Raises a `KeyError` in the replication code, resulting in warning\n   - Raises an `AttributeError` in production code, resulting in failed page load\n\nThe replication code I provided was to demonstrate both issues. \n\n**Issue 1** is something I observed during debugging and was inconsistent with my understanding of the state variable as described in the docs. Specifically, as demonstrated in the replication code: \n>... the state variable [visible to] the second client contains BOTH the first client's handle and the second client's handle: {'first': None, 'second': ClientUiElementStruct(toggle_value='item1')}\n\nIf you say this behavior is expected, then _please regard this issue as resolved._\n\n**Issue 2** has been temporarily resolved via the workaround. The workaround ensures that if the key cannot be found, it returns an empty object instead of raising a `KeyError` (`AttributeError` in production code)\n\nNonetheless, I believe a more robust solution would be if some kind of error-handling could be built into Taipy. That would enable the page to continue to load even if certain elements could not be found. The replication code only raises a warning, which demonstrates that the error is correctly captured in a try-except statement (see `\"taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr: expr_evaluated = eval(expr_string, ctx)`). \n\nHowever, in the production code, the equivalent error is not caught by `taipy/gui/utils/_attributes.py\", line 26`. I say 'equivalent' because it's also caused by a key or attribute not being found in an object.\nThe error raised is: \n```\ntaipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill\n    return attrgetter(name)(gui._get_data_scope())\n \nbuiltins.AttributeError: 'types.SimpleNamespace' object has no attribute 'tp_TpExPr_gui_get_adapted_lov_risk_tree_vm_gelderland_dev_root_0_thema_2_rp_0_ind_0_var_CHART_AGG_LOV_str_TPMDL_9_0'\n```\n\nAlternatively: would it make sense to add a feature/functionality that enables GUI bindings to be \"disconnected\" when no longer needed? Similar to how UI elements are created inside a partial, but then the opposite? Just thinking out loud...\n\nclient states can be dismissed after a period of inactivity\nI'm running into nearly the same problem again, this time when creating a standard Taipy Scenario and assigning it to a state variable. I followed [these docs](https://docs.taipy.io/en/latest/userman/scenario_features/task-orchestration/scenario-creation/#__tabbed_1_1) and the Covid-Dashboard as examples.\n\nThe dashboard runs fine when in a simple python venv on my laptop. Exactly as above, the issue only arises when run inside a docker container. Sometimes the page continues to load fine, other times it crashes.\n\nThe problematic line of code is again ` line 26, in _getscopeattr_drill`. I have no idea what `__tpgc_dn_filter551` is referring to...\n\n\nHere is the logfile with variable values: [attributeError_to-scenario_variables.log](https://github.com/user-attachments/files/18947250/attributeError_to-scenario_variables.log)\n\n**Code:**\n```python\n... <node & task configs > ...\n\nwhatif_scenario_cfg = Config.configure_scenario(\n    id=\"whatif_50_30_scenario\",\n    task_configs=[\n        task_fetch_whatif_data_cfg,\n        task_preprocess_data_cfg,\n        task_kaart_max_snelheden_cfg,\n        task_kaart_toe_afname_intensiteit_cfg,\n        task_kaart_fietsvoorziening_cfg,\n        task_kaart_schoolomgeving_cfg,\n        task_combine_results_cfg,\n        task_kaart_hoge_verblijfsfunctie_cfg,\n        task_kaart_ongeloofwaardige_30wegen_cfg,\n    ],\n)\n\nwhatif_scenario = None\n\ndef page_init(state: State):\n    \"\"\"Called explicitly by on_navigate() in main.py when new client connects\"\"\"\n    state.whatif_scenario = tp.create_scenario(whatif_scenario_cfg)\n```\n\n**Error:**\n```python\n  File \"/app/main.py\", line 291, in on_navigate\n    page_init(state)\n\n  File \"/app/pages/what_if/page_logic.py\", line 92, in page_init\n    state.whatif_scenario = tp.create_scenario(whatif_scenario_cfg, name=\"Scenario indienen:\")\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/state.py\", line 149, in __setattr__\n    setattr(gui._bindings(), encoded_name, value)\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/utils/_bindings.py\", line 46, in __setter\n    ud.__gui._update_var(name, value)\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/gui.py\", line 766, in _update_var\n    derived_vars.update(self._re_evaluate_expr(var_name))\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/gui.py\", line 1682, in _re_evaluate_expr\n    return self.__evaluator.re_evaluate_expr(self, var_name)\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 359, in re_evaluate_expr\n    eval_dict = {k: _getscopeattr_drill(gui, gui._bind_var(v)) for k, v in expr_var_map.items()}\n     \n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill\n    return attrgetter(name)(gui._get_data_scope())\n      \nbuiltins.AttributeError: 'types.SimpleNamespace' object has no attribute '__tpgc_dn_filter551'\n```\nHi,\n\nI've been able to isolate the error and produce a minimum example that (mostly) reproduces the error. \n\nRunning this example causes warnings to appear in the terminal, but the dashboard still functions okay. These warnings are nearly identical to the issue above, and the current (temporary) workaround to resolve these warnings has also resolved the issue above.\n\n## Minimum working example\nTaipy version: 4.0.2\n```python\nimport taipy.gui.builder as tgb\nimport taipy.gui as tpg\n\nclient_handle = None\nui_elements_data = {} # In the real application, this is a dictionary-like object with the workaround implemented in its __getitem__ method. \n\nclass ClientUiElementStruct:\n    \"\"\"Very simplified example\"\"\"\n    TOGGLE_LOV = ['item1', 'item2']\n    \n    def __init__(self):\n        self.toggle_value = 'item1'\n    \n    def __repr__(self):\n        return f\"{self.__class__.__name__}(toggle_value={self.toggle_value!r})\"\n\n\ndef refresh_partial(state):\n    \"\"\"Only create content for the client if a client name is set. This implies that the necessary datastructure is also available\"\"\"\n    if cname := state.client_handle:\n        with tgb.Page() as client_part:\n            with tgb.part(\"card\"):\n                tgb.text(\"The client name is: \" + cname)\n                \n                tgb.toggle(\n                    value=\"{\" + f\"ui_elements_data['{cname}']\" + \".toggle_value}\",\n                    lov=\"{\" + f\"ui_elements_data['{cname}']\" + \".TOGGLE_LOV}\",\n                    on_change=callback_toggle\n                )\n                \n                tgb.text(\"The active selected toggle value is: {ui_elements_data['\" + cname + \"'].toggle_value}\")\n    \n                tgb.text(\"The complete content of state.ui_elements_data: {str(dict(ui_elements_data))}\")\n                \n        state.client_partial.update_content(state, client_part)     \n\n\ndef callback_toggle(state, var_name, value):\n    state.ui_elements_data[state.client_handle].toggle_value = value\n    state.refresh('ui_elements_data')\n\n\n# Initialize the application state\ndef on_init(state):\n    refresh_partial(state)\n\n\ndef on_navigate(state: tpg.State, page_name: str, params: dict = {}) -> str:\n    \"\"\"Extract the client name from the query parameters and update the state\"\"\"\n    # If a client parameter is provided, update client-specific settings\n    if handle := params.get(\"client\", False):\n        if len(handle) > 0:\n            print(f\"Client name query parameter provided: {handle}\")\n            \n            # Theoretically, state variable 'ui_elements_data' should be unique for each client (empty for a new client)\n            #   (as per documentation: https://docs.taipy.io/en/latest/refmans/reference/pkg_taipy/pkg_gui/State/)\n            # However, since this (for some reason) is not the case, we manually set any previous client data to 'None'. This simulates the behavior of the actual application. (Alternative: remove the entries, but this causes issues)\n            # For context: a new client connecting to the dashboard will ALWAYS have the query parameter 'client' set\n            previous_handles = [k for k in state.ui_elements_data.keys() if k != handle]\n            if len(previous_handles) > 0:\n                for k in previous_handles:\n                    state.ui_elements_data[k] = None\n                    # state.ui_elements_data.pop(k) # Alternative: Removing the entries also causes issues\n            \n            state.client_handle = handle\n            state.ui_elements_data[handle] = ClientUiElementStruct()\n            state.refresh('ui_elements_data') # Just to be sure that the ui_elements_data is updated\n            \n            refresh_partial(state)\n            \n            tpg.navigate(state, to=\"/\", tab=\"_self\") # force navigation to the root page without query parameters. Prevents endless loop\n\n    return page_name\n\nif __name__ == \"__main__\":\n    \n    # Define the main page layout\n    with tgb.Page() as main_page:\n        tgb.text(\"Multi-Client DEBUG Dashboard\", class_name=\"h1\")\n        tgb.part(partial=\"{client_partial}\")\n    \n    pages = {\"/\": main_page}\n\n    # Create and run the Taipy GUI\n    gui = tpg.Gui(main_page)\n    client_partial = gui.add_partial(\"\")\n    gui.run()\n```\n\n## Steps to reproduce\n\nNote: ensure the query parameter `?client=...` is provided for each new client connection. This simulates the proper behavior. \n\n\n1. Run the example dashboard above\n2. Go to http://localhost:5000?client=first\n3. Verify in python terminal that there are no errors\n4. Close browser (no longer needed)\n5. In new browser (incognito to ensure independent client), go to http://localhost:5000?client=second\n6. Note in the webUI the final line: `state.ui_elements_data: {'first': None, 'second': ClientUiElementStruct(toggle_value='item1')}` \n  a. **See issue 1) below**...\n8. See errors in python terminal. **See issue 2) below**. Should start like this:\n```python\n.venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py:372: TaipyGuiWarning: Exception raised evaluating dataset['first'].toggle_value:\nTraceback (most recent call last):\n  File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr\n    expr_evaluated = eval(expr_string, ctx)\n                     ^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 1, in <module>\nAttributeError: 'NoneType' object has no attribute 'toggle_value'\n\n  _warn(f\"Exception raised evaluating {expr_string}\", e)\n...\n```\n\n### Issue Descriptions:\n\n#### 1) State variable shared across clients\nEach time a new client connects to the dashboard and provides the query parameter `client=<handle>`, this handle is stored in the state variable `state.dataset[<handle>] = ClientUiElementStruct()`. The `ClientUiElementStruct()` object contains the `LOV` and `value` attributes to be used for the toggle. \n\nIn theory, this state variable should be unique to each client. To track this, its contents are displayed in the partial. The expected value is a dictonary with one key-value pair. For the second client, this should be `{'second': ClientUiElementsStruct(toggle_value='item1')}`\n\nIn practice, once the second client has connected, the state variable used by the second client contains BOTH the first client's handle and the second client's handle: `{'first': None, 'second': ClientUiElementStruct(toggle_value='item1')}`\n\nMaybe I misunderstand how this should work, but the way I read the [documentation](https://docs.taipy.io/en/latest/refmans/reference/pkg_taipy/pkg_gui/State/), each connection (client) should hold it's own independent set of state variables.\n\n#### 2) Taipy backend - trying to access attribute of NoneType object, for binding of different client\n\nTo further simulate the behavior of the actual application, any unwanted 'shared' variables are set to `None` in the `on_navigate()` method.\n\nThe Taipy partial only updates content if the `state.client_handle` has been specified and the necessary `ClientUiElementStruct()` is available.\n\nTwo types of errors can be observed:\n1. Taipy can no longer bind the ui elements of client 'first', giving errors such as `Failed to get: tp_TpExPr_ui_elements_data_first_TOGGLE_LOV_TPMDL_0_0`. This makes sense, since the first client session state is technically still active on the server-side, and the state-variable has suddenly been set to None.\n  a. *Nonetheless, it would be helpful if there was a proper way of 'disconnecting' the bindings*\n2. `AttributeError: 'NoneType' object has no attribute 'toggle_value'` Also logical since what was previously an object is now `NoneType`. However, in the context of the actual application this is more complex. The data structure there is dynamic and can change in size, therefore it's not unreasonable that certain entries may be deleted or set to None. \n\n**Suggested fixes**\n1. New Taipy functionality to 'disconnect' or 'delete' bindings. Since gui elements can be 'created' through a partial, there should also be a way to 'remove' them. In this case that would be useful when the bound state variable is modified or deleted.\n2. The current Taipy code handles an `AttributeError` fine using a try-except for `\"taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr: expr_evaluated = eval(expr_string, ctx)`. However, in the case of the actual application, the critical error was nearly identical but found in a slightly different place:\n```\ntaipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill\n    return attrgetter(name)(gui._get_data_scope())\n \nbuiltins.AttributeError: 'types.SimpleNamespace' object has no attribute 'tp_TpExPr_gui_get_adapted_lov_risk_tree_vm_gelderland_dev_root_0_thema_2_rp_0_ind_0_var_CHART_AGG_LOV_str_TPMDL_9_0'\n```\nThe cause is the same: the state variable which contains an attribute that is bound to a UI element is either missing or replaced. Thus, a similar try-except error handling should be applied here. This would also effectively 'unbind' the UI connection, without raising an execption that reaches the highest level and prevents any other bindings from being updated.\n\n## Current workaround\nFor now, I've ensured that the dict-like data structure `risk_tree` in which the variables are stored (similar to the variable `ui_elements-data` in minimum example above) uses a custom `__getitem__` method. This ensures that if the item cannot be found (which would normally raise a `KeyError` or return `None`), now returns an empty instance of the class with the necessary attributes that Taipy has previously bound UI elements to (such as `toggle_lov`)\n\nOf course this only works for this case and is not scalable for use with other data structures.\n\nI hope this gives you more insights into the issue. Thanks!\nThanks a lot for the really detailed issue and description\n \nThe doc might want to be more precise on the variable state description:\n- each state (1 per client) has its own value for each variable *except* for the non scalar variables where the instances are shared.\nif you want a non scalar variable to be specific for each state, you need to set it in the `on_init`\n```py\ndef on_init(state):\n    state.ui_elements_data = {}\n```\nIn your case, would it be a good idea to instantiate the `ClientUiElementStruct` class for each state ? \nI tried the following modifications: \n```python\n...\nclient_handle = None\nui_elements_data = None # Must be declared, otherwise error in on_init(): AttributeError: Variable 'ui_elements_data' is not accessible.\n\n...\n\n# Initialize the application state\ndef on_init(state):\n    state.ui_elements_data = {}\n    refresh_partial(state)\n\n...\n```\n\nThe dashboard works fine for the first client, but then throws an error when loading the second client:\n```python\n.venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py:372: TaipyGuiWarning: Exception raised evaluating ui_elements_data['first'].toggle_value:\nTraceback (most recent call last):\n  File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr\n    expr_evaluated = eval(expr_string, ctx)\n                     ^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 1, in <module>\n  File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_map_dict.py\", line 37, in __getitem__\n    value = self._dict.__getitem__(key)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nKeyError: 'first'\n...\n```\n\nI'm not sure what you mean by this exactly? \n> I tried the following modifications:\n> \n> ...\n> client_handle = None\n> ui_elements_data = None # Must be declared, otherwise error in on_init(): AttributeError: Variable 'ui_elements_data' is not accessible.\n> \n> ...\n> \n> # Initialize the application state\n> def on_init(state):\n>     state.ui_elements_data = {}\n>     refresh_partial(state)\n> \n> ...\n> The dashboard works fine for the first client, but then throws an error when loading the second client:\n> \n> .venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py:372: TaipyGuiWarning: Exception raised evaluating ui_elements_data['first'].toggle_value:\n> Traceback (most recent call last):\n>   File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr\n>     expr_evaluated = eval(expr_string, ctx)\n>                      ^^^^^^^^^^^^^^^^^^^^^^\n>   File \"<string>\", line 1, in <module>\n>   File \".venv/lib/python3.12/site-packages/taipy/gui/utils/_map_dict.py\", line 37, in __getitem__\n>     value = self._dict.__getitem__(key)\n>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n> KeyError: 'first'\n> ...\n> I'm not sure what you mean by this exactly?\n\nThe technical explanation is that:\n- we calculate variable depencency \n- from your page, we have a dependency between ui_elements_data and ui_elements_data['first'].toggle_love\n- when the state.ui_elements_data, the system tries to refresh ui_elements_data['first'].toggle_love which doesn't exist anymore\n> I'm not sure what you mean by this exactly?\n\ndo you really need your client_handle ?\nYou could set an instance of ClientUiElementStruct for each client state in the on_init callback\nYes, `client_handle` is the core of the application and defines which database schema should be referenced for that client. In this database is a configuration table that effectively defines the extent of the ClientUiElementStruct and therefore also which UI elements need to be constructed. \n\nFor example, based on the config table:\n- Client1 needs 5 Toggles + 1 figure\n- Client2 needs 8 Toggles + 3 figures + 1 slider\n- ClientX needs ... \n\nThe database is dynamic, so all the possible combinations cannot be known before the client connects\nI think you should avoid this `ui_elements_data` dict. That is what's causing your trouble.\nI would recommend that you instantiate a `ClientUiElementStruct` in `on_init`.\nThen you fill it in `on_navigate` depending on your `client_handle`.\nDo you think that would work ?\nTo further clarify: in the actual application, just as you describe, the state variable is only the ClientUIElementStruct.\n\nThere is no separate dictionary in which the `ClientUiElementStruct` is placed. The structure itself resembles a dictionary and is populated based on the client_handle.\n\n**Referring back to the original issue:** (where `TreeRoot()` is the real implementation of  `ClientUiElementStruct()`)\n\n`state.risk_tree` is a single instance of the class `TreeRoot()`, as can be seen in the `on_init()` function. As seen in the code, this `TreeRoot()` is populated with data specific to the client_handle\n\nNOTE: the specific `on_init()` function shown above is located inside a page definition, and is manually called in the `main.py`. (Apologies for the confusing naming, this should maybe better be named `init_client()`)\n\n\n> The issue occurs in the page on_init(). Constructing the object works without an issue. Saving the object to a state variable causes the issue.\n>\n> `page.py`:\n> ```python\n> <imports>\n> # Declare page state variable\n> risk_tree = None\n> \n> def on_init(state):\n>     # Create the basic tree structure based on client settings. Data is added later in Long-Running Callback\n>     state_var_name = \"risk_tree\"\n>     tree = TreeRoot(...\n> ```\n\nIn the `main.py`, this page's `on_init()` is manually called BY the global `on_navigate()`.\n\nTo clarify, the overall control logic of a new client connecting is as follows:\n```mermaid\ngraph TD\n    A[New client connects<br>with client_handle in query params] -->| Taipy calls | C[on_navigate]\n\n    C -->|Extract client_handle query parameter| D[Start client setup<br>to initialize pages]\n\n    D --> J[Setup database connection]\n    J --> L[Get client pages config from SQL]\n    L --> M[Initialize pages: <br>run on_init of each page]\n    M --> |Instantiate TreeRoot object| N[Save<br>state.risk_tree = TreeRoot]\n    N --> |Start Long-Running callback| X[Retrieve data + create figures]\n    N --> Y\n    X -- LR Callback complete -->V[Update state.risk_tree object with new data + figures]\n    V --> Y[Update partials]\n    Y --> O{Check for failed pages}\n    O -->|Success| E[Navigate user to dashboard]\n    O -->|Failures| P[Remove failed pages]\n    P --> E\n```\nNote: When the `TreeRoot` object is instantiated, all variables needed for UI elements are immediately created in the object. The long-running callback simply updates the values of these variables with actual data.\nThanks for the clarification.\nSadly I think the issue shown in your replication code is not the one that you encounter in your real code (even it is has the same output).\nthe naming could be indeed a problem as taipy looks for `on_init` function automatically and invokes it on the first render ...\n> value=\"{\"\n>                 + f\"{tree_node.state_var_name}['{tree_node.id}']\" #client_handle is part of the tree_node.id\n>                 + \".chart_agg_toggle}\"\n\nI think that your problem here is that with such an expression your creating a huge dependency network between your variables.\n\nfor each toggle you create, the value property is bound to `risk_tree['nodeid'].chart_agg_toggle`.\n\nCan you share your definition of the `TreeRoot` and `ThemaNode` classes ?\nIf you use the dot notation for dict access your values will be changed without needing a callback.\nie `risk_tree['nodeid'].chart_agg_toggle` will have no effect unless you specify a callback and manage the change\nwhile `risk_tree.nodeid..chart_agg_toggle` will have an effect on the variable on click.\n\nPS: I know this will not solve your issue but it might help\nAn example that outlines how `state` seems to have the same id between two clients.\n(Perhaps this is unexpected & could help understand OP's issue?)\n```\nfrom types import SimpleNamespace\nfrom taipy.gui import Gui\nimport taipy.gui.builder as tgb\nimport numpy as np\n\nclass Status():\n    def __init__(self):    \n        self.login_attempt = True\n        self.rat = 7\n        self.dog = SimpleNamespace(a = 5)\n        self.fish = np.random.rand()\n\ndef on_init(state):\n    status = Status()\n    state.status = status\n        \nstatus = None\n\nif __name__ == \"__main__\":    \n    with tgb.Page() as page:\n        tgb.slider(\"{status.dog.a}\")\n        tgb.text(\"{status.dog.a}\")\n                 \n        tgb.button(\"print\", on_action = lambda state: print(id(state), state.status.__dict__))\n        tgb.button(\"print\", on_action = lambda state: print(id(state.status.dog), state.status.dog.a, \"\\n\"))\n        \n    app = Gui(page = page)\n\n    app.run()\n```\n\n![Image](https://github.com/user-attachments/assets/85dcf46b-7c34-4605-bd32-77892d2c8bbd)\n\nThe output below the code follows a sequence of events A, B and C.\nA. Client 1 starts, and presses the first & second buttons.  Client 1 then moves the sliders, and presses first & second buttons again.\nB. Client 2 starts, and does exactly as Client 1 did in event A.\nC. Client 1 presses the first & second buttons.\n\nThe app works as expected and both clients appear to have independent `Status` objects tied to their state, and both seemingly can update the value of `dog.a` independently from each other (as event C points out).  The sliders' behavior matches the output too.\n\nBut, notice the print outs for `id(state)` and `id(state.status.dog)`: we see different ids for each client's `dog`, but the same id for each client's `state`...\n(I wouldn't know if this is expected or not, but it might be unsettling especially with respect to the documentation!)\n\n`same id for each client's state` this is expected and normal as the state is only a proxy to each client data\n\nHi Fred, \nThanks again for your time and effort looking into this!\n\n> the naming could be indeed a problem as taipy looks for `on_init` function automatically and invokes it on the first render\n\nI changed the naming to `page_init`. This gets imported into `main.py` and is explicitly called inside the `on_navigate()` function. This change had no effect on the issue.\n\n\nI'd like to clarify that there are two separate issues here. Just to make sure we're not confusing them with each other:\n1. State variable value shared across clients \n   - Observation during debugging\n3. Taipy backend trying to access an attribute of a `NoneType object` (or of a `SimpleNamespace object` in production)\n   - Raises a `KeyError` in the replication code, resulting in warning\n   - Raises an `AttributeError` in production code, resulting in failed page load\n\nThe replication code I provided was to demonstrate both issues. \n\n**Issue 1** is something I observed during debugging and was inconsistent with my understanding of the state variable as described in the docs. Specifically, as demonstrated in the replication code: \n>... the state variable [visible to] the second client contains BOTH the first client's handle and the second client's handle: {'first': None, 'second': ClientUiElementStruct(toggle_value='item1')}\n\nIf you say this behavior is expected, then _please regard this issue as resolved._\n\n**Issue 2** has been temporarily resolved via the workaround. The workaround ensures that if the key cannot be found, it returns an empty object instead of raising a `KeyError` (`AttributeError` in production code)\n\nNonetheless, I believe a more robust solution would be if some kind of error-handling could be built into Taipy. That would enable the page to continue to load even if certain elements could not be found. The replication code only raises a warning, which demonstrates that the error is correctly captured in a try-except statement (see `\"taipy/gui/utils/_evaluator.py\", line 369, in re_evaluate_expr: expr_evaluated = eval(expr_string, ctx)`). \n\nHowever, in the production code, the equivalent error is not caught by `taipy/gui/utils/_attributes.py\", line 26`. I say 'equivalent' because it's also caused by a key or attribute not being found in an object.\nThe error raised is: \n```\ntaipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill\n    return attrgetter(name)(gui._get_data_scope())\n \nbuiltins.AttributeError: 'types.SimpleNamespace' object has no attribute 'tp_TpExPr_gui_get_adapted_lov_risk_tree_vm_gelderland_dev_root_0_thema_2_rp_0_ind_0_var_CHART_AGG_LOV_str_TPMDL_9_0'\n```\n\nAlternatively: would it make sense to add a feature/functionality that enables GUI bindings to be \"disconnected\" when no longer needed? Similar to how UI elements are created inside a partial, but then the opposite? Just thinking out loud...\n\nclient states can be dismissed after a period of inactivity\nI'm running into nearly the same problem again, this time when creating a standard Taipy Scenario and assigning it to a state variable. I followed [these docs](https://docs.taipy.io/en/latest/userman/scenario_features/task-orchestration/scenario-creation/#__tabbed_1_1) and the Covid-Dashboard as examples.\n\nThe dashboard runs fine when in a simple python venv on my laptop. Exactly as above, the issue only arises when run inside a docker container. Sometimes the page continues to load fine, other times it crashes.\n\nThe problematic line of code is again ` line 26, in _getscopeattr_drill`. I have no idea what `__tpgc_dn_filter551` is referring to...\n\n\nHere is the logfile with variable values: [attributeError_to-scenario_variables.log](https://github.com/user-attachments/files/18947250/attributeError_to-scenario_variables.log)\n\n**Code:**\n```python\n... <node & task configs > ...\n\nwhatif_scenario_cfg = Config.configure_scenario(\n    id=\"whatif_50_30_scenario\",\n    task_configs=[\n        task_fetch_whatif_data_cfg,\n        task_preprocess_data_cfg,\n        task_kaart_max_snelheden_cfg,\n        task_kaart_toe_afname_intensiteit_cfg,\n        task_kaart_fietsvoorziening_cfg,\n        task_kaart_schoolomgeving_cfg,\n        task_combine_results_cfg,\n        task_kaart_hoge_verblijfsfunctie_cfg,\n        task_kaart_ongeloofwaardige_30wegen_cfg,\n    ],\n)\n\nwhatif_scenario = None\n\ndef page_init(state: State):\n    \"\"\"Called explicitly by on_navigate() in main.py when new client connects\"\"\"\n    state.whatif_scenario = tp.create_scenario(whatif_scenario_cfg)\n```\n\n**Error:**\n```python\n  File \"/app/main.py\", line 291, in on_navigate\n    page_init(state)\n\n  File \"/app/pages/what_if/page_logic.py\", line 92, in page_init\n    state.whatif_scenario = tp.create_scenario(whatif_scenario_cfg, name=\"Scenario indienen:\")\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/state.py\", line 149, in __setattr__\n    setattr(gui._bindings(), encoded_name, value)\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/utils/_bindings.py\", line 46, in __setter\n    ud.__gui._update_var(name, value)\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/gui.py\", line 766, in _update_var\n    derived_vars.update(self._re_evaluate_expr(var_name))\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/gui.py\", line 1682, in _re_evaluate_expr\n    return self.__evaluator.re_evaluate_expr(self, var_name)\n\n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/utils/_evaluator.py\", line 359, in re_evaluate_expr\n    eval_dict = {k: _getscopeattr_drill(gui, gui._bind_var(v)) for k, v in expr_var_map.items()}\n     \n  File \"/app/.venv/lib/python3.12/site-packages/taipy/gui/utils/_attributes.py\", line 26, in _getscopeattr_drill\n    return attrgetter(name)(gui._get_data_scope())\n      \nbuiltins.AttributeError: 'types.SimpleNamespace' object has no attribute '__tpgc_dn_filter551'\n```", "created_at": "2025-02-26T16:25:34Z"}
{"repo": "Avaiga/taipy", "pull_number": 2462, "instance_id": "Avaiga__taipy-2462", "issue_numbers": ["2406", "2406"], "base_commit": "93d2706f2d70b59e9e4ad8267de7f218865abcf5", "patch": "diff --git a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\nindex dcfdead96..bca628158 100644\n--- a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\n@@ -698,7 +698,7 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n                                                             key={`head${columns[col].dfid}`}\n                                                             sx={\n                                                                 columns[col].width\n-                                                                    ? { minWidth: columns[col].width }\n+                                                                    ? { minWidth: columns[col].width, maxWidth: columns[col].width }\n                                                                     : calcWidth\n                                                                     ? { width: calcWidth }\n                                                                     : undefined\n@@ -730,7 +730,7 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n                                                         sortDirection={orderBy === columns[col].dfid && order}\n                                                         sx={\n                                                             columns[col].width\n-                                                                ? { minWidth: columns[col].width }\n+                                                                ? { minWidth: columns[col].width, maxWidth: columns[col].width }\n                                                                 : calcWidth\n                                                                 ? { width: calcWidth }\n                                                                 : undefined\ndiff --git a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\nindex 94beb7909..559458ca9 100644\n--- a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\n@@ -607,7 +607,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                                                             key={`head${columns[col].dfid}`}\n                                                             sx={\n                                                                 columns[col].width\n-                                                                    ? { minWidth: columns[col].width }\n+                                                                    ? { minWidth: columns[col].width, maxWidth: columns[col].width }\n                                                                     : calcWidth\n                                                                     ? { width: calcWidth }\n                                                                     : undefined\n@@ -639,7 +639,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                                                         sortDirection={orderBy === columns[col].dfid && order}\n                                                         sx={\n                                                             columns[col].width\n-                                                                ? { minWidth: columns[col].width }\n+                                                                ? { minWidth: columns[col].width, maxWidth: columns[col].width }\n                                                                 : calcWidth\n                                                                 ? { width: calcWidth }\n                                                                 : undefined\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] Reducing width of columns in table\n### What went wrong? \ud83e\udd14\n\nI know that we can increase width of columns by using width__column_name = \"200px\". But I can't decrease the width of columns with width__column_name = \"10px\"\n\nFor customer applications with tables with a lot of columns, this poses issues of space management:\n![image](https://github.com/user-attachments/assets/b044fe57-3edd-45ff-ba50-f3fae37f98fc)\n\nHow do I limit width of specific columns?\n\n### Runtime Environment\n\nWindows 11\n\n### OS\n\nWindows\n\n### Version of Taipy\n\n4.0.2\n\n### Additional Context\n\n```bash\n\n```\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Reducing width of columns in table\n### What went wrong? \ud83e\udd14\n\nI know that we can increase width of columns by using width__column_name = \"200px\". But I can't decrease the width of columns with width__column_name = \"10px\"\n\nFor customer applications with tables with a lot of columns, this poses issues of space management:\n![image](https://github.com/user-attachments/assets/b044fe57-3edd-45ff-ba50-f3fae37f98fc)\n\nHow do I limit width of specific columns?\n\n### Runtime Environment\n\nWindows 11\n\n### OS\n\nWindows\n\n### Version of Taipy\n\n4.0.2\n\n### Additional Context\n\n```bash\n\n```\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "\n", "created_at": "2025-02-25T09:23:17Z"}
{"repo": "Avaiga/taipy", "pull_number": 2452, "instance_id": "Avaiga__taipy-2452", "issue_numbers": ["2344", "2344"], "base_commit": "acb9826c15d8377a2ade1115ccf4a54ea50fbcbd", "patch": "diff --git a/frontend/taipy-gui/src/context/taipyReducers.ts b/frontend/taipy-gui/src/context/taipyReducers.ts\nindex b0ac7c2574..885cee0f4f 100644\n--- a/frontend/taipy-gui/src/context/taipyReducers.ts\n+++ b/frontend/taipy-gui/src/context/taipyReducers.ts\n@@ -24,7 +24,7 @@ import { getBaseURL, TIMEZONE_CLIENT } from \"../utils\";\n import { parseData } from \"../utils/dataFormat\";\n import { MenuProps } from \"../utils/lov\";\n import { changeFavicon, getLocalStorageValue, IdMessage, storeClientId } from \"./utils\";\n-import { lightenPayload, sendWsMessage, TAIPY_CLIENT_ID, WsMessage } from \"./wsUtils\";\n+import { lightenPayload, sendWsMessage, TAIPY_APP_ID, TAIPY_CLIENT_ID, WsMessage } from \"./wsUtils\";\n \n export enum Types {\n     SocketConnected = \"SOCKET_CONNECTED\",\n@@ -181,7 +181,7 @@ const getUserTheme = (mode: PaletteMode) => {\n                     },\n                 },\n             },\n-        }),\n+        })\n     );\n };\n \n@@ -226,7 +226,7 @@ export const messageToAction = (message: WsMessage) => {\n                 (message as unknown as NavigateMessage).to,\n                 (message as unknown as NavigateMessage).params,\n                 (message as unknown as NavigateMessage).tab,\n-                (message as unknown as NavigateMessage).force,\n+                (message as unknown as NavigateMessage).force\n             );\n         } else if (message.type === \"ID\") {\n             return createIdAction((message as unknown as IdMessage).id);\n@@ -240,6 +240,8 @@ export const messageToAction = (message: WsMessage) => {\n             changeFavicon((message.payload as Record<string, string>)?.value);\n         } else if (message.type == \"BC\") {\n             stackBroadcast((message as NamePayload).name, (message as NamePayload).payload.value);\n+        } else if (message.type == \"AID\") {\n+            checkAppId((message.payload as Record<string, string>).id);\n         }\n     }\n     return {} as TaipyBaseAction;\n@@ -284,24 +286,46 @@ const initializeBroadcastManagement = (dispatch: Dispatch<TaipyBaseAction>) => {\n     }, broadcast_timeout);\n };\n \n+// App id\n+const checkAppId = (appId: string) => {\n+    if (!appId) {\n+        return;\n+    }\n+    appId = `${appId}`;\n+    const localAppId = getLocalStorageValue(TAIPY_APP_ID, \"\");\n+    if (!localAppId || localAppId !== appId) {\n+        localStorage && localStorage.setItem(TAIPY_APP_ID, appId);\n+        localAppId && window.location.assign(getBaseURL());\n+    }\n+};\n+\n+let lastReasonServer = false;\n+\n+// web socket\n export const initializeWebSocket = (socket: Socket | undefined, dispatch: Dispatch<TaipyBaseAction>): void => {\n     if (socket) {\n         // Websocket confirm successful initialization\n         socket.on(\"connect\", () => {\n             const id = getLocalStorageValue(TAIPY_CLIENT_ID, \"\");\n-            sendWsMessage(socket, \"ID\", TAIPY_CLIENT_ID, id, id, undefined, false, () => {\n+            const payload: Record<string, unknown> = { id };\n+            if (lastReasonServer) {\n+                payload[\"app_id\"] = Number(getLocalStorageValue(TAIPY_APP_ID, \"\"));\n+            }\n+            sendWsMessage(socket, \"ID\", TAIPY_CLIENT_ID, payload, id, undefined, false, () => {\n                 dispatch({ type: Types.SocketConnected });\n             });\n         });\n         // try to reconnect on connect_error\n-        socket.on(\"connect_error\", () => {\n-            setTimeout(() => {\n-                socket.connect();\n-            }, 500);\n+        socket.on(\"connect_error\", (error) => {\n+            if ((error as unknown as Record<string, unknown>).type === \"TransportError\") {\n+                lastReasonServer = true;\n+            }\n+            setTimeout(() => socket.connect(), 500);\n         });\n         // try to reconnect on server disconnection\n         socket.on(\"disconnect\", (reason) => {\n             if (reason === \"io server disconnect\") {\n+                lastReasonServer = true;\n                 socket.connect();\n             }\n         });\n@@ -395,7 +419,9 @@ export const taipyReducer = (state: TaipyState, baseAction: TaipyBaseAction): Ta\n             const deleteNotificationAction = action as unknown as TaipyNotificationAction;\n             return {\n                 ...state,\n-                notifications: state.notifications.filter(notification => notification.notificationId !== deleteNotificationAction.notificationId),\n+                notifications: state.notifications.filter(\n+                    (notification) => notification.notificationId !== deleteNotificationAction.notificationId\n+                ),\n             };\n         case Types.SetBlock:\n             const blockAction = action as unknown as TaipyBlockAction;\n@@ -497,7 +523,7 @@ export const taipyReducer = (state: TaipyState, baseAction: TaipyBaseAction): Ta\n                 action.payload,\n                 state.id,\n                 action.context,\n-                action.propagate,\n+                action.propagate\n             );\n             break;\n         case Types.Action:\n@@ -550,7 +576,7 @@ export const createSendUpdateAction = (\n     context: string | undefined,\n     onChange?: string,\n     propagate = true,\n-    relName?: string,\n+    relName?: string\n ): TaipyAction => ({\n     type: Types.SendUpdate,\n     name: name,\n@@ -603,7 +629,7 @@ export const createRequestChartUpdateAction = (\n     context: string | undefined,\n     columns: string[],\n     pageKey: string,\n-    decimatorPayload: unknown | undefined,\n+    decimatorPayload: unknown | undefined\n ): TaipyAction =>\n     createRequestDataUpdateAction(\n         name,\n@@ -614,7 +640,7 @@ export const createRequestChartUpdateAction = (\n         {\n             decimatorPayload: decimatorPayload,\n         },\n-        true,\n+        true\n     );\n \n export const createRequestTableUpdateAction = (\n@@ -636,7 +662,7 @@ export const createRequestTableUpdateAction = (\n     filters?: Array<FilterDesc>,\n     compare?: string,\n     compareDatas?: string,\n-    stateContext?: Record<string, unknown>,\n+    stateContext?: Record<string, unknown>\n ): TaipyAction =>\n     createRequestDataUpdateAction(\n         name,\n@@ -659,7 +685,7 @@ export const createRequestTableUpdateAction = (\n             compare,\n             compare_datas: compareDatas,\n             state_context: stateContext,\n-        }),\n+        })\n     );\n \n export const createRequestInfiniteTableUpdateAction = (\n@@ -682,7 +708,7 @@ export const createRequestInfiniteTableUpdateAction = (\n     compare?: string,\n     compareDatas?: string,\n     stateContext?: Record<string, unknown>,\n-    reverse?: boolean,\n+    reverse?: boolean\n ): TaipyAction =>\n     createRequestDataUpdateAction(\n         name,\n@@ -707,7 +733,7 @@ export const createRequestInfiniteTableUpdateAction = (\n             compare_datas: compareDatas,\n             state_context: stateContext,\n             reverse: !!reverse,\n-        }),\n+        })\n     );\n \n /**\n@@ -738,7 +764,7 @@ export const createRequestDataUpdateAction = (\n     pageKey: string,\n     payload: Record<string, unknown>,\n     allData = false,\n-    library?: string,\n+    library?: string\n ): TaipyAction => {\n     payload = payload || {};\n     if (id !== undefined) {\n@@ -776,7 +802,7 @@ export const createRequestUpdateAction = (\n     context: string | undefined,\n     names: string[],\n     forceRefresh = false,\n-    stateContext?: Record<string, unknown>,\n+    stateContext?: Record<string, unknown>\n ): TaipyAction => ({\n     type: Types.RequestUpdate,\n     name: \"\",\n@@ -851,7 +877,7 @@ export const createNavigateAction = (\n     to?: string,\n     params?: Record<string, string>,\n     tab?: string,\n-    force?: boolean,\n+    force?: boolean\n ): TaipyNavigateAction => ({\n     type: Types.Navigate,\n     to,\ndiff --git a/frontend/taipy-gui/src/context/wsUtils.ts b/frontend/taipy-gui/src/context/wsUtils.ts\nindex fc1cc35b0c..a6d28b4911 100644\n--- a/frontend/taipy-gui/src/context/wsUtils.ts\n+++ b/frontend/taipy-gui/src/context/wsUtils.ts\n@@ -2,6 +2,7 @@ import { Socket } from \"socket.io-client\";\n import { nanoid } from 'nanoid'\n \n export const TAIPY_CLIENT_ID = \"TaipyClientId\";\n+export const TAIPY_APP_ID = \"TaipyAppId\";\n \n export type WsMessageType =\n     | \"A\"\ndiff --git a/frontend/taipy/package-lock.json b/frontend/taipy/package-lock.json\nindex 7009e46d6d..f7c29ed2ff 100644\n--- a/frontend/taipy/package-lock.json\n+++ b/frontend/taipy/package-lock.json\n@@ -94,22 +94,21 @@\n       }\n     },\n     \"node_modules/@babel/core\": {\n-      \"version\": \"7.26.8\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.26.8.tgz\",\n-      \"integrity\": \"sha512-l+lkXCHS6tQEc5oUpK28xBOZ6+HwaH7YwoYQbLFiYb4nS2/l1tKnZEtEWkD0GuiYdvArf9qBS0XlQGXzPMsNqQ==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.26.9.tgz\",\n+      \"integrity\": \"sha512-lWBYIrF7qK5+GjY5Uy+/hEgp8OJWOD/rpy74GplYRhEauvbHDeFB8t5hPOZxCZ0Oxf4Cc36tK51/l3ymJysrKw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@ampproject/remapping\": \"^2.2.0\",\n         \"@babel/code-frame\": \"^7.26.2\",\n-        \"@babel/generator\": \"^7.26.8\",\n+        \"@babel/generator\": \"^7.26.9\",\n         \"@babel/helper-compilation-targets\": \"^7.26.5\",\n         \"@babel/helper-module-transforms\": \"^7.26.0\",\n-        \"@babel/helpers\": \"^7.26.7\",\n-        \"@babel/parser\": \"^7.26.8\",\n-        \"@babel/template\": \"^7.26.8\",\n-        \"@babel/traverse\": \"^7.26.8\",\n-        \"@babel/types\": \"^7.26.8\",\n-        \"@types/gensync\": \"^1.0.0\",\n+        \"@babel/helpers\": \"^7.26.9\",\n+        \"@babel/parser\": \"^7.26.9\",\n+        \"@babel/template\": \"^7.26.9\",\n+        \"@babel/traverse\": \"^7.26.9\",\n+        \"@babel/types\": \"^7.26.9\",\n         \"convert-source-map\": \"^2.0.0\",\n         \"debug\": \"^4.1.0\",\n         \"gensync\": \"^1.0.0-beta.2\",\n@@ -140,12 +139,12 @@\n       }\n     },\n     \"node_modules/@babel/generator\": {\n-      \"version\": \"7.26.8\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.8.tgz\",\n-      \"integrity\": \"sha512-ef383X5++iZHWAXX0SXQR6ZyQhw/0KtTkrTz61WXRhFM6dhpHulO/RJz79L8S6ugZHJkOOkUrUdxgdF2YiPFnA==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.9.tgz\",\n+      \"integrity\": \"sha512-kEWdzjOAUMW4hAyrzJ0ZaTOu9OmpyDIQicIh0zg0EEcEkYXZb2TjtBhnHi2ViX7PKwZqF4xwqfAm299/QMP3lg==\",\n       \"dependencies\": {\n-        \"@babel/parser\": \"^7.26.8\",\n-        \"@babel/types\": \"^7.26.8\",\n+        \"@babel/parser\": \"^7.26.9\",\n+        \"@babel/types\": \"^7.26.9\",\n         \"@jridgewell/gen-mapping\": \"^0.3.5\",\n         \"@jridgewell/trace-mapping\": \"^0.3.25\",\n         \"jsesc\": \"^3.0.2\"\n@@ -243,24 +242,24 @@\n       }\n     },\n     \"node_modules/@babel/helpers\": {\n-      \"version\": \"7.26.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.7.tgz\",\n-      \"integrity\": \"sha512-8NHiL98vsi0mbPQmYAGWwfcFaOy4j2HY49fXJCfuDcdE7fMIsH9a7GdaeXpIBsbT7307WU8KCMp5pUVDNL4f9A==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.9.tgz\",\n+      \"integrity\": \"sha512-Mz/4+y8udxBKdmzt/UjPACs4G3j5SshJJEFFKxlCGPydG4JAHXxjWjAwjd09tf6oINvl1VfMJo+nB7H2YKQ0dA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@babel/template\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.26.7\"\n+        \"@babel/template\": \"^7.26.9\",\n+        \"@babel/types\": \"^7.26.9\"\n       },\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n       }\n     },\n     \"node_modules/@babel/parser\": {\n-      \"version\": \"7.26.8\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.8.tgz\",\n-      \"integrity\": \"sha512-TZIQ25pkSoaKEYYaHbbxkfL36GNsQ6iFiBbeuzAkLnXayKR1yP1zFe+NxuZWWsUyvt8icPU9CCq0sgWGXR1GEw==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.9.tgz\",\n+      \"integrity\": \"sha512-81NWa1njQblgZbQHxWHpxxCzNsa3ZwvFqpUg7P+NNUU6f3UU2jBEg4OlF/J6rl8+PQGh1q6/zWScd001YwcA5A==\",\n       \"dependencies\": {\n-        \"@babel/types\": \"^7.26.8\"\n+        \"@babel/types\": \"^7.26.9\"\n       },\n       \"bin\": {\n         \"parser\": \"bin/babel-parser.js\"\n@@ -492,9 +491,9 @@\n       }\n     },\n     \"node_modules/@babel/runtime\": {\n-      \"version\": \"7.26.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.26.7.tgz\",\n-      \"integrity\": \"sha512-AOPI3D+a8dXnja+iwsUqGRjr1BbZIe771sXdapOtYI531gSqpi92vXivKcq2asu/DFpdl1ceFAKZyRzK2PCVcQ==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.26.9.tgz\",\n+      \"integrity\": \"sha512-aA63XwOkcl4xxQa3HjPMqOP6LiK0ZDv3mUPYEFXkpHbaFjtGggE1A61FjFzJnB+p7/oy2gA8E+rcBNl/zC1tMg==\",\n       \"dependencies\": {\n         \"regenerator-runtime\": \"^0.14.0\"\n       },\n@@ -503,28 +502,28 @@\n       }\n     },\n     \"node_modules/@babel/template\": {\n-      \"version\": \"7.26.8\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.26.8.tgz\",\n-      \"integrity\": \"sha512-iNKaX3ZebKIsCvJ+0jd6embf+Aulaa3vNBqZ41kM7iTWjx5qzWKXGHiJUW3+nTpQ18SG11hdF8OAzKrpXkb96Q==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.26.9.tgz\",\n+      \"integrity\": \"sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA==\",\n       \"dependencies\": {\n         \"@babel/code-frame\": \"^7.26.2\",\n-        \"@babel/parser\": \"^7.26.8\",\n-        \"@babel/types\": \"^7.26.8\"\n+        \"@babel/parser\": \"^7.26.9\",\n+        \"@babel/types\": \"^7.26.9\"\n       },\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n       }\n     },\n     \"node_modules/@babel/traverse\": {\n-      \"version\": \"7.26.8\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.8.tgz\",\n-      \"integrity\": \"sha512-nic9tRkjYH0oB2dzr/JoGIm+4Q6SuYeLEiIiZDwBscRMYFJ+tMAz98fuel9ZnbXViA2I0HVSSRRK8DW5fjXStA==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.9.tgz\",\n+      \"integrity\": \"sha512-ZYW7L+pL8ahU5fXmNbPF+iZFHCv5scFak7MZ9bwaRPLUhHh7QQEMjZUg0HevihoqCM5iSYHN61EyCoZvqC+bxg==\",\n       \"dependencies\": {\n         \"@babel/code-frame\": \"^7.26.2\",\n-        \"@babel/generator\": \"^7.26.8\",\n-        \"@babel/parser\": \"^7.26.8\",\n-        \"@babel/template\": \"^7.26.8\",\n-        \"@babel/types\": \"^7.26.8\",\n+        \"@babel/generator\": \"^7.26.9\",\n+        \"@babel/parser\": \"^7.26.9\",\n+        \"@babel/template\": \"^7.26.9\",\n+        \"@babel/types\": \"^7.26.9\",\n         \"debug\": \"^4.3.1\",\n         \"globals\": \"^11.1.0\"\n       },\n@@ -533,9 +532,9 @@\n       }\n     },\n     \"node_modules/@babel/types\": {\n-      \"version\": \"7.26.8\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.8.tgz\",\n-      \"integrity\": \"sha512-eUuWapzEGWFEpHFxgEaBG8e3n6S8L3MSu0oda755rOfabWPnh0Our1AozNFVUxGFIhbKgd1ksprsoDGMinTOTA==\",\n+      \"version\": \"7.26.9\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.9.tgz\",\n+      \"integrity\": \"sha512-Y3IR1cRnOxOCDvMmNiym7XpXQ93iGDDPHx+Zj+NM+rg0fBaShfQLkg+hKPaZCEvg5N/LeCo4+Rj/i3FuJsIQaw==\",\n       \"dependencies\": {\n         \"@babel/helper-string-parser\": \"^7.25.9\",\n         \"@babel/helper-validator-identifier\": \"^7.25.9\"\n@@ -2129,12 +2128,6 @@\n       \"integrity\": \"sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==\",\n       \"dev\": true\n     },\n-    \"node_modules/@types/gensync\": {\n-      \"version\": \"1.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/gensync/-/gensync-1.0.4.tgz\",\n-      \"integrity\": \"sha512-C3YYeRQWp2fmq9OryX+FoDy8nXS6scQ7dPptD8LnFDAUNcKWJjXQKDNJD3HVm+kOUsXhTOkpi69vI4EuAr95bA==\",\n-      \"dev\": true\n-    },\n     \"node_modules/@types/graceful-fs\": {\n       \"version\": \"4.1.9\",\n       \"resolved\": \"https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.9.tgz\",\n@@ -2237,9 +2230,9 @@\n       \"dev\": true\n     },\n     \"node_modules/@types/node\": {\n-      \"version\": \"22.13.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.13.2.tgz\",\n-      \"integrity\": \"sha512-Z+r8y3XL9ZpI2EY52YYygAFmo2/oWfNSj4BCpAXE2McAexDk8VcnBMGC9Djn9gTKt4d2T/hhXqmPzo4hfIXtTg==\",\n+      \"version\": \"22.13.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.13.4.tgz\",\n+      \"integrity\": \"sha512-ywP2X0DYtX3y08eFVx5fNIw7/uIv8hYUKgXoK8oayJlLnKcRfEYCxWMVE1XagUdVtCJlZT1AU4LXEABW+L1Peg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"undici-types\": \"~6.20.0\"\n@@ -2802,15 +2795,6 @@\n       \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n       \"dev\": true\n     },\n-    \"node_modules/ajv-keywords\": {\n-      \"version\": \"3.5.2\",\n-      \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.5.2.tgz\",\n-      \"integrity\": \"sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==\",\n-      \"dev\": true,\n-      \"peerDependencies\": {\n-        \"ajv\": \"^6.9.1\"\n-      }\n-    },\n     \"node_modules/ansi-escapes\": {\n       \"version\": \"4.3.2\",\n       \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n@@ -3327,9 +3311,9 @@\n       }\n     },\n     \"node_modules/caniuse-lite\": {\n-      \"version\": \"1.0.30001699\",\n-      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001699.tgz\",\n-      \"integrity\": \"sha512-b+uH5BakXZ9Do9iK+CkDmctUSEqZl+SP056vc5usa0PL+ev5OHw003rZXcnjNDv3L8P5j6rwT6C0BPKSikW08w==\",\n+      \"version\": \"1.0.30001700\",\n+      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001700.tgz\",\n+      \"integrity\": \"sha512-2S6XIXwaE7K7erT8dY+kLQcpa5ms63XlRkMkReXjle+kf6c5g38vyMl+Z5y8dSxOFDhcFe+nxnn261PLxBSQsQ==\",\n       \"dev\": true,\n       \"funding\": [\n         {\n@@ -3909,9 +3893,9 @@\n       }\n     },\n     \"node_modules/electron-to-chromium\": {\n-      \"version\": \"1.5.98\",\n-      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.98.tgz\",\n-      \"integrity\": \"sha512-bI/LbtRBxU2GzK7KK5xxFd2y9Lf9XguHooPYbcXWy6wUoT8NMnffsvRhPmSeUHLSDKAEtKuTaEtK4Ms15zkIEA==\",\n+      \"version\": \"1.5.101\",\n+      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.101.tgz\",\n+      \"integrity\": \"sha512-L0ISiQrP/56Acgu4/i/kfPwWSgrzYZUnQrC0+QPFuhqlLP1Ir7qzPPDVS9BcKIyWTRU8+o6CC8dKw38tSWhYIA==\",\n       \"dev\": true\n     },\n     \"node_modules/emittery\": {\n@@ -4786,13 +4770,14 @@\n       }\n     },\n     \"node_modules/form-data\": {\n-      \"version\": \"4.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.1.tgz\",\n-      \"integrity\": \"sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==\",\n+      \"version\": \"4.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.2.tgz\",\n+      \"integrity\": \"sha512-hGfm/slu0ZabnNt4oaRZ6uREyfCj6P4fT/n6A1rGV+Z0VdGXjfOhVUpkn6qVQONHGIFwmveGXyDs75+nr6FM8w==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"asynckit\": \"^0.4.0\",\n         \"combined-stream\": \"^1.0.8\",\n+        \"es-set-tostringtag\": \"^2.1.0\",\n         \"mime-types\": \"^2.1.12\"\n       },\n       \"engines\": {\n@@ -9187,9 +9172,9 @@\n       }\n     },\n     \"node_modules/webpack\": {\n-      \"version\": \"5.97.1\",\n-      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.97.1.tgz\",\n-      \"integrity\": \"sha512-EksG6gFY3L1eFMROS/7Wzgrii5mBAFe4rIr3r2BTfo7bcc+DWwFZ4OJ/miOuHJO/A85HwyI4eQ0F6IKXesO7Fg==\",\n+      \"version\": \"5.98.0\",\n+      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.98.0.tgz\",\n+      \"integrity\": \"sha512-UFynvx+gM44Gv9qFgj0acCQK2VE1CtdfwFdimkapco3hlPCJ/zeq73n2yVKimVbtm+TnApIugGhLJnkU6gjYXA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@types/eslint-scope\": \"^3.7.7\",\n@@ -9210,9 +9195,9 @@\n         \"loader-runner\": \"^4.2.0\",\n         \"mime-types\": \"^2.1.27\",\n         \"neo-async\": \"^2.6.2\",\n-        \"schema-utils\": \"^3.2.0\",\n+        \"schema-utils\": \"^4.3.0\",\n         \"tapable\": \"^2.1.1\",\n-        \"terser-webpack-plugin\": \"^5.3.10\",\n+        \"terser-webpack-plugin\": \"^5.3.11\",\n         \"watchpack\": \"^2.4.1\",\n         \"webpack-sources\": \"^3.2.3\"\n       },\n@@ -9328,24 +9313,6 @@\n         \"node\": \">=4.0\"\n       }\n     },\n-    \"node_modules/webpack/node_modules/schema-utils\": {\n-      \"version\": \"3.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.3.0.tgz\",\n-      \"integrity\": \"sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"@types/json-schema\": \"^7.0.8\",\n-        \"ajv\": \"^6.12.5\",\n-        \"ajv-keywords\": \"^3.5.2\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 10.13.0\"\n-      },\n-      \"funding\": {\n-        \"type\": \"opencollective\",\n-        \"url\": \"https://opencollective.com/webpack\"\n-      }\n-    },\n     \"node_modules/whatwg-encoding\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-2.0.0.tgz\",\ndiff --git a/taipy/gui/_default_config.py b/taipy/gui/_default_config.py\nindex 94660a338a..913c4b8e44 100644\n--- a/taipy/gui/_default_config.py\n+++ b/taipy/gui/_default_config.py\n@@ -42,6 +42,7 @@\n # Default config loaded by app.py\n default_config: Config = {\n     \"allow_unsafe_werkzeug\": False,\n+    \"app_id\": False,\n     \"async_mode\": \"gevent\",\n     \"change_delay\": None,\n     \"chart_dark_template\": None,\ndiff --git a/taipy/gui/config.py b/taipy/gui/config.py\nindex 5cef23968a..b82fa5d96b 100644\n--- a/taipy/gui/config.py\n+++ b/taipy/gui/config.py\n@@ -30,6 +30,7 @@\n \n ConfigParameter = t.Literal[\n     \"allow_unsafe_werkzeug\",\n+    \"app_id\",\n     \"async_mode\",\n     \"change_delay\",\n     \"chart_dark_template\",\n@@ -104,6 +105,7 @@\n     \"Config\",\n     {\n         \"allow_unsafe_werkzeug\": bool,\n+        \"app_id\": t.Optional[bool],\n         \"async_mode\": str,\n         \"change_delay\": t.Optional[int],\n         \"chart_dark_template\": t.Optional[t.Dict[str, t.Any]],\ndiff --git a/taipy/gui/data/data_scope.py b/taipy/gui/data/data_scope.py\nindex 53ee6fcac1..e039881097 100644\n--- a/taipy/gui/data/data_scope.py\n+++ b/taipy/gui/data/data_scope.py\n@@ -14,6 +14,8 @@\n import typing as t\n from types import SimpleNamespace\n \n+from taipy.common.logger._taipy_logger import _TaipyLogger\n+\n from .._warnings import _warn\n \n if t.TYPE_CHECKING:\n@@ -56,7 +58,7 @@ def get_scope(self, client_id: t.Optional[str]) -> t.Tuple[SimpleNamespace, t.Di\n             _warn(\"Empty session id, using global scope instead.\")\n             return self.__scopes[_DataScopes._GLOBAL_ID], self.__scopes_metadata[_DataScopes._GLOBAL_ID]\n         if client_id not in self.__scopes:\n-            _warn(\n+            _TaipyLogger._get_logger().debug(\n                 f\"Session id {client_id} not found in data scope. Taipy will automatically create a scope for this session id but you may have to reload your page.\"  # noqa: E501\n             )\n             self.create_scope(client_id)\ndiff --git a/taipy/gui/gui.py b/taipy/gui/gui.py\nindex 56f6ee45db..1db837843f 100644\n--- a/taipy/gui/gui.py\n+++ b/taipy/gui/gui.py\n@@ -700,8 +700,15 @@ def _manage_message(self, msg_type: _WsType, message: dict) -> None:\n         try:\n             client_id = None\n             if msg_type == _WsType.CLIENT_ID.value:\n-                res = self._bindings()._get_or_create_scope(message.get(\"payload\", \"\"))\n+                payload = message.get(\"payload\", {})\n+                res = self._bindings()._get_or_create_scope(\n+                    payload.get(\"id\", \"\") if isinstance(payload, dict) else str(payload)\n+                )\n                 client_id = res[0] if res[1] else None\n+                if self._config.config.get(\"app_id\", False):\n+                    front_app_id = payload.get(\"app_id\", None) if isinstance(payload, dict) else None\n+                    if front_app_id is not None:\n+                        self.__handle_ws_app_id({\"name\": message.get(\"name\"), \"payload\": front_app_id})\n             expected_client_id = client_id or message.get(Gui.__ARG_CLIENT_ID)\n             self.__set_client_id_in_context(expected_client_id)\n             g.ws_client_id = expected_client_id\n", "test_patch": "diff --git a/tests/gui/gui_specific/test_gui.py b/tests/gui/gui_specific/test_gui.py\nindex cf0fb2563e..385a446c9b 100644\n--- a/tests/gui/gui_specific/test_gui.py\n+++ b/tests/gui/gui_specific/test_gui.py\n@@ -38,8 +38,7 @@ def test__get_real_var_name(gui: Gui):\n def test__get_user_instance(gui: Gui):\n     gui.run(run_server=False)\n     with gui.get_flask_app().app_context():\n-        with pytest.warns(UserWarning):\n-            gui._get_user_instance(\"\", type(None))\n+        gui._get_user_instance(\"\", type(None))\n \n \n def test__refresh_expr(gui: Gui):\n", "problem_statement": "[\ud83d\udc1b BUG] De-synchronized front-ends and  back-end  \n### What went wrong? \ud83e\udd14\nFront-ends get de-synchronized when re-running an application.\n\nThis is more important than it looks like, as it happens frequently and gives users the wrong impression that their application has a bug. \n\nFor example, it happens frequently during an application's development phase, especially with the default behavior of Gui().run(), which opens a new tab without closing the previous tabs.\n\nIt also happens when re-deploying a live application, causing the wrong error messages at a very bad time.\n\n### Reproduce the situation\n\nThe problem arises when:\n\n- We run an application.\n- We access the application on a browser tab.\n- We shut down the application without closing the tab.\n- We re-run the application (or another application on the same port).\n- We use the same old tab that does not correspond to the new back-end application. This may create errors, warnings, or inconsistencies.\n\n### Expected Behavior\n\nDe-synchronized front-ends should be aware that the back-end version they are connected to is incorrect. The front-end application should automatically display a message to let the user know he/she should refresh the browser.\n\n### Solution Proposed\n\nWhat about generating a unique identifier each time we run the server? It could represent a `run_identifier`. Each of the clients (the tabs) could know this unique `run_identifier`. \nThe clients could pass the `run_identifier` to the back end every time it communicates with it. On the server side, the client request is properly rejected if the `run_identifier` received from the client does not match its own internal `run_identifier`. The front end should be able to display a message asking the user to refresh the tab.\n\n### Version of Taipy\n\n- 3.X,\n- 4.Y,\n- develop\n\n### Linked issues\n- https://github.com/Avaiga/taipy-enterprise/issues/574\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] De-synchronized front-ends and  back-end  \n### What went wrong? \ud83e\udd14\nFront-ends get de-synchronized when re-running an application.\n\nThis is more important than it looks like, as it happens frequently and gives users the wrong impression that their application has a bug. \n\nFor example, it happens frequently during an application's development phase, especially with the default behavior of Gui().run(), which opens a new tab without closing the previous tabs.\n\nIt also happens when re-deploying a live application, causing the wrong error messages at a very bad time.\n\n### Reproduce the situation\n\nThe problem arises when:\n\n- We run an application.\n- We access the application on a browser tab.\n- We shut down the application without closing the tab.\n- We re-run the application (or another application on the same port).\n- We use the same old tab that does not correspond to the new back-end application. This may create errors, warnings, or inconsistencies.\n\n### Expected Behavior\n\nDe-synchronized front-ends should be aware that the back-end version they are connected to is incorrect. The front-end application should automatically display a message to let the user know he/she should refresh the browser.\n\n### Solution Proposed\n\nWhat about generating a unique identifier each time we run the server? It could represent a `run_identifier`. Each of the clients (the tabs) could know this unique `run_identifier`. \nThe clients could pass the `run_identifier` to the back end every time it communicates with it. On the server side, the client request is properly rejected if the `run_identifier` received from the client does not match its own internal `run_identifier`. The front end should be able to display a message asking the user to refresh the tab.\n\n### Version of Taipy\n\n- 3.X,\n- 4.Y,\n- develop\n\n### Linked issues\n- https://github.com/Avaiga/taipy-enterprise/issues/574\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "@FredLL-Avaiga Here is the previous implementation of App Id\nWS Type declaration https://github.com/Avaiga/taipy/blob/develop/taipy/gui/types.py#L46\nWS Handler \n- https://github.com/Avaiga/taipy/blob/develop/taipy/gui/gui.py#L729-L730\n- https://github.com/Avaiga/taipy/blob/develop/taipy/gui/gui.py#L1338-L1352\n\n@FredLL-Avaiga Here is the previous implementation of App Id\nWS Type declaration https://github.com/Avaiga/taipy/blob/develop/taipy/gui/types.py#L46\nWS Handler \n- https://github.com/Avaiga/taipy/blob/develop/taipy/gui/gui.py#L729-L730\n- https://github.com/Avaiga/taipy/blob/develop/taipy/gui/gui.py#L1338-L1352\n", "created_at": "2025-02-18T09:29:56Z"}
{"repo": "Avaiga/taipy", "pull_number": 2449, "instance_id": "Avaiga__taipy-2449", "issue_numbers": ["2448", "2448"], "base_commit": "cf9a9113a588ebcaf668a481d4c317a20f10dc4d", "patch": "diff --git a/frontend/taipy-gui/package-lock.json b/frontend/taipy-gui/package-lock.json\nindex 157e4f392f..820b439d04 100644\n--- a/frontend/taipy-gui/package-lock.json\n+++ b/frontend/taipy-gui/package-lock.json\n@@ -22,7 +22,7 @@\n         \"lodash\": \"^4.17.21\",\n         \"nanoid\": \"^5.0.7\",\n         \"notistack\": \"^3.0.0\",\n-        \"plotly.js\": \"^2.33.0\",\n+        \"plotly.js\": \"^3.0.0\",\n         \"react\": \"^18.3.1\",\n         \"react-dom\": \"^18.3.1\",\n         \"react-error-boundary\": \"^5.0.0\",\n@@ -87,9 +87,9 @@\n       }\n     },\n     \"node_modules/@adobe/css-tools\": {\n-      \"version\": \"4.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.1.tgz\",\n-      \"integrity\": \"sha512-12WGKBQzjUAI4ayyF4IAtfw2QR/IDoqk6jTddXDhtYTJF9ASmoE1zst7cVtP0aL/F1jUJL5r+JxKXKEgHNbEUQ==\",\n+      \"version\": \"4.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.2.tgz\",\n+      \"integrity\": \"sha512-baYZExFpsdkBNuvGKTKWCwKH57HRZLVtycZS05WTQNVOiXVSeAki3nU35zlRbToeMW8aHlJfyS+1C4BOv27q0A==\",\n       \"dev\": true\n     },\n     \"node_modules/@ampproject/remapping\": {\n@@ -119,30 +119,31 @@\n       }\n     },\n     \"node_modules/@babel/compat-data\": {\n-      \"version\": \"7.26.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.5.tgz\",\n-      \"integrity\": \"sha512-XvcZi1KWf88RVbF9wn8MN6tYFloU5qX8KjuF3E1PVBmJ9eypXfs4GRiJwLuTZL0iSnJUKn1BFPa5BPZZJyFzPg==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.8.tgz\",\n+      \"integrity\": \"sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n       }\n     },\n     \"node_modules/@babel/core\": {\n-      \"version\": \"7.26.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.26.7.tgz\",\n-      \"integrity\": \"sha512-SRijHmF0PSPgLIBYlWnG0hyeJLwXE2CgpsXaMOrtt2yp9/86ALw6oUlj9KYuZ0JN07T4eBMVIW4li/9S1j2BGA==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.26.8.tgz\",\n+      \"integrity\": \"sha512-l+lkXCHS6tQEc5oUpK28xBOZ6+HwaH7YwoYQbLFiYb4nS2/l1tKnZEtEWkD0GuiYdvArf9qBS0XlQGXzPMsNqQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@ampproject/remapping\": \"^2.2.0\",\n         \"@babel/code-frame\": \"^7.26.2\",\n-        \"@babel/generator\": \"^7.26.5\",\n+        \"@babel/generator\": \"^7.26.8\",\n         \"@babel/helper-compilation-targets\": \"^7.26.5\",\n         \"@babel/helper-module-transforms\": \"^7.26.0\",\n         \"@babel/helpers\": \"^7.26.7\",\n-        \"@babel/parser\": \"^7.26.7\",\n-        \"@babel/template\": \"^7.25.9\",\n-        \"@babel/traverse\": \"^7.26.7\",\n-        \"@babel/types\": \"^7.26.7\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/template\": \"^7.26.8\",\n+        \"@babel/traverse\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\",\n+        \"@types/gensync\": \"^1.0.0\",\n         \"convert-source-map\": \"^2.0.0\",\n         \"debug\": \"^4.1.0\",\n         \"gensync\": \"^1.0.0-beta.2\",\n@@ -173,12 +174,12 @@\n       }\n     },\n     \"node_modules/@babel/generator\": {\n-      \"version\": \"7.26.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.5.tgz\",\n-      \"integrity\": \"sha512-2caSP6fN9I7HOe6nqhtft7V4g7/V/gfDsC3Ag4W7kEzzvRGKqiv0pu0HogPiZ3KaVSoNDhUws6IJjDjpfmYIXw==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.8.tgz\",\n+      \"integrity\": \"sha512-ef383X5++iZHWAXX0SXQR6ZyQhw/0KtTkrTz61WXRhFM6dhpHulO/RJz79L8S6ugZHJkOOkUrUdxgdF2YiPFnA==\",\n       \"dependencies\": {\n-        \"@babel/parser\": \"^7.26.5\",\n-        \"@babel/types\": \"^7.26.5\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\",\n         \"@jridgewell/gen-mapping\": \"^0.3.5\",\n         \"@jridgewell/trace-mapping\": \"^0.3.25\",\n         \"jsesc\": \"^3.0.2\"\n@@ -289,11 +290,11 @@\n       }\n     },\n     \"node_modules/@babel/parser\": {\n-      \"version\": \"7.26.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.7.tgz\",\n-      \"integrity\": \"sha512-kEvgGGgEjRUutvdVvZhbn/BxVt+5VSpwXz1j3WYXQbXDo8KzFOPNG2GQbdAiNq8g6wn1yKk7C/qrke03a84V+w==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.8.tgz\",\n+      \"integrity\": \"sha512-TZIQ25pkSoaKEYYaHbbxkfL36GNsQ6iFiBbeuzAkLnXayKR1yP1zFe+NxuZWWsUyvt8icPU9CCq0sgWGXR1GEw==\",\n       \"dependencies\": {\n-        \"@babel/types\": \"^7.26.7\"\n+        \"@babel/types\": \"^7.26.8\"\n       },\n       \"bin\": {\n         \"parser\": \"bin/babel-parser.js\"\n@@ -536,28 +537,28 @@\n       }\n     },\n     \"node_modules/@babel/template\": {\n-      \"version\": \"7.25.9\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.25.9.tgz\",\n-      \"integrity\": \"sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.26.8.tgz\",\n+      \"integrity\": \"sha512-iNKaX3ZebKIsCvJ+0jd6embf+Aulaa3vNBqZ41kM7iTWjx5qzWKXGHiJUW3+nTpQ18SG11hdF8OAzKrpXkb96Q==\",\n       \"dependencies\": {\n-        \"@babel/code-frame\": \"^7.25.9\",\n-        \"@babel/parser\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.25.9\"\n+        \"@babel/code-frame\": \"^7.26.2\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\"\n       },\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n       }\n     },\n     \"node_modules/@babel/traverse\": {\n-      \"version\": \"7.26.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.7.tgz\",\n-      \"integrity\": \"sha512-1x1sgeyRLC3r5fQOM0/xtQKsYjyxmFjaOrLJNtZ81inNjyJHGIolTULPiSc/2qe1/qfpFLisLQYFnnZl7QoedA==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.8.tgz\",\n+      \"integrity\": \"sha512-nic9tRkjYH0oB2dzr/JoGIm+4Q6SuYeLEiIiZDwBscRMYFJ+tMAz98fuel9ZnbXViA2I0HVSSRRK8DW5fjXStA==\",\n       \"dependencies\": {\n         \"@babel/code-frame\": \"^7.26.2\",\n-        \"@babel/generator\": \"^7.26.5\",\n-        \"@babel/parser\": \"^7.26.7\",\n-        \"@babel/template\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.26.7\",\n+        \"@babel/generator\": \"^7.26.8\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/template\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\",\n         \"debug\": \"^4.3.1\",\n         \"globals\": \"^11.1.0\"\n       },\n@@ -566,9 +567,9 @@\n       }\n     },\n     \"node_modules/@babel/types\": {\n-      \"version\": \"7.26.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.7.tgz\",\n-      \"integrity\": \"sha512-t8kDRGrKXyp6+tjUh7hw2RLyclsW4TRoRvRHtSyAX9Bb5ldlFh+90YAYY6awRXrlB4G5G2izNeGySpATlFzmOg==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.8.tgz\",\n+      \"integrity\": \"sha512-eUuWapzEGWFEpHFxgEaBG8e3n6S8L3MSu0oda755rOfabWPnh0Our1AozNFVUxGFIhbKgd1ksprsoDGMinTOTA==\",\n       \"dependencies\": {\n         \"@babel/helper-string-parser\": \"^7.25.9\",\n         \"@babel/helper-validator-identifier\": \"^7.25.9\"\n@@ -769,12 +770,12 @@\n       }\n     },\n     \"node_modules/@eslint/config-array\": {\n-      \"version\": \"0.19.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/config-array/-/config-array-0.19.1.tgz\",\n-      \"integrity\": \"sha512-fo6Mtm5mWyKjA/Chy1BYTdn5mGJoDNjC7C64ug20ADsRDGrA85bN3uK3MaKbeRkRuuIEAR5N33Jr1pbm411/PA==\",\n+      \"version\": \"0.19.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/config-array/-/config-array-0.19.2.tgz\",\n+      \"integrity\": \"sha512-GNKqxfHG2ySmJOBSHg7LxeUx4xpuCoFjacmlCoYWEbaPXLwvfIjixRI12xCQZeULksQb23uiA8F40w5TojpV7w==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@eslint/object-schema\": \"^2.1.5\",\n+        \"@eslint/object-schema\": \"^2.1.6\",\n         \"debug\": \"^4.3.1\",\n         \"minimatch\": \"^3.1.2\"\n       },\n@@ -805,9 +806,9 @@\n       }\n     },\n     \"node_modules/@eslint/core\": {\n-      \"version\": \"0.10.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.10.0.tgz\",\n-      \"integrity\": \"sha512-gFHJ+xBOo4G3WRlR1e/3G8A6/KZAH6zcE/hkLRCZTi/B9avAG365QhFA8uOGzTMqgTghpn7/fSnscW++dpMSAw==\",\n+      \"version\": \"0.11.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.11.0.tgz\",\n+      \"integrity\": \"sha512-DWUB2pksgNEb6Bz2fggIy1wh6fGgZP4Xyy/Mt0QZPiloKKXerbqq9D3SBQTlCRYOrcRPu4vuz+CGjwdfqxnoWA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@types/json-schema\": \"^7.0.15\"\n@@ -874,18 +875,18 @@\n       }\n     },\n     \"node_modules/@eslint/js\": {\n-      \"version\": \"9.19.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-9.19.0.tgz\",\n-      \"integrity\": \"sha512-rbq9/g38qjfqFLOVPvwjIvFFdNziEC5S65jmjPw5r6A//QH+W91akh9irMwjDN8zKUTak6W9EsAv4m/7Wnw0UQ==\",\n+      \"version\": \"9.20.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-9.20.0.tgz\",\n+      \"integrity\": \"sha512-iZA07H9io9Wn836aVTytRaNqh00Sad+EamwOVJT12GTLw1VGMFV/4JaME+JjLtr9fiGaoWgYnS54wrfWsSs4oQ==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n       }\n     },\n     \"node_modules/@eslint/object-schema\": {\n-      \"version\": \"2.1.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.5.tgz\",\n-      \"integrity\": \"sha512-o0bhxnL89h5Bae5T318nFoFzGy+YE5i/gGkoPAgkmTVdRKTiv3p8JHevPiPaMwoloKfEiiaHlawCqaZMqRm+XQ==\",\n+      \"version\": \"2.1.6\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz\",\n+      \"integrity\": \"sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -904,6 +905,18 @@\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n       }\n     },\n+    \"node_modules/@eslint/plugin-kit/node_modules/@eslint/core\": {\n+      \"version\": \"0.10.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.10.0.tgz\",\n+      \"integrity\": \"sha512-gFHJ+xBOo4G3WRlR1e/3G8A6/KZAH6zcE/hkLRCZTi/B9avAG365QhFA8uOGzTMqgTghpn7/fSnscW++dpMSAw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"@types/json-schema\": \"^7.0.15\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n+      }\n+    },\n     \"node_modules/@gerrit0/mini-shiki\": {\n       \"version\": \"1.27.2\",\n       \"resolved\": \"https://registry.npmjs.org/@gerrit0/mini-shiki/-/mini-shiki-1.27.2.tgz\",\n@@ -976,6 +989,95 @@\n         \"url\": \"https://github.com/sponsors/nzakas\"\n       }\n     },\n+    \"node_modules/@isaacs/cliui\": {\n+      \"version\": \"8.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n+      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n+      \"dependencies\": {\n+        \"string-width\": \"^5.1.2\",\n+        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n+        \"strip-ansi\": \"^7.0.1\",\n+        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n+        \"wrap-ansi\": \"^8.1.0\",\n+        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n+      \"version\": \"6.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n+      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/ansi-styles\": {\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n+      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/emoji-regex\": {\n+      \"version\": \"9.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n+      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\"\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/string-width\": {\n+      \"version\": \"5.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n+      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n+      \"dependencies\": {\n+        \"eastasianwidth\": \"^0.2.0\",\n+        \"emoji-regex\": \"^9.2.2\",\n+        \"strip-ansi\": \"^7.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n+      \"version\": \"7.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n+      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/@isaacs/cliui/node_modules/wrap-ansi\": {\n+      \"version\": \"8.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n+      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^6.1.0\",\n+        \"string-width\": \"^5.0.1\",\n+        \"strip-ansi\": \"^7.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n+      }\n+    },\n     \"node_modules/@istanbuljs/load-nyc-config\": {\n       \"version\": \"1.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz\",\n@@ -1592,18 +1694,18 @@\n       \"dev\": true\n     },\n     \"node_modules/@mui/core-downloads-tracker\": {\n-      \"version\": \"6.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-6.4.1.tgz\",\n-      \"integrity\": \"sha512-SfDLWMV5b5oXgDf3NTa2hCTPC1d2defhDH2WgFKmAiejC4mSfXYbyi+AFCLzpizauXhgBm8OaZy9BHKnrSpahQ==\",\n+      \"version\": \"6.4.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-6.4.4.tgz\",\n+      \"integrity\": \"sha512-r+J0EditrekkTtO2CnCBCOGpNaDYwJqz8lH4rj6o/anDcskZFJodBlG8aCJkS8DL/CF/9EHS+Gz53EbmYEnQbw==\",\n       \"funding\": {\n         \"type\": \"opencollective\",\n         \"url\": \"https://opencollective.com/mui-org\"\n       }\n     },\n     \"node_modules/@mui/icons-material\": {\n-      \"version\": \"6.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/icons-material/-/icons-material-6.4.1.tgz\",\n-      \"integrity\": \"sha512-wsxFcUTQxt4s+7Bg4GgobqRjyaHLmZGNOs+HJpbwrwmLbT6mhIJxhpqsKzzWq9aDY8xIe7HCjhpH7XI5UD6teA==\",\n+      \"version\": \"6.4.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/icons-material/-/icons-material-6.4.4.tgz\",\n+      \"integrity\": \"sha512-uF1chGaoFmYdRUomK6f8kgJfWosk9A3HXWiVD0vQm+2mE7f25eTQ1E8RRO11LXpnUBqu8Rbv/uGlpnjT/u1Ksg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\"\n       },\n@@ -1615,7 +1717,7 @@\n         \"url\": \"https://opencollective.com/mui-org\"\n       },\n       \"peerDependencies\": {\n-        \"@mui/material\": \"^6.4.1\",\n+        \"@mui/material\": \"^6.4.4\",\n         \"@types/react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n       },\n@@ -1626,15 +1728,15 @@\n       }\n     },\n     \"node_modules/@mui/material\": {\n-      \"version\": \"6.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/material/-/material-6.4.1.tgz\",\n-      \"integrity\": \"sha512-MFBfia6UiKxyoLeGkAh8M15bkeDmfnsUTMRJd/vTQue6YQ8AQ6lw9HqDthyYghzDEWIvZO/lQQzLrZE8XwNJLA==\",\n+      \"version\": \"6.4.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/material/-/material-6.4.4.tgz\",\n+      \"integrity\": \"sha512-ISVPrIsPQsxnwvS40C4u03AuNSPigFeS2+n1qpuEZ94hDsdMi19dQM2JcC9CHEhXecSIQjP1RTyY0mPiSpSrFQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/core-downloads-tracker\": \"^6.4.1\",\n-        \"@mui/system\": \"^6.4.1\",\n+        \"@mui/core-downloads-tracker\": \"^6.4.4\",\n+        \"@mui/system\": \"^6.4.3\",\n         \"@mui/types\": \"^7.2.21\",\n-        \"@mui/utils\": \"^6.4.1\",\n+        \"@mui/utils\": \"^6.4.3\",\n         \"@popperjs/core\": \"^2.11.8\",\n         \"@types/react-transition-group\": \"^4.4.12\",\n         \"clsx\": \"^2.1.1\",\n@@ -1653,7 +1755,7 @@\n       \"peerDependencies\": {\n         \"@emotion/react\": \"^11.5.0\",\n         \"@emotion/styled\": \"^11.3.0\",\n-        \"@mui/material-pigment-css\": \"^6.4.1\",\n+        \"@mui/material-pigment-css\": \"^6.4.3\",\n         \"@types/react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react-dom\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n@@ -1674,12 +1776,12 @@\n       }\n     },\n     \"node_modules/@mui/private-theming\": {\n-      \"version\": \"6.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/private-theming/-/private-theming-6.4.1.tgz\",\n-      \"integrity\": \"sha512-DcT7mwK89owwgcEuiE7w458te4CIjHbYWW6Kn6PiR6eLtxBsoBYphA968uqsQAOBQDpbYxvkuFLwhgk4bxoN/Q==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/private-theming/-/private-theming-6.4.3.tgz\",\n+      \"integrity\": \"sha512-7x9HaNwDCeoERc4BoEWLieuzKzXu5ZrhRnEM6AUcRXUScQLvF1NFkTlP59+IJfTbEMgcGg1wWHApyoqcksrBpQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/utils\": \"^6.4.1\",\n+        \"@mui/utils\": \"^6.4.3\",\n         \"prop-types\": \"^15.8.1\"\n       },\n       \"engines\": {\n@@ -1700,9 +1802,9 @@\n       }\n     },\n     \"node_modules/@mui/styled-engine\": {\n-      \"version\": \"6.4.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-6.4.0.tgz\",\n-      \"integrity\": \"sha512-ek/ZrDujrger12P6o4luQIfRd2IziH7jQod2WMbLqGE03Iy0zUwYmckRTVhRQTLPNccpD8KXGcALJF+uaUQlbg==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-6.4.3.tgz\",\n+      \"integrity\": \"sha512-OC402VfK+ra2+f12Gef8maY7Y9n7B6CZcoQ9u7mIkh/7PKwW/xH81xwX+yW+Ak1zBT3HYcVjh2X82k5cKMFGoQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n         \"@emotion/cache\": \"^11.13.5\",\n@@ -1733,15 +1835,15 @@\n       }\n     },\n     \"node_modules/@mui/system\": {\n-      \"version\": \"6.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/system/-/system-6.4.1.tgz\",\n-      \"integrity\": \"sha512-rgQzgcsHCTtzF9MZ+sL0tOhf2ZBLazpjrujClcb4Siju5lTrK0xX4PsiropActzCemNfM+mOu+0jezAVnfRK8g==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/system/-/system-6.4.3.tgz\",\n+      \"integrity\": \"sha512-Q0iDwnH3+xoxQ0pqVbt8hFdzhq1g2XzzR4Y5pVcICTNtoCLJmpJS3vI4y/OIM1FHFmpfmiEC2IRIq7YcZ8nsmg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/private-theming\": \"^6.4.1\",\n-        \"@mui/styled-engine\": \"^6.4.0\",\n+        \"@mui/private-theming\": \"^6.4.3\",\n+        \"@mui/styled-engine\": \"^6.4.3\",\n         \"@mui/types\": \"^7.2.21\",\n-        \"@mui/utils\": \"^6.4.1\",\n+        \"@mui/utils\": \"^6.4.3\",\n         \"clsx\": \"^2.1.1\",\n         \"csstype\": \"^3.1.3\",\n         \"prop-types\": \"^15.8.1\"\n@@ -1785,9 +1887,9 @@\n       }\n     },\n     \"node_modules/@mui/utils\": {\n-      \"version\": \"6.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/utils/-/utils-6.4.1.tgz\",\n-      \"integrity\": \"sha512-iQUDUeYh87SvR4lVojaRaYnQix8BbRV51MxaV6MBmqthecQoxwSbS5e2wnbDJUeFxY2ppV505CiqPLtd0OWkqw==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/utils/-/utils-6.4.3.tgz\",\n+      \"integrity\": \"sha512-jxHRHh3BqVXE9ABxDm+Tc3wlBooYz/4XPa0+4AI+iF38rV1/+btJmSUgG4shDtSWVs/I97aDn5jBCt6SF2Uq2A==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n         \"@mui/types\": \"^7.2.21\",\n@@ -1814,13 +1916,13 @@\n       }\n     },\n     \"node_modules/@mui/x-date-pickers\": {\n-      \"version\": \"7.24.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-date-pickers/-/x-date-pickers-7.24.1.tgz\",\n-      \"integrity\": \"sha512-ykQugMQHuQKBk3kViW/r0PpubtHQOlrd54bgbdafgTMCeM2VpXvv4zimzOu5IGnM6wEN8hupC7EXZbkrT6x46w==\",\n+      \"version\": \"7.26.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-date-pickers/-/x-date-pickers-7.26.0.tgz\",\n+      \"integrity\": \"sha512-bhSDce1b5MBYYlCdHQJBThe10LGTE3D/u53TDQ41+IRj+iiNCun8jivw3DxKhmoBxlB+hVdkcltpTtIGlPjQZQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\",\n-        \"@mui/x-internals\": \"7.24.1\",\n+        \"@mui/x-internals\": \"7.26.0\",\n         \"@types/react-transition-group\": \"^4.4.11\",\n         \"clsx\": \"^2.1.1\",\n         \"prop-types\": \"^15.8.1\",\n@@ -1879,9 +1981,9 @@\n       }\n     },\n     \"node_modules/@mui/x-internals\": {\n-      \"version\": \"7.24.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-internals/-/x-internals-7.24.1.tgz\",\n-      \"integrity\": \"sha512-9BvJzpLJnS9BDphvkiv6v0QOLxbnu8jhwcexFjtCQ2ZyxtVuVsWzGZ2npT9sGOil7+eaFDmWnJtea/tgrPvSwQ==\",\n+      \"version\": \"7.26.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-internals/-/x-internals-7.26.0.tgz\",\n+      \"integrity\": \"sha512-VxTCYQcZ02d3190pdvys2TDg9pgbvewAVakEopiOgReKAUhLdRlgGJHcOA/eAuGLyK1YIo26A6Ow6ZKlSRLwMg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\"\n@@ -1898,13 +2000,13 @@\n       }\n     },\n     \"node_modules/@mui/x-tree-view\": {\n-      \"version\": \"7.24.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-tree-view/-/x-tree-view-7.24.1.tgz\",\n-      \"integrity\": \"sha512-IR24GAw8e8NORlVxJzNf1RnJu/ThBLv6sNlHoh7sF82MQ89i3nUCErA2gqYnY4aZ4g3GfJSWnYikPP24OTEqRQ==\",\n+      \"version\": \"7.26.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-tree-view/-/x-tree-view-7.26.0.tgz\",\n+      \"integrity\": \"sha512-adZwVj6/edNowi2RIeyGPTcfdP4EXtMGo0mk2LQogG8m8bZkZRjOQoQ7pkBF0UPMaIAwzCadq2OWj3MPH4DP5A==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\",\n-        \"@mui/x-internals\": \"7.24.1\",\n+        \"@mui/x-internals\": \"7.26.0\",\n         \"@types/react-transition-group\": \"^4.4.11\",\n         \"clsx\": \"^2.1.1\",\n         \"prop-types\": \"^15.8.1\",\n@@ -1969,6 +2071,297 @@\n         \"node\": \">= 8\"\n       }\n     },\n+    \"node_modules/@parcel/watcher\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher/-/watcher-2.5.1.tgz\",\n+      \"integrity\": \"sha512-dfUnCxiN9H4ap84DvD2ubjw+3vUNpstxa0TneY/Paat8a3R4uQZDLSvWjmznAY/DoahqTHl9V46HF/Zs3F29pg==\",\n+      \"hasInstallScript\": true,\n+      \"optional\": true,\n+      \"dependencies\": {\n+        \"detect-libc\": \"^1.0.3\",\n+        \"is-glob\": \"^4.0.3\",\n+        \"micromatch\": \"^4.0.5\",\n+        \"node-addon-api\": \"^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      },\n+      \"optionalDependencies\": {\n+        \"@parcel/watcher-android-arm64\": \"2.5.1\",\n+        \"@parcel/watcher-darwin-arm64\": \"2.5.1\",\n+        \"@parcel/watcher-darwin-x64\": \"2.5.1\",\n+        \"@parcel/watcher-freebsd-x64\": \"2.5.1\",\n+        \"@parcel/watcher-linux-arm-glibc\": \"2.5.1\",\n+        \"@parcel/watcher-linux-arm-musl\": \"2.5.1\",\n+        \"@parcel/watcher-linux-arm64-glibc\": \"2.5.1\",\n+        \"@parcel/watcher-linux-arm64-musl\": \"2.5.1\",\n+        \"@parcel/watcher-linux-x64-glibc\": \"2.5.1\",\n+        \"@parcel/watcher-linux-x64-musl\": \"2.5.1\",\n+        \"@parcel/watcher-win32-arm64\": \"2.5.1\",\n+        \"@parcel/watcher-win32-ia32\": \"2.5.1\",\n+        \"@parcel/watcher-win32-x64\": \"2.5.1\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-android-arm64\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-android-arm64/-/watcher-android-arm64-2.5.1.tgz\",\n+      \"integrity\": \"sha512-KF8+j9nNbUN8vzOFDpRMsaKBHZ/mcjEjMToVMJOhTozkDonQFFrRcfdLWn6yWKCmJKmdVxSgHiYvTCef4/qcBA==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"android\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-darwin-arm64\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-darwin-arm64/-/watcher-darwin-arm64-2.5.1.tgz\",\n+      \"integrity\": \"sha512-eAzPv5osDmZyBhou8PoF4i6RQXAfeKL9tjb3QzYuccXFMQU0ruIc/POh30ePnaOyD1UXdlKguHBmsTs53tVoPw==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-darwin-x64\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-darwin-x64/-/watcher-darwin-x64-2.5.1.tgz\",\n+      \"integrity\": \"sha512-1ZXDthrnNmwv10A0/3AJNZ9JGlzrF82i3gNQcWOzd7nJ8aj+ILyW1MTxVk35Db0u91oD5Nlk9MBiujMlwmeXZg==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-freebsd-x64\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-freebsd-x64/-/watcher-freebsd-x64-2.5.1.tgz\",\n+      \"integrity\": \"sha512-SI4eljM7Flp9yPuKi8W0ird8TI/JK6CSxju3NojVI6BjHsTyK7zxA9urjVjEKJ5MBYC+bLmMcbAWlZ+rFkLpJQ==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"freebsd\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-linux-arm-glibc\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm-glibc/-/watcher-linux-arm-glibc-2.5.1.tgz\",\n+      \"integrity\": \"sha512-RCdZlEyTs8geyBkkcnPWvtXLY44BCeZKmGYRtSgtwwnHR4dxfHRG3gR99XdMEdQ7KeiDdasJwwvNSF5jKtDwdA==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-linux-arm-musl\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm-musl/-/watcher-linux-arm-musl-2.5.1.tgz\",\n+      \"integrity\": \"sha512-6E+m/Mm1t1yhB8X412stiKFG3XykmgdIOqhjWj+VL8oHkKABfu/gjFj8DvLrYVHSBNC+/u5PeNrujiSQ1zwd1Q==\",\n+      \"cpu\": [\n+        \"arm\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-linux-arm64-glibc\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm64-glibc/-/watcher-linux-arm64-glibc-2.5.1.tgz\",\n+      \"integrity\": \"sha512-LrGp+f02yU3BN9A+DGuY3v3bmnFUggAITBGriZHUREfNEzZh/GO06FF5u2kx8x+GBEUYfyTGamol4j3m9ANe8w==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-linux-arm64-musl\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm64-musl/-/watcher-linux-arm64-musl-2.5.1.tgz\",\n+      \"integrity\": \"sha512-cFOjABi92pMYRXS7AcQv9/M1YuKRw8SZniCDw0ssQb/noPkRzA+HBDkwmyOJYp5wXcsTrhxO0zq1U11cK9jsFg==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-linux-x64-glibc\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-x64-glibc/-/watcher-linux-x64-glibc-2.5.1.tgz\",\n+      \"integrity\": \"sha512-GcESn8NZySmfwlTsIur+49yDqSny2IhPeZfXunQi48DMugKeZ7uy1FX83pO0X22sHntJ4Ub+9k34XQCX+oHt2A==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-linux-x64-musl\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-x64-musl/-/watcher-linux-x64-musl-2.5.1.tgz\",\n+      \"integrity\": \"sha512-n0E2EQbatQ3bXhcH2D1XIAANAcTZkQICBPVaxMeaCVBtOpBZpWJuf7LwyWPSBDITb7In8mqQgJ7gH8CILCURXg==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"linux\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-win32-arm64\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-arm64/-/watcher-win32-arm64-2.5.1.tgz\",\n+      \"integrity\": \"sha512-RFzklRvmc3PkjKjry3hLF9wD7ppR4AKcWNzH7kXR7GUe0Igb3Nz8fyPwtZCSquGrhU5HhUNDr/mKBqj7tqA2Vw==\",\n+      \"cpu\": [\n+        \"arm64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-win32-ia32\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-ia32/-/watcher-win32-ia32-2.5.1.tgz\",\n+      \"integrity\": \"sha512-c2KkcVN+NJmuA7CGlaGD1qJh1cLfDnQsHjE89E60vUEMlqduHGCdCLJCID5geFVM0dOtA3ZiIO8BoEQmzQVfpQ==\",\n+      \"cpu\": [\n+        \"ia32\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@parcel/watcher-win32-x64\": {\n+      \"version\": \"2.5.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-x64/-/watcher-win32-x64-2.5.1.tgz\",\n+      \"integrity\": \"sha512-9lHBdJITeNR++EvSQVUcaZoWupyHfXe1jZvGZ06O/5MflPcuPLtEphScIBL+AiCWBO46tDSHzWyD0uDmmZqsgA==\",\n+      \"cpu\": [\n+        \"x64\"\n+      ],\n+      \"optional\": true,\n+      \"os\": [\n+        \"win32\"\n+      ],\n+      \"engines\": {\n+        \"node\": \">= 10.0.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"opencollective\",\n+        \"url\": \"https://opencollective.com/parcel\"\n+      }\n+    },\n+    \"node_modules/@pkgjs/parseargs\": {\n+      \"version\": \"0.11.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n+      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n+      \"optional\": true,\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      }\n+    },\n     \"node_modules/@plotly/d3\": {\n       \"version\": \"3.8.2\",\n       \"resolved\": \"https://registry.npmjs.org/@plotly/d3/-/d3-3.8.2.tgz\",\n@@ -2054,19 +2447,19 @@\n       }\n     },\n     \"node_modules/@shikijs/engine-oniguruma\": {\n-      \"version\": \"1.29.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@shikijs/engine-oniguruma/-/engine-oniguruma-1.29.1.tgz\",\n-      \"integrity\": \"sha512-gSt2WhLNgEeLstcweQOSp+C+MhOpTsgdNXRqr3zP6M+BUBZ8Md9OU2BYwUYsALBxHza7hwaIWtFHjQ/aOOychw==\",\n+      \"version\": \"1.29.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@shikijs/engine-oniguruma/-/engine-oniguruma-1.29.2.tgz\",\n+      \"integrity\": \"sha512-7iiOx3SG8+g1MnlzZVDYiaeHe7Ez2Kf2HrJzdmGwkRisT7r4rak0e655AcM/tF9JG/kg5fMNYlLLKglbN7gBqA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@shikijs/types\": \"1.29.1\",\n+        \"@shikijs/types\": \"1.29.2\",\n         \"@shikijs/vscode-textmate\": \"^10.0.1\"\n       }\n     },\n     \"node_modules/@shikijs/types\": {\n-      \"version\": \"1.29.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@shikijs/types/-/types-1.29.1.tgz\",\n-      \"integrity\": \"sha512-aBqAuhYRp5vSir3Pc9+QPu9WESBOjUo03ao0IHLC4TyTioSsp/SkbAZSrIH4ghYYC1T1KTEpRSBa83bas4RnPA==\",\n+      \"version\": \"1.29.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@shikijs/types/-/types-1.29.2.tgz\",\n+      \"integrity\": \"sha512-VJjK0eIijTZf0QSTODEXCqinjBn0joAHQ+aPSBzrv4O2d/QSbsMw+ZeSRx03kV34Hy7NzUvV/7NqfYGRLrASmw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@shikijs/vscode-textmate\": \"^10.0.1\",\n@@ -2410,6 +2803,12 @@\n         \"@types/estree\": \"*\"\n       }\n     },\n+    \"node_modules/@types/gensync\": {\n+      \"version\": \"1.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/gensync/-/gensync-1.0.4.tgz\",\n+      \"integrity\": \"sha512-C3YYeRQWp2fmq9OryX+FoDy8nXS6scQ7dPptD8LnFDAUNcKWJjXQKDNJD3HVm+kOUsXhTOkpi69vI4EuAr95bA==\",\n+      \"dev\": true\n+    },\n     \"node_modules/@types/geojson\": {\n       \"version\": \"7946.0.16\",\n       \"resolved\": \"https://registry.npmjs.org/@types/geojson/-/geojson-7946.0.16.tgz\",\n@@ -2534,6 +2933,11 @@\n       \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz\",\n       \"integrity\": \"sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==\"\n     },\n+    \"node_modules/@types/less\": {\n+      \"version\": \"3.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/less/-/less-3.0.8.tgz\",\n+      \"integrity\": \"sha512-Gjm4+H9noDJgu5EdT3rUw5MhPBag46fiOy27BefvWkNL8mlZnKnCaVVVTLKj6RYXed9b62CPKnPav9govyQDzA==\"\n+    },\n     \"node_modules/@types/lodash\": {\n       \"version\": \"4.17.15\",\n       \"resolved\": \"https://registry.npmjs.org/@types/lodash/-/lodash-4.17.15.tgz\",\n@@ -2569,9 +2973,9 @@\n       \"integrity\": \"sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==\"\n     },\n     \"node_modules/@types/node\": {\n-      \"version\": \"20.17.16\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.17.16.tgz\",\n-      \"integrity\": \"sha512-vOTpLduLkZXePLxHiHsBLp98mHGnl8RptV4YAO3HfKO5UHjDvySGbxKtpYfy8Sx5+WKcgc45qNreJJRVM3L6mw==\",\n+      \"version\": \"20.17.18\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.17.18.tgz\",\n+      \"integrity\": \"sha512-9kS0opXVV3dJ+C7HPhXfDlOdMu4cjJSZhlSxlDK39IxVRxBbuiYjCkLYSO9d5UYqTd4DApxRK9T1xJiTAkfA0w==\",\n       \"dependencies\": {\n         \"undici-types\": \"~6.19.2\"\n       }\n@@ -2671,6 +3075,15 @@\n         \"@types/react-window\": \"*\"\n       }\n     },\n+    \"node_modules/@types/sass\": {\n+      \"version\": \"1.45.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/sass/-/sass-1.45.0.tgz\",\n+      \"integrity\": \"sha512-jn7qwGFmJHwUSphV8zZneO3GmtlgLsmhs/LQyVvQbIIa+fzGMUiHI4HXJZL3FT8MJmgXWbLGiVVY7ElvHq6vDA==\",\n+      \"deprecated\": \"This is a stub types definition. sass provides its own type definitions, so you do not need this installed.\",\n+      \"dependencies\": {\n+        \"sass\": \"*\"\n+      }\n+    },\n     \"node_modules/@types/sprintf-js\": {\n       \"version\": \"1.1.4\",\n       \"resolved\": \"https://registry.npmjs.org/@types/sprintf-js/-/sprintf-js-1.1.4.tgz\",\n@@ -2683,6 +3096,14 @@\n       \"integrity\": \"sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==\",\n       \"dev\": true\n     },\n+    \"node_modules/@types/stylus\": {\n+      \"version\": \"0.48.43\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/stylus/-/stylus-0.48.43.tgz\",\n+      \"integrity\": \"sha512-72dv/zdhuyXWVHUXG2VTPEQdOG+oen95/DNFx2aMFFaY6LoITI6PwEqf5x31JF49kp2w9hvUzkNfTGBIeg61LQ==\",\n+      \"dependencies\": {\n+        \"@types/node\": \"*\"\n+      }\n+    },\n     \"node_modules/@types/supercluster\": {\n       \"version\": \"7.1.3\",\n       \"resolved\": \"https://registry.npmjs.org/@types/supercluster/-/supercluster-7.1.3.tgz\",\n@@ -2718,20 +3139,20 @@\n       \"dev\": true\n     },\n     \"node_modules/@typescript-eslint/eslint-plugin\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.22.0.tgz\",\n-      \"integrity\": \"sha512-4Uta6REnz/xEJMvwf72wdUnC3rr4jAQf5jnTkeRQ9b6soxLxhDEbS/pfMPoJLDfFPNVRdryqWUIV/2GZzDJFZw==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.24.0.tgz\",\n+      \"integrity\": \"sha512-aFcXEJJCI4gUdXgoo/j9udUYIHgF23MFkg09LFz2dzEmU0+1Plk4rQWv/IYKvPHAtlkkGoB3m5e6oUp+JPsNaQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/regexpp\": \"^4.10.0\",\n-        \"@typescript-eslint/scope-manager\": \"8.22.0\",\n-        \"@typescript-eslint/type-utils\": \"8.22.0\",\n-        \"@typescript-eslint/utils\": \"8.22.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.22.0\",\n+        \"@typescript-eslint/scope-manager\": \"8.24.0\",\n+        \"@typescript-eslint/type-utils\": \"8.24.0\",\n+        \"@typescript-eslint/utils\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\",\n         \"graphemer\": \"^1.4.0\",\n         \"ignore\": \"^5.3.1\",\n         \"natural-compare\": \"^1.4.0\",\n-        \"ts-api-utils\": \"^2.0.0\"\n+        \"ts-api-utils\": \"^2.0.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2747,15 +3168,15 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/parser\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.22.0.tgz\",\n-      \"integrity\": \"sha512-MqtmbdNEdoNxTPzpWiWnqNac54h8JDAmkWtJExBVVnSrSmi9z+sZUt0LfKqk9rjqmKOIeRhO4fHHJ1nQIjduIQ==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.24.0.tgz\",\n+      \"integrity\": \"sha512-MFDaO9CYiard9j9VepMNa9MTcqVvSny2N4hkY6roquzj8pdCBRENhErrteaQuu7Yjn1ppk0v1/ZF9CG3KIlrTA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/scope-manager\": \"8.22.0\",\n-        \"@typescript-eslint/types\": \"8.22.0\",\n-        \"@typescript-eslint/typescript-estree\": \"8.22.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.22.0\",\n+        \"@typescript-eslint/scope-manager\": \"8.24.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/typescript-estree\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\",\n         \"debug\": \"^4.3.4\"\n       },\n       \"engines\": {\n@@ -2771,13 +3192,13 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/scope-manager\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.22.0.tgz\",\n-      \"integrity\": \"sha512-/lwVV0UYgkj7wPSw0o8URy6YI64QmcOdwHuGuxWIYznO6d45ER0wXUbksr9pYdViAofpUCNJx/tAzNukgvaaiQ==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.24.0.tgz\",\n+      \"integrity\": \"sha512-HZIX0UByphEtdVBKaQBgTDdn9z16l4aTUz8e8zPQnyxwHBtf5vtl1L+OhH+m1FGV9DrRmoDuYKqzVrvWDcDozw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.22.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.22.0\"\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2788,15 +3209,15 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/type-utils\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.22.0.tgz\",\n-      \"integrity\": \"sha512-NzE3aB62fDEaGjaAYZE4LH7I1MUwHooQ98Byq0G0y3kkibPJQIXVUspzlFOmOfHhiDLwKzMlWxaNv+/qcZurJA==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.24.0.tgz\",\n+      \"integrity\": \"sha512-8fitJudrnY8aq0F1wMiPM1UUgiXQRJ5i8tFjq9kGfRajU+dbPyOuHbl0qRopLEidy0MwqgTHDt6CnSeXanNIwA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/typescript-estree\": \"8.22.0\",\n-        \"@typescript-eslint/utils\": \"8.22.0\",\n+        \"@typescript-eslint/typescript-estree\": \"8.24.0\",\n+        \"@typescript-eslint/utils\": \"8.24.0\",\n         \"debug\": \"^4.3.4\",\n-        \"ts-api-utils\": \"^2.0.0\"\n+        \"ts-api-utils\": \"^2.0.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2811,9 +3232,9 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/types\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-8.22.0.tgz\",\n-      \"integrity\": \"sha512-0S4M4baNzp612zwpD4YOieP3VowOARgK2EkN/GBn95hpyF8E2fbMT55sRHWBq+Huaqk3b3XK+rxxlM8sPgGM6A==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-8.24.0.tgz\",\n+      \"integrity\": \"sha512-VacJCBTyje7HGAw7xp11q439A+zeGG0p0/p2zsZwpnMzjPB5WteaWqt4g2iysgGFafrqvyLWqq6ZPZAOCoefCw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2824,19 +3245,19 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/typescript-estree\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.22.0.tgz\",\n-      \"integrity\": \"sha512-SJX99NAS2ugGOzpyhMza/tX+zDwjvwAtQFLsBo3GQxiGcvaKlqGBkmZ+Y1IdiSi9h4Q0Lr5ey+Cp9CGWNY/F/w==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.24.0.tgz\",\n+      \"integrity\": \"sha512-ITjYcP0+8kbsvT9bysygfIfb+hBj6koDsu37JZG7xrCiy3fPJyNmfVtaGsgTUSEuTzcvME5YI5uyL5LD1EV5ZQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.22.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.22.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\",\n         \"debug\": \"^4.3.4\",\n         \"fast-glob\": \"^3.3.2\",\n         \"is-glob\": \"^4.0.3\",\n         \"minimatch\": \"^9.0.4\",\n         \"semver\": \"^7.6.0\",\n-        \"ts-api-utils\": \"^2.0.0\"\n+        \"ts-api-utils\": \"^2.0.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2850,15 +3271,15 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/utils\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.22.0.tgz\",\n-      \"integrity\": \"sha512-T8oc1MbF8L+Bk2msAvCUzjxVB2Z2f+vXYfcucE2wOmYs7ZUwco5Ep0fYZw8quNwOiw9K8GYVL+Kgc2pETNTLOg==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.24.0.tgz\",\n+      \"integrity\": \"sha512-07rLuUBElvvEb1ICnafYWr4hk8/U7X9RDCOqd9JcAMtjh/9oRmcfN4yGzbPVirgMR0+HLVHehmu19CWeh7fsmQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/eslint-utils\": \"^4.4.0\",\n-        \"@typescript-eslint/scope-manager\": \"8.22.0\",\n-        \"@typescript-eslint/types\": \"8.22.0\",\n-        \"@typescript-eslint/typescript-estree\": \"8.22.0\"\n+        \"@typescript-eslint/scope-manager\": \"8.24.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/typescript-estree\": \"8.24.0\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2873,12 +3294,12 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/visitor-keys\": {\n-      \"version\": \"8.22.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.22.0.tgz\",\n-      \"integrity\": \"sha512-AWpYAXnUgvLNabGTy3uBylkgZoosva/miNd1I8Bz3SjotmQPbVqhO4Cczo8AsZ44XVErEBPr/CRSgaj8sG7g0w==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.24.0.tgz\",\n+      \"integrity\": \"sha512-kArLq83QxGLbuHrTMoOEWO+l2MwsNS2TGISEdx8xgqpkbytB07XmlQyQdNDrCc1ecSqx0cnmhGvpX+VBwqqSkg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.22.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n         \"eslint-visitor-keys\": \"^4.2.0\"\n       },\n       \"engines\": {\n@@ -3257,7 +3678,6 @@\n       \"version\": \"5.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n       \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n-      \"dev\": true,\n       \"engines\": {\n         \"node\": \">=8\"\n       }\n@@ -3727,8 +4147,7 @@\n     \"node_modules/balanced-match\": {\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n-      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n-      \"dev\": true\n+      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\n     },\n     \"node_modules/base64-arraybuffer\": {\n       \"version\": \"1.0.2\",\n@@ -3739,9 +4158,9 @@\n       }\n     },\n     \"node_modules/better-react-mathjax\": {\n-      \"version\": \"2.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/better-react-mathjax/-/better-react-mathjax-2.0.3.tgz\",\n-      \"integrity\": \"sha512-wfifT8GFOKb1TWm2+E50I6DJpLZ5kLbch283Lu043EJtwSv0XvZDjr4YfR4d2MjAhqP6SH4VjjrKgbX8R00oCQ==\",\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/better-react-mathjax/-/better-react-mathjax-2.1.0.tgz\",\n+      \"integrity\": \"sha512-RrHudli76sgoVu+YtjHTKhCkjO2eH1B7Xje1sa0YPjhKzq2y/GIwOt9+tuel3s2L+mCPmFbYBFLDFfo3pEa8rQ==\",\n       \"dependencies\": {\n         \"mathjax-full\": \"^3.2.2\"\n       },\n@@ -3783,7 +4202,6 @@\n       \"version\": \"2.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n       \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"balanced-match\": \"^1.0.0\"\n       }\n@@ -3792,7 +4210,7 @@\n       \"version\": \"3.0.3\",\n       \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n       \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"dependencies\": {\n         \"fill-range\": \"^7.1.1\"\n       },\n@@ -3876,9 +4294,9 @@\n       }\n     },\n     \"node_modules/call-bind-apply-helpers\": {\n-      \"version\": \"1.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz\",\n-      \"integrity\": \"sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==\",\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n+      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"es-errors\": \"^1.3.0\",\n@@ -3932,9 +4350,9 @@\n       }\n     },\n     \"node_modules/caniuse-lite\": {\n-      \"version\": \"1.0.30001695\",\n-      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001695.tgz\",\n-      \"integrity\": \"sha512-vHyLade6wTgI2u1ec3WQBxv+2BrTERV28UXQu9LO6lZ9pYeMk34vjXFLOxo1A4UBA8XTL4njRQZdno/yYaSmWw==\",\n+      \"version\": \"1.0.30001699\",\n+      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001699.tgz\",\n+      \"integrity\": \"sha512-b+uH5BakXZ9Do9iK+CkDmctUSEqZl+SP056vc5usa0PL+ev5OHw003rZXcnjNDv3L8P5j6rwT6C0BPKSikW08w==\",\n       \"funding\": [\n         {\n           \"type\": \"opencollective\",\n@@ -4041,6 +4459,20 @@\n         \"url\": \"https://github.com/sponsors/wooorm\"\n       }\n     },\n+    \"node_modules/chokidar\": {\n+      \"version\": \"4.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz\",\n+      \"integrity\": \"sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==\",\n+      \"dependencies\": {\n+        \"readdirp\": \"^4.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 14.16.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://paulmillr.com/funding/\"\n+      }\n+    },\n     \"node_modules/chrome-trace-event\": {\n       \"version\": \"1.0.4\",\n       \"resolved\": \"https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.4.tgz\",\n@@ -4065,9 +4497,9 @@\n       }\n     },\n     \"node_modules/cjs-module-lexer\": {\n-      \"version\": \"1.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.1.tgz\",\n-      \"integrity\": \"sha512-cuSVIHi9/9E/+821Qjdvngor+xpnlwnuwIyZOaLmHBVdXL+gP+I6QQB9VkO7RI77YIcTV+S1W9AreJ5eN63JBA==\",\n+      \"version\": \"1.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.3.tgz\",\n+      \"integrity\": \"sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==\",\n       \"dev\": true\n     },\n     \"node_modules/clamp\": {\n@@ -4447,17 +4879,17 @@\n       }\n     },\n     \"node_modules/copy-webpack-plugin/node_modules/globby\": {\n-      \"version\": \"14.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-14.0.2.tgz\",\n-      \"integrity\": \"sha512-s3Fq41ZVh7vbbe2PN3nrW7yC7U7MFVc5c98/iTl9c2GawNMKx/J648KQRW6WKkuU8GIbbh2IXfIRQjOZnXcTnw==\",\n+      \"version\": \"14.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/globby/-/globby-14.1.0.tgz\",\n+      \"integrity\": \"sha512-0Ia46fDOaT7k4og1PDW4YbodWWr3scS2vAr2lTbsplOt2WkKp0vQbkI9wKis/T5LV/dqPjO3bpS/z6GTJB82LA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@sindresorhus/merge-streams\": \"^2.1.0\",\n-        \"fast-glob\": \"^3.3.2\",\n-        \"ignore\": \"^5.2.4\",\n-        \"path-type\": \"^5.0.0\",\n+        \"fast-glob\": \"^3.3.3\",\n+        \"ignore\": \"^7.0.3\",\n+        \"path-type\": \"^6.0.0\",\n         \"slash\": \"^5.1.0\",\n-        \"unicorn-magic\": \"^0.1.0\"\n+        \"unicorn-magic\": \"^0.3.0\"\n       },\n       \"engines\": {\n         \"node\": \">=18\"\n@@ -4466,13 +4898,22 @@\n         \"url\": \"https://github.com/sponsors/sindresorhus\"\n       }\n     },\n+    \"node_modules/copy-webpack-plugin/node_modules/ignore\": {\n+      \"version\": \"7.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-7.0.3.tgz\",\n+      \"integrity\": \"sha512-bAH5jbK/F3T3Jls4I0SO1hmPR0dKU0a7+SY6n1yzRtG54FLO8d6w/nxLFX2Nb7dBu6cCWXPaAME6cYqFUMmuCA==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">= 4\"\n+      }\n+    },\n     \"node_modules/copy-webpack-plugin/node_modules/path-type\": {\n-      \"version\": \"5.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-5.0.0.tgz\",\n-      \"integrity\": \"sha512-5HviZNaZcfqP95rwpv+1HDgUamezbqdSYTyzjTvwtJSnIH+3vnbmWsItli8OFEndS984VT55M3jduxZbX351gg==\",\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-6.0.0.tgz\",\n+      \"integrity\": \"sha512-Vj7sf++t5pBD637NSfkxpHSMfWaeig5+DKWLhcqIYx6mWQz5hdJTGDVMQiJcw1ZYkhs7AazKDGpRVji1LJCZUQ==\",\n       \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=12\"\n+        \"node\": \">=18\"\n       },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/sindresorhus\"\n@@ -4558,7 +4999,6 @@\n       \"version\": \"7.0.6\",\n       \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n       \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"path-key\": \"^3.1.0\",\n         \"shebang-command\": \"^2.0.0\",\n@@ -5075,6 +5515,18 @@\n       \"resolved\": \"https://registry.npmjs.org/detect-kerning/-/detect-kerning-2.1.2.tgz\",\n       \"integrity\": \"sha512-I3JIbrnKPAntNLl1I6TpSQQdQ4AutYzv/sKMFKbepawV/hlH0GmYKhUoOEMd4xqaUHT+Bm0f4127lh5qs1m1tw==\"\n     },\n+    \"node_modules/detect-libc\": {\n+      \"version\": \"1.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz\",\n+      \"integrity\": \"sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==\",\n+      \"optional\": true,\n+      \"bin\": {\n+        \"detect-libc\": \"bin/detect-libc.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10\"\n+      }\n+    },\n     \"node_modules/detect-newline\": {\n       \"version\": \"3.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz\",\n@@ -5342,6 +5794,11 @@\n       \"resolved\": \"https://registry.npmjs.org/earcut/-/earcut-2.2.4.tgz\",\n       \"integrity\": \"sha512-/pjZsA1b4RPHbeWZQn66SWS8nZZWLQQ23oE3Eam7aroEFGEvwKAsJfZ9ytiEMycfzXWpca4FA9QIOehf7PocBQ==\"\n     },\n+    \"node_modules/eastasianwidth\": {\n+      \"version\": \"0.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n+      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\"\n+    },\n     \"node_modules/ejs\": {\n       \"version\": \"3.1.10\",\n       \"resolved\": \"https://registry.npmjs.org/ejs/-/ejs-3.1.10.tgz\",\n@@ -5358,9 +5815,9 @@\n       }\n     },\n     \"node_modules/electron-to-chromium\": {\n-      \"version\": \"1.5.88\",\n-      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.88.tgz\",\n-      \"integrity\": \"sha512-K3C2qf1o+bGzbilTDCTBhTQcMS9KW60yTAaTeeXsfvQuTDDwlokLam/AdqlqcSy9u4UainDgsHV23ksXAOgamw==\"\n+      \"version\": \"1.5.98\",\n+      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.98.tgz\",\n+      \"integrity\": \"sha512-bI/LbtRBxU2GzK7KK5xxFd2y9Lf9XguHooPYbcXWy6wUoT8NMnffsvRhPmSeUHLSDKAEtKuTaEtK4Ms15zkIEA==\"\n     },\n     \"node_modules/element-size\": {\n       \"version\": \"1.1.1\",\n@@ -5458,9 +5915,9 @@\n       }\n     },\n     \"node_modules/enhanced-resolve\": {\n-      \"version\": \"5.18.0\",\n-      \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.0.tgz\",\n-      \"integrity\": \"sha512-0/r0MySGYG8YqlayBZ6MuCfECmHFdJ5qyPh8s8wa5Hnm6SaFLSK1VYCbj+NKp090Nm1caZhD+QTnmxO7esYGyQ==\",\n+      \"version\": \"5.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.1.tgz\",\n+      \"integrity\": \"sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==\",\n       \"dependencies\": {\n         \"graceful-fs\": \"^4.2.4\",\n         \"tapable\": \"^2.2.0\"\n@@ -5656,12 +6113,15 @@\n       }\n     },\n     \"node_modules/es-shim-unscopables\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz\",\n-      \"integrity\": \"sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz\",\n+      \"integrity\": \"sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"hasown\": \"^2.0.0\"\n+        \"hasown\": \"^2.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       }\n     },\n     \"node_modules/es-to-primitive\": {\n@@ -5729,6 +6189,38 @@\n         \"es6-symbol\": \"^3.1.1\"\n       }\n     },\n+    \"node_modules/esbuild-style-plugin\": {\n+      \"version\": \"1.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/esbuild-style-plugin/-/esbuild-style-plugin-1.6.3.tgz\",\n+      \"integrity\": \"sha512-XPEKf4FjLjEVLv/dJH4UxDzXCrFHYpD93DBO8B+izdZARW5b7nNKQbnKv3J+7VDWJbgCU+hzfgIh2AuIZzlmXQ==\",\n+      \"dependencies\": {\n+        \"@types/less\": \"^3.0.3\",\n+        \"@types/sass\": \"^1.43.1\",\n+        \"@types/stylus\": \"^0.48.38\",\n+        \"glob\": \"^10.2.2\",\n+        \"postcss\": \"^8.4.31\",\n+        \"postcss-modules\": \"^6.0.0\"\n+      }\n+    },\n+    \"node_modules/esbuild-style-plugin/node_modules/glob\": {\n+      \"version\": \"10.4.5\",\n+      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.5.tgz\",\n+      \"integrity\": \"sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==\",\n+      \"dependencies\": {\n+        \"foreground-child\": \"^3.1.0\",\n+        \"jackspeak\": \"^3.1.2\",\n+        \"minimatch\": \"^9.0.4\",\n+        \"minipass\": \"^7.1.2\",\n+        \"package-json-from-dist\": \"^1.0.0\",\n+        \"path-scurry\": \"^1.11.1\"\n+      },\n+      \"bin\": {\n+        \"glob\": \"dist/esm/bin.mjs\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n     \"node_modules/escalade\": {\n       \"version\": \"3.2.0\",\n       \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz\",\n@@ -5778,17 +6270,17 @@\n       }\n     },\n     \"node_modules/eslint\": {\n-      \"version\": \"9.19.0\",\n-      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-9.19.0.tgz\",\n-      \"integrity\": \"sha512-ug92j0LepKlbbEv6hD911THhoRHmbdXt2gX+VDABAW/Ir7D3nqKdv5Pf5vtlyY6HQMTEP2skXY43ueqTCWssEA==\",\n+      \"version\": \"9.20.1\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-9.20.1.tgz\",\n+      \"integrity\": \"sha512-m1mM33o6dBUjxl2qb6wv6nGNwCAsns1eKtaQ4l/NPHeTvhiUPbtdfMyktxN4B3fgHIgsYh1VT3V9txblpQHq+g==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/eslint-utils\": \"^4.2.0\",\n         \"@eslint-community/regexpp\": \"^4.12.1\",\n         \"@eslint/config-array\": \"^0.19.0\",\n-        \"@eslint/core\": \"^0.10.0\",\n+        \"@eslint/core\": \"^0.11.0\",\n         \"@eslint/eslintrc\": \"^3.2.0\",\n-        \"@eslint/js\": \"9.19.0\",\n+        \"@eslint/js\": \"9.20.0\",\n         \"@eslint/plugin-kit\": \"^0.2.5\",\n         \"@humanfs/node\": \"^0.16.6\",\n         \"@humanwhocodes/module-importer\": \"^1.0.1\",\n@@ -6319,9 +6811,9 @@\n       }\n     },\n     \"node_modules/fastq\": {\n-      \"version\": \"1.18.0\",\n-      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.18.0.tgz\",\n-      \"integrity\": \"sha512-QKHXPW0hD8g4UET03SdOdunzSouc9N4AuHdsX8XNcTsuz+yYFILVNIX4l9yHABMhiEI9Db0JTTIpu0wB+Y1QQw==\",\n+      \"version\": \"1.19.0\",\n+      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.19.0.tgz\",\n+      \"integrity\": \"sha512-7SFSRCNjBQIZH/xZR3iy5iQYR8aGBE0h3VG6/cwlbrpdciNYBMotQav8c1XI3HjHH+NikUpP53nPdlZSdWmFzA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"reusify\": \"^1.0.4\"\n@@ -6373,7 +6865,7 @@\n       \"version\": \"7.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n       \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"dependencies\": {\n         \"to-regex-range\": \"^5.0.1\"\n       },\n@@ -6490,9 +6982,9 @@\n       }\n     },\n     \"node_modules/for-each\": {\n-      \"version\": \"0.3.4\",\n-      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.4.tgz\",\n-      \"integrity\": \"sha512-kKaIINnFpzW6ffJNDjjyjrk21BkDx38c0xa/klsT8VzLCaMEefv4ZTacrcVR4DmgTeBra++jMDAfS/tS799YDw==\",\n+      \"version\": \"0.3.5\",\n+      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz\",\n+      \"integrity\": \"sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"is-callable\": \"^1.2.7\"\n@@ -6504,6 +6996,32 @@\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n+    \"node_modules/foreground-child\": {\n+      \"version\": \"3.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.0.tgz\",\n+      \"integrity\": \"sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==\",\n+      \"dependencies\": {\n+        \"cross-spawn\": \"^7.0.0\",\n+        \"signal-exit\": \"^4.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/foreground-child/node_modules/signal-exit\": {\n+      \"version\": \"4.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n+      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n+      \"engines\": {\n+        \"node\": \">=14\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n     \"node_modules/form-data\": {\n       \"version\": \"4.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.1.tgz\",\n@@ -6602,6 +7120,14 @@\n       \"integrity\": \"sha512-WVEHXiES7YwjLAjWquC5+IspZM4Pwtx1yHlHTBXHkp38HVjnHJo29PxLniWPSyiB539iDgeAcMNUBStrixx3Jw==\",\n       \"dev\": true\n     },\n+    \"node_modules/generic-names\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/generic-names/-/generic-names-4.0.0.tgz\",\n+      \"integrity\": \"sha512-ySFolZQfw9FoDb3ed9d80Cm9f0+r7qj+HJkWjeD9RBfpxEVTlVhol+gvaQB/78WbwYfbnNh8nWHHBSlg072y6A==\",\n+      \"dependencies\": {\n+        \"loader-utils\": \"^3.2.0\"\n+      }\n+    },\n     \"node_modules/gensync\": {\n       \"version\": \"1.0.0-beta.2\",\n       \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n@@ -7495,10 +8021,15 @@\n         \"node\": \">= 4\"\n       }\n     },\n+    \"node_modules/immutable\": {\n+      \"version\": \"5.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/immutable/-/immutable-5.0.3.tgz\",\n+      \"integrity\": \"sha512-P8IdPQHq3lA1xVeBRi5VPqUm5HDgKnx0Ru51wZz5mjxHr5n3RWhjIpOFU7ybkUxfB+5IToy+OLaHYDBIWsv+uw==\"\n+    },\n     \"node_modules/import-fresh\": {\n-      \"version\": \"3.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n-      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n+      \"version\": \"3.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz\",\n+      \"integrity\": \"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\",\n       \"dependencies\": {\n         \"parent-module\": \"^1.0.0\",\n         \"resolve-from\": \"^4.0.0\"\n@@ -7686,12 +8217,12 @@\n       }\n     },\n     \"node_modules/is-boolean-object\": {\n-      \"version\": \"1.2.1\",\n-      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.1.tgz\",\n-      \"integrity\": \"sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==\",\n+      \"version\": \"1.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz\",\n+      \"integrity\": \"sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bound\": \"^1.0.2\",\n+        \"call-bound\": \"^1.0.3\",\n         \"has-tostringtag\": \"^1.0.2\"\n       },\n       \"engines\": {\n@@ -7778,7 +8309,7 @@\n       \"version\": \"2.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n       \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"engines\": {\n         \"node\": \">=0.10.0\"\n       }\n@@ -7860,7 +8391,7 @@\n       \"version\": \"4.0.3\",\n       \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n       \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"dependencies\": {\n         \"is-extglob\": \"^2.1.1\"\n       },\n@@ -7906,7 +8437,7 @@\n       \"version\": \"7.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n       \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"engines\": {\n         \"node\": \">=0.12.0\"\n       }\n@@ -8089,12 +8620,12 @@\n       }\n     },\n     \"node_modules/is-weakref\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.0.tgz\",\n-      \"integrity\": \"sha512-SXM8Nwyys6nT5WP6pltOwKytLV7FqQ4UiibxVmW+EIosHcmCqkkjViTb5SNssDlkCiEYRP1/pdWUKVvZBmsR2Q==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz\",\n+      \"integrity\": \"sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bound\": \"^1.0.2\"\n+        \"call-bound\": \"^1.0.3\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -8127,8 +8658,7 @@\n     \"node_modules/isexe\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n-      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n-      \"dev\": true\n+      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"\n     },\n     \"node_modules/isobject\": {\n       \"version\": \"3.0.1\",\n@@ -8231,6 +8761,20 @@\n         \"node\": \">= 0.4\"\n       }\n     },\n+    \"node_modules/jackspeak\": {\n+      \"version\": \"3.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz\",\n+      \"integrity\": \"sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==\",\n+      \"dependencies\": {\n+        \"@isaacs/cliui\": \"^8.0.2\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      },\n+      \"optionalDependencies\": {\n+        \"@pkgjs/parseargs\": \"^0.11.0\"\n+      }\n+    },\n     \"node_modules/jake\": {\n       \"version\": \"10.9.2\",\n       \"resolved\": \"https://registry.npmjs.org/jake/-/jake-10.9.2.tgz\",\n@@ -9590,6 +10134,14 @@\n         \"node\": \">=6.11.5\"\n       }\n     },\n+    \"node_modules/loader-utils\": {\n+      \"version\": \"3.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-3.3.1.tgz\",\n+      \"integrity\": \"sha512-FMJTLMXfCLMLfJxcX9PFqX5qD88Z5MRGaZCVzfuqeZSPsyiBzs+pahDQjbIWz2QIzPZz0NX9Zy4FX3lmK6YHIg==\",\n+      \"engines\": {\n+        \"node\": \">= 12.13.0\"\n+      }\n+    },\n     \"node_modules/locate-path\": {\n       \"version\": \"6.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n@@ -10591,7 +11143,7 @@\n       \"version\": \"4.0.8\",\n       \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n       \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"dependencies\": {\n         \"braces\": \"^3.0.3\",\n         \"picomatch\": \"^2.3.1\"\n@@ -10653,7 +11205,6 @@\n       \"version\": \"9.0.5\",\n       \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n       \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"brace-expansion\": \"^2.0.1\"\n       },\n@@ -10672,6 +11223,14 @@\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n+    \"node_modules/minipass\": {\n+      \"version\": \"7.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\",\n+      \"integrity\": \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\",\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.17\"\n+      }\n+    },\n     \"node_modules/mj-context-menu\": {\n       \"version\": \"0.6.1\",\n       \"resolved\": \"https://registry.npmjs.org/mj-context-menu/-/mj-context-menu-0.6.1.tgz\",\n@@ -10814,6 +11373,12 @@\n         \"tslib\": \"^2.0.3\"\n       }\n     },\n+    \"node_modules/node-addon-api\": {\n+      \"version\": \"7.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/node-addon-api/-/node-addon-api-7.1.1.tgz\",\n+      \"integrity\": \"sha512-5m3bsyrjFWE1xf7nz7YXdN4udnVtXK6/Yfgn5qnahL6bCkf2yKt4k3nuTKAtT4r3IG8JNR2ncsIMdZuAzJjHQQ==\",\n+      \"optional\": true\n+    },\n     \"node_modules/node-int64\": {\n       \"version\": \"0.4.0\",\n       \"resolved\": \"https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz\",\n@@ -10927,9 +11492,9 @@\n       }\n     },\n     \"node_modules/object-inspect\": {\n-      \"version\": \"1.13.3\",\n-      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz\",\n-      \"integrity\": \"sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==\",\n+      \"version\": \"1.13.4\",\n+      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n+      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -11113,6 +11678,11 @@\n         \"node\": \">=6\"\n       }\n     },\n+    \"node_modules/package-json-from-dist\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz\",\n+      \"integrity\": \"sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==\"\n+    },\n     \"node_modules/param-case\": {\n       \"version\": \"3.0.4\",\n       \"resolved\": \"https://registry.npmjs.org/param-case/-/param-case-3.0.4.tgz\",\n@@ -11241,7 +11811,6 @@\n       \"version\": \"3.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n       \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n-      \"dev\": true,\n       \"engines\": {\n         \"node\": \">=8\"\n       }\n@@ -11251,6 +11820,26 @@\n       \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n       \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\"\n     },\n+    \"node_modules/path-scurry\": {\n+      \"version\": \"1.11.1\",\n+      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz\",\n+      \"integrity\": \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\",\n+      \"dependencies\": {\n+        \"lru-cache\": \"^10.2.0\",\n+        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=16 || 14 >=14.18\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/isaacs\"\n+      }\n+    },\n+    \"node_modules/path-scurry/node_modules/lru-cache\": {\n+      \"version\": \"10.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz\",\n+      \"integrity\": \"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\"\n+    },\n     \"node_modules/path-type\": {\n       \"version\": \"4.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n@@ -11290,7 +11879,7 @@\n       \"version\": \"2.3.1\",\n       \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n       \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"engines\": {\n         \"node\": \">=8.6\"\n       },\n@@ -11384,9 +11973,9 @@\n       }\n     },\n     \"node_modules/plotly.js\": {\n-      \"version\": \"2.35.3\",\n-      \"resolved\": \"https://registry.npmjs.org/plotly.js/-/plotly.js-2.35.3.tgz\",\n-      \"integrity\": \"sha512-7RaC6FxmCUhpD6H4MpD+QLUu3hCn76I11rotRefrh3m1iDvWqGnVqVk9dSaKmRAhFD3vsNsYea0OxnR1rc2IzQ==\",\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/plotly.js/-/plotly.js-3.0.0.tgz\",\n+      \"integrity\": \"sha512-vo4sClOWEsKBST5gKwzKi3wjMno7lPQpy/LBXNFJowlXeqL/RQN7oi+eU9rOj5+qjXGtqKUv560gnUD+1WL3fQ==\",\n       \"dependencies\": {\n         \"@plotly/d3\": \"3.8.2\",\n         \"@plotly/d3-sankey\": \"0.7.2\",\n@@ -11411,13 +12000,14 @@\n         \"d3-interpolate\": \"^3.0.1\",\n         \"d3-time\": \"^1.1.0\",\n         \"d3-time-format\": \"^2.2.3\",\n+        \"esbuild-style-plugin\": \"^1.6.3\",\n         \"fast-isnumeric\": \"^1.1.4\",\n         \"gl-mat4\": \"^1.2.0\",\n         \"gl-text\": \"^1.4.0\",\n         \"has-hover\": \"^1.0.1\",\n         \"has-passive-events\": \"^1.0.0\",\n         \"is-mobile\": \"^4.0.0\",\n-        \"maplibre-gl\": \"^4.5.2\",\n+        \"maplibre-gl\": \"^4.7.1\",\n         \"mouse-change\": \"^1.4.0\",\n         \"mouse-event-offset\": \"^3.0.2\",\n         \"mouse-wheel\": \"^1.2.0\",\n@@ -11440,6 +12030,9 @@\n         \"topojson-client\": \"^3.1.0\",\n         \"webgl-context\": \"^2.2.0\",\n         \"world-calendars\": \"^1.0.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=18.0.0\"\n       }\n     },\n     \"node_modules/point-in-polygon\": {\n@@ -11453,18 +12046,18 @@\n       \"integrity\": \"sha512-ziHW/02J0XuNuUtmidBc6GXE8YohYydp3DWPWXYsd7O721TjcmN+k6ezjdwkDqep+gnWnFY+yqZHvzElra2oCg==\"\n     },\n     \"node_modules/possible-typed-array-names\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz\",\n-      \"integrity\": \"sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz\",\n+      \"integrity\": \"sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">= 0.4\"\n       }\n     },\n     \"node_modules/postcss\": {\n-      \"version\": \"8.5.1\",\n-      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.5.1.tgz\",\n-      \"integrity\": \"sha512-6oz2beyjc5VMn/KV1pPw8fliQkhBXrVn1Z3TVyqZxU8kZpzEKhBdmCFqI6ZbmGtamQvQGuU1sgPTk8ZrXDD7jQ==\",\n+      \"version\": \"8.5.2\",\n+      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.5.2.tgz\",\n+      \"integrity\": \"sha512-MjOadfU3Ys9KYoX0AdkBlFEF1Vx37uCCeN4ZHnmwm9FfpbsGWMZeBLMmmpY+6Ocqod7mkdZ0DT31OlbsFrLlkA==\",\n       \"funding\": [\n         {\n           \"type\": \"opencollective\",\n@@ -11488,6 +12081,24 @@\n         \"node\": \"^10 || ^12 || >=14\"\n       }\n     },\n+    \"node_modules/postcss-modules\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/postcss-modules/-/postcss-modules-6.0.1.tgz\",\n+      \"integrity\": \"sha512-zyo2sAkVvuZFFy0gc2+4O+xar5dYlaVy/ebO24KT0ftk/iJevSNyPyQellsBLlnccwh7f6V6Y4GvuKRYToNgpQ==\",\n+      \"dependencies\": {\n+        \"generic-names\": \"^4.0.0\",\n+        \"icss-utils\": \"^5.1.0\",\n+        \"lodash.camelcase\": \"^4.3.0\",\n+        \"postcss-modules-extract-imports\": \"^3.1.0\",\n+        \"postcss-modules-local-by-default\": \"^4.0.5\",\n+        \"postcss-modules-scope\": \"^3.2.0\",\n+        \"postcss-modules-values\": \"^4.0.0\",\n+        \"string-hash\": \"^1.1.3\"\n+      },\n+      \"peerDependencies\": {\n+        \"postcss\": \"^8.0.0\"\n+      }\n+    },\n     \"node_modules/postcss-modules-extract-imports\": {\n       \"version\": \"3.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-3.1.0.tgz\",\n@@ -11544,9 +12155,9 @@\n       }\n     },\n     \"node_modules/postcss-selector-parser\": {\n-      \"version\": \"7.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-7.0.0.tgz\",\n-      \"integrity\": \"sha512-9RbEr1Y7FFfptd/1eEdntyjMwLeghW1bHX9GWjXo19vx4ytPQhANltvVxDggzJl7mnWM+dX28kb6cyS/4iQjlQ==\",\n+      \"version\": \"7.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-7.1.0.tgz\",\n+      \"integrity\": \"sha512-8sLjZwK0R+JlxlYcTuVnyT2v+htpdrjDOKuMcOVdYjt52Lh8hWRYpxBPoKx/Zg+bcjc3wx6fmQevMmUztS/ccA==\",\n       \"dependencies\": {\n         \"cssesc\": \"^3.0.0\",\n         \"util-deprecate\": \"^1.0.2\"\n@@ -11848,9 +12459,9 @@\n       \"integrity\": \"sha512-H91OHcwjZsbq3ClIDHMzBShc1rotbfACdWENsmEf0IFvZ3FgGPtdHMcsv45bQ1hAbgdfiA8SnxTKfDS+x/8m2g==\"\n     },\n     \"node_modules/react-jsx-parser\": {\n-      \"version\": \"2.2.2\",\n-      \"resolved\": \"https://registry.npmjs.org/react-jsx-parser/-/react-jsx-parser-2.2.2.tgz\",\n-      \"integrity\": \"sha512-zu86UkvBleUr95j9zBieEAQ7k6DlWCA7GaqE3IHHZP/J0IUfw92xOgrZ8OMBAFQ50dVU2UKo7q12Z3oEOThFfA==\",\n+      \"version\": \"2.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/react-jsx-parser/-/react-jsx-parser-2.3.0.tgz\",\n+      \"integrity\": \"sha512-kCCuiOpvqlzsCIpVqmfqLIs60LUFCjBq3rfZbNPgKKUejghiypO3usiGyJynYS4SMJrdULmHfeYN3vx8NK+DdQ==\",\n       \"dependencies\": {\n         \"acorn\": \"^8.12.1\",\n         \"acorn-jsx\": \"^5.3.2\"\n@@ -11905,9 +12516,9 @@\n       }\n     },\n     \"node_modules/react-router\": {\n-      \"version\": \"7.1.3\",\n-      \"resolved\": \"https://registry.npmjs.org/react-router/-/react-router-7.1.3.tgz\",\n-      \"integrity\": \"sha512-EezYymLY6Guk/zLQ2vRA8WvdUhWFEj5fcE3RfWihhxXBW7+cd1LsIiA3lmx+KCmneAGQuyBv820o44L2+TtkSA==\",\n+      \"version\": \"7.1.5\",\n+      \"resolved\": \"https://registry.npmjs.org/react-router/-/react-router-7.1.5.tgz\",\n+      \"integrity\": \"sha512-8BUF+hZEU4/z/JD201yK6S+UYhsf58bzYIDq2NS1iGpwxSXDu7F+DeGSkIXMFBuHZB21FSiCzEcUb18cQNdRkA==\",\n       \"dependencies\": {\n         \"@types/cookie\": \"^0.6.0\",\n         \"cookie\": \"^1.0.1\",\n@@ -12003,6 +12614,18 @@\n       \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\n       \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\n     },\n+    \"node_modules/readdirp\": {\n+      \"version\": \"4.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-4.1.1.tgz\",\n+      \"integrity\": \"sha512-h80JrZu/MHUZCyHu5ciuoI0+WxsCxzxJTILn6Fs8rxSnFPh+UVHYfeIxK1nVGugMqkfC4vJcBOYbkfkwYK0+gw==\",\n+      \"engines\": {\n+        \"node\": \">= 14.18.0\"\n+      },\n+      \"funding\": {\n+        \"type\": \"individual\",\n+        \"url\": \"https://paulmillr.com/funding/\"\n+      }\n+    },\n     \"node_modules/rechoir\": {\n       \"version\": \"0.8.0\",\n       \"resolved\": \"https://registry.npmjs.org/rechoir/-/rechoir-0.8.0.tgz\",\n@@ -12459,6 +13082,25 @@\n       \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\n       \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\n     },\n+    \"node_modules/sass\": {\n+      \"version\": \"1.84.0\",\n+      \"resolved\": \"https://registry.npmjs.org/sass/-/sass-1.84.0.tgz\",\n+      \"integrity\": \"sha512-XDAbhEPJRxi7H0SxrnOpiXFQoUJHwkR2u3Zc4el+fK/Tt5Hpzw5kkQ59qVDfvdaUq6gCrEZIbySFBM2T9DNKHg==\",\n+      \"dependencies\": {\n+        \"chokidar\": \"^4.0.0\",\n+        \"immutable\": \"^5.0.2\",\n+        \"source-map-js\": \">=0.6.2 <2.0.0\"\n+      },\n+      \"bin\": {\n+        \"sass\": \"sass.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14.0.0\"\n+      },\n+      \"optionalDependencies\": {\n+        \"@parcel/watcher\": \"^2.4.1\"\n+      }\n+    },\n     \"node_modules/sax\": {\n       \"version\": \"1.4.1\",\n       \"resolved\": \"https://registry.npmjs.org/sax/-/sax-1.4.1.tgz\",\n@@ -12534,9 +13176,9 @@\n       \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\"\n     },\n     \"node_modules/semver\": {\n-      \"version\": \"7.6.3\",\n-      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n-      \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n+      \"version\": \"7.7.1\",\n+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.1.tgz\",\n+      \"integrity\": \"sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==\",\n       \"bin\": {\n         \"semver\": \"bin/semver.js\"\n       },\n@@ -12629,7 +13271,6 @@\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n       \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"shebang-regex\": \"^3.0.0\"\n       },\n@@ -12641,7 +13282,6 @@\n       \"version\": \"3.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n       \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n-      \"dev\": true,\n       \"engines\": {\n         \"node\": \">=8\"\n       }\n@@ -12985,6 +13625,11 @@\n         \"node\": \">=0.6.19\"\n       }\n     },\n+    \"node_modules/string-hash\": {\n+      \"version\": \"1.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/string-hash/-/string-hash-1.1.3.tgz\",\n+      \"integrity\": \"sha512-kJUvRUFK49aub+a7T1nNE66EJbZBMnBgoC1UbCZ5n6bsZKBRga4KgBRTMn/pFkeCZSYtNeSyMxPDM0AXWELk2A==\"\n+    },\n     \"node_modules/string-length\": {\n       \"version\": \"4.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/string-length/-/string-length-4.0.2.tgz\",\n@@ -13023,6 +13668,33 @@\n         \"url\": \"https://github.com/sponsors/sindresorhus\"\n       }\n     },\n+    \"node_modules/string-width-cjs\": {\n+      \"name\": \"string-width\",\n+      \"version\": \"4.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n+      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n+      \"dependencies\": {\n+        \"emoji-regex\": \"^8.0.0\",\n+        \"is-fullwidth-code-point\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/string-width-cjs/node_modules/emoji-regex\": {\n+      \"version\": \"8.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n+      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"\n+    },\n+    \"node_modules/string-width-cjs/node_modules/is-fullwidth-code-point\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n+      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n     \"node_modules/string-width/node_modules/ansi-regex\": {\n       \"version\": \"6.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n@@ -13160,7 +13832,18 @@\n       \"version\": \"6.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n       \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n-      \"dev\": true,\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^5.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/strip-ansi-cjs\": {\n+      \"name\": \"strip-ansi\",\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n+      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n       \"dependencies\": {\n         \"ansi-regex\": \"^5.0.1\"\n       },\n@@ -13354,9 +14037,9 @@\n       }\n     },\n     \"node_modules/terser\": {\n-      \"version\": \"5.37.0\",\n-      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.37.0.tgz\",\n-      \"integrity\": \"sha512-B8wRRkmre4ERucLM/uXx4MOV5cbnOlVAqUst+1+iLKPI0dOgFO28f84ptoQt9HEI537PMzfYa/d+GEPKTRXmYA==\",\n+      \"version\": \"5.39.0\",\n+      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.39.0.tgz\",\n+      \"integrity\": \"sha512-LBAhFyLho16harJoWMg/nZsQYgTrg5jXOn2nCYjRUcZZEdE3qa2zb8QEDRUGVZBW4rlazf2fxkg8tztybTaqWw==\",\n       \"dependencies\": {\n         \"@jridgewell/source-map\": \"^0.3.3\",\n         \"acorn\": \"^8.8.2\",\n@@ -13530,7 +14213,7 @@\n       \"version\": \"5.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n       \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n-      \"dev\": true,\n+      \"devOptional\": true,\n       \"dependencies\": {\n         \"is-number\": \"^7.0.0\"\n       },\n@@ -13602,9 +14285,9 @@\n       }\n     },\n     \"node_modules/ts-api-utils\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.0.0.tgz\",\n-      \"integrity\": \"sha512-xCt/TOAc+EOHS1XPnijD3/yzpH6qg2xppZO1YDqGoVsNXfQfzHpOdNuXwrwOU8u4ITXJyDCTyt8w5g1sZv9ynQ==\",\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.0.1.tgz\",\n+      \"integrity\": \"sha512-dnlgjFSVetynI8nzgJ+qF62efpglpWRk8isUEWZGWlJYySCTD6aKvbUDu+zbPeDakk3bg5H4XpitHukgfL1m9w==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=18.12\"\n@@ -13836,9 +14519,9 @@\n       }\n     },\n     \"node_modules/typedoc\": {\n-      \"version\": \"0.27.6\",\n-      \"resolved\": \"https://registry.npmjs.org/typedoc/-/typedoc-0.27.6.tgz\",\n-      \"integrity\": \"sha512-oBFRoh2Px6jFx366db0lLlihcalq/JzyCVp7Vaq1yphL/tbgx2e+bkpkCgJPunaPvPwoTOXSwasfklWHm7GfAw==\",\n+      \"version\": \"0.27.7\",\n+      \"resolved\": \"https://registry.npmjs.org/typedoc/-/typedoc-0.27.7.tgz\",\n+      \"integrity\": \"sha512-K/JaUPX18+61W3VXek1cWC5gwmuLvYTOXJzBvD9W7jFvbPnefRnCHQCEPw7MSNrP/Hj7JJrhZtDDLKdcYm6ucg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@gerrit0/mini-shiki\": \"^1.24.0\",\n@@ -13858,9 +14541,9 @@\n       }\n     },\n     \"node_modules/typedoc-plugin-markdown\": {\n-      \"version\": \"4.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/typedoc-plugin-markdown/-/typedoc-plugin-markdown-4.4.1.tgz\",\n-      \"integrity\": \"sha512-fx23nSCvewI9IR8lzIYtzDphETcgTDuxKcmHKGD4lo36oexC+B1k4NaCOY58Snqb4OlE8OXDAGVcQXYYuLRCNw==\",\n+      \"version\": \"4.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/typedoc-plugin-markdown/-/typedoc-plugin-markdown-4.4.2.tgz\",\n+      \"integrity\": \"sha512-kJVkU2Wd+AXQpyL6DlYXXRrfNrHrEIUgiABWH8Z+2Lz5Sq6an4dQ/hfvP75bbokjNDUskOdFlEEm/0fSVyC7eg==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">= 18\"\n@@ -13932,9 +14615,9 @@\n       \"integrity\": \"sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==\"\n     },\n     \"node_modules/unicorn-magic\": {\n-      \"version\": \"0.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/unicorn-magic/-/unicorn-magic-0.1.0.tgz\",\n-      \"integrity\": \"sha512-lRfVq8fE8gz6QMBuDM6a+LO3IAzTi05H6gCVaUpir2E1Rwpo4ZUog45KpNXKC/Mn3Yb9UDuHumeFTo9iV/D9FQ==\",\n+      \"version\": \"0.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/unicorn-magic/-/unicorn-magic-0.3.0.tgz\",\n+      \"integrity\": \"sha512-+QBBXBCvifc56fsbuxZQ6Sic3wqqc3WWaqxs58gvJrcOuN83HGTCwz3oS5phzU9LthRNE9VrJCFCLUgHeeFnfA==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=18\"\n@@ -14428,7 +15111,6 @@\n       \"version\": \"2.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n       \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"isexe\": \"^2.0.0\"\n       },\n@@ -14576,6 +15258,49 @@\n         \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n       }\n     },\n+    \"node_modules/wrap-ansi-cjs\": {\n+      \"name\": \"wrap-ansi\",\n+      \"version\": \"7.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n+      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^4.0.0\",\n+        \"string-width\": \"^4.1.0\",\n+        \"strip-ansi\": \"^6.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\": {\n+      \"version\": \"8.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n+      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"\n+    },\n+    \"node_modules/wrap-ansi-cjs/node_modules/is-fullwidth-code-point\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n+      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules/wrap-ansi-cjs/node_modules/string-width\": {\n+      \"version\": \"4.2.3\",\n+      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n+      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n+      \"dependencies\": {\n+        \"emoji-regex\": \"^8.0.0\",\n+        \"is-fullwidth-code-point\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n     \"node_modules/wrap-ansi/node_modules/ansi-regex\": {\n       \"version\": \"6.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\ndiff --git a/frontend/taipy-gui/package.json b/frontend/taipy-gui/package.json\nindex bad5cd49e3..20cf42e259 100644\n--- a/frontend/taipy-gui/package.json\n+++ b/frontend/taipy-gui/package.json\n@@ -17,7 +17,7 @@\n     \"lodash\": \"^4.17.21\",\n     \"nanoid\": \"^5.0.7\",\n     \"notistack\": \"^3.0.0\",\n-    \"plotly.js\": \"^2.33.0\",\n+    \"plotly.js\": \"^3.0.0\",\n     \"react\": \"^18.3.1\",\n     \"react-dom\": \"^18.3.1\",\n     \"react-error-boundary\": \"^5.0.0\",\ndiff --git a/frontend/taipy/package-lock.json b/frontend/taipy/package-lock.json\nindex 10c0932f1a..7009e46d6d 100644\n--- a/frontend/taipy/package-lock.json\n+++ b/frontend/taipy/package-lock.json\n@@ -50,13 +50,12 @@\n       }\n     },\n     \"../../taipy/gui/webapp\": {\n-      \"name\": \"taipy-gui\",\n       \"version\": \"4.1.0\"\n     },\n     \"node_modules/@adobe/css-tools\": {\n-      \"version\": \"4.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.1.tgz\",\n-      \"integrity\": \"sha512-12WGKBQzjUAI4ayyF4IAtfw2QR/IDoqk6jTddXDhtYTJF9ASmoE1zst7cVtP0aL/F1jUJL5r+JxKXKEgHNbEUQ==\",\n+      \"version\": \"4.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.2.tgz\",\n+      \"integrity\": \"sha512-baYZExFpsdkBNuvGKTKWCwKH57HRZLVtycZS05WTQNVOiXVSeAki3nU35zlRbToeMW8aHlJfyS+1C4BOv27q0A==\",\n       \"dev\": true\n     },\n     \"node_modules/@ampproject/remapping\": {\n@@ -86,30 +85,31 @@\n       }\n     },\n     \"node_modules/@babel/compat-data\": {\n-      \"version\": \"7.26.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.5.tgz\",\n-      \"integrity\": \"sha512-XvcZi1KWf88RVbF9wn8MN6tYFloU5qX8KjuF3E1PVBmJ9eypXfs4GRiJwLuTZL0iSnJUKn1BFPa5BPZZJyFzPg==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.8.tgz\",\n+      \"integrity\": \"sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n       }\n     },\n     \"node_modules/@babel/core\": {\n-      \"version\": \"7.26.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.26.0.tgz\",\n-      \"integrity\": \"sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.26.8.tgz\",\n+      \"integrity\": \"sha512-l+lkXCHS6tQEc5oUpK28xBOZ6+HwaH7YwoYQbLFiYb4nS2/l1tKnZEtEWkD0GuiYdvArf9qBS0XlQGXzPMsNqQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@ampproject/remapping\": \"^2.2.0\",\n-        \"@babel/code-frame\": \"^7.26.0\",\n-        \"@babel/generator\": \"^7.26.0\",\n-        \"@babel/helper-compilation-targets\": \"^7.25.9\",\n+        \"@babel/code-frame\": \"^7.26.2\",\n+        \"@babel/generator\": \"^7.26.8\",\n+        \"@babel/helper-compilation-targets\": \"^7.26.5\",\n         \"@babel/helper-module-transforms\": \"^7.26.0\",\n-        \"@babel/helpers\": \"^7.26.0\",\n-        \"@babel/parser\": \"^7.26.0\",\n-        \"@babel/template\": \"^7.25.9\",\n-        \"@babel/traverse\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.26.0\",\n+        \"@babel/helpers\": \"^7.26.7\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/template\": \"^7.26.8\",\n+        \"@babel/traverse\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\",\n+        \"@types/gensync\": \"^1.0.0\",\n         \"convert-source-map\": \"^2.0.0\",\n         \"debug\": \"^4.1.0\",\n         \"gensync\": \"^1.0.0-beta.2\",\n@@ -140,12 +140,12 @@\n       }\n     },\n     \"node_modules/@babel/generator\": {\n-      \"version\": \"7.26.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.5.tgz\",\n-      \"integrity\": \"sha512-2caSP6fN9I7HOe6nqhtft7V4g7/V/gfDsC3Ag4W7kEzzvRGKqiv0pu0HogPiZ3KaVSoNDhUws6IJjDjpfmYIXw==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.8.tgz\",\n+      \"integrity\": \"sha512-ef383X5++iZHWAXX0SXQR6ZyQhw/0KtTkrTz61WXRhFM6dhpHulO/RJz79L8S6ugZHJkOOkUrUdxgdF2YiPFnA==\",\n       \"dependencies\": {\n-        \"@babel/parser\": \"^7.26.5\",\n-        \"@babel/types\": \"^7.26.5\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\",\n         \"@jridgewell/gen-mapping\": \"^0.3.5\",\n         \"@jridgewell/trace-mapping\": \"^0.3.25\",\n         \"jsesc\": \"^3.0.2\"\n@@ -243,24 +243,24 @@\n       }\n     },\n     \"node_modules/@babel/helpers\": {\n-      \"version\": \"7.26.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.0.tgz\",\n-      \"integrity\": \"sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==\",\n+      \"version\": \"7.26.7\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.7.tgz\",\n+      \"integrity\": \"sha512-8NHiL98vsi0mbPQmYAGWwfcFaOy4j2HY49fXJCfuDcdE7fMIsH9a7GdaeXpIBsbT7307WU8KCMp5pUVDNL4f9A==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@babel/template\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.26.0\"\n+        \"@babel/types\": \"^7.26.7\"\n       },\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n       }\n     },\n     \"node_modules/@babel/parser\": {\n-      \"version\": \"7.26.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.5.tgz\",\n-      \"integrity\": \"sha512-SRJ4jYmXRqV1/Xc+TIVG84WjHBXKlxO9sHQnA2Pf12QQEAp1LOh6kDzNHXcUnbH1QI0FDoPPVOt+vyUDucxpaw==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.8.tgz\",\n+      \"integrity\": \"sha512-TZIQ25pkSoaKEYYaHbbxkfL36GNsQ6iFiBbeuzAkLnXayKR1yP1zFe+NxuZWWsUyvt8icPU9CCq0sgWGXR1GEw==\",\n       \"dependencies\": {\n-        \"@babel/types\": \"^7.26.5\"\n+        \"@babel/types\": \"^7.26.8\"\n       },\n       \"bin\": {\n         \"parser\": \"bin/babel-parser.js\"\n@@ -492,9 +492,9 @@\n       }\n     },\n     \"node_modules/@babel/runtime\": {\n-      \"version\": \"7.26.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.26.0.tgz\",\n-      \"integrity\": \"sha512-FDSOghenHTiToteC/QRlv2q3DhPZ/oOXTBoirfWNx1Cx3TMVcGWQtMMmQcSvb/JjpNeGzx8Pq/b4fKEJuWm1sw==\",\n+      \"version\": \"7.26.7\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.26.7.tgz\",\n+      \"integrity\": \"sha512-AOPI3D+a8dXnja+iwsUqGRjr1BbZIe771sXdapOtYI531gSqpi92vXivKcq2asu/DFpdl1ceFAKZyRzK2PCVcQ==\",\n       \"dependencies\": {\n         \"regenerator-runtime\": \"^0.14.0\"\n       },\n@@ -503,28 +503,28 @@\n       }\n     },\n     \"node_modules/@babel/template\": {\n-      \"version\": \"7.25.9\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.25.9.tgz\",\n-      \"integrity\": \"sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.26.8.tgz\",\n+      \"integrity\": \"sha512-iNKaX3ZebKIsCvJ+0jd6embf+Aulaa3vNBqZ41kM7iTWjx5qzWKXGHiJUW3+nTpQ18SG11hdF8OAzKrpXkb96Q==\",\n       \"dependencies\": {\n-        \"@babel/code-frame\": \"^7.25.9\",\n-        \"@babel/parser\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.25.9\"\n+        \"@babel/code-frame\": \"^7.26.2\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\"\n       },\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n       }\n     },\n     \"node_modules/@babel/traverse\": {\n-      \"version\": \"7.26.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.5.tgz\",\n-      \"integrity\": \"sha512-rkOSPOw+AXbgtwUga3U4u8RpoK9FEFWBNAlTpcnkLFjL5CT+oyHNuUUC/xx6XefEJ16r38r8Bc/lfp6rYuHeJQ==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.8.tgz\",\n+      \"integrity\": \"sha512-nic9tRkjYH0oB2dzr/JoGIm+4Q6SuYeLEiIiZDwBscRMYFJ+tMAz98fuel9ZnbXViA2I0HVSSRRK8DW5fjXStA==\",\n       \"dependencies\": {\n         \"@babel/code-frame\": \"^7.26.2\",\n-        \"@babel/generator\": \"^7.26.5\",\n-        \"@babel/parser\": \"^7.26.5\",\n-        \"@babel/template\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.26.5\",\n+        \"@babel/generator\": \"^7.26.8\",\n+        \"@babel/parser\": \"^7.26.8\",\n+        \"@babel/template\": \"^7.26.8\",\n+        \"@babel/types\": \"^7.26.8\",\n         \"debug\": \"^4.3.1\",\n         \"globals\": \"^11.1.0\"\n       },\n@@ -533,9 +533,9 @@\n       }\n     },\n     \"node_modules/@babel/types\": {\n-      \"version\": \"7.26.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.5.tgz\",\n-      \"integrity\": \"sha512-L6mZmwFDK6Cjh1nRCLXpa6no13ZIioJDz7mdkzHv399pThrTa/k0nUlNaenOeh2kWu/iaOQYElEpKPUswUa9Vg==\",\n+      \"version\": \"7.26.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.8.tgz\",\n+      \"integrity\": \"sha512-eUuWapzEGWFEpHFxgEaBG8e3n6S8L3MSu0oda755rOfabWPnh0Our1AozNFVUxGFIhbKgd1ksprsoDGMinTOTA==\",\n       \"dependencies\": {\n         \"@babel/helper-string-parser\": \"^7.25.9\",\n         \"@babel/helper-validator-identifier\": \"^7.25.9\"\n@@ -720,12 +720,12 @@\n       }\n     },\n     \"node_modules/@eslint/config-array\": {\n-      \"version\": \"0.19.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/config-array/-/config-array-0.19.1.tgz\",\n-      \"integrity\": \"sha512-fo6Mtm5mWyKjA/Chy1BYTdn5mGJoDNjC7C64ug20ADsRDGrA85bN3uK3MaKbeRkRuuIEAR5N33Jr1pbm411/PA==\",\n+      \"version\": \"0.19.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/config-array/-/config-array-0.19.2.tgz\",\n+      \"integrity\": \"sha512-GNKqxfHG2ySmJOBSHg7LxeUx4xpuCoFjacmlCoYWEbaPXLwvfIjixRI12xCQZeULksQb23uiA8F40w5TojpV7w==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@eslint/object-schema\": \"^2.1.5\",\n+        \"@eslint/object-schema\": \"^2.1.6\",\n         \"debug\": \"^4.3.1\",\n         \"minimatch\": \"^3.1.2\"\n       },\n@@ -756,9 +756,9 @@\n       }\n     },\n     \"node_modules/@eslint/core\": {\n-      \"version\": \"0.10.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.10.0.tgz\",\n-      \"integrity\": \"sha512-gFHJ+xBOo4G3WRlR1e/3G8A6/KZAH6zcE/hkLRCZTi/B9avAG365QhFA8uOGzTMqgTghpn7/fSnscW++dpMSAw==\",\n+      \"version\": \"0.11.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.11.0.tgz\",\n+      \"integrity\": \"sha512-DWUB2pksgNEb6Bz2fggIy1wh6fGgZP4Xyy/Mt0QZPiloKKXerbqq9D3SBQTlCRYOrcRPu4vuz+CGjwdfqxnoWA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@types/json-schema\": \"^7.0.15\"\n@@ -825,18 +825,18 @@\n       }\n     },\n     \"node_modules/@eslint/js\": {\n-      \"version\": \"9.18.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-9.18.0.tgz\",\n-      \"integrity\": \"sha512-fK6L7rxcq6/z+AaQMtiFTkvbHkBLNlwyRxHpKawP0x3u9+NC6MQTnFW+AdpwC6gfHTW0051cokQgtTN2FqlxQA==\",\n+      \"version\": \"9.20.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-9.20.0.tgz\",\n+      \"integrity\": \"sha512-iZA07H9io9Wn836aVTytRaNqh00Sad+EamwOVJT12GTLw1VGMFV/4JaME+JjLtr9fiGaoWgYnS54wrfWsSs4oQ==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n       }\n     },\n     \"node_modules/@eslint/object-schema\": {\n-      \"version\": \"2.1.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.5.tgz\",\n-      \"integrity\": \"sha512-o0bhxnL89h5Bae5T318nFoFzGy+YE5i/gGkoPAgkmTVdRKTiv3p8JHevPiPaMwoloKfEiiaHlawCqaZMqRm+XQ==\",\n+      \"version\": \"2.1.6\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz\",\n+      \"integrity\": \"sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -855,6 +855,18 @@\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n       }\n     },\n+    \"node_modules/@eslint/plugin-kit/node_modules/@eslint/core\": {\n+      \"version\": \"0.10.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.10.0.tgz\",\n+      \"integrity\": \"sha512-gFHJ+xBOo4G3WRlR1e/3G8A6/KZAH6zcE/hkLRCZTi/B9avAG365QhFA8uOGzTMqgTghpn7/fSnscW++dpMSAw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"@types/json-schema\": \"^7.0.15\"\n+      },\n+      \"engines\": {\n+        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n+      }\n+    },\n     \"node_modules/@humanfs/core\": {\n       \"version\": \"0.19.1\",\n       \"resolved\": \"https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz\",\n@@ -1434,18 +1446,18 @@\n       \"dev\": true\n     },\n     \"node_modules/@mui/core-downloads-tracker\": {\n-      \"version\": \"6.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-6.3.1.tgz\",\n-      \"integrity\": \"sha512-2OmnEyoHpj5//dJJpMuxOeLItCCHdf99pjMFfUFdBteCunAK9jW+PwEo4mtdGcLs7P+IgZ+85ypd52eY4AigoQ==\",\n+      \"version\": \"6.4.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-6.4.4.tgz\",\n+      \"integrity\": \"sha512-r+J0EditrekkTtO2CnCBCOGpNaDYwJqz8lH4rj6o/anDcskZFJodBlG8aCJkS8DL/CF/9EHS+Gz53EbmYEnQbw==\",\n       \"funding\": {\n         \"type\": \"opencollective\",\n         \"url\": \"https://opencollective.com/mui-org\"\n       }\n     },\n     \"node_modules/@mui/icons-material\": {\n-      \"version\": \"6.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/icons-material/-/icons-material-6.3.1.tgz\",\n-      \"integrity\": \"sha512-nJmWj1PBlwS3t1PnoqcixIsftE+7xrW3Su7f0yrjPw4tVjYrgkhU0hrRp+OlURfZ3ptdSkoBkalee9Bhf1Erfw==\",\n+      \"version\": \"6.4.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/icons-material/-/icons-material-6.4.4.tgz\",\n+      \"integrity\": \"sha512-uF1chGaoFmYdRUomK6f8kgJfWosk9A3HXWiVD0vQm+2mE7f25eTQ1E8RRO11LXpnUBqu8Rbv/uGlpnjT/u1Ksg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\"\n       },\n@@ -1457,7 +1469,7 @@\n         \"url\": \"https://opencollective.com/mui-org\"\n       },\n       \"peerDependencies\": {\n-        \"@mui/material\": \"^6.3.1\",\n+        \"@mui/material\": \"^6.4.4\",\n         \"@types/react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n       },\n@@ -1468,15 +1480,15 @@\n       }\n     },\n     \"node_modules/@mui/material\": {\n-      \"version\": \"6.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/material/-/material-6.3.1.tgz\",\n-      \"integrity\": \"sha512-ynG9ayhxgCsHJ/dtDcT1v78/r2GwQyP3E0hPz3GdPRl0uFJz/uUTtI5KFYwadXmbC+Uv3bfB8laZ6+Cpzh03gA==\",\n+      \"version\": \"6.4.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/material/-/material-6.4.4.tgz\",\n+      \"integrity\": \"sha512-ISVPrIsPQsxnwvS40C4u03AuNSPigFeS2+n1qpuEZ94hDsdMi19dQM2JcC9CHEhXecSIQjP1RTyY0mPiSpSrFQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/core-downloads-tracker\": \"^6.3.1\",\n-        \"@mui/system\": \"^6.3.1\",\n+        \"@mui/core-downloads-tracker\": \"^6.4.4\",\n+        \"@mui/system\": \"^6.4.3\",\n         \"@mui/types\": \"^7.2.21\",\n-        \"@mui/utils\": \"^6.3.1\",\n+        \"@mui/utils\": \"^6.4.3\",\n         \"@popperjs/core\": \"^2.11.8\",\n         \"@types/react-transition-group\": \"^4.4.12\",\n         \"clsx\": \"^2.1.1\",\n@@ -1495,7 +1507,7 @@\n       \"peerDependencies\": {\n         \"@emotion/react\": \"^11.5.0\",\n         \"@emotion/styled\": \"^11.3.0\",\n-        \"@mui/material-pigment-css\": \"^6.3.1\",\n+        \"@mui/material-pigment-css\": \"^6.4.3\",\n         \"@types/react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react-dom\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n@@ -1516,12 +1528,12 @@\n       }\n     },\n     \"node_modules/@mui/private-theming\": {\n-      \"version\": \"6.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/private-theming/-/private-theming-6.3.1.tgz\",\n-      \"integrity\": \"sha512-g0u7hIUkmXmmrmmf5gdDYv9zdAig0KoxhIQn1JN8IVqApzf/AyRhH3uDGx5mSvs8+a1zb4+0W6LC260SyTTtdQ==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/private-theming/-/private-theming-6.4.3.tgz\",\n+      \"integrity\": \"sha512-7x9HaNwDCeoERc4BoEWLieuzKzXu5ZrhRnEM6AUcRXUScQLvF1NFkTlP59+IJfTbEMgcGg1wWHApyoqcksrBpQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/utils\": \"^6.3.1\",\n+        \"@mui/utils\": \"^6.4.3\",\n         \"prop-types\": \"^15.8.1\"\n       },\n       \"engines\": {\n@@ -1542,9 +1554,9 @@\n       }\n     },\n     \"node_modules/@mui/styled-engine\": {\n-      \"version\": \"6.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-6.3.1.tgz\",\n-      \"integrity\": \"sha512-/7CC0d2fIeiUxN5kCCwYu4AWUDd9cCTxWCyo0v/Rnv6s8uk6hWgJC3VLZBoDENBHf/KjqDZuYJ2CR+7hD6QYww==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-6.4.3.tgz\",\n+      \"integrity\": \"sha512-OC402VfK+ra2+f12Gef8maY7Y9n7B6CZcoQ9u7mIkh/7PKwW/xH81xwX+yW+Ak1zBT3HYcVjh2X82k5cKMFGoQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n         \"@emotion/cache\": \"^11.13.5\",\n@@ -1575,15 +1587,15 @@\n       }\n     },\n     \"node_modules/@mui/system\": {\n-      \"version\": \"6.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/system/-/system-6.3.1.tgz\",\n-      \"integrity\": \"sha512-AwqQ3EAIT2np85ki+N15fF0lFXX1iFPqenCzVOSl3QXKy2eifZeGd9dGtt7pGMoFw5dzW4dRGGzRpLAq9rkl7A==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/system/-/system-6.4.3.tgz\",\n+      \"integrity\": \"sha512-Q0iDwnH3+xoxQ0pqVbt8hFdzhq1g2XzzR4Y5pVcICTNtoCLJmpJS3vI4y/OIM1FHFmpfmiEC2IRIq7YcZ8nsmg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/private-theming\": \"^6.3.1\",\n-        \"@mui/styled-engine\": \"^6.3.1\",\n+        \"@mui/private-theming\": \"^6.4.3\",\n+        \"@mui/styled-engine\": \"^6.4.3\",\n         \"@mui/types\": \"^7.2.21\",\n-        \"@mui/utils\": \"^6.3.1\",\n+        \"@mui/utils\": \"^6.4.3\",\n         \"clsx\": \"^2.1.1\",\n         \"csstype\": \"^3.1.3\",\n         \"prop-types\": \"^15.8.1\"\n@@ -1627,9 +1639,9 @@\n       }\n     },\n     \"node_modules/@mui/utils\": {\n-      \"version\": \"6.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/utils/-/utils-6.3.1.tgz\",\n-      \"integrity\": \"sha512-sjGjXAngoio6lniQZKJ5zGfjm+LD2wvLwco7FbKe1fu8A7VIFmz2SwkLb+MDPLNX1lE7IscvNNyh1pobtZg2tw==\",\n+      \"version\": \"6.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/utils/-/utils-6.4.3.tgz\",\n+      \"integrity\": \"sha512-jxHRHh3BqVXE9ABxDm+Tc3wlBooYz/4XPa0+4AI+iF38rV1/+btJmSUgG4shDtSWVs/I97aDn5jBCt6SF2Uq2A==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n         \"@mui/types\": \"^7.2.21\",\n@@ -1656,13 +1668,13 @@\n       }\n     },\n     \"node_modules/@mui/x-date-pickers\": {\n-      \"version\": \"7.23.6\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-date-pickers/-/x-date-pickers-7.23.6.tgz\",\n-      \"integrity\": \"sha512-jt6rEAYLju3NZe3y2S+I5KcTiSHV79FW0jeNUEUTceg1qsPzseHbND66k3zVF0hO3N2oZtLtPywof6vN5Doe+Q==\",\n+      \"version\": \"7.26.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-date-pickers/-/x-date-pickers-7.26.0.tgz\",\n+      \"integrity\": \"sha512-bhSDce1b5MBYYlCdHQJBThe10LGTE3D/u53TDQ41+IRj+iiNCun8jivw3DxKhmoBxlB+hVdkcltpTtIGlPjQZQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\",\n-        \"@mui/x-internals\": \"7.23.6\",\n+        \"@mui/x-internals\": \"7.26.0\",\n         \"@types/react-transition-group\": \"^4.4.11\",\n         \"clsx\": \"^2.1.1\",\n         \"prop-types\": \"^15.8.1\",\n@@ -1721,9 +1733,9 @@\n       }\n     },\n     \"node_modules/@mui/x-internals\": {\n-      \"version\": \"7.23.6\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-internals/-/x-internals-7.23.6.tgz\",\n-      \"integrity\": \"sha512-hT1Pa4PNCnxwiauPbYMC3p4DiEF1x05Iu4C1MtC/jMJ1LtthymLmTuQ6ZQ53/R9FeqK6sYd6A6noR+vNMjp5DA==\",\n+      \"version\": \"7.26.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-internals/-/x-internals-7.26.0.tgz\",\n+      \"integrity\": \"sha512-VxTCYQcZ02d3190pdvys2TDg9pgbvewAVakEopiOgReKAUhLdRlgGJHcOA/eAuGLyK1YIo26A6Ow6ZKlSRLwMg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\"\n@@ -1740,13 +1752,13 @@\n       }\n     },\n     \"node_modules/@mui/x-tree-view\": {\n-      \"version\": \"7.23.6\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-tree-view/-/x-tree-view-7.23.6.tgz\",\n-      \"integrity\": \"sha512-4gXXQtgxNW4aHGtksLJUBkRdK7m7CdV/j2OwemrjdmU0bEOz82ta7X4vQrIsaXXfxatuomaOy+MXOzEv6xbNqA==\",\n+      \"version\": \"7.26.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-tree-view/-/x-tree-view-7.26.0.tgz\",\n+      \"integrity\": \"sha512-adZwVj6/edNowi2RIeyGPTcfdP4EXtMGo0mk2LQogG8m8bZkZRjOQoQ7pkBF0UPMaIAwzCadq2OWj3MPH4DP5A==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\",\n-        \"@mui/x-internals\": \"7.23.6\",\n+        \"@mui/x-internals\": \"7.26.0\",\n         \"@types/react-transition-group\": \"^4.4.11\",\n         \"clsx\": \"^2.1.1\",\n         \"prop-types\": \"^15.8.1\",\n@@ -1978,9 +1990,9 @@\n       \"dev\": true\n     },\n     \"node_modules/@testing-library/react\": {\n-      \"version\": \"16.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@testing-library/react/-/react-16.1.0.tgz\",\n-      \"integrity\": \"sha512-Q2ToPvg0KsVL0ohND9A3zLJWcOXXcO8IDu3fj11KhNt0UlCWyFyvnCIBkd12tidB2lkiVRG8VFqdhcqhqnAQtg==\",\n+      \"version\": \"16.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@testing-library/react/-/react-16.2.0.tgz\",\n+      \"integrity\": \"sha512-2cSskAvA1QNtKc8Y9VJQRv0tm3hLVgxRGDB+KYhIaPQJ1I+RHbhIXcM+zClKXzMes/wshsMVzf4B9vS4IZpqDQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.12.5\"\n@@ -2005,9 +2017,9 @@\n       }\n     },\n     \"node_modules/@testing-library/user-event\": {\n-      \"version\": \"14.5.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@testing-library/user-event/-/user-event-14.5.2.tgz\",\n-      \"integrity\": \"sha512-YAh82Wh4TIrxYLmfGcixwD18oIjyC1pFQC2Y01F2lzV2HTMiYrI0nze0FD0ocB//CKS/7jIUgae+adPqxK5yCQ==\",\n+      \"version\": \"14.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@testing-library/user-event/-/user-event-14.6.1.tgz\",\n+      \"integrity\": \"sha512-vq7fv0rnt+QTXgPxr5Hjc210p6YKq2kmdziLgnsZGgLJ9e6VAShx1pACLuRjd/AS/sr7phAR58OIIpf0LlmQNw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=12\",\n@@ -2117,6 +2129,12 @@\n       \"integrity\": \"sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==\",\n       \"dev\": true\n     },\n+    \"node_modules/@types/gensync\": {\n+      \"version\": \"1.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/gensync/-/gensync-1.0.4.tgz\",\n+      \"integrity\": \"sha512-C3YYeRQWp2fmq9OryX+FoDy8nXS6scQ7dPptD8LnFDAUNcKWJjXQKDNJD3HVm+kOUsXhTOkpi69vI4EuAr95bA==\",\n+      \"dev\": true\n+    },\n     \"node_modules/@types/graceful-fs\": {\n       \"version\": \"4.1.9\",\n       \"resolved\": \"https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.9.tgz\",\n@@ -2219,9 +2237,9 @@\n       \"dev\": true\n     },\n     \"node_modules/@types/node\": {\n-      \"version\": \"22.10.6\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.10.6.tgz\",\n-      \"integrity\": \"sha512-qNiuwC4ZDAUNcY47xgaSuS92cjf8JbSUoaKS77bmLG1rU7MlATVSiw/IlrjtIyyskXBZ8KkNfjK/P5na7rgXbQ==\",\n+      \"version\": \"22.13.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-22.13.2.tgz\",\n+      \"integrity\": \"sha512-Z+r8y3XL9ZpI2EY52YYygAFmo2/oWfNSj4BCpAXE2McAexDk8VcnBMGC9Djn9gTKt4d2T/hhXqmPzo4hfIXtTg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"undici-types\": \"~6.20.0\"\n@@ -2282,20 +2300,20 @@\n       \"dev\": true\n     },\n     \"node_modules/@typescript-eslint/eslint-plugin\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.20.0.tgz\",\n-      \"integrity\": \"sha512-naduuphVw5StFfqp4Gq4WhIBE2gN1GEmMUExpJYknZJdRnc+2gDzB8Z3+5+/Kv33hPQRDGzQO/0opHE72lZZ6A==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.24.0.tgz\",\n+      \"integrity\": \"sha512-aFcXEJJCI4gUdXgoo/j9udUYIHgF23MFkg09LFz2dzEmU0+1Plk4rQWv/IYKvPHAtlkkGoB3m5e6oUp+JPsNaQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/regexpp\": \"^4.10.0\",\n-        \"@typescript-eslint/scope-manager\": \"8.20.0\",\n-        \"@typescript-eslint/type-utils\": \"8.20.0\",\n-        \"@typescript-eslint/utils\": \"8.20.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.20.0\",\n+        \"@typescript-eslint/scope-manager\": \"8.24.0\",\n+        \"@typescript-eslint/type-utils\": \"8.24.0\",\n+        \"@typescript-eslint/utils\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\",\n         \"graphemer\": \"^1.4.0\",\n         \"ignore\": \"^5.3.1\",\n         \"natural-compare\": \"^1.4.0\",\n-        \"ts-api-utils\": \"^2.0.0\"\n+        \"ts-api-utils\": \"^2.0.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2311,15 +2329,15 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/parser\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.20.0.tgz\",\n-      \"integrity\": \"sha512-gKXG7A5HMyjDIedBi6bUrDcun8GIjnI8qOwVLiY3rx6T/sHP/19XLJOnIq/FgQvWLHja5JN/LSE7eklNBr612g==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.24.0.tgz\",\n+      \"integrity\": \"sha512-MFDaO9CYiard9j9VepMNa9MTcqVvSny2N4hkY6roquzj8pdCBRENhErrteaQuu7Yjn1ppk0v1/ZF9CG3KIlrTA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/scope-manager\": \"8.20.0\",\n-        \"@typescript-eslint/types\": \"8.20.0\",\n-        \"@typescript-eslint/typescript-estree\": \"8.20.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.20.0\",\n+        \"@typescript-eslint/scope-manager\": \"8.24.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/typescript-estree\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\",\n         \"debug\": \"^4.3.4\"\n       },\n       \"engines\": {\n@@ -2335,13 +2353,13 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/scope-manager\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.20.0.tgz\",\n-      \"integrity\": \"sha512-J7+VkpeGzhOt3FeG1+SzhiMj9NzGD/M6KoGn9f4dbz3YzK9hvbhVTmLj/HiTp9DazIzJ8B4XcM80LrR9Dm1rJw==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.24.0.tgz\",\n+      \"integrity\": \"sha512-HZIX0UByphEtdVBKaQBgTDdn9z16l4aTUz8e8zPQnyxwHBtf5vtl1L+OhH+m1FGV9DrRmoDuYKqzVrvWDcDozw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.20.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.20.0\"\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2352,15 +2370,15 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/type-utils\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.20.0.tgz\",\n-      \"integrity\": \"sha512-bPC+j71GGvA7rVNAHAtOjbVXbLN5PkwqMvy1cwGeaxUoRQXVuKCebRoLzm+IPW/NtFFpstn1ummSIasD5t60GA==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.24.0.tgz\",\n+      \"integrity\": \"sha512-8fitJudrnY8aq0F1wMiPM1UUgiXQRJ5i8tFjq9kGfRajU+dbPyOuHbl0qRopLEidy0MwqgTHDt6CnSeXanNIwA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/typescript-estree\": \"8.20.0\",\n-        \"@typescript-eslint/utils\": \"8.20.0\",\n+        \"@typescript-eslint/typescript-estree\": \"8.24.0\",\n+        \"@typescript-eslint/utils\": \"8.24.0\",\n         \"debug\": \"^4.3.4\",\n-        \"ts-api-utils\": \"^2.0.0\"\n+        \"ts-api-utils\": \"^2.0.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2375,9 +2393,9 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/types\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-8.20.0.tgz\",\n-      \"integrity\": \"sha512-cqaMiY72CkP+2xZRrFt3ExRBu0WmVitN/rYPZErA80mHjHx/Svgp8yfbzkJmDoQ/whcytOPO9/IZXnOc+wigRA==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-8.24.0.tgz\",\n+      \"integrity\": \"sha512-VacJCBTyje7HGAw7xp11q439A+zeGG0p0/p2zsZwpnMzjPB5WteaWqt4g2iysgGFafrqvyLWqq6ZPZAOCoefCw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2388,19 +2406,19 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/typescript-estree\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.20.0.tgz\",\n-      \"integrity\": \"sha512-Y7ncuy78bJqHI35NwzWol8E0X7XkRVS4K4P4TCyzWkOJih5NDvtoRDW4Ba9YJJoB2igm9yXDdYI/+fkiiAxPzA==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.24.0.tgz\",\n+      \"integrity\": \"sha512-ITjYcP0+8kbsvT9bysygfIfb+hBj6koDsu37JZG7xrCiy3fPJyNmfVtaGsgTUSEuTzcvME5YI5uyL5LD1EV5ZQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.20.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.20.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/visitor-keys\": \"8.24.0\",\n         \"debug\": \"^4.3.4\",\n         \"fast-glob\": \"^3.3.2\",\n         \"is-glob\": \"^4.0.3\",\n         \"minimatch\": \"^9.0.4\",\n         \"semver\": \"^7.6.0\",\n-        \"ts-api-utils\": \"^2.0.0\"\n+        \"ts-api-utils\": \"^2.0.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2414,15 +2432,15 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/utils\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.20.0.tgz\",\n-      \"integrity\": \"sha512-dq70RUw6UK9ei7vxc4KQtBRk7qkHZv447OUZ6RPQMQl71I3NZxQJX/f32Smr+iqWrB02pHKn2yAdHBb0KNrRMA==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.24.0.tgz\",\n+      \"integrity\": \"sha512-07rLuUBElvvEb1ICnafYWr4hk8/U7X9RDCOqd9JcAMtjh/9oRmcfN4yGzbPVirgMR0+HLVHehmu19CWeh7fsmQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/eslint-utils\": \"^4.4.0\",\n-        \"@typescript-eslint/scope-manager\": \"8.20.0\",\n-        \"@typescript-eslint/types\": \"8.20.0\",\n-        \"@typescript-eslint/typescript-estree\": \"8.20.0\"\n+        \"@typescript-eslint/scope-manager\": \"8.24.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n+        \"@typescript-eslint/typescript-estree\": \"8.24.0\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2437,12 +2455,12 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/visitor-keys\": {\n-      \"version\": \"8.20.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.20.0.tgz\",\n-      \"integrity\": \"sha512-v/BpkeeYAsPkKCkR8BDwcno0llhzWVqPOamQrAEMdpZav2Y9OVjd9dwJyBLJWwf335B5DmlifECIkZRJCaGaHA==\",\n+      \"version\": \"8.24.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.24.0.tgz\",\n+      \"integrity\": \"sha512-kArLq83QxGLbuHrTMoOEWO+l2MwsNS2TGISEdx8xgqpkbytB07XmlQyQdNDrCc1ecSqx0cnmhGvpX+VBwqqSkg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.20.0\",\n+        \"@typescript-eslint/types\": \"8.24.0\",\n         \"eslint-visitor-keys\": \"^4.2.0\"\n       },\n       \"engines\": {\n@@ -2995,6 +3013,15 @@\n       \"integrity\": \"sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\",\n       \"dev\": true\n     },\n+    \"node_modules/async-function\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz\",\n+      \"integrity\": \"sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      }\n+    },\n     \"node_modules/asynckit\": {\n       \"version\": \"0.4.0\",\n       \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n@@ -3254,9 +3281,9 @@\n       }\n     },\n     \"node_modules/call-bind-apply-helpers\": {\n-      \"version\": \"1.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz\",\n-      \"integrity\": \"sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==\",\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n+      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"es-errors\": \"^1.3.0\",\n@@ -3300,9 +3327,9 @@\n       }\n     },\n     \"node_modules/caniuse-lite\": {\n-      \"version\": \"1.0.30001692\",\n-      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001692.tgz\",\n-      \"integrity\": \"sha512-A95VKan0kdtrsnMubMKxEKUKImOPSuCpYgxSQBo036P5YYgVIcOYJEgt/txJWqObiRQeISNCfef9nvlQ0vbV7A==\",\n+      \"version\": \"1.0.30001699\",\n+      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001699.tgz\",\n+      \"integrity\": \"sha512-b+uH5BakXZ9Do9iK+CkDmctUSEqZl+SP056vc5usa0PL+ev5OHw003rZXcnjNDv3L8P5j6rwT6C0BPKSikW08w==\",\n       \"dev\": true,\n       \"funding\": [\n         {\n@@ -3375,9 +3402,9 @@\n       }\n     },\n     \"node_modules/cjs-module-lexer\": {\n-      \"version\": \"1.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.1.tgz\",\n-      \"integrity\": \"sha512-cuSVIHi9/9E/+821Qjdvngor+xpnlwnuwIyZOaLmHBVdXL+gP+I6QQB9VkO7RI77YIcTV+S1W9AreJ5eN63JBA==\",\n+      \"version\": \"1.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.3.tgz\",\n+      \"integrity\": \"sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==\",\n       \"dev\": true\n     },\n     \"node_modules/cliui\": {\n@@ -3696,9 +3723,9 @@\n       }\n     },\n     \"node_modules/decimal.js\": {\n-      \"version\": \"10.4.3\",\n-      \"resolved\": \"https://registry.npmjs.org/decimal.js/-/decimal.js-10.4.3.tgz\",\n-      \"integrity\": \"sha512-VBBaLc1MgL5XpzgIP7ny5Z6Nx3UrRkIViUkPUdtl9aya5amy3De1gsUUSB1g3+3sExYNjCAsAznmukyxCb1GRA==\",\n+      \"version\": \"10.5.0\",\n+      \"resolved\": \"https://registry.npmjs.org/decimal.js/-/decimal.js-10.5.0.tgz\",\n+      \"integrity\": \"sha512-8vDa8Qxvr/+d94hSh5P3IJwI5t8/c0KsMp+g8bNw9cY2icONa5aPfvKeieW1WlG0WQYwwhJ7mjui2xtiePQSXw==\",\n       \"dev\": true\n     },\n     \"node_modules/dedent\": {\n@@ -3799,6 +3826,18 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/doctrine\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n+      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"esutils\": \"^2.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.10.0\"\n+      }\n+    },\n     \"node_modules/dom-accessibility-api\": {\n       \"version\": \"0.5.16\",\n       \"resolved\": \"https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.5.16.tgz\",\n@@ -3870,9 +3909,9 @@\n       }\n     },\n     \"node_modules/electron-to-chromium\": {\n-      \"version\": \"1.5.80\",\n-      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.80.tgz\",\n-      \"integrity\": \"sha512-LTrKpW0AqIuHwmlVNV+cjFYTnXtM9K37OGhpe0ZI10ScPSxqVSryZHIY3WnCS5NSYbBODRTZyhRMS2h5FAEqAw==\",\n+      \"version\": \"1.5.98\",\n+      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.98.tgz\",\n+      \"integrity\": \"sha512-bI/LbtRBxU2GzK7KK5xxFd2y9Lf9XguHooPYbcXWy6wUoT8NMnffsvRhPmSeUHLSDKAEtKuTaEtK4Ms15zkIEA==\",\n       \"dev\": true\n     },\n     \"node_modules/emittery\": {\n@@ -3894,9 +3933,9 @@\n       \"dev\": true\n     },\n     \"node_modules/enhanced-resolve\": {\n-      \"version\": \"5.18.0\",\n-      \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.0.tgz\",\n-      \"integrity\": \"sha512-0/r0MySGYG8YqlayBZ6MuCfECmHFdJ5qyPh8s8wa5Hnm6SaFLSK1VYCbj+NKp090Nm1caZhD+QTnmxO7esYGyQ==\",\n+      \"version\": \"5.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.1.tgz\",\n+      \"integrity\": \"sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"graceful-fs\": \"^4.2.4\",\n@@ -4055,9 +4094,9 @@\n       \"dev\": true\n     },\n     \"node_modules/es-object-atoms\": {\n-      \"version\": \"1.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.1.tgz\",\n-      \"integrity\": \"sha512-BPOBuyUF9QIVhuNLhbToCLHP6+0MHwZ7xLBkPPCZqK4JmpJgGnv10035STzzQwFpqdzNFMB3irvDI63IagvDwA==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n+      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"es-errors\": \"^1.3.0\"\n@@ -4082,12 +4121,15 @@\n       }\n     },\n     \"node_modules/es-shim-unscopables\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz\",\n-      \"integrity\": \"sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz\",\n+      \"integrity\": \"sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"hasown\": \"^2.0.0\"\n+        \"hasown\": \"^2.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       }\n     },\n     \"node_modules/es-to-primitive\": {\n@@ -4159,17 +4201,17 @@\n       }\n     },\n     \"node_modules/eslint\": {\n-      \"version\": \"9.18.0\",\n-      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-9.18.0.tgz\",\n-      \"integrity\": \"sha512-+waTfRWQlSbpt3KWE+CjrPPYnbq9kfZIYUqapc0uBXyjTp8aYXZDsUH16m39Ryq3NjAVP4tjuF7KaukeqoCoaA==\",\n+      \"version\": \"9.20.1\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-9.20.1.tgz\",\n+      \"integrity\": \"sha512-m1mM33o6dBUjxl2qb6wv6nGNwCAsns1eKtaQ4l/NPHeTvhiUPbtdfMyktxN4B3fgHIgsYh1VT3V9txblpQHq+g==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/eslint-utils\": \"^4.2.0\",\n         \"@eslint-community/regexpp\": \"^4.12.1\",\n         \"@eslint/config-array\": \"^0.19.0\",\n-        \"@eslint/core\": \"^0.10.0\",\n+        \"@eslint/core\": \"^0.11.0\",\n         \"@eslint/eslintrc\": \"^3.2.0\",\n-        \"@eslint/js\": \"9.18.0\",\n+        \"@eslint/js\": \"9.20.0\",\n         \"@eslint/plugin-kit\": \"^0.2.5\",\n         \"@humanfs/node\": \"^0.16.6\",\n         \"@humanwhocodes/module-importer\": \"^1.0.1\",\n@@ -4271,18 +4313,6 @@\n         \"concat-map\": \"0.0.1\"\n       }\n     },\n-    \"node_modules/eslint-plugin-react/node_modules/doctrine\": {\n-      \"version\": \"2.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz\",\n-      \"integrity\": \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"esutils\": \"^2.0.2\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=0.10.0\"\n-      }\n-    },\n     \"node_modules/eslint-plugin-react/node_modules/minimatch\": {\n       \"version\": \"3.1.2\",\n       \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n@@ -4604,9 +4634,9 @@\n       \"dev\": true\n     },\n     \"node_modules/fast-uri\": {\n-      \"version\": \"3.0.5\",\n-      \"resolved\": \"https://registry.npmjs.org/fast-uri/-/fast-uri-3.0.5.tgz\",\n-      \"integrity\": \"sha512-5JnBCWpFlMo0a3ciDy/JckMzzv1U9coZrIhedq+HXxxUfDTAiS0LA8OKVao4G9BxmCVck/jtA5r3KAtRWEyD8Q==\",\n+      \"version\": \"3.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/fast-uri/-/fast-uri-3.0.6.tgz\",\n+      \"integrity\": \"sha512-Atfo14OibSv5wAp4VWNsFYE1AchQRTv9cBGWET4pZWHzYshFSS9NQI6I57rdKn9croWVMbYFbLhJ+yJvmZIIHw==\",\n       \"dev\": true,\n       \"funding\": [\n         {\n@@ -4629,9 +4659,9 @@\n       }\n     },\n     \"node_modules/fastq\": {\n-      \"version\": \"1.18.0\",\n-      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.18.0.tgz\",\n-      \"integrity\": \"sha512-QKHXPW0hD8g4UET03SdOdunzSouc9N4AuHdsX8XNcTsuz+yYFILVNIX4l9yHABMhiEI9Db0JTTIpu0wB+Y1QQw==\",\n+      \"version\": \"1.19.0\",\n+      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.19.0.tgz\",\n+      \"integrity\": \"sha512-7SFSRCNjBQIZH/xZR3iy5iQYR8aGBE0h3VG6/cwlbrpdciNYBMotQav8c1XI3HjHH+NikUpP53nPdlZSdWmFzA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"reusify\": \"^1.0.4\"\n@@ -4741,12 +4771,18 @@\n       \"dev\": true\n     },\n     \"node_modules/for-each\": {\n-      \"version\": \"0.3.3\",\n-      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz\",\n-      \"integrity\": \"sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==\",\n+      \"version\": \"0.3.5\",\n+      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz\",\n+      \"integrity\": \"sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"is-callable\": \"^1.1.3\"\n+        \"is-callable\": \"^1.2.7\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n     \"node_modules/form-data\": {\n@@ -5234,9 +5270,9 @@\n       }\n     },\n     \"node_modules/import-fresh\": {\n-      \"version\": \"3.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n-      \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n+      \"version\": \"3.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz\",\n+      \"integrity\": \"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\",\n       \"dependencies\": {\n         \"parent-module\": \"^1.0.0\",\n         \"resolve-from\": \"^4.0.0\"\n@@ -5348,11 +5384,12 @@\n       \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\"\n     },\n     \"node_modules/is-async-function\": {\n-      \"version\": \"2.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.0.tgz\",\n-      \"integrity\": \"sha512-GExz9MtyhlZyXYLxzlJRj5WUCE661zhDa1Yna52CN57AJsymh+DvXXjyveSioqSRdxvUrdKdvqB1b5cVKsNpWQ==\",\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz\",\n+      \"integrity\": \"sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n+        \"async-function\": \"^1.0.0\",\n         \"call-bound\": \"^1.0.3\",\n         \"get-proto\": \"^1.0.1\",\n         \"has-tostringtag\": \"^1.0.2\",\n@@ -5381,12 +5418,12 @@\n       }\n     },\n     \"node_modules/is-boolean-object\": {\n-      \"version\": \"1.2.1\",\n-      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.1.tgz\",\n-      \"integrity\": \"sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==\",\n+      \"version\": \"1.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz\",\n+      \"integrity\": \"sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bound\": \"^1.0.2\",\n+        \"call-bound\": \"^1.0.3\",\n         \"has-tostringtag\": \"^1.0.2\"\n       },\n       \"engines\": {\n@@ -5700,12 +5737,12 @@\n       }\n     },\n     \"node_modules/is-weakref\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.0.tgz\",\n-      \"integrity\": \"sha512-SXM8Nwyys6nT5WP6pltOwKytLV7FqQ4UiibxVmW+EIosHcmCqkkjViTb5SNssDlkCiEYRP1/pdWUKVvZBmsR2Q==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz\",\n+      \"integrity\": \"sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bound\": \"^1.0.2\"\n+        \"call-bound\": \"^1.0.3\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7207,9 +7244,9 @@\n       }\n     },\n     \"node_modules/object-inspect\": {\n-      \"version\": \"1.13.3\",\n-      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.3.tgz\",\n-      \"integrity\": \"sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==\",\n+      \"version\": \"1.13.4\",\n+      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n+      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7581,9 +7618,9 @@\n       }\n     },\n     \"node_modules/possible-typed-array-names\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz\",\n-      \"integrity\": \"sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz\",\n+      \"integrity\": \"sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -8124,9 +8161,9 @@\n       \"dev\": true\n     },\n     \"node_modules/semver\": {\n-      \"version\": \"7.6.3\",\n-      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n-      \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n+      \"version\": \"7.7.1\",\n+      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.1.tgz\",\n+      \"integrity\": \"sha512-hlq8tAfn0m/61p4BVRcPzIGr6LKiMwo4VM6dGi6pt4qcRkmNzTcWq6eCEjEh+qXjkMDvPlOFFSGwQjoEa6gyMA==\",\n       \"dev\": true,\n       \"bin\": {\n         \"semver\": \"bin/semver.js\"\n@@ -8592,9 +8629,9 @@\n       }\n     },\n     \"node_modules/terser\": {\n-      \"version\": \"5.37.0\",\n-      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.37.0.tgz\",\n-      \"integrity\": \"sha512-B8wRRkmre4ERucLM/uXx4MOV5cbnOlVAqUst+1+iLKPI0dOgFO28f84ptoQt9HEI537PMzfYa/d+GEPKTRXmYA==\",\n+      \"version\": \"5.39.0\",\n+      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.39.0.tgz\",\n+      \"integrity\": \"sha512-LBAhFyLho16harJoWMg/nZsQYgTrg5jXOn2nCYjRUcZZEdE3qa2zb8QEDRUGVZBW4rlazf2fxkg8tztybTaqWw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@jridgewell/source-map\": \"^0.3.3\",\n@@ -8783,9 +8820,9 @@\n       }\n     },\n     \"node_modules/ts-api-utils\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.0.0.tgz\",\n-      \"integrity\": \"sha512-xCt/TOAc+EOHS1XPnijD3/yzpH6qg2xppZO1YDqGoVsNXfQfzHpOdNuXwrwOU8u4ITXJyDCTyt8w5g1sZv9ynQ==\",\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.0.1.tgz\",\n+      \"integrity\": \"sha512-dnlgjFSVetynI8nzgJ+qF62efpglpWRk8isUEWZGWlJYySCTD6aKvbUDu+zbPeDakk3bg5H4XpitHukgfL1m9w==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=18.12\"\ndiff --git a/frontend/taipy/src/DataNodeViewer.tsx b/frontend/taipy/src/DataNodeViewer.tsx\nindex 4cb85352c4..f1f89efa5e 100644\n--- a/frontend/taipy/src/DataNodeViewer.tsx\n+++ b/frontend/taipy/src/DataNodeViewer.tsx\n@@ -98,7 +98,7 @@ import DataNodeChart from \"./DataNodeChart\";\n import DataNodeTable from \"./DataNodeTable\";\n import { useTheme } from \"@mui/material/styles\";\n \n-const JsonViewer = lazy(() => import(\"@textea/json-viewer\").then(module => ({ default: module.JsonViewer })));\n+const JsonViewer = lazy(() => import(\"@textea/json-viewer\").then((module) => ({ default: module.JsonViewer })));\n \n const editTimestampFormat = \"yyyy/MM/dd HH:mm\";\n \n@@ -389,7 +389,16 @@ const DataNodeViewer = (props: DataNodeViewerProps) => {\n                 );\n             }\n             if (!dn || isNewDn) {\n-                (showData || showProperties || showHistory) && setTabValue(showData ? TabValues.Data : showProperties ? TabValues.Properties: showHistory ? TabValues.History: undefined);\n+                (showData || showProperties || showHistory) &&\n+                    setTabValue(\n+                        showData\n+                            ? TabValues.Data\n+                            : showProperties\n+                            ? TabValues.Properties\n+                            : showHistory\n+                            ? TabValues.History\n+                            : undefined\n+                    );\n             }\n             if (!dn) {\n                 return invalidDatanode;\n@@ -440,7 +449,17 @@ const DataNodeViewer = (props: DataNodeViewerProps) => {\n             return dn;\n         });\n         // eslint-disable-next-line react-hooks/exhaustive-deps\n-    }, [props.dataNode, props.defaultDataNode, showData, showProperties, showHistory, id, dispatch, module, props.onLock]);\n+    }, [\n+        props.dataNode,\n+        props.defaultDataNode,\n+        showData,\n+        showProperties,\n+        showHistory,\n+        id,\n+        dispatch,\n+        module,\n+        props.onLock,\n+    ]);\n \n     // clean lock on unmount\n     useEffect(\n@@ -523,7 +542,10 @@ const DataNodeViewer = (props: DataNodeViewerProps) => {\n \n     // scenarios\n     const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n-    const scenarioUpdateVars = useMemo(() => getUpdateVarNames(updateVars, \"scenario\", \"scenarios\"), [updateVars]);\n+    const scenarioUpdateVars = useMemo(\n+        () => [\"scenario\", \"scenarios\"].map((vn) => getUpdateVar(updateVars, vn)),\n+        [updateVars]\n+    );\n     const showScenarios = useCallback(\n         (e: MouseEvent<HTMLElement>) => {\n             e.stopPropagation();\n@@ -533,7 +555,7 @@ const DataNodeViewer = (props: DataNodeViewerProps) => {\n                     createRequestUpdateAction(\n                         id,\n                         module,\n-                        scenarioUpdateVars,\n+                        scenarioUpdateVars.filter((v) => v) as string[],\n                         true,\n                         ownerIdVar ? { [ownerIdVar]: dnOwnerId } : undefined\n                     )\ndiff --git a/taipy/gui/_renderers/builder.py b/taipy/gui/_renderers/builder.py\nindex 6f8568b0c7..805b74d8b5 100644\n--- a/taipy/gui/_renderers/builder.py\n+++ b/taipy/gui/_renderers/builder.py\n@@ -704,7 +704,7 @@ def _get_chart_config(self, default_type: str, default_mode: str):\n         self.__prop_values[\"_default_mode\"] = default_mode\n         rebuild_fn_hash = self.__build_rebuild_fn(\n             self.__gui._get_call_method_name(\"_chart_conf\"),\n-            _CHART_NAMES + (\"_default_type\", \"_default_mode\"),\n+            _CHART_NAMES + (\"_default_type\", \"_default_mode\", \"data\"),\n         )\n         if rebuild_fn_hash:\n             self.__set_react_attribute(\"config\", rebuild_fn_hash)\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] Unexpected error message from a `data_node` control in the console\n### What went wrong? \ud83e\udd14\n\nIf one clicks the 'Show Scenarios' button in the Properties tab of a Data node viewer control, the console shows the trace of an exception:\n`AttributeError: 'types.SimpleNamespace' object has no attribute 'undefined'`\n\nThis has to do with the `CoreSelector` that is used to select the Scenario entity begin fed with and `updateVars` that contains an undefined assignment to `scenarios`, leading to an undefined value because of `scenarioUpdateVars[]` having a single element.\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Unexpected error message from a `data_node` control in the console\n### What went wrong? \ud83e\udd14\n\nIf one clicks the 'Show Scenarios' button in the Properties tab of a Data node viewer control, the console shows the trace of an exception:\n`AttributeError: 'types.SimpleNamespace' object has no attribute 'undefined'`\n\nThis has to do with the `CoreSelector` that is used to select the Scenario entity begin fed with and `updateVars` that contains an undefined assignment to `scenarios`, leading to an undefined value because of `scenarioUpdateVars[]` having a single element.\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "\n", "created_at": "2025-02-13T16:31:44Z"}
{"repo": "Avaiga/taipy", "pull_number": 2432, "instance_id": "Avaiga__taipy-2432", "issue_numbers": ["421"], "base_commit": "4cce531e86a0faf9fbd44e0addbc3668f88815cb", "patch": "diff --git a/taipy/common/config/config.pyi b/taipy/common/config/config.pyi\nindex e484f62cc..d75e28a7c 100644\n--- a/taipy/common/config/config.pyi\n+++ b/taipy/common/config/config.pyi\n@@ -16,6 +16,7 @@ from taipy.common.config._config import _Config\n from taipy.core.common.frequency import Frequency\n from taipy.core.common.scope import Scope\n from taipy.core.config import CoreSection, DataNodeConfig, JobConfig, ScenarioConfig, TaskConfig\n+from taipy.rest.config import RestConfig\n \n from .checker.issue_collector import IssueCollector\n from .common._classproperty import _Classproperty\n@@ -254,6 +255,10 @@ class Config:\n     def core(cls) -> Dict[str, CoreSection]:\n         \"\"\"\"\"\"\n \n+    @_Classproperty\n+    def rest(cls) -> Dict[str, RestConfig]:\n+        \"\"\"\"\"\"\n+\n     @staticmethod\n     def configure_scenario(\n         id: str,\n@@ -1022,3 +1027,27 @@ class Config:\n         Returns:\n             The Core configuration.\n         \"\"\"\n+\n+    @staticmethod\n+    def configure_rest(\n+        port: Optional[int] = None,\n+        host: Optional[str] = None,\n+        use_https: Optional[bool] = None,\n+        ssl_cert: Optional[str] = None,\n+        ssl_key: Optional[str] = None,\n+        **properties\n+    ) -> \"RestConfig\":\n+        \"\"\"Configure the Rest service.\n+\n+        Arguments:\n+            port (Optional[int]): The port on which the REST service will be running\n+            host (Optional[str]): The host on which the REST service will be running\n+            use_https (Optional[bool]): Whether to use HTTPS for the REST service\n+            ssl_cert (Optional[str]): The path to the SSL certificate file\n+            ssl_key (Optional[str]): The path to the SSL key file\n+            **properties (Dict[str, Any]): A keyworded variable length list of additional\n+                arguments configure the behavior of the `Rest^` service.\n+\n+        Returns:\n+            The Rest configuration.\n+        \"\"\"\ndiff --git a/taipy/common/config/stubs/generate_pyi.py b/taipy/common/config/stubs/generate_pyi.py\nindex 6f9ba51b9..7b799c994 100644\n--- a/taipy/common/config/stubs/generate_pyi.py\n+++ b/taipy/common/config/stubs/generate_pyi.py\n@@ -103,25 +103,25 @@ def _build_entity_config_pyi(base_pyi, filename, entity_map) -> str:\n     return base_pyi\n \n \n-def _generate_entity_and_property_maps(filename):\n+def _generate_entity_and_property_maps(filenames):\n     entities_map = {}\n     property_map = {}\n-    entity_tree = _get_file_ast(filename)\n-    functions = [\n-        f for f in ast.walk(entity_tree) if isinstance(f, ast.Call) and getattr(f.func, \"id\", \"\") == \"_inject_section\"\n-    ]\n-\n-    for f in functions:\n-        entity = ast.unparse(f.args[0])\n-        entities_map[entity] = {}\n-        property_map[eval(ast.unparse(f.args[1]))] = entity\n-        # Remove class name from function map\n-        text = ast.unparse(f.args[-1]).replace(f\"{entity}.\", \"\")\n-        matches = re.findall(r\"\\((.*?)\\)\", text)\n-\n-        for m in matches:\n-            v, k = m.replace(\"'\", \"\").split(\",\")\n-            entities_map[entity][k.strip()] = v\n+    for filename in filenames:\n+        etty_tree = _get_file_ast(filename)\n+        functions = [\n+            f for f in ast.walk(etty_tree) if isinstance(f, ast.Call) and getattr(f.func, \"id\", \"\") == \"_inject_section\"\n+        ]\n+        for f in functions:\n+            entity = ast.unparse(f.args[0])\n+            entities_map[entity] = {}\n+            property_map[eval(ast.unparse(f.args[1]))] = entity\n+            # Remove class name from function map\n+            text = ast.unparse(f.args[-1]).replace(f\"{entity}.\", \"\")\n+            matches = re.findall(r\"\\((.*?)\\)\", text)\n+\n+            for m in matches:\n+                v, k = m.replace(\"'\", \"\").split(\",\")\n+                entities_map[entity][k.strip()] = v\n     return entities_map, property_map\n \n \n@@ -142,8 +142,8 @@ def _build_header(filename) -> str:\n \n if __name__ == \"__main__\":\n     header_file = \"taipy/common/config/stubs/pyi_header.py\"\n-    config_init = Path(\"taipy/core/config/__init__.py\")\n     base_config = \"taipy/common/config/config.py\"\n+    config_init = [Path(\"taipy/core/config/__init__.py\"), Path(\"taipy/rest/config/__init__.py\")]\n \n     dn_filename = \"taipy/core/config/data_node_config.py\"\n     job_filename = \"taipy/core/config/job_config.py\"\n@@ -151,6 +151,8 @@ def _build_header(filename) -> str:\n     task_filename = \"taipy/core/config/task_config.py\"\n     core_filename = \"taipy/core/config/core_section.py\"\n \n+    rest_filename = \"taipy/rest/config/rest_config.py\"\n+\n     entities_map, property_map = _generate_entity_and_property_maps(config_init)\n     pyi = _build_header(header_file)\n     pyi = _build_base_config_pyi(base_config, pyi)\n@@ -161,6 +163,8 @@ def _build_header(filename) -> str:\n     pyi = _build_entity_config_pyi(pyi, job_filename, entities_map[\"JobConfig\"])\n     pyi = _build_entity_config_pyi(pyi, core_filename, entities_map[\"CoreSection\"])\n \n+    pyi = _build_entity_config_pyi(pyi, rest_filename, entities_map[\"RestConfig\"])\n+\n     # Remove the final redundant \\n\n     pyi = pyi[:-1]\n \ndiff --git a/taipy/common/config/stubs/pyi_header.py b/taipy/common/config/stubs/pyi_header.py\nindex 2a9848046..1035b88c3 100644\n--- a/taipy/common/config/stubs/pyi_header.py\n+++ b/taipy/common/config/stubs/pyi_header.py\n@@ -16,6 +16,7 @@\n from taipy.core.common.frequency import Frequency\n from taipy.core.common.scope import Scope\n from taipy.core.config import CoreSection, DataNodeConfig, JobConfig, ScenarioConfig, TaskConfig\n+from taipy.rest.config import RestConfig\n \n from .checker.issue_collector import IssueCollector\n from .common._classproperty import _Classproperty\ndiff --git a/taipy/rest/config/__init__.py b/taipy/rest/config/__init__.py\nnew file mode 100644\nindex 000000000..a5b1926a5\n--- /dev/null\n+++ b/taipy/rest/config/__init__.py\n@@ -0,0 +1,26 @@\n+# Copyright 2021-2025 Avaiga Private Limited\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+#        http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+# an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+# specific language governing permissions and limitations under the License.\n+\"\"\"Configuration of the rest service.\"\"\"\n+\n+from taipy.common.config import _inject_section\n+from taipy.common.config.checker._checker import _Checker\n+\n+from .rest_checker import _RestConfigChecker\n+from .rest_config import RestConfig\n+\n+_inject_section(\n+    RestConfig,\n+    \"rest\",\n+    RestConfig.default_config(),\n+    [(\"configure_rest\", RestConfig._configure_rest)]\n+)\n+\n+_Checker.add_checker(_RestConfigChecker)\ndiff --git a/taipy/rest/config/rest_checker.py b/taipy/rest/config/rest_checker.py\nnew file mode 100644\nindex 000000000..c65791077\n--- /dev/null\n+++ b/taipy/rest/config/rest_checker.py\n@@ -0,0 +1,72 @@\n+# Copyright 2021-2025 Avaiga Private Limited\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+#        http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+# an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+# specific language governing permissions and limitations under the License.\n+\n+from typing import cast\n+\n+from taipy.common.config._config import _Config\n+from taipy.common.config.checker._checkers._config_checker import _ConfigChecker\n+from taipy.common.config.checker.issue_collector import IssueCollector\n+\n+from .rest_config import RestConfig\n+\n+\n+class _RestConfigChecker(_ConfigChecker):\n+    def __init__(self, config: _Config, collector: IssueCollector):\n+        super().__init__(config, collector)\n+\n+    def _check(self) -> IssueCollector:\n+        if rest_configs := self._config._unique_sections.get(RestConfig.name):\n+            rest_config = cast(RestConfig, rest_configs)\n+            self._check_port(rest_config)\n+            self._check_host(rest_config)\n+            self._check_https_settings(rest_config)\n+        return self._collector\n+\n+    def _check_port(self, rest_config: RestConfig):\n+        if not isinstance(rest_config.port, int) or not (1 <= rest_config.port <= 65535):\n+            self._error(\n+                \"port\",\n+                rest_config.port,\n+                \"The port of the RestConfig must be an integer between 1 and 65535.\",\n+            )\n+\n+    def _check_host(self, rest_config: RestConfig):\n+        if not isinstance(rest_config.host, str) or not rest_config.host:\n+            self._error(\n+                \"host\", rest_config.host, \"The host of the RestConfig must be a non-empty string.\"\n+            )\n+\n+    def _check_https_settings(self, rest_config: RestConfig):\n+        if rest_config.use_https:\n+            if not rest_config.ssl_cert:\n+                self._error(\n+                    \"ssl_cert\",\n+                    rest_config.ssl_cert,\n+                    \"When HTTPS is enabled in the RestConfig ssl_cert must be set.\",\n+                )\n+            elif not isinstance(rest_config.ssl_cert, str):\n+                self._error(\n+                    \"ssl_cert\",\n+                    rest_config.ssl_cert,\n+                    \"The ssl_cert of the RestConfig must be valid string.\",\n+                )\n+            if not rest_config.ssl_key:\n+                self._error(\n+                    \"ssl_key\",\n+                    rest_config.ssl_key,\n+                    \"When HTTPS is enabled in the RestConfig ssl_key must be set.\",\n+                )\n+            elif not isinstance(rest_config.ssl_key, str):\n+                self._error(\n+                    \"ssl_key\",\n+                    rest_config.ssl_key,\n+                    \"The ssl_key of the RestConfig must be valid string.\",\n+                )\ndiff --git a/taipy/rest/config/rest_config.py b/taipy/rest/config/rest_config.py\nnew file mode 100644\nindex 000000000..195e73f58\n--- /dev/null\n+++ b/taipy/rest/config/rest_config.py\n@@ -0,0 +1,199 @@\n+# Copyright 2021-2025 Avaiga Private Limited\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+#        http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+# an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+# specific language governing permissions and limitations under the License.\n+from copy import copy\n+from typing import Any, Dict, Optional, Tuple\n+\n+from taipy.common.config import UniqueSection\n+from taipy.common.config._config import _Config\n+from taipy.common.config.common._template_handler import _TemplateHandler as _tpl\n+from taipy.common.config.config import Config\n+\n+\n+class RestConfig(UniqueSection):\n+    \"\"\"Configuration parameters for running the `Rest^` service\"\"\"\n+\n+    name: str = \"REST\"\n+\n+    _PORT_KEY: str = \"port\"\n+    _DEFAULT_PORT: int = 5000\n+    _HOST_KEY: str = \"host\"\n+    _DEFAULT_HOST: str = \"127.0.0.1\"\n+    _USE_HTTPS_KEY: str = \"use_https\"\n+    _DEFAULT_USE_HTTPS: bool = False\n+    _SSL_CERT_KEY: str = \"ssl_cert\"\n+    _DEFAULT_SSL_CERT: Optional[str] = None\n+    _SSL_KEY_KEY: str = \"ssl_key\"\n+    _DEFAULT_SSL_KEY: Optional[str] = None\n+\n+    def __init__(\n+        self,\n+        port: Optional[int] = _DEFAULT_PORT,\n+        host: Optional[str] = _DEFAULT_HOST,\n+        use_https: Optional[bool] = _DEFAULT_USE_HTTPS,\n+        ssl_cert: Optional[str] = _DEFAULT_SSL_CERT,\n+        ssl_key: Optional[str] = _DEFAULT_SSL_KEY,\n+        **properties,\n+    ):\n+        self._port = port\n+        self._host = host\n+        self._use_https = use_https\n+        self._ssl_cert = ssl_cert\n+        self._ssl_key = ssl_key\n+        super().__init__(**properties)\n+\n+    def __copy__(self) -> \"RestConfig\":\n+        return RestConfig(\n+            self._port,\n+            self._host,\n+            self._use_https,\n+            self._ssl_cert,\n+            self._ssl_key,\n+            **copy(self._properties),\n+        )\n+\n+    def _clean(self):\n+        self._port = self._DEFAULT_PORT\n+        self._host = self._DEFAULT_HOST\n+        self._use_https = self._DEFAULT_USE_HTTPS\n+        self._ssl_cert = self._DEFAULT_SSL_CERT\n+        self._ssl_key = self._DEFAULT_SSL_KEY\n+        self._properties.clear()\n+\n+    def _update(self, config_as_dict: Dict, default_section=None):\n+        self._port = config_as_dict.pop(self._PORT_KEY, self.port)\n+        self._host = config_as_dict.pop(self._HOST_KEY, self.host)\n+        self._use_https = config_as_dict.pop(self._USE_HTTPS_KEY, self.use_https)\n+        self._ssl_cert = config_as_dict.pop(self._SSL_CERT_KEY, self.ssl_cert)\n+        self._ssl_key = config_as_dict.pop(self._SSL_KEY_KEY, self.ssl_key)\n+        self._properties.update(config_as_dict)\n+\n+    def _to_dict(self):\n+        as_dict = {\n+            key: value\n+            for key, value in {\n+                self._PORT_KEY: self._port,\n+                self._HOST_KEY: self._host,\n+                self._USE_HTTPS_KEY: self._use_https,\n+                self._SSL_CERT_KEY: self._ssl_cert,\n+                self._SSL_KEY_KEY: self._ssl_key\n+            }.items()\n+            if value is not None\n+        }\n+        as_dict.update(self._properties)\n+        return as_dict\n+\n+    @classmethod\n+    def _from_dict(cls, as_dict: Dict[str, Any], id=None, config: Optional[_Config] = None):\n+        port = as_dict.pop(cls._PORT_KEY, None)\n+        host = as_dict.pop(cls._HOST_KEY, None)\n+        use_https = as_dict.pop(cls._USE_HTTPS_KEY, None)\n+        ssl_cert = as_dict.pop(cls._SSL_CERT_KEY, None)\n+        ssl_key = as_dict.pop(cls._SSL_KEY_KEY, None)\n+        return RestConfig(port, host, use_https, ssl_cert, ssl_key, **as_dict)\n+\n+    @classmethod\n+    def default_config(cls) -> \"RestConfig\":\n+        \"\"\"Return a RestConfig with all the default values.\n+\n+        Returns:\n+            The default rest configuration.\n+        \"\"\"\n+        return RestConfig(\n+            cls._DEFAULT_PORT,\n+            cls._DEFAULT_HOST,\n+            cls._DEFAULT_USE_HTTPS,\n+            cls._DEFAULT_SSL_CERT,\n+            cls._DEFAULT_SSL_KEY,\n+        )\n+\n+    @property\n+    def port(self) -> int:\n+        \"\"\"The port on which the REST service will be running\"\"\"\n+        return _tpl._replace_templates(self._port)\n+\n+    @port.setter\n+    def port(self, value: int):\n+        self._port = value\n+\n+    @property\n+    def host(self) -> str:\n+        \"\"\"The host on which the REST service will be running\"\"\"\n+        return _tpl._replace_templates(self._host)\n+\n+    @host.setter\n+    def host(self, value: str):\n+        self._host = value\n+\n+    @property\n+    def use_https(self) -> bool:\n+        \"\"\"Whether to use HTTPS for the REST service\"\"\"\n+        return _tpl._replace_templates(self._use_https)\n+\n+    @use_https.setter\n+    def use_https(self, value: bool):\n+        self._use_https = value\n+\n+    @property\n+    def ssl_cert(self) -> Optional[str]:\n+        \"\"\"The path to the SSL certificate file\"\"\"\n+        return _tpl._replace_templates(self._ssl_cert)\n+\n+    @ssl_cert.setter\n+    def ssl_cert(self, value: Optional[str]):\n+        self._ssl_cert = value\n+\n+    @property\n+    def ssl_key(self) -> Optional[str]:\n+        \"\"\"The path to the SSL key file\"\"\"\n+        return _tpl._replace_templates(self._ssl_key)\n+\n+    @ssl_key.setter\n+    def ssl_key(self, value: Optional[str]):\n+        self._ssl_key = value\n+\n+    @property\n+    def ssl_context(self) -> Optional[Tuple[Optional[str], Optional[str]]]:\n+        \"\"\"The ssl_context as a tuple of the certificate and the key files\"\"\"\n+        return (self.ssl_cert, self.ssl_key) if self.use_https else None\n+\n+    @staticmethod\n+    def _configure_rest(\n+        port: Optional[int] = None,\n+        host: Optional[str] = None,\n+        use_https: Optional[bool] = None,\n+        ssl_cert: Optional[str] = None,\n+        ssl_key: Optional[str] = None,\n+        **properties\n+    ) -> \"RestConfig\":\n+        \"\"\"Configure the Rest service.\n+\n+        Arguments:\n+            port (Optional[int]): The port on which the REST service will be running\n+            host (Optional[str]): The host on which the REST service will be running\n+            use_https (Optional[bool]): Whether to use HTTPS for the REST service\n+            ssl_cert (Optional[str]): The path to the SSL certificate file\n+            ssl_key (Optional[str]): The path to the SSL key file\n+            **properties (Dict[str, Any]): A keyworded variable length list of additional\n+                arguments configure the behavior of the `Rest^` service.\n+\n+        Returns:\n+            The Rest configuration.\n+        \"\"\"\n+        section = RestConfig(\n+            port=port,\n+            host=host,\n+            use_https=use_https,\n+            ssl_cert=ssl_cert,\n+            ssl_key=ssl_key,\n+            **properties\n+        )\n+        Config._register(section)\n+        return Config.unique_sections[RestConfig.name]\ndiff --git a/taipy/rest/rest.py b/taipy/rest/rest.py\nindex def98b195..05484335c 100644\n--- a/taipy/rest/rest.py\n+++ b/taipy/rest/rest.py\n@@ -44,4 +44,12 @@ def run(self, **kwargs):\n         Arguments:\n             **kwargs : Options to provide to the application server.\n         \"\"\"\n+        rest_config = Config.rest\n+        kwargs.update(\n+            {\n+                \"port\": rest_config.port,\n+                \"host\": rest_config.host,\n+                \"ssl_context\": rest_config.ssl_context,\n+            }\n+        )\n         self._app.run(**kwargs)\n", "test_patch": "diff --git a/tests/conftest.py b/tests/conftest.py\nindex 9873b9326..067f57344 100644\n--- a/tests/conftest.py\n+++ b/tests/conftest.py\n@@ -22,6 +22,7 @@\n from taipy.common.config.checker._checker import _Checker\n from taipy.common.config.checker.issue_collector import IssueCollector\n from taipy.core.config import CoreSection, DataNodeConfig, JobConfig, ScenarioConfig, TaskConfig\n+from taipy.rest.config import RestConfig\n \n \n def pytest_addoption(parser: pytest.Parser) -> None:\n@@ -57,6 +58,7 @@ def remove_subparser(name: str) -> None:\n @pytest.fixture\n def clean_argparser() -> t.Callable:\n     \"\"\"Fixture to clean the argument parser.\"\"\"\n+\n     def _clean_argparser() -> None:\n         _TaipyParser._parser = argparse.ArgumentParser(conflict_handler=\"resolve\")\n         _TaipyParser._subparser_action = None\n@@ -71,6 +73,7 @@ def _clean_argparser() -> None:\n @pytest.fixture\n def reset_configuration_singleton() -> t.Callable:\n     \"\"\"Fixture to reset the configuration singleton.\"\"\"\n+\n     def _reset_configuration_singleton() -> None:\n         Config.unblock_update()\n \n@@ -90,6 +93,7 @@ def _reset_configuration_singleton() -> None:\n @pytest.fixture\n def inject_core_sections() -> t.Callable:\n     \"\"\"Fixture to inject core sections into the configuration.\"\"\"\n+\n     def _inject_core_sections() -> None:\n         _inject_section(\n             JobConfig,\n@@ -145,3 +149,17 @@ def _inject_core_sections() -> None:\n         )\n \n     return _inject_core_sections\n+\n+@pytest.fixture\n+def inject_rest_sections() -> t.Callable:\n+    \"\"\"Fixture to inject core sections into the configuration.\"\"\"\n+\n+    def _inject_rest_sections() -> None:\n+        _inject_section(\n+            RestConfig,\n+            \"rest\",\n+            default=RestConfig.default_config(),\n+            configuration_methods=[(\"configure_rest\", RestConfig._configure_rest)],\n+        )\n+\n+    return _inject_rest_sections\ndiff --git a/tests/rest/conftest.py b/tests/rest/conftest.py\nindex 9bbf627ef..a4fbfc811 100644\n--- a/tests/rest/conftest.py\n+++ b/tests/rest/conftest.py\n@@ -20,6 +20,7 @@\n from dotenv import load_dotenv\n \n from taipy.common.config import Config\n+from taipy.common.config.checker._checker import _Checker\n from taipy.core import Cycle, DataNodeId, Job, JobId, Scenario, Sequence, Task\n from taipy.core._orchestrator._orchestrator_factory import _OrchestratorFactory\n from taipy.core.common.frequency import Frequency\n@@ -29,6 +30,7 @@\n from taipy.core.job._job_manager import _JobManager\n from taipy.core.task._task_manager import _TaskManager\n from taipy.rest.app import create_app\n+from taipy.rest.config import _RestConfigChecker\n \n from .setup.shared.algorithms import evaluate, forecast\n \n@@ -309,11 +311,26 @@ def create_job_list():\n         manager._set(c)\n     return jobs\n \n+@pytest.fixture\n+def init_orchestrator():\n+    def _init_orchestrator():\n+        _OrchestratorFactory._remove_dispatcher()\n+\n+        if _OrchestratorFactory._orchestrator is None:\n+            _OrchestratorFactory._build_orchestrator()\n+        _OrchestratorFactory._build_dispatcher(force_restart=True)\n+        _OrchestratorFactory._orchestrator.jobs_to_run = Queue()\n+        _OrchestratorFactory._orchestrator.blocked_jobs = []\n+\n+    return _init_orchestrator\n \n @pytest.fixture(scope=\"function\", autouse=True)\n-def cleanup_files(reset_configuration_singleton, inject_core_sections):\n+def cleanup_files(reset_configuration_singleton, inject_rest_sections, inject_core_sections):\n     reset_configuration_singleton()\n     inject_core_sections()\n+    inject_rest_sections()\n+\n+    _Checker.add_checker(_RestConfigChecker)\n \n     Config.configure_core(repository_type=\"filesystem\")\n     if os.path.exists(\".data\"):\n@@ -325,17 +342,3 @@ def cleanup_files(reset_configuration_singleton, inject_core_sections):\n     for path in [\".data\", \".my_data\", \"user_data\", \".taipy\"]:\n         if os.path.exists(path):\n             shutil.rmtree(path, ignore_errors=True)\n-\n-\n-@pytest.fixture\n-def init_orchestrator():\n-    def _init_orchestrator():\n-        _OrchestratorFactory._remove_dispatcher()\n-\n-        if _OrchestratorFactory._orchestrator is None:\n-            _OrchestratorFactory._build_orchestrator()\n-        _OrchestratorFactory._build_dispatcher(force_restart=True)\n-        _OrchestratorFactory._orchestrator.jobs_to_run = Queue()\n-        _OrchestratorFactory._orchestrator.blocked_jobs = []\n-\n-    return _init_orchestrator\ndiff --git a/tests/rest/test_rest_config.py b/tests/rest/test_rest_config.py\nnew file mode 100644\nindex 000000000..4bea9bbed\n--- /dev/null\n+++ b/tests/rest/test_rest_config.py\n@@ -0,0 +1,195 @@\n+# Copyright 2021-2025 Avaiga Private Limited\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+#        http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+# an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+# specific language governing permissions and limitations under the License.\n+import os\n+from unittest.mock import patch\n+\n+import pytest\n+\n+from taipy.common.config.config import Config\n+from taipy.common.config.exceptions import MissingEnvVariableError\n+from taipy.rest.config.rest_config import RestConfig\n+from tests.core.utils.named_temporary_file import NamedTemporaryFile\n+\n+\n+def test_rest_config_no_values():\n+    assert Config.rest.port == 5000\n+    assert Config.rest.host == \"127.0.0.1\"\n+    assert Config.rest.use_https is False\n+    assert Config.rest.ssl_cert is None\n+    assert Config.rest.ssl_key is None\n+\n+def test_rest_config_default_values():\n+    Config.configure_rest()\n+    assert Config.rest.port == RestConfig._DEFAULT_PORT\n+    assert Config.rest.host == RestConfig._DEFAULT_HOST\n+    assert Config.rest.use_https is RestConfig._DEFAULT_USE_HTTPS\n+    assert Config.rest.ssl_cert is RestConfig._DEFAULT_SSL_CERT\n+    assert Config.rest.ssl_key is RestConfig._DEFAULT_SSL_KEY\n+\n+def test_rest_config_only_part_of_custom_values():\n+    Config.configure_rest(\n+        use_https=True,\n+        ssl_cert=\"cert.pem\",\n+        ssl_key=\"key.pem\"\n+    )\n+    assert Config.rest.port == RestConfig._DEFAULT_PORT\n+    assert Config.rest.host == RestConfig._DEFAULT_HOST\n+    assert Config.rest.use_https is True\n+    assert Config.rest.ssl_cert == \"cert.pem\"\n+    assert Config.rest.ssl_key == \"key.pem\"\n+\n+def test_rest_config_custom_values_and_toml_override():\n+    # We override some default values with the Python API\n+    Config.configure_rest(\n+        port=8080,\n+        host=\"0.0.0.0\",\n+    )\n+    assert Config.rest.port == 8080\n+    assert Config.rest.host == \"0.0.0.0\"\n+    assert Config.rest.use_https is RestConfig._DEFAULT_USE_HTTPS\n+    assert Config.rest.ssl_cert is RestConfig._DEFAULT_SSL_CERT\n+    assert Config.rest.ssl_key is RestConfig._DEFAULT_SSL_KEY\n+\n+    # now we load a toml file\n+    toml_cfg = NamedTemporaryFile(\n+        content=\"\"\"\n+[TAIPY]\n+\n+[REST]\n+port = 2\n+host = \"192.168.0.87\"\n+use_https = \"true:bool\"\n+ssl_cert = \"cert.pem\"\n+ssl_key = \"key.pem\"\n+\"\"\"\n+    )\n+    Config.load(toml_cfg.filename)\n+    assert Config.rest.port == 2\n+    assert Config.rest.host == \"192.168.0.87\"\n+    assert Config.rest.use_https is True\n+    assert Config.rest.ssl_cert == \"cert.pem\"\n+    assert Config.rest.ssl_key == \"key.pem\"\n+\n+\n+def test_rest_config_custom_values_and_missing_env_var_override():\n+    #we use env variables\n+    Config.configure_rest(\n+        port=\"ENV[PORT]:int\",\n+        host=\"ENV[HOST]\",\n+        ssl_cert=\"ENV[SSL_CERT]\",\n+        ssl_key=\"ENV[SSL_KEY]\"\n+    )\n+    Config.rest.use_https = \"ENV[USE_HTTPS]\"\n+    with pytest.raises(MissingEnvVariableError):\n+        _ = Config.rest.port\n+    with pytest.raises(MissingEnvVariableError):\n+        _ = Config.rest.host\n+    with pytest.raises(MissingEnvVariableError):\n+        _ = Config.rest.use_https\n+    with pytest.raises(MissingEnvVariableError):\n+        _ = Config.rest.ssl_cert\n+    with pytest.raises(MissingEnvVariableError):\n+        _ = Config.rest.ssl_key\n+\n+def test_rest_config_custom_values_and_env_var_override():\n+    with patch.dict(os.environ, {\n+        \"PORT\": \"3\",\n+        \"HOST\": \"1.2.3.4\",\n+        \"USE_HTTPS\": \"true\",\n+        \"SSL_CERT\": \"cert.pem\",\n+        \"SSL_KEY\": \"key.pem\"\n+    }):\n+        # we use env variables\n+        Config.configure_rest(\n+            port=\"ENV[PORT]:int\",\n+            host=\"ENV[HOST]\",\n+            use_https=\"ENV[USE_HTTPS]:bool\",\n+            ssl_cert=\"ENV[SSL_CERT]\",\n+            ssl_key=\"ENV[SSL_KEY]\"\n+        )\n+        assert Config.rest.port == 3\n+        assert Config.rest.host == \"1.2.3.4\"\n+        assert Config.rest.use_https is True\n+        assert Config.rest.ssl_cert == \"cert.pem\"\n+        assert Config.rest.ssl_key == \"key.pem\"\n+\n+\n+def test_rest_config_copy():\n+    rest_config = Config.configure_rest(\n+        port=8080, host=\"0.0.0.0\", use_https=True, ssl_cert=\"cert.pem\", ssl_key=\"key.pem\"\n+    )\n+    rest_config_copy = rest_config.__copy__()\n+\n+    assert rest_config_copy.port == 8080\n+    assert rest_config_copy.host == \"0.0.0.0\"\n+    assert rest_config_copy.use_https is True\n+    assert rest_config_copy.ssl_cert == \"cert.pem\"\n+    assert rest_config_copy.ssl_key == \"key.pem\"\n+\n+    # Ensure it's a deep copy\n+    rest_config_copy.port = 9090\n+    assert rest_config.port == 8080\n+\n+\n+def test_rest_default_config_is_valid():\n+    issues = Config.check()\n+\n+    assert len(issues.errors) == 0\n+    assert len(issues.warnings) == 0\n+    assert len(issues.infos) == 0\n+\n+\n+def test_rest_config_checker_valid_config():\n+    Config.configure_rest(port=8080, host=\"0.0.0.0\", use_https=True, ssl_cert=\"cert.pem\", ssl_key=\"key.pem\")\n+    issues = Config.check()\n+\n+    assert len(issues.errors) == 0\n+    assert len(issues.warnings) == 0\n+    assert len(issues.infos) == 0\n+\n+\n+def test_rest_config_checker_invalid_port_and_host():\n+    Config.configure_rest(port=70000, host=\"\")  # Invalid port and host\n+    with pytest.raises(SystemExit):\n+        Config.check()\n+\n+    issues = Config._collector\n+    assert len(issues.errors) == 2\n+    assert len(issues.warnings) == 0\n+    assert len(issues.infos) == 0\n+    assert \"port\" in issues.errors[0].field\n+    assert \"host\" in issues.errors[1].field\n+\n+\n+def test_rest_config_checker_https_missing_cert_and_key():\n+    Config.configure_rest(use_https=True)  # Missing ssl_cert and ssl_key\n+    with pytest.raises(SystemExit):\n+        Config.check()\n+\n+    issues = Config._collector\n+    assert len(issues.errors) == 2\n+    assert len(issues.warnings) == 0\n+    assert len(issues.infos) == 0\n+    assert \"ssl_cert\" in issues.errors[0].field\n+    assert \"ssl_key\" in issues.errors[1].field\n+\n+\n+def test_rest_config_checker_https_invalid_cert_and_key():\n+    Config.configure_rest(use_https=True, ssl_cert=123, ssl_key=456)  # Invalid types for ssl_cert and ssl_key\n+    with pytest.raises(SystemExit):\n+        Config.check()\n+\n+    issues = Config._collector\n+    assert len(issues.errors) == 2\n+    assert len(issues.warnings) == 0\n+    assert len(issues.infos) == 0\n+    assert \"ssl_cert\" in issues.errors[0].field\n+    assert \"ssl_key\" in issues.errors[1].field\n", "problem_statement": "Support production environment for taipy-rest\n- Support changing port and host from Config (maybe a new Rest section) and CLI\n", "hints_text": "Hello! Could I get this issue assigned to me?\n@imkrishnasarathi, I am assigning you to this issue; thank you for your contribution. If you need more help, you can ask @jrobinAV. \n### ![New Quest! image](https://quine-assets.s3.amazonaws.com/assets/quest-bot/quest-generic/opening28.svg) New Quest!\n\n*A new Quest has been launched in @Avaiga\u2019s repo.\nMerge a PR that solves this issue to loot the Quest and earn your reward.*\n\n---\n\nSome loot has been stashed in this issue to reward the solver!\n\n\ud83d\udde1 Comment `@quest-bot embark` to check-in for this Quest and start solving the issue. Other solvers will be notified!\n\n\u2694\ufe0f When you submit a PR, comment `@quest-bot loot #421` to link your PR to this Quest.\n\nQuestions? Check out [the docs](https://docs.quira.sh/for-developers/quests/solver-quests).\n@quest-bot embark\r\n\nHey @imkrishnasarathi\n\nUnfortunately, we\u2019ve encountered an internal error and we couldn\u2019t handle your request \ud83e\udd15\n\n**We've been alerted and we'll fix this ASAP**.\n\nContact us at help@quira.sh if you need further assistance.\n\nApologies for any inconveniences \ud83d\ude4f\n@quest-bot embark\n@imkrishnasarathi has embarked on their Quest. \ud83d\udde1\n\n- @imkrishnasarathi has been on GitHub since **2021**.\n- They have merged **15** public PRs in that time.\n- Their swords are blessed with `CSS` and `TypeScript` magic \u2728\n- They haven't contributed to this repo before.\n\nQuestions? Check out [the docs](https://docs.quira.sh/for-developers/quests/solver-quests).\nHello! May I ask how do I test if everything's working fine after I finished writing the code ?\nHey @jrobinAV ! I am getting this error from I file which I haven't altered at all when I run the test_run.py file:\r\n![image](https://github.com/user-attachments/assets/f480fa92-4837-4265-a088-bf099601fb0d)\r\n\nThis issue has been labelled as \"\ud83e\udd76Waiting for contributor\" because it has been inactive for more than 14 days. If you would like to continue working on this issue, please add another comment or create a PR that links to this issue. If a PR has already been created which refers to this issue, then you should explicitly mention this issue in the relevant PR. Otherwise, you will be unassigned in 14 days. For more information please refer to the contributing guidelines.\nThis issue has been unassigned automatically because it has been marked as \"\ud83e\udd76Waiting for contributor\" for more than 14 days with no activity.", "created_at": "2025-01-29T00:49:59Z"}
{"repo": "Avaiga/taipy", "pull_number": 2429, "instance_id": "Avaiga__taipy-2429", "issue_numbers": ["2376"], "base_commit": "60556b935d76f567409fd03f980d795c272cc0fb", "patch": "diff --git a/taipy/gui/_renderers/_markdown/factory.py b/taipy/gui/_renderers/_markdown/factory.py\nindex fa47e3baf6..a00afb8bac 100644\n--- a/taipy/gui/_renderers/_markdown/factory.py\n+++ b/taipy/gui/_renderers/_markdown/factory.py\n@@ -22,11 +22,11 @@ class _MarkdownFactory(_Factory):\n     _TAIPY_BLOCK_TAGS = [\"layout\", \"part\", \"expandable\", \"dialog\", \"pane\"]\n \n     @staticmethod\n-    def create_element(gui, control_type: str, all_properties: str) -> t.Union[t.Any, str]:\n+    def create_element(gui, element_type: str, all_properties: str) -> t.Union[t.Any, str]:\n         # Create properties dict from all_properties\n         property_pairs = _Factory._PROPERTY_RE.findall(all_properties)\n         properties = {property[0]: property[1] for property in property_pairs}\n-        builder_md = _Factory.call_builder(gui, control_type, properties)\n+        builder_md = _Factory.call_builder(gui, element_type, properties)\n         if builder_md is None:\n-            return f\"<|INVALID SYNTAX - Control is '{control_type}'|>\"\n+            return f\"<|UNKNOWN ELEMENT TYPE '{element_type}'|>\"\n         return builder_md\ndiff --git a/taipy/gui/utils/_adapter.py b/taipy/gui/utils/_adapter.py\nindex 8a2de2d802..55faf411bf 100644\n--- a/taipy/gui/utils/_adapter.py\n+++ b/taipy/gui/utils/_adapter.py\n@@ -70,7 +70,8 @@ def run(self, var_name: str, value: t.Any, id_only=False) -> t.Any:\n         adapter = self.__get_for_var(var_name, value)\n         if isclass(lov) and issubclass(lov, Enum):\n             lov = list(lov)\n-        if isinstance(lov, (list, tuple)):\n+        # list or Lov value\n+        if isinstance(lov, list) or (isinstance(lov, tuple) and not id_only):\n             res = []\n             for elt in lov:\n                 v = self._run(adapter, elt, var_name, id_only)\n", "test_patch": "diff --git a/tests/gui/renderers/test_md_parsing.py b/tests/gui/renderers/test_md_parsing.py\nindex fcb7d436d7..62877cc344 100644\n--- a/tests/gui/renderers/test_md_parsing.py\n+++ b/tests/gui/renderers/test_md_parsing.py\n@@ -14,7 +14,7 @@\n \n def test_invalid_control_name(gui: Gui, helpers):\n     md_string = \"<|invalid|invalid|>\"\n-    expected_list = [\"INVALID SYNTAX - Control is 'invalid'\"]\n+    expected_list = [\"UNKNOWN ELEMENT TYPE 'invalid'\"]\n     helpers.test_control_md(gui, md_string, expected_list)\n \n \n", "problem_statement": "[\ud83d\udc1b BUG] Slider with tuple lov forced into multi-selection\n### What went wrong? \ud83e\udd14\n\nPrevious demonstrated this in #2290.\r\n\r\nCode example:\r\n\r\n```python\r\nfrom taipy.gui import Gui, Icon\r\nimport taipy.gui.builder as tgb\r\n\r\naggregation_list = [(\"minute\", \"Minute\"), (\"hour\", \"Hour\"), (\"day\", \"Day\"), (\"week\", \"Week\")]\r\nselected_aggregation = aggregation_list[0]\r\n\r\nwith tgb.Page() as page:\r\n    tgb.text(\"# Single selection for list[tuple[str, str | Icon]] lov\", mode=\"md\")\r\n    tgb.slider(\"{selected_aggregation}\", lov=\"{aggregation_list}\", value_by_id=False)\r\n    tgb.text(\"{selected_aggregation}\")\r\n\r\ndef on_change(state, var_name, var_value):\r\n    print(var_name, type(var_value), var_value)\r\n\r\nif __name__ == \"__main__\":\r\n    gui = Gui(page=page)\r\n    gui.run(run_browser=False, use_reloader=True)\r\n```\r\n\r\nVideo:\r\n\r\nhttps://github.com/user-attachments/assets/2337d348-3379-4ab1-8dfd-a1e33d474f98\r\n\r\n\r\n\n\n### Expected Behavior\n\nSlider should be single-select.\r\n\r\nFor multi-selection, `selected_aggregation` should have been initialized to a list (e.g. `[]` or `aggregation_list[:2]`).\r\n\n\n### Browsers\n\nChrome\n\n### OS\n\nWindows, Linux\n\n### Version of Taipy\n\ndevelop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "@arcanaxion I would like to pick this issue.\n@xyfer17 I'm not a maintainer of this project. I'm just here to complain and open issues \ud83d\ude04 \nThis hasn't been yet seen by the maintainers. We should be able to get back on this soon\n", "created_at": "2025-01-28T15:48:22Z"}
{"repo": "Avaiga/taipy", "pull_number": 2428, "instance_id": "Avaiga__taipy-2428", "issue_numbers": ["2420"], "base_commit": "60556b935d76f567409fd03f980d795c272cc0fb", "patch": "diff --git a/taipy/core/_version/_version_manager.py b/taipy/core/_version/_version_manager.py\nindex f49af7dab6..93660edb82 100644\n--- a/taipy/core/_version/_version_manager.py\n+++ b/taipy/core/_version/_version_manager.py\n@@ -136,8 +136,13 @@ def _replace_version_number(cls, version_number: Optional[str] = None):\n             return \"\"\n \n         try:\n-            if version := cls._get(version_number):\n-                return version.id\n+            if version_number == cls._get_development_version():\n+                if cls._exists(version_number):\n+                    return version_number\n+            else:\n+                if cls._get(version_number):\n+                    return version_number\n+\n         except InconsistentEnvVariableError:  # The version exist but the Config is alternated\n             return version_number\n         except ConfigCoreVersionMismatched as e:\n@@ -183,6 +188,9 @@ def _manage_version(cls) -> None:\n                 cls._set_experiment_version(current_version_number, Config.core.force)\n             except VersionAlreadyExistsAsDevelopment as err:\n                 raise SystemExit(err.message) from None\n+            except ConfigCoreVersionMismatched as e:\n+                cls._logger.error(e.message)\n+                raise SystemExit() from e\n \n         else:\n             raise SystemExit(f\"Undefined execution mode: {Config.core.mode}.\")\n", "test_patch": "diff --git a/tests/core/config/test_core_version.py b/tests/core/config/test_core_version.py\nindex 03a8d8e3d9..6a18c091c0 100644\n--- a/tests/core/config/test_core_version.py\n+++ b/tests/core/config/test_core_version.py\n@@ -14,24 +14,30 @@\n import pytest\n \n from taipy.common.config import Config\n+from taipy.core import Orchestrator, taipy\n from taipy.core._init_version import _read_version\n from taipy.core.config.core_section import CoreSection\n from taipy.core.exceptions import ConfigCoreVersionMismatched\n+from taipy.core.scenario._scenario_manager import _ScenarioManager\n from tests.core.utils.named_temporary_file import NamedTemporaryFile\n \n _MOCK_CORE_VERSION = \"3.1.1\"\n \n \n+def patch_core_version(mock_core_version: str):\n+    with mock.patch(\"taipy.core.config.core_section._read_version\") as mock_read_version:\n+        mock_read_version.return_value = mock_core_version\n+\n+    CoreSection._CURRENT_CORE_VERSION = mock_core_version\n+    Config._default_config._unique_sections[CoreSection.name] = CoreSection.default_config()\n+    Config._python_config._unique_sections[CoreSection.name] = CoreSection.default_config()\n+\n+\n @pytest.fixture(scope=\"function\", autouse=True)\n def mock_core_version():\n-    with mock.patch(\"taipy.core.config.core_section._read_version\") as mock_read_version:\n-        mock_read_version.return_value = _MOCK_CORE_VERSION\n-        CoreSection._CURRENT_CORE_VERSION = _MOCK_CORE_VERSION\n-        Config.unique_sections[CoreSection.name] = CoreSection.default_config()\n-        Config._default_config._unique_sections[CoreSection.name] = CoreSection.default_config()\n-        Config._python_config._unique_sections[CoreSection.name] = CoreSection.default_config()\n+    patch_core_version(_MOCK_CORE_VERSION)\n \n-        yield\n+    yield\n \n     CoreSection._CURRENT_CORE_VERSION = _read_version()\n \n@@ -137,3 +143,57 @@ def test_load_configuration_file_without_core_section(self):\n         )\n         Config.load(file_config.filename)\n         assert Config.unique_sections[CoreSection.name]._core_version == _MOCK_CORE_VERSION\n+\n+    def test_run_core_app_with_different_taipy_core_version_in_development_mode(self):\n+        with mock.patch(\"sys.argv\", [\"prog\", \"--development\"]):\n+            run_application()\n+\n+        # Run the application with a compatible version should NOT raise any error\n+        patch_core_version(f\"{self.major}.{self.minor}.{self.patch}.dev0\")\n+        with mock.patch(\"sys.argv\", [\"prog\", \"--development\"]):\n+            run_application()\n+\n+        # Run the application with an incompatible version in development mode should NOT raise an error\n+        patch_core_version(f\"{self.major}.{int(self.minor) + 1}.{self.patch}.dev0\")\n+        with mock.patch(\"sys.argv\", [\"prog\", \"--development\"]):\n+            run_application()\n+\n+    def test_run_core_app_with_different_taipy_core_version_in_experiment_mode(self, caplog):\n+        with mock.patch(\"sys.argv\", [\"prog\", \"--experiment\", \"1.0\"]):\n+            run_application()\n+\n+        # Run the application with a compatible version should not raise any error\n+        patch_core_version(f\"{self.major}.{self.minor}.{int(self.patch) + 1}.dev0\")\n+        with mock.patch(\"sys.argv\", [\"prog\", \"--experiment\", \"1.0\"]):\n+            run_application()\n+\n+        # Run the application with an incompatible version in experiment mode should raise SystemExit and log the error\n+        patch_core_version(f\"{self.major}.{int(self.minor) + 1}.{self.patch}.dev0\")\n+        with mock.patch(\"sys.argv\", [\"prog\", \"--experiment\", \"1.0\"]):\n+            with pytest.raises(SystemExit):\n+                run_application()\n+        assert (\n+            f\"The version {self.major}.{self.minor}.{self.patch} of Taipy's entities does not match version \"\n+            f\"of the Taipy Version management {self.major}.{int(self.minor) + 1}.{self.patch}.dev0\"\n+        ) in caplog.text\n+\n+\n+def twice(a):\n+    return [a * 2]\n+\n+\n+def run_application():\n+    Config.configure_data_node(id=\"d0\")\n+    data_node_1_config = Config.configure_data_node(id=\"d1\", storage_type=\"pickle\", default_data=\"abc\")\n+    data_node_2_config = Config.configure_data_node(id=\"d2\", storage_type=\"csv\")\n+    task_config = Config.configure_task(\"my_task\", twice, data_node_1_config, data_node_2_config)\n+    scenario_config = Config.configure_scenario(\"my_scenario\", [task_config])\n+    scenario_config.add_sequences({\"my_sequence\": [task_config]})\n+\n+    orchestrator = Orchestrator()\n+    orchestrator.run()\n+\n+    scenario = _ScenarioManager._create(scenario_config)\n+    taipy.submit(scenario)\n+\n+    orchestrator.stop()\n", "problem_statement": "Why Taipy is blocking config update in development version\n### Description\n\nI am in development version. I don't want to keep my .taipy and files generated by user_data.\n \nI change from a Taipy version to another but receive this message:\n\n```\n[2025-01-22 11:11:00.209][Taipy][ERROR] The version 4.1.0.dev0 of Taipy's entities does not match version of the Taipy Version management 4.0.2. Please update the core entities to be compatible with Taipy Core 4.0.2 using the `taipy migrate ...` command. For more information, please run `taipy help migrate`\n```\n\nWhy Taipy is blocking config update in development version?\n\n### Acceptance Criteria\n\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "@jrobinAV @FlorianJacta This is happening because of the `ConfigCoreVersionMismatched` exception is raised here because of the `_check_compatibility()` method.\n\nShould we skip the `_check_compatibility()` method when in development mode?\nThe `ConfigCoreVersionMismatched` exception is raised before the `clean_all_entity_by_version()` method, which is trying to load the old _Version entity and the old Config.\n\nProposal:\nUpdate the `_version_manager.py` lines 138 - 149 to:\n```python\n        try:\n            if version_number == cls._get_development_version():\n                if cls._exists(version_number):\n                    return version_number\n            else:\n                if cls._get(version_number):\n                    return version_number\n        except InconsistentEnvVariableError:  # The version exist but the Config is alternated\n            return version_number\n        except ConfigCoreVersionMismatched as e:\n            cls._logger.error(e.message)\n            raise SystemExit() from e\n```\n\nThe main difference is only calling the `_get` when it's not development mode, otherwise call the `_exists` method\nTo test the problem:\n\n1. Install taipy 4.0.0\n2. Run an application that create some entities in taipy 4.0.0 in both development mode and experiment mode (so we have entities for both dev and experiment versions)\n3. Install taipy 4.1.0.dev1\n4. Rerun the application in development mode. For the current code, it will log an error.\n    - Expected behavior: The application should run\n6. Rerun the application in experiment mode. For the current code, the exception is raised with the whole backlog\n    - Expected behavior: The error should be logged properly.", "created_at": "2025-01-28T10:09:41Z"}
{"repo": "Avaiga/taipy", "pull_number": 2426, "instance_id": "Avaiga__taipy-2426", "issue_numbers": ["390"], "base_commit": "23fc0fbba34e4a5f56d4b8c0259a99693931887e", "patch": "diff --git a/taipy/core/data/pickle.py b/taipy/core/data/pickle.py\nindex b86e82d6c7..cfa4622972 100644\n--- a/taipy/core/data/pickle.py\n+++ b/taipy/core/data/pickle.py\n@@ -31,6 +31,20 @@ class PickleDataNode(DataNode, _FileDataNodeMixin):\n         data node.\n     - *default_data*: The default data of the data node. It is used at the data node instantiation\n         to write the data to the Pickle file.\n+\n+    ??? warning \"To use with pickle-able data only\"\n+        PickleDataNode should be used only for \"pickle-able\" data.\n+\n+        Everything that's build up (recursively) from basic python types (dicts, lists,\n+        primitives, objects, object references, even circular) can usually be pickled by default.\n+\n+        Things that are usually not pickle-able are, for example, sockets, file(handler)s,\n+        database connections, custom data structure using in-memory references to Python IDs,\n+        and so on.\n+\n+        Please refer to the\n+        [pickle documentation](https://docs.python.org/3/library/pickle.html) for more information.\n+\n     \"\"\"\n \n     __STORAGE_TYPE = \"pickle\"\n", "test_patch": "", "problem_statement": "Possible doc improvement - using CPLEX CP Optimizer with taipy\n* Taipy version:  2.0\r\n* Python version:  3.10\r\n* Operating System:   Windows\r\n\r\n### Description\r\n\r\nI think that Vincent Gosselin will find this interesting.  This led to my PR https://github.com/Avaiga/taipy-core/pull/431\r\n\r\nI have an application that creates a scenario for an optimization problem that is solved with CPLEX CP Optimizer, using the `docplex` interface.  The scenario has a data node that represents the results.  There is also a data node that contains the CPO model.  The scenario has a pipeline with the steps of creating the model, followed by solving the model.\r\n\r\nIn CPO,. if you have an object that represents a decision variable, and you want to get the solution value, you use the method `CpoSolveResult.get_var_solution(expr)` where `expr` is a reference to the decision variable or expression.\r\n\r\nThe problem here is that the default storage mechanism for the data node is `\"pickle\"`, and, internally, `docplex` has a solution dictionary that uses the python `id` of the decision variable to be able to look up the solution.  When you do `pickle`, the ID's of the decision variables change.   When I changed the storage mechanism to `\"in_memory\"`, then everything worked.\r\n\r\nSo it may be worthwhile to have some more information in the docs about where using `\"pickle\"` as the storage type could cause unexpected behavior, if there are underlying data structures in third party libraries that are assuming in-memory references based on python ID's between related objects.  (e.g., the CPO model object and decision variables/expressions and the solution object).\r\n\n", "hints_text": "This issue has been labelled as \"\ud83e\udd76Waiting for contributor\" because it has been inactive for more than 14 days. If you would like to continue working on this issue, please add another comment or create a PR that links to this issue. If a PR has already been created which refers to this issue, then you should explicitly mention this issue in the relevant PR. Otherwise, you will be unassigned in 14 days. For more information please refer to the contributing guidelines.\nThis issue has been unassigned automatically because it has been marked as \"\ud83e\udd76Waiting for contributor\" for more than 14 days with no activity.", "created_at": "2025-01-24T08:58:31Z"}
{"repo": "Avaiga/taipy", "pull_number": 2425, "instance_id": "Avaiga__taipy-2425", "issue_numbers": ["2409"], "base_commit": "23fc0fbba34e4a5f56d4b8c0259a99693931887e", "patch": "diff --git a/frontend/taipy-gui/src/components/Taipy/Selector.spec.tsx b/frontend/taipy-gui/src/components/Taipy/Selector.spec.tsx\nindex c142923f8..ca463176f 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Selector.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Selector.spec.tsx\n@@ -328,6 +328,13 @@ describe(\"Selector Component\", () => {\n             await userEvent.click(elt);\n             expect(elt.parentElement?.querySelector(\"span.Mui-checked\")).not.toBeNull();\n         });\n+        it(\"sets the correct height for the radio mode\", async () => {\n+            const height = \"200px\";\n+            const { getByRole } = render(<Selector lov={lov} mode=\"radio\" height={height} />);\n+            const selector = getByRole(\"radiogroup\");\n+            const style = window.getComputedStyle(selector);\n+            expect(style.maxHeight).toBe(height);\n+          });\n     });\n \n     describe(\"Selector Component check mode\", () => {\n@@ -366,4 +373,11 @@ describe(\"Selector Component\", () => {\n             expect(elt3.parentElement?.querySelector(\"span.Mui-checked\")).not.toBeNull();\n         });\n     });\n+    it(\"sets the correct height for the check mode\", async () => {\n+        const height = \"200px\";\n+        const { container } = render(<Selector lov={lov} mode=\"check\" height={height} />);\n+        const selector = container.querySelector(\".MuiFormGroup-root\");\n+        const style = window.getComputedStyle(selector!);\n+        expect(style.maxHeight).toBe(height);\n+      });\n });\ndiff --git a/frontend/taipy-gui/src/components/Taipy/Selector.tsx b/frontend/taipy-gui/src/components/Taipy/Selector.tsx\nindex 421ffbc0c..5c59f3380 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Selector.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Selector.tsx\n@@ -178,6 +178,18 @@ const Selector = (props: SelectorProps) => {\n         }),\n         [width]\n     );\n+    const heightSx = useMemo(() => {\n+        if (!height) {\n+            return undefined;\n+        }\n+        return {\n+            maxHeight: height,\n+            display: 'flex',\n+            flexFlow: 'column nowrap',\n+            overflowY: \"auto\",\n+        };\n+    }, [height]);\n+\n     const paperSx = useMemo(() => {\n         let sx = paperBaseSx;\n         if (height !== undefined) {\n@@ -371,6 +383,7 @@ const Selector = (props: SelectorProps) => {\n                                 value={dropdownValue}\n                                 onChange={handleChange}\n                                 className={getSuffixedClassNames(className, \"-radio-group\")}\n+                                sx={heightSx}\n                             >\n                                 {lovList.map((item) => (\n                                     <FormControlLabel\n@@ -390,7 +403,7 @@ const Selector = (props: SelectorProps) => {\n                                 ))}\n                             </RadioGroup>\n                         ) : (\n-                            <FormGroup className={getSuffixedClassNames(className, \"-check-group\")}>\n+                            <FormGroup className={getSuffixedClassNames(className, \"-check-group\")} sx={heightSx}>\n                                 {lovList.map((item) => (\n                                     <FormControlLabel\n                                         key={item.id}\n", "test_patch": "", "problem_statement": "The hight properties in the Selector visual element, in mode='radio' does not work.\n### Description\n\nWould like to have a scroll option inside the smaller window when hight properties is used in the Selector visual element, when in mode='radio', like when we use the below code, I can control the height with 250px, which is not working when mode='radio'. \nwith tgb.part():\n                    tgb.selector(value='{selected_envs}',\n                    lov='{env_list}',\n                    multiple=True, height=\"250px\",\n                    filter=True\n                    )\n\n### Solution Proposed\n\nA height property should work in a Selector visual element when when mode='radio'.\n\n### Acceptance Criteria\n\n- [ ] If applicable, a new demo code is provided to show the new feature in action.\n- [ ] Integration tests exhibiting how the functionality works are added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "Here is some code to reproduce the user issue. Note that multiple=True and filter=True does not work with *radio* mode:\n\n```python\nimport taipy.gui.builder as tgb\nfrom taipy.gui import Gui\n\nselected_envs = ['env1']\nenv_list = [f'env{i}' for i in range(10)]\n\nwith tgb.Page() as page:\n    tgb.selector(value='{selected_envs}',\n    lov='{env_list}',\n    multiple=True, height=\"250px\",\n    filter=True\n    )\n\n    tgb.selector(value='{selected_envs}',\n    lov='{env_list}',\n    multiple=True, height=\"250px\",\n    filter=True, mode=\"radio\"\n    )\n\nGui(page).run()\n\n```\n\n\n![Image](https://github.com/user-attachments/assets/0498fd30-a9e8-430f-974b-ddf1774eca92)\nCan I take this issue?", "created_at": "2025-01-23T13:14:30Z"}
{"repo": "Avaiga/taipy", "pull_number": 2423, "instance_id": "Avaiga__taipy-2423", "issue_numbers": ["2322"], "base_commit": "d7d82e159974ba9048016d5e829c1c7e98796bdf", "patch": "diff --git a/taipy/core/scenario/scenario.py b/taipy/core/scenario/scenario.py\nindex bdb5652963..1a7c391410 100644\n--- a/taipy/core/scenario/scenario.py\n+++ b/taipy/core/scenario/scenario.py\n@@ -17,6 +17,7 @@\n import networkx as nx\n \n from taipy.common.config.common._validate_id import _validate_id\n+from taipy.common.logger._taipy_logger import _TaipyLogger\n \n from .._entity._entity import _Entity\n from .._entity._labeled import _Labeled\n@@ -106,6 +107,8 @@ def by_two(x: int):\n     id: ScenarioId\n     \"\"\"The unique identifier of this scenario.\"\"\"\n \n+    _logger = _TaipyLogger._get_logger()\n+\n     def __init__(\n         self,\n         config_id: str,\n@@ -611,12 +614,32 @@ def _is_consistent(self) -> bool:\n         if dag.number_of_nodes() == 0:\n             return True\n         if not nx.is_directed_acyclic_graph(dag):\n+            self._logger.error(f'The DAG of scenario \"{self.id}\" is not a directed acyclic graph')\n             return False\n         for left_node, right_node in dag.edges:\n             if (isinstance(left_node, DataNode) and isinstance(right_node, Task)) or (\n                 isinstance(left_node, Task) and isinstance(right_node, DataNode)\n             ):\n                 continue\n+\n+            left_node_desc = (\n+                f'{left_node.__class__.__name__} \"{left_node.get_label()}\"'\n+                if isinstance(left_node, _Labeled)\n+                else left_node.__class__.__name__\n+                if left_node\n+                else \"None\"\n+            )\n+            right_node_desc = (\n+                f'{right_node.__class__.__name__} \"{right_node.get_label()}\"'\n+                if isinstance(right_node, _Labeled)\n+                else right_node.__class__.__name__\n+                if right_node\n+                else \"None\"\n+            )\n+            self._logger.error(\n+                f'Invalid edge detected in scenario \"{self.id}\": left node {left_node_desc} and right node '\n+                f\"{right_node_desc} must connect a Task and a DataNode\"\n+            )\n             return False\n         return True\n \ndiff --git a/taipy/core/sequence/sequence.py b/taipy/core/sequence/sequence.py\nindex b07d0e348d..2e8d1c33e7 100644\n--- a/taipy/core/sequence/sequence.py\n+++ b/taipy/core/sequence/sequence.py\n@@ -16,6 +16,7 @@\n import networkx as nx\n \n from taipy.common.config.common._validate_id import _validate_id\n+from taipy.common.logger._taipy_logger import _TaipyLogger\n \n from .._entity._entity import _Entity\n from .._entity._labeled import _Labeled\n@@ -118,6 +119,8 @@ def planning(forecast, capacity):\n     _MANAGER_NAME = \"sequence\"\n     __CHECK_INIT_DONE_ATTR_NAME = \"_init_done\"\n \n+    _logger = _TaipyLogger._get_logger()\n+\n     id: SequenceId\n     \"\"\"The unique identifier of the sequence.\"\"\"\n \n@@ -343,15 +346,37 @@ def _is_consistent(self) -> bool:\n         if dag.number_of_nodes() == 0:\n             return True\n         if not nx.is_directed_acyclic_graph(dag):\n+            self._logger.error(f'The DAG of sequence \"{self.id}\" is not a directed acyclic graph')\n             return False\n         if not nx.is_weakly_connected(dag):\n+            self._logger.error(f'The DAG of sequence \"{self.id}\" is not weakly connected')\n             return False\n         for left_node, right_node in dag.edges:\n             if (isinstance(left_node, DataNode) and isinstance(right_node, Task)) or (\n                 isinstance(left_node, Task) and isinstance(right_node, DataNode)\n             ):\n                 continue\n+\n+            left_node_desc = (\n+                f'{left_node.__class__.__name__} \"{left_node.get_label()}\"'\n+                if isinstance(left_node, _Labeled)\n+                else left_node.__class__.__name__\n+                if left_node\n+                else \"None\"\n+            )\n+            right_node_desc = (\n+                f'{right_node.__class__.__name__} \"{right_node.get_label()}\"'\n+                if isinstance(right_node, _Labeled)\n+                else right_node.__class__.__name__\n+                if right_node\n+                else \"None\"\n+            )\n+            self._logger.error(\n+                f'Invalid edge detected in sequence \"{self.id}\": left node {left_node_desc} and right node '\n+                f\"{right_node_desc} must connect a Task and a DataNode\"\n+            )\n             return False\n+\n         return True\n \n     def _get_tasks(self) -> Dict[str, Task]:\n", "test_patch": "diff --git a/tests/core/scenario/test_scenario.py b/tests/core/scenario/test_scenario.py\nindex 72899c20ef..515fe369fb 100644\n--- a/tests/core/scenario/test_scenario.py\n+++ b/tests/core/scenario/test_scenario.py\n@@ -1538,3 +1538,25 @@ def test_check_consistency():\n     task_5 = Task(\"bob\", {}, print, [data_node_5], [data_node_3], TaskId(\"t5\"))\n     scenario_9 = Scenario(\"scenario_9\", [task_1, task_2, task_3, task_4, task_5], {}, [], scenario_id=ScenarioId(\"s8\"))\n     assert scenario_9._is_consistent()\n+\n+\n+def test_check_inconsistency(caplog):\n+    class FakeDataNode:\n+        config_id = \"config_id_of_a_fake_dn\"\n+\n+    data_node_1 = InMemoryDataNode(\"foo\", Scope.SCENARIO, \"s1\")\n+    data_node_2 = InMemoryDataNode(\"bar\", Scope.SCENARIO, \"s2\")\n+\n+    task_1 = Task(\"grault\", {}, print, [data_node_1, data_node_2], [FakeDataNode()], TaskId(\"t1\"))\n+    task_2 = Task(\"garply\", {}, print, [data_node_1], [data_node_2], id=TaskId(\"t2\"))\n+    scenario_1 = Scenario(\"scenario_1\", [task_1, task_2], {}, [], scenario_id=ScenarioId(\"s1\"))\n+    assert not scenario_1._is_consistent()\n+    assert (\n+        'Invalid edge detected in scenario \"s1\": left node Task \"grault\" and right node FakeDataNode'\n+        \" must connect a Task and a DataNode\" in caplog.text\n+    )\n+\n+    task_3 = Task(\"waldo\", {}, print, [data_node_2], [data_node_1], id=TaskId(\"t3\"))\n+    scenario_2 = Scenario(\"scenario_2\", [task_2, task_3], {}, [], scenario_id=ScenarioId(\"s2\"))\n+    assert not scenario_2._is_consistent()\n+    assert 'The DAG of scenario \"s2\" is not a directed acyclic graph' in caplog.text\ndiff --git a/tests/core/sequence/test_sequence.py b/tests/core/sequence/test_sequence.py\nindex 9b78cb53df..f5cb7ca535 100644\n--- a/tests/core/sequence/test_sequence.py\n+++ b/tests/core/sequence/test_sequence.py\n@@ -30,6 +30,10 @@\n from taipy.core.task.task import Task, TaskId\n \n \n+class FakeDataNode:\n+    config_id = \"config_id_of_a_fake_dn\"\n+\n+\n def test_sequence_equals():\n     task_config = Config.configure_task(\"mult_by_3\", print, [], None)\n     scenario_config = Config.configure_scenario(\"scenario\", [task_config])\n@@ -143,7 +147,7 @@ def test_get_set_attribute():\n         sequence.bar = \"KeyAlreadyUsed\"\n \n \n-def test_check_consistency():\n+def test_check_consistency(caplog):\n     sequence_1 = Sequence({}, [], \"name_1\")\n     assert sequence_1._is_consistent()\n \n@@ -157,6 +161,7 @@ def test_check_consistency():\n     task_3 = Task(\"tfoo\", {}, print, [data_node_3], [data_node_3], TaskId(\"task_id_3\"))\n     sequence_3 = Sequence({}, [task_3], \"name_3\")\n     assert not sequence_3._is_consistent()  # Not a dag\n+    assert 'The DAG of sequence \"name_3\" is not a directed acyclic graph' in caplog.text\n \n     input_4 = InMemoryDataNode(\"foo\", Scope.SCENARIO)\n     output_4 = InMemoryDataNode(\"bar\", Scope.SCENARIO)\n@@ -164,9 +169,7 @@ def test_check_consistency():\n     task_4_2 = Task(\"tbar\", {}, print, [output_4], [input_4], TaskId(\"task_id_4_2\"))\n     sequence_4 = Sequence({}, [task_4_1, task_4_2], \"name_4\")\n     assert not sequence_4._is_consistent()  # Not a Dag\n-\n-    class FakeDataNode:\n-        config_id = \"config_id_of_a_fake_dn\"\n+    assert 'The DAG of sequence \"name_4\" is not a directed acyclic graph' in caplog.text\n \n     input_6 = DataNode(\"foo\", Scope.SCENARIO, \"input_id_5\")\n     output_6 = DataNode(\"bar\", Scope.SCENARIO, \"output_id_5\")\n@@ -174,6 +177,10 @@ class FakeDataNode:\n     task_6_2 = Task(\"tbar\", {}, print, [output_6], [FakeDataNode()], TaskId(\"task_id_5_2\"))\n     sequence_6 = Sequence({}, [task_6_1, task_6_2], \"name_5\")\n     assert not sequence_6._is_consistent()  # Not a DataNode\n+    assert (\n+        'Invalid edge detected in sequence \"name_5\": left node Task \"tbar\" and right node FakeDataNode '\n+        \"must connect a Task and a DataNode\" in caplog.text\n+    )\n \n     intermediate_7 = DataNode(\"foo\", Scope.SCENARIO, \"intermediate_id_7\")\n     output_7 = DataNode(\"bar\", Scope.SCENARIO, \"output_id_7\")\n@@ -197,6 +204,7 @@ class FakeDataNode:\n     task_9_2 = Task(\"tbar\", {}, print, [input_9_2], [output_9_2], TaskId(\"task_id_9_2\"))\n     sequence_9 = Sequence({}, [task_9_1, task_9_2], \"name_9\")\n     assert not sequence_9._is_consistent()  # Not connected\n+    assert 'The DAG of sequence \"name_9\" is not weakly connected' in caplog.text\n \n     input_10_1 = DataNode(\"foo\", Scope.SCENARIO, \"output_id_10_1\")\n     intermediate_10_1 = DataNode(\"bar\", Scope.SCENARIO, \"intermediate_id_10_1\")\n", "problem_statement": "[Refactor] Informative error messages on Scenario build failure\n### Description\n\nThe error message `raise InvalidScenario(scenario.id)`  when scenario building fails is not very informative, because it leads to something like:\r\n```\r\ntaipy.core.exceptions.exceptions.InvalidScenario: SCENARIO_MS_analysis_afc4e19b-be39-4651-bc9d-11f7807fd3af\r\n```\r\nwith Traceback pointing only at the Scenario Factory.\r\n\r\n\r\nI suggest adding a warning to \r\nhttps://github.com/Avaiga/taipy/blob/9cc59f2fbd5ed3d261905923a9cb85dcd623e3f3/taipy/core/scenario/scenario.py#L608-L621\r\n\r\nlike:\r\n```python\r\nimport warnings\r\nwarnings.warn( f\"Graph directed: {nx.is_directed( dag )}, Cycle found at: {nx.cycles.find_cycle( dag )}\" )\r\n```\r\nand\r\n```python\r\nif not (isinstance(left_node, DataNode) and isinstance(right_node, Task)) and \r\n   not (isinstance(left_node, Task) and isinstance(right_node, DataNode) ):\r\n    warnings.warn(f\"Edge between left node:{left_node.get_label()} and right node:{right_node.get_label()} does not connect {Task} and {DataNode}\")\r\n    return False\r\n```\n\n### Acceptance Criteria\n\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [X] I am willing to work on this issue (optional)\n", "hints_text": "Hello @JosuaCarl \r\n\r\nThank you for your issue. It's a great idea. Would you like to be assigned?\r\n\r\nA few minor remarks:\r\n\r\n1. In Taipy, we handle logs with a logger that you can retrieve using the following code:\r\n    ```python\r\n    from taipy.common.logger._taipy_logger import _TaipyLogger\r\n\r\n    _logger = _TaipyLogger._get_logger()\r\n\r\n    _logger.error(\"My error message!\")\r\n    _logger.warning(\"My warning.\")\r\n    _logger.info(\"My info\")\r\n    ```\r\n\r\n2. They should be error messages and not warnings. Especially because we raise an exception in case it is inconsistent.\r\n \r\n3. We have a similar but slightly different piece of code for sequences. It should be covered by the issue as well. https://github.com/Avaiga/taipy/blob/9cc59f2fbd5ed3d261905923a9cb85dcd623e3f3/taipy/core/sequence/sequence.py#L341-L355\r\n\nYes, I would like to be assigned. Although I am not sure how much I will be able to do until the new year.\n> Yes, I would like to be assigned. Although I am not sure how much I will be able to do until the new year.\r\n\r\nThanks a lot! Don't worry, we are not in a rush for this issue.\nSmall question before I start:\r\nThe purpose of the `_is_constent` method is to evaluate consistency and return it. I suggested a warning, in order to enable the code to finish and pass on a boolean value (which is expected by following methods). Should I refactor the methods, that rely on `_is_constent`, such that an error is watched and raised later , resulting in equation to `False` or should the `_is_constent` method itself serve as the main Error handler, such that it can called without expecting a return and the code simply continues on, when no Error is raised ?\nThat's a good question. \r\n\r\nI would keep the current behavior for both `is_consistent` methods. They should still return a boolean. The only difference would be that they log a meaningful error before returning False.\r\nAnd we let the responsibility of raising an exception or not to the piece of code that calls the `is_consistent` method.\nThis issue has been labelled as \"\ud83e\udd76Waiting for contributor\" because it has been inactive for more than 14 days. If you would like to continue working on this issue, please add another comment or create a PR that links to this issue. If a PR has already been created which refers to this issue, then you should explicitly mention this issue in the relevant PR. Otherwise, you will be unassigned in 14 days. For more information please refer to the contributing guidelines.\nThis issue has been unassigned automatically because it has been marked as \"\ud83e\udd76Waiting for contributor\" for more than 14 days with no activity.", "created_at": "2025-01-23T09:38:34Z"}
{"repo": "Avaiga/taipy", "pull_number": 2404, "instance_id": "Avaiga__taipy-2404", "issue_numbers": ["2118"], "base_commit": "d7d82e159974ba9048016d5e829c1c7e98796bdf", "patch": "diff --git a/.coveragerc b/.coveragerc\nnew file mode 100644\nindex 0000000000..5dc3069f51\n--- /dev/null\n+++ b/.coveragerc\n@@ -0,0 +1,8 @@\n+[run]\n+omit =\n+    tests/*\n+\n+[report]\n+exclude_lines =\n+    # Ignore pragma: no cover comments\n+    pragma: no cover\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 943381566e..837001344a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -51,6 +51,7 @@ exclude = [\n     \"build\",\n     \"dist\",\n     \"releases\",\n+    \"tools\",\n     \".venv\",\n     \".mypy_cache\",\n     \".pytest_cache\",\ndiff --git a/tools/coverage_check.py b/tools/coverage_check.py\nnew file mode 100644\nindex 0000000000..4cd307d14b\n--- /dev/null\n+++ b/tools/coverage_check.py\n@@ -0,0 +1,101 @@\n+# Copyright 2021-2025 Avaiga Private Limited\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+#        http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+# an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+# specific language governing permissions and limitations under the License.\n+\n+import argparse\n+import xmltodict\n+import sys\n+import subprocess\n+\n+\n+def check_total_coverage(coverage_file, threshold=80):\n+    \"\"\"Check the total project coverage.\"\"\"\n+    with open(coverage_file) as f:\n+        data = xmltodict.parse(f.read())\n+    total_coverage = float(data['coverage']['@line-rate']) * 100\n+    print(f\"Total Coverage: {total_coverage:.2f}%\")\n+    if total_coverage < threshold:\n+        print(f\"Total project coverage is below {threshold}%: {total_coverage:.2f}%\")\n+        sys.exit(1)\n+\n+\n+def check_changed_files_coverage(coverage_file, changed_files, threshold=80):\n+    \"\"\"Check the coverage of changed files.\"\"\"\n+    with open(coverage_file) as f:\n+        data = xmltodict.parse(f.read())\n+\n+    # Handle multiple packages in the coverage report\n+    packages = data[\"coverage\"][\"packages\"][\"package\"]\n+    if not isinstance(packages, list):\n+        packages = [packages]\n+\n+    # Extract coverage data for all files\n+    files = {}\n+    for package in packages:\n+        classes = package[\"classes\"][\"class\"]\n+        if not isinstance(classes, list):\n+            classes = [classes]\n+        for cls in classes:\n+            files[cls[\"@filename\"]] = float(cls[\"@line-rate\"]) * 100\n+    qty = 0\n+    sum_coverage = 0\n+    for file in changed_files:\n+        if file in files:\n+            coverage = files[file]\n+            print(f\"Coverage for {file}: {coverage:.2f}%\")\n+            sum_coverage += coverage\n+            qty += 1\n+        else:\n+            print(f\"No coverage data found for {file}\")\n+\n+    if sum_coverage/qty < threshold:\n+        print(f\"Coverage for changed files is below {threshold}%: {sum_coverage/qty:.2f}%\")\n+        sys.exit(1)\n+    print(f\"Coverage for changed files: {sum_coverage/qty:.2f}%\")\n+\n+\n+def get_changed_files(base_branch):\n+    \"\"\"Get the list of changed Python files in the pull request.\"\"\"\n+    try:\n+        result = subprocess.run(\n+            ['git', 'diff', '--name-only', f\"origin/{base_branch}\", '--', '*.py'],\n+            capture_output=True,\n+            text=True,\n+            check=True,\n+        )\n+        changed_files = [\n+            file.replace(\"taipy/\", \"\") for file in result.stdout.strip().splitlines() if not file.startswith(('tests/', 'tools/'))\n+        ]\n+        return changed_files\n+    except subprocess.CalledProcessError as e:\n+        print(f\"Error fetching changed files: {e}\")\n+        sys.exit(1)\n+\n+\n+if __name__ == '__main__':\n+    parser = argparse.ArgumentParser(description=\"Coverage check script.\")\n+    parser.add_argument('command', choices=['check-total', 'check-changed'], help=\"Command to execute\")\n+    parser.add_argument('--coverage-file', default='coverage.xml', help=\"Path to the coverage XML file\")\n+    parser.add_argument('--threshold', type=float, default=80, help=\"Coverage threshold percentage\")\n+    parser.add_argument('--base-branch', help=\"Base branch for comparing changed files\")\n+\n+    args = parser.parse_args()\n+\n+    if args.command == 'check-total':\n+        check_total_coverage(args.coverage_file, args.threshold)\n+    elif args.command == 'check-changed':\n+        if not args.base_branch:\n+            print(\"Error: --base-branch is required for check-changed\")\n+            sys.exit(1)\n+        changed_files = get_changed_files(args.base_branch)\n+        if not changed_files:\n+            print(\"No relevant Python files changed.\")\n+            sys.exit(0)\n+        check_changed_files_coverage(args.coverage_file, changed_files, args.threshold)\n", "test_patch": "diff --git a/.github/workflows/overall-tests.yml b/.github/workflows/overall-tests.yml\nindex ccf20c23cb..a396c3ef94 100644\n--- a/.github/workflows/overall-tests.yml\n+++ b/.github/workflows/overall-tests.yml\n@@ -20,9 +20,12 @@ jobs:\n   coverage:\n     timeout-minutes: 50\n     runs-on: ubuntu-latest\n+\n     if: github.event_name == 'pull_request' && github.event.pull_request.base.repo.full_name == github.event.pull_request.head.repo.full_name\n     steps:\n       - uses: actions/checkout@v4\n+        with:\n+          fetch-depth: 0  # Fetch full history to enable proper diff\n \n       - uses: actions/setup-python@v5\n         with:\n@@ -38,13 +41,22 @@ jobs:\n \n       - name: Pytest\n         run: |\n-          pipenv run pytest --cov=taipy --cov-report=\"xml:overall-coverage.xml\" tests\n+          python -m pip install xmltodict\n+          pipenv run pytest --cov=taipy --cov-report=xml:${{ github.workspace }}/coverage.xml --cov-config=.coveragerc\n \n-      - name: Coverage\n-        uses: orgoro/coverage@v3.1\n-        with:\n-          coverageFile: overall-coverage.xml\n-          token: ${{ secrets.GITHUB_TOKEN }}\n+\n+      - name: Fetch base branch\n+        run: |\n+          git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}\n+\n+\n+      - name: Check total project coverage\n+        run: |\n+          python tools/coverage_check.py check-total --coverage-file ${{ github.workspace }}/coverage.xml --threshold 80\n+\n+      - name: Check pull request coverage\n+        run: |\n+          python tools/coverage_check.py check-changed --coverage-file ${{ github.workspace }}/coverage.xml --threshold 80 --base-branch ${{ github.event.pull_request.base.ref }}\n \n   overall-tests:\n     needs: [partial-tests]\n", "problem_statement": "Allow all actions to be performed on a PR from external contributor\nSome GitHub actions require specific permissions (e.g., coverage requires writing the result as a comment in the PR). These actions cannot be performed on a Pull request from an external contributor.\n\nThis is still a problem when an Avaiga member manually triggers the actions from the PR.\n\n\n\n\n", "hints_text": "At least, we could *not* execute the job/step that we'll know will fail :-)\nI reopened it because I still want to investigate whether coverage can be checked before merging into `develop`.", "created_at": "2025-01-17T00:04:12Z"}
{"repo": "Avaiga/taipy", "pull_number": 2403, "instance_id": "Avaiga__taipy-2403", "issue_numbers": ["2401", "2401"], "base_commit": "9db15e4d15c1fd03e9decba65178cf65c3bdd807", "patch": "diff --git a/frontend/taipy-gui/src/components/Taipy/NavBar.spec.tsx b/frontend/taipy-gui/src/components/Taipy/NavBar.spec.tsx\nindex d2a46ec51..1ac5b1916 100644\n--- a/frontend/taipy-gui/src/components/Taipy/NavBar.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/NavBar.spec.tsx\n@@ -53,18 +53,18 @@ describe(\"NavBar Component\", () => {\n     });\n     it(\"is disabled\", async () => {\n         const { getAllByRole } = render(<BrowserRouter><NavBar lov={lov} active={false} /></BrowserRouter>);\n-        const elts = getAllByRole(\"tab\");\n-        elts.forEach(elt => expect(elt).toBeDisabled());\n+        const tabElements = getAllByRole(\"tab\");\n+        tabElements.forEach(elt => expect(elt).toBeDisabled());\n     });\n     it(\"is enabled by default\", async () => {\n         const { getAllByRole } = render(<BrowserRouter><NavBar lov={lov} /></BrowserRouter>);\n-        const elts = getAllByRole(\"tab\");\n-        elts.forEach(elt => expect(elt).not.toBeDisabled());\n+        const tabElements = getAllByRole(\"tab\");\n+        tabElements.forEach(elt => expect(elt).not.toBeDisabled());\n     });\n     it(\"is enabled by active\", async () => {\n         const { getAllByRole } = render(<BrowserRouter><NavBar lov={lov} active={true} /></BrowserRouter>);\n-        const elts = getAllByRole(\"tab\");\n-        elts.forEach(elt => expect(elt).not.toBeDisabled());\n+        const tabElements = getAllByRole(\"tab\");\n+        tabElements.forEach(elt => expect(elt).not.toBeDisabled());\n     });\n     it(\"dispatch a well formed message\", async () => {\n         const focusSpy = jest.fn()\ndiff --git a/frontend/taipy-gui/src/components/Taipy/NavBar.tsx b/frontend/taipy-gui/src/components/Taipy/NavBar.tsx\nindex 9c55085f3..b2a563b4c 100644\n--- a/frontend/taipy-gui/src/components/Taipy/NavBar.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/NavBar.tsx\n@@ -66,9 +66,7 @@ const NavBar = (props: LovProps) => {\n         [state.locations, navigate]\n     );\n \n-    const selectedVal =\n-        lov.find((it) => getBaseURL() + it.id.substring(1) === location.pathname)?.id ||\n-        (lov.length ? lov[0].id : false);\n+    const selectedVal = lov.find((it) => getBaseURL() + it.id.substring(1) === location.pathname)?.id || \"\";\n \n     return isMobile ? (\n         <Tooltip title={hover || \"\"}>\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] navbar visually displays the first entry as being selected when on a page not in the navbar's lov\n### What went wrong? \ud83e\udd14\n\nIn the following example, there are 4 pages: page1, page2, page3 and config.\r\n\r\nconfig page is accessed via a separate button, so it is omitted from the navbar lov.\r\n\r\nPer attached screenshot, when navigating to the config page (via the button in this case), the navbar visually displays the first entry (page1 in this case) as being selected.\r\n\r\nExample code:\r\n\r\n```python\r\nfrom taipy.gui import Gui, navigate\r\nimport taipy.gui.builder as tgb\r\n\r\npage_list = [(f\"page{i+1}\", f\"Page {i+1}\", tgb.Page(tgb.text(f\"# Page {i+1}\", mode=\"md\"))) for i in range(3)]\r\nnavbar_lov = [(f\"/{page_name}\", page_label) for page_name, page_label, _ in page_list]\r\n\r\nconfig_page = tgb.Page(tgb.text(\"# Config Page\", mode=\"md\"))\r\n\r\nwith tgb.Page() as root_page:\r\n    with tgb.layout(columns=\"max-content max-content\"):\r\n        tgb.navbar(lov=\"{navbar_lov}\")\r\n        tgb.button(\"Go to config\", on_action=lambda state: navigate(state, \"config\", params=dict(), tab=\"_self\"))\r\n\r\n   \r\npages = {\"/\": root_page, \"config\": config_page}\r\npages.update({page_name: page for page_name, _, page in page_list})\r\n\r\ndef on_change(state, var_name, var_value):\r\n    print(var_name, type(var_value), var_value)\r\n\r\nif __name__ == \"__main__\":\r\n    gui = Gui(pages=pages)\r\n    gui.run(dark_mode=False)\r\n```\n\n### Expected Behavior\n\nnavbar should show everything as unselected if on a page not in its lov.\n\n### Screenshots\n\nI have clicked the button, and am on the config page:\r\n\r\n![image](https://github.com/user-attachments/assets/be052d83-28cf-4e52-89d0-d894e6472a95)\r\n\n\n### Browsers\n\nChrome\n\n### OS\n\nWindows, Linux\n\n### Version of Taipy\n\ndevelop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] navbar visually displays the first entry as being selected when on a page not in the navbar's lov\n### What went wrong? \ud83e\udd14\n\nIn the following example, there are 4 pages: page1, page2, page3 and config.\r\n\r\nconfig page is accessed via a separate button, so it is omitted from the navbar lov.\r\n\r\nPer attached screenshot, when navigating to the config page (via the button in this case), the navbar visually displays the first entry (page1 in this case) as being selected.\r\n\r\nExample code:\r\n\r\n```python\r\nfrom taipy.gui import Gui, navigate\r\nimport taipy.gui.builder as tgb\r\n\r\npage_list = [(f\"page{i+1}\", f\"Page {i+1}\", tgb.Page(tgb.text(f\"# Page {i+1}\", mode=\"md\"))) for i in range(3)]\r\nnavbar_lov = [(f\"/{page_name}\", page_label) for page_name, page_label, _ in page_list]\r\n\r\nconfig_page = tgb.Page(tgb.text(\"# Config Page\", mode=\"md\"))\r\n\r\nwith tgb.Page() as root_page:\r\n    with tgb.layout(columns=\"max-content max-content\"):\r\n        tgb.navbar(lov=\"{navbar_lov}\")\r\n        tgb.button(\"Go to config\", on_action=lambda state: navigate(state, \"config\", params=dict(), tab=\"_self\"))\r\n\r\n   \r\npages = {\"/\": root_page, \"config\": config_page}\r\npages.update({page_name: page for page_name, _, page in page_list})\r\n\r\ndef on_change(state, var_name, var_value):\r\n    print(var_name, type(var_value), var_value)\r\n\r\nif __name__ == \"__main__\":\r\n    gui = Gui(pages=pages)\r\n    gui.run(dark_mode=False)\r\n```\n\n### Expected Behavior\n\nnavbar should show everything as unselected if on a page not in its lov.\n\n### Screenshots\n\nI have clicked the button, and am on the config page:\r\n\r\n![image](https://github.com/user-attachments/assets/be052d83-28cf-4e52-89d0-d894e6472a95)\r\n\n\n### Browsers\n\nChrome\n\n### OS\n\nWindows, Linux\n\n### Version of Taipy\n\ndevelop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "@arcanaxion  I would like to pick this issue.\n> [@arcanaxion](https://github.com/arcanaxion) I would like to pick this issue.\n\nSorry @xyfer17 , I'm working on this already\n@arcanaxion  I would like to pick this issue.\n> [@arcanaxion](https://github.com/arcanaxion) I would like to pick this issue.\n\nSorry @xyfer17 , I'm working on this already", "created_at": "2025-01-16T17:01:42Z"}
{"repo": "Avaiga/taipy", "pull_number": 2400, "instance_id": "Avaiga__taipy-2400", "issue_numbers": ["2399", "2399"], "base_commit": "0541ed62b3fe1270d4bbff261267c1a668ffbd4f", "patch": "diff --git a/taipy/gui/gui.py b/taipy/gui/gui.py\nindex 9d11e1ee08..641ef279dc 100644\n--- a/taipy/gui/gui.py\n+++ b/taipy/gui/gui.py\n@@ -1948,10 +1948,11 @@ def _is_ui_blocked(self):\n         return _getscopeattr(self, Gui.__UI_BLOCK_NAME, False)\n \n     def __get_on_cancel_block_ui(self, callback: t.Optional[str]):\n-        def _taipy_on_cancel_block_ui(guiApp, id: t.Optional[str], payload: t.Any):\n-            if _hasscopeattr(guiApp, Gui.__UI_BLOCK_NAME):\n-                _setscopeattr(guiApp, Gui.__UI_BLOCK_NAME, False)\n-            guiApp.__on_action(id, {\"action\": callback})\n+        def _taipy_on_cancel_block_ui(a_state: State, id: t.Optional[str], payload: t.Any):\n+            gui_app = a_state.get_gui()\n+            if _hasscopeattr(gui_app, Gui.__UI_BLOCK_NAME):\n+                _setscopeattr(gui_app, Gui.__UI_BLOCK_NAME, False)\n+            gui_app.__on_action(id, {\"action\": callback})\n \n         return _taipy_on_cancel_block_ui\n \n@@ -2391,15 +2392,13 @@ def _hold_actions(\n         callback: t.Optional[t.Union[str, t.Callable]] = None,\n         message: t.Optional[str] = \"Work in Progress...\",\n     ):  # pragma: no cover\n-        action_name = (\n-            callback\n-            if isinstance(callback, str)\n-            else _get_lambda_id(t.cast(LambdaType, callback))\n-            if _is_unnamed_function(callback)\n-            else callback.__name__\n-            if callback is not None\n-            else None\n-        )\n+        if _is_unnamed_function(callback):\n+            action_name = _get_lambda_id(t.cast(LambdaType, callback))\n+            self._bind_var_val(action_name, callback)\n+        else:\n+            action_name = (\n+                callback if isinstance(callback, str) else (callback.__name__ if callback is not None else None)\n+            )\n         func = self.__get_on_cancel_block_ui(action_name)\n         def_action_name = func.__name__\n         _setscopeattr(self, def_action_name, func)\n@@ -2579,7 +2578,11 @@ def __render_page(self, page_name: str) -> t.Any:\n             with self._set_locals_context(context):\n                 self._call_on_page_load(nav_page)\n             return self._server._render(\n-                page._rendered_jsx, page._script_paths if page._script_paths is not None else [], page._style if page._style is not None else \"\", page._head, context # noqa: E501\n+                page._rendered_jsx,\n+                page._script_paths if page._script_paths is not None else [],\n+                page._style if page._style is not None else \"\",\n+                page._head,\n+                context,  # noqa: E501\n             )\n         else:\n             return (\"No page template\", 404)\ndiff --git a/taipy/gui/utils/callable.py b/taipy/gui/utils/callable.py\nindex e5c47c37a4..40586f3c6a 100644\n--- a/taipy/gui/utils/callable.py\n+++ b/taipy/gui/utils/callable.py\n@@ -11,7 +11,6 @@\n \n import typing as t\n from inspect import isclass\n-from types import LambdaType\n \n \n def _is_function(s: t.Any) -> bool:\n@@ -28,4 +27,4 @@ def _function_name(s: t.Any) -> str:\n \n \n def _is_unnamed_function(s: t.Any):\n-    return isinstance(s, LambdaType) or (callable(s) and not hasattr(s, \"__name__\"))\n+    return (hasattr(s, \"__name__\") and s.__name__ == \"<lambda>\") or (callable(s) and not hasattr(s, \"__name__\"))\n", "test_patch": "diff --git a/tests/gui/gui_specific/test_callable.py b/tests/gui/gui_specific/test_callable.py\nnew file mode 100644\nindex 0000000000..2ac3f6906b\n--- /dev/null\n+++ b/tests/gui/gui_specific/test_callable.py\n@@ -0,0 +1,58 @@\n+# Copyright 2021-2025 Avaiga Private Limited\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+#        http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+# an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+# specific language governing permissions and limitations under the License.\n+\n+from taipy.gui.utils.callable import _function_name, _is_function, _is_unnamed_function\n+\n+\n+def my_function():\n+    pass\n+\n+\n+class my_class:\n+    pass\n+\n+\n+class my_callable_class:\n+    def __call__(self):\n+        pass\n+\n+\n+def test__is_unnamed_function():\n+    assert _is_unnamed_function(my_function) is False\n+    assert _is_unnamed_function(lambda x: x) is True\n+    assert _is_unnamed_function(\"a\") is False\n+\n+\n+def test__is_function():\n+    assert _is_function(my_function) is True\n+    assert _is_function(lambda x: x) is True\n+    assert _is_function(\"a\") is False\n+\n+\n+def test__function_name():\n+    assert _function_name(my_function) == \"my_function\"\n+    assert _function_name(lambda x: x) == \"<lambda>\"\n+    assert _function_name(\"a\") == \"a\"\n+    assert _function_name(1) == \"1\"\n+    assert _function_name(1.0) == \"1.0\"\n+    assert _function_name(True) == \"True\"\n+    assert _function_name(False) == \"False\"\n+    assert _function_name(None) == \"None\"\n+    assert _function_name([]) == \"[]\"\n+    assert _function_name({}) == \"{}\"\n+    assert _function_name(set()) == \"set()\"\n+    assert _function_name(tuple()) == \"()\"  # noqa C408\n+    assert _function_name(object) == \"object\"\n+    assert _function_name(object()).startswith(\"<object \")\n+    assert _function_name(my_class) == \"my_class\"\n+    assert _function_name(my_class()).startswith(\"<tests.gui.gui_specific.test_callable.my_class \")\n+    assert _function_name(my_callable_class) == \"my_callable_class\"\n+    assert _function_name(my_callable_class()) == \"<instance of my_callable_class>\"\n", "problem_statement": "[\ud83d\udc1b BUG] Issue with hold_control\n### What went wrong? \ud83e\udd14\n\nCallback of *hold_control* does not seem to be called.\n\n### Expected Behavior\n\nIt should be called and print the correct output.\n\n### Steps to Reproduce Issue\n\nRun this and click on the button. It should print something:\r\n\r\n```python\r\nimport time\r\n\r\nfrom taipy.gui import Gui\r\nfrom taipy.gui import builder as tgb\r\nfrom taipy.gui import hold_control, resume_control\r\n\r\n\r\ndef cancel_callback(state, id):\r\n    print(f\"Callback triggered with id: {id} and state: {state}\")\r\n\r\n\r\ndef callback_with_hold(state):\r\n    hold_control(state, callback=cancel_callback, message=\"waiting\")\r\n    time.sleep(5)\r\n    resume_control(state)\r\n\r\n\r\nwith tgb.Page() as hold_and_resume_page:\r\n    tgb.text(\"# Hold and Resume control\", mode=\"md\")\r\n\r\n    tgb.button(\"trigger callback!\", on_action=callback_with_hold)\r\n\r\nif __name__ == \"__main__\":\r\n    Gui(page=hold_and_resume_page).run(use_reloader=True, dark_mode=False, port=1234)\r\n\r\n```\n\n### Version of Taipy\n\n4.0.2\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Issue with hold_control\n### What went wrong? \ud83e\udd14\n\nCallback of *hold_control* does not seem to be called.\n\n### Expected Behavior\n\nIt should be called and print the correct output.\n\n### Steps to Reproduce Issue\n\nRun this and click on the button. It should print something:\r\n\r\n```python\r\nimport time\r\n\r\nfrom taipy.gui import Gui\r\nfrom taipy.gui import builder as tgb\r\nfrom taipy.gui import hold_control, resume_control\r\n\r\n\r\ndef cancel_callback(state, id):\r\n    print(f\"Callback triggered with id: {id} and state: {state}\")\r\n\r\n\r\ndef callback_with_hold(state):\r\n    hold_control(state, callback=cancel_callback, message=\"waiting\")\r\n    time.sleep(5)\r\n    resume_control(state)\r\n\r\n\r\nwith tgb.Page() as hold_and_resume_page:\r\n    tgb.text(\"# Hold and Resume control\", mode=\"md\")\r\n\r\n    tgb.button(\"trigger callback!\", on_action=callback_with_hold)\r\n\r\nif __name__ == \"__main__\":\r\n    Gui(page=hold_and_resume_page).run(use_reloader=True, dark_mode=False, port=1234)\r\n\r\n```\n\n### Version of Taipy\n\n4.0.2\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "\n", "created_at": "2025-01-15T09:26:49Z"}
{"repo": "Avaiga/taipy", "pull_number": 2390, "instance_id": "Avaiga__taipy-2390", "issue_numbers": ["2338", "2338"], "base_commit": "b85c290a2df29e66aede94f5585dca7757987b99", "patch": "diff --git a/frontend/taipy-gui/src/components/Taipy/Chart.spec.tsx b/frontend/taipy-gui/src/components/Taipy/Chart.spec.tsx\nindex 0b333f655d..2705cfa790 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Chart.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Chart.spec.tsx\n@@ -60,7 +60,7 @@ const chartValue = {\n     },\n };\n const chartConfig = JSON.stringify({\n-    columns: { Day_str: { dfid: \"Day\" }, \"Daily hospital occupancy\": { dfid: \"Daily hospital occupancy\" } },\n+    columns: [{ Day_str: { dfid: \"Day\" }, \"Daily hospital occupancy\": { dfid: \"Daily hospital occupancy\" } }],\n     traces: [[\"Day_str\", \"Daily hospital occupancy\"]],\n     xaxis: [\"x\"],\n     yaxis: [\"y\"],\n@@ -86,7 +86,7 @@ const mapValue = {\n     },\n };\n const mapConfig = JSON.stringify({\n-    columns: { Lat: { dfid: \"Lat\" }, Lon: { dfid: \"Lon\" } },\n+    columns: [{ Lat: { dfid: \"Lat\" }, Lon: { dfid: \"Lon\" } }],\n     traces: [[\"Lat\", \"Lon\"]],\n     xaxis: [\"x\"],\n     yaxis: [\"y\"],\n@@ -173,7 +173,7 @@ describe(\"Chart Component\", () => {\n             payload: { id: \"chart\", names: [\"varName\"], refresh: false },\n             type: \"REQUEST_UPDATE\",\n         });\n-        expect(dispatch).toHaveBeenCalledWith({\n+        await waitFor(() => expect(dispatch).toHaveBeenCalledWith({\n             name: \"data_var\",\n             payload: {\n                 alldata: true,\n@@ -183,7 +183,7 @@ describe(\"Chart Component\", () => {\n                 id: \"chart\",\n             },\n             type: \"REQUEST_DATA_UPDATE\",\n-        });\n+        }));\n     });\n     it(\"dispatch a well formed message on selection\", async () => {\n         const dispatch = jest.fn();\ndiff --git a/frontend/taipy-gui/src/components/Taipy/Chart.tsx b/frontend/taipy-gui/src/components/Taipy/Chart.tsx\nindex bdcc976fdd..86bebfc2ee 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Chart.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Chart.tsx\n@@ -60,6 +60,7 @@ interface ChartProp extends TaipyActiveProps, TaipyChangeProps {\n     defaultConfig: string;\n     config?: string;\n     data?: Record<string, TraceValueType>;\n+    //data${number}?: Record<string, TraceValueType>;\n     defaultLayout?: string;\n     layout?: string;\n     plotConfig?: string;\n@@ -69,13 +70,14 @@ interface ChartProp extends TaipyActiveProps, TaipyChangeProps {\n     template?: string;\n     template_Dark_?: string;\n     template_Light_?: string;\n-    //[key: `selected_${number}`]: number[];\n+    //[key: `selected${number}`]: number[];\n     figure?: Array<Record<string, unknown>>;\n     onClick?: string;\n+    dataVarNames?: string;\n }\n \n interface ChartConfig {\n-    columns: Record<string, ColumnDesc>;\n+    columns: Array<Record<string, ColumnDesc>>;\n     labels: string[];\n     modes: string[];\n     types: string[];\n@@ -217,7 +219,7 @@ export const getPlotIndex = (pt: PlotDatum) =>\n         : pt.pointIndex;\n \n const defaultConfig = {\n-    columns: {} as Record<string, ColumnDesc>,\n+    columns: [] as Array<Record<string, ColumnDesc>>,\n     labels: [],\n     modes: [],\n     types: [],\n@@ -285,6 +287,15 @@ const getDataKey = (columns?: Record<string, ColumnDesc>, decimators?: string[])\n     return [backCols, backCols.join(\"-\") + (decimators ? `--${decimators.join(\"\")}` : \"\")];\n };\n \n+const isDataRefresh = (data?: Record<string, TraceValueType>) => data?.__taipy_refresh !== undefined;\n+const getDataVarName = (updateVarName: string | undefined, dataVarNames: string[], idx: number) =>\n+    idx === 0 ? updateVarName : dataVarNames[idx - 1];\n+const getData = (\n+    data: Record<string, TraceValueType>,\n+    additionalDatas: Array<Record<string, TraceValueType>>,\n+    idx: number\n+) => (idx === 0 ? data : (idx <= additionalDatas.length ? additionalDatas[idx - 1]: undefined));\n+\n const Chart = (props: ChartProp) => {\n     const {\n         title = \"\",\n@@ -301,18 +312,36 @@ const Chart = (props: ChartProp) => {\n     const dispatch = useDispatch();\n     const [selected, setSelected] = useState<number[][]>([]);\n     const plotRef = useRef<HTMLDivElement>(null);\n-    const [dataKey, setDataKey] = useState(\"__default__\");\n+    const [dataKeys, setDataKeys] = useState<string[]>([]);\n     const lastDataPl = useRef<Data[]>([]);\n     const theme = useTheme();\n     const module = useModule();\n \n-    const refresh = useMemo(() => (data?.__taipy_refresh !== undefined ? nanoid() : false), [data]);\n     const className = useClassNames(props.libClassName, props.dynamicClassName, props.className);\n     const active = useDynamicProperty(props.active, props.defaultActive, true);\n     const render = useDynamicProperty(props.render, props.defaultRender, true);\n     const hover = useDynamicProperty(props.hoverText, props.defaultHoverText, undefined);\n     const baseLayout = useDynamicJsonProperty(props.layout, props.defaultLayout || \"\", emptyLayout);\n \n+    const dataVarNames = useMemo(() => (props.dataVarNames ? props.dataVarNames.split(\";\") : []), [props.dataVarNames]);\n+    const oldAdditionalDatas = useRef<Array<Record<string, TraceValueType>>>([]);\n+    const additionalDatas = useMemo(() => {\n+        const newAdditionalDatas = dataVarNames.map(\n+            (_, idx) => (props as unknown as Record<string, Record<string, TraceValueType>>)[`data${idx + 1}`]\n+        );\n+        if (newAdditionalDatas.length !== oldAdditionalDatas.current.length) {\n+            oldAdditionalDatas.current = newAdditionalDatas;\n+        } else if (!newAdditionalDatas.every((d, idx) => d === oldAdditionalDatas.current[idx])) {\n+            oldAdditionalDatas.current = newAdditionalDatas;\n+        }\n+        return oldAdditionalDatas.current;\n+    }, [dataVarNames, props]);\n+\n+    const refresh = useMemo(\n+        () => (isDataRefresh(data) || additionalDatas.some((d) => isDataRefresh(d)) ? nanoid() : false),\n+        [data, additionalDatas]\n+    );\n+\n     // get props.selected[i] values\n     useEffect(() => {\n         if (props.figure) {\n@@ -353,30 +382,53 @@ const Chart = (props: ChartProp) => {\n     const config = useDynamicJsonProperty(props.config, props.defaultConfig, defaultConfig);\n \n     useEffect(() => {\n-        if (updateVarName) {\n-            const [backCols, dtKey] = getDataKey(config.columns, config.decimators);\n-            setDataKey(dtKey);\n-            if (refresh || !data[dtKey]) {\n-                dispatch(\n-                    createRequestChartUpdateAction(\n-                        updateVarName,\n-                        id,\n-                        module,\n-                        backCols,\n-                        dtKey,\n-                        getDecimatorsPayload(\n-                            config.decimators,\n-                            plotRef.current,\n-                            config.modes,\n-                            config.columns,\n-                            config.traces\n-                        )\n-                    )\n-                );\n-            }\n-        }\n+        setDataKeys((oldDtKeys) => {\n+            let changed = false;\n+            const newDtKeys = (config.columns || []).map((columns, idx) => {\n+                const varName = getDataVarName(updateVarName, dataVarNames, idx);\n+                if (varName) {\n+                    const [backCols, dtKey] = getDataKey(columns, config.decimators);\n+                    changed = changed || idx > oldDtKeys.length || oldDtKeys[idx] !== dtKey;\n+                    const lData = getData(data, additionalDatas, idx);\n+                    if (lData === undefined || isDataRefresh(lData) || !lData[dtKey]) {\n+                        Promise.resolve().then(() =>\n+                            dispatch(\n+                                createRequestChartUpdateAction(\n+                                    varName,\n+                                    id,\n+                                    module,\n+                                    backCols,\n+                                    dtKey,\n+                                    getDecimatorsPayload(\n+                                        config.decimators,\n+                                        plotRef.current,\n+                                        config.modes,\n+                                        columns,\n+                                        config.traces\n+                                    )\n+                                )\n+                            )\n+                        );\n+                    }\n+                    return dtKey;\n+                }\n+                return \"\";\n+            });\n+            return changed ? newDtKeys : oldDtKeys;\n+        });\n         // eslint-disable-next-line react-hooks/exhaustive-deps\n-    }, [refresh, dispatch, config.columns, config.traces, config.modes, config.decimators, updateVarName, id, module]);\n+    }, [\n+        refresh,\n+        dispatch,\n+        config.columns,\n+        config.traces,\n+        config.modes,\n+        config.decimators,\n+        updateVarName,\n+        dataVarNames,\n+        id,\n+        module,\n+    ]);\n \n     useDispatchRequestUpdateOnFirstRender(dispatch, id, module, updateVars);\n \n@@ -411,14 +463,14 @@ const Chart = (props: ChartProp) => {\n             xaxis: {\n                 title:\n                     config.traces.length && config.traces[0].length && config.traces[0][0]\n-                        ? getColNameFromIndexed(config.columns[config.traces[0][0]]?.dfid)\n+                        ? getColNameFromIndexed(config.columns[0][config.traces[0][0]]?.dfid)\n                         : undefined,\n                 ...layout.xaxis,\n             },\n             yaxis: {\n                 title:\n-                    config.traces.length == 1 && config.traces[0].length > 1 && config.columns[config.traces[0][1]]\n-                        ? getColNameFromIndexed(config.columns[config.traces[0][1]]?.dfid)\n+                    config.traces.length == 1 && config.traces[0].length > 1 && config.columns[0][config.traces[0][1]]\n+                        ? getColNameFromIndexed(config.columns[0][config.traces[0][1]]?.dfid)\n                         : undefined,\n                 ...layout.yaxis,\n             },\n@@ -447,98 +499,112 @@ const Chart = (props: ChartProp) => {\n \n     const dataPl = useMemo(() => {\n         if (props.figure) {\n-            return lastDataPl.current;\n-        }\n-        if (data.__taipy_refresh !== undefined) {\n             return lastDataPl.current || [];\n         }\n-        const dtKey = getDataKey(config.columns, config.decimators)[1];\n-        if (!dataKey.startsWith(dtKey)) {\n+        const dataList = dataKeys.map((_, idx) => getData(data, additionalDatas, idx));\n+        if (!dataList.length || dataList.every((d) => !d || isDataRefresh(d) || !Object.keys(d).length)) {\n             return lastDataPl.current || [];\n         }\n-        const datum = data[dataKey];\n-        lastDataPl.current = datum\n-            ? config.traces.map((trace, idx) => {\n-                  const ret = {\n-                      ...getArrayValue(config.options, idx, {}),\n-                      type: config.types[idx],\n-                      mode: config.modes[idx],\n-                      name:\n-                          getArrayValue(config.names, idx) ||\n-                          (config.columns[trace[1]] ? getColNameFromIndexed(config.columns[trace[1]].dfid) : undefined),\n-                  } as Record<string, unknown>;\n-                  ret.marker = { ...getArrayValue(config.markers, idx, ret.marker || {}) };\n-                  if (Object.keys(ret.marker as object).length) {\n-                      MARKER_TO_COL.forEach((prop) => {\n-                          const val = (ret.marker as Record<string, unknown>)[prop];\n-                          if (typeof val === \"string\") {\n-                              const arr = getValueFromCol(datum, val as string);\n-                              if (arr.length) {\n-                                  (ret.marker as Record<string, unknown>)[prop] = arr;\n-                              }\n-                          }\n-                      });\n-                  } else {\n-                      delete ret.marker;\n-                  }\n-                  const xs = getValue(datum, trace, 0) || [];\n-                  const ys = getValue(datum, trace, 1) || [];\n-                  const addIndex = getArrayValue(config.addIndex, idx, true) && !ys.length;\n-                  const baseX = addIndex ? Array.from(Array(xs.length).keys()) : xs;\n-                  const baseY = addIndex ? xs : ys;\n-                  const axisNames = config.axisNames.length > idx ? config.axisNames[idx] : ([] as string[]);\n-                  if (baseX.length) {\n-                      if (axisNames.length > 0) {\n-                          ret[axisNames[0]] = baseX;\n-                      } else {\n-                          ret.x = baseX;\n-                      }\n-                  }\n-                  if (baseY.length) {\n-                      if (axisNames.length > 1) {\n-                          ret[axisNames[1]] = baseY;\n-                      } else {\n-                          ret.y = baseY;\n-                      }\n-                  }\n-                  const baseZ = getValue(datum, trace, 2, true);\n-                  if (baseZ) {\n-                      if (axisNames.length > 2) {\n-                          ret[axisNames[2]] = baseZ;\n-                      } else {\n-                          ret.z = baseZ;\n-                      }\n-                  }\n-                  // Hack for treemap charts: create a fallback 'parents' column if needed\n-                  // This works ONLY because 'parents' is the third named axis\n-                  // (see __CHART_AXIS in gui/utils/chart_config_builder.py)\n-                  else if (config.types[idx] === \"treemap\" && Array.isArray(ret.labels)) {\n-                      ret.parents = Array(ret.labels.length).fill(\"\");\n-                  }\n-                  // Other axis\n-                  for (let i = 3; i < axisNames.length; i++) {\n-                      ret[axisNames[i]] = getValue(datum, trace, i, true);\n-                  }\n-                  ret.text = getValue(datum, config.texts, idx, true);\n-                  ret.xaxis = config.xaxis[idx];\n-                  ret.yaxis = config.yaxis[idx];\n-                  ret.hovertext = getValue(datum, config.labels, idx, true);\n-                  const selPoints = getArrayValue(selected, idx, []);\n-                  if (selPoints?.length) {\n-                      ret.selectedpoints = selPoints;\n-                  }\n-                  ret.orientation = getArrayValue(config.orientations, idx);\n-                  ret.line = getArrayValue(config.lines, idx);\n-                  ret.textposition = getArrayValue(config.textAnchors, idx);\n-                  const selectedMarker = getArrayValue(config.selectedMarkers, idx);\n-                  if (selectedMarker) {\n-                      ret.selected = { marker: selectedMarker };\n-                  }\n-                  return ret as Data;\n-              })\n-            : lastDataPl.current || [];\n+        let changed = false;\n+        const newDataPl = config.traces.map((trace, idx) => {\n+            const currentData = idx < lastDataPl.current.length ? lastDataPl.current[idx] : {};\n+            const dataKey = idx < dataKeys.length ? dataKeys[idx] : dataKeys[0];\n+            const lData = idx < dataList.length ? dataList[idx] : dataList[0];\n+            if (!lData || isDataRefresh(lData) || !Object.keys(lData).length) {\n+                return currentData;\n+            }\n+            const dtKey = getDataKey(\n+                idx < config.columns?.length ? config.columns[idx] : undefined,\n+                config.decimators\n+            )[1];\n+            if (!dataKey.startsWith(dtKey) || !dtKey.length) {\n+                return currentData;\n+            }\n+            changed = true;\n+            const datum = lData[dataKey];\n+            const columns = config.columns[idx];\n+            const ret = {\n+                ...getArrayValue(config.options, idx, {}),\n+                type: config.types[idx],\n+                mode: config.modes[idx],\n+                name:\n+                    getArrayValue(config.names, idx) ||\n+                    (columns[trace[1]] ? getColNameFromIndexed(columns[trace[1]].dfid) : undefined),\n+            } as Record<string, unknown>;\n+            ret.marker = { ...getArrayValue(config.markers, idx, ret.marker || {}) };\n+            if (Object.keys(ret.marker as object).length) {\n+                MARKER_TO_COL.forEach((prop) => {\n+                    const val = (ret.marker as Record<string, unknown>)[prop];\n+                    if (typeof val === \"string\") {\n+                        const arr = getValueFromCol(datum, val as string);\n+                        if (arr.length) {\n+                            (ret.marker as Record<string, unknown>)[prop] = arr;\n+                        }\n+                    }\n+                });\n+            } else {\n+                delete ret.marker;\n+            }\n+            const xs = getValue(datum, trace, 0) || [];\n+            const ys = getValue(datum, trace, 1) || [];\n+            const addIndex = getArrayValue(config.addIndex, idx, true) && !ys.length;\n+            const baseX = addIndex ? Array.from(Array(xs.length).keys()) : xs;\n+            const baseY = addIndex ? xs : ys;\n+            const axisNames = config.axisNames.length > idx ? config.axisNames[idx] : ([] as string[]);\n+            if (baseX.length) {\n+                if (axisNames.length > 0) {\n+                    ret[axisNames[0]] = baseX;\n+                } else {\n+                    ret.x = baseX;\n+                }\n+            }\n+            if (baseY.length) {\n+                if (axisNames.length > 1) {\n+                    ret[axisNames[1]] = baseY;\n+                } else {\n+                    ret.y = baseY;\n+                }\n+            }\n+            const baseZ = getValue(datum, trace, 2, true);\n+            if (baseZ) {\n+                if (axisNames.length > 2) {\n+                    ret[axisNames[2]] = baseZ;\n+                } else {\n+                    ret.z = baseZ;\n+                }\n+            }\n+            // Hack for treemap charts: create a fallback 'parents' column if needed\n+            // This works ONLY because 'parents' is the third named axis\n+            // (see __CHART_AXIS in gui/utils/chart_config_builder.py)\n+            else if (config.types[idx] === \"treemap\" && Array.isArray(ret.labels)) {\n+                ret.parents = Array(ret.labels.length).fill(\"\");\n+            }\n+            // Other axis\n+            for (let i = 3; i < axisNames.length; i++) {\n+                ret[axisNames[i]] = getValue(datum, trace, i, true);\n+            }\n+            ret.text = getValue(datum, config.texts, idx, true);\n+            ret.xaxis = config.xaxis[idx];\n+            ret.yaxis = config.yaxis[idx];\n+            ret.hovertext = getValue(datum, config.labels, idx, true);\n+            const selPoints = getArrayValue(selected, idx, []);\n+            if (selPoints?.length) {\n+                ret.selectedpoints = selPoints;\n+            }\n+            ret.orientation = getArrayValue(config.orientations, idx);\n+            ret.line = getArrayValue(config.lines, idx);\n+            ret.textposition = getArrayValue(config.textAnchors, idx);\n+            const selectedMarker = getArrayValue(config.selectedMarkers, idx);\n+            if (selectedMarker) {\n+                ret.selected = { marker: selectedMarker };\n+            }\n+            return ret as Data;\n+        });\n+        if (changed) {\n+            lastDataPl.current = newDataPl;\n+        }\n         return lastDataPl.current;\n-    }, [props.figure, selected, data, config, dataKey]);\n+    }, [props.figure, selected, data, additionalDatas, config, dataKeys]);\n \n     const plotConfig = useMemo(() => {\n         let plConf: Partial<Config> = {};\n@@ -567,28 +633,41 @@ const Chart = (props: ChartProp) => {\n         (eventData: PlotRelayoutEvent) => {\n             onRangeChange && dispatch(createSendActionNameAction(id, module, { action: onRangeChange, ...eventData }));\n             if (config.decimators && !config.types.includes(\"scatter3d\")) {\n-                const [backCols, dtKeyBase] = getDataKey(config.columns, config.decimators);\n+                const [backCols, dtKeyBase] = getDataKey(\n+                    config.columns?.length ? config.columns[0] : undefined,\n+                    config.decimators\n+                );\n                 const dtKey = `${dtKeyBase}--${Object.entries(eventData)\n                     .map(([k, v]) => `${k}=${v}`)\n                     .join(\"-\")}`;\n-                setDataKey(dtKey);\n-                dispatch(\n-                    createRequestChartUpdateAction(\n-                        updateVarName,\n-                        id,\n-                        module,\n-                        backCols,\n-                        dtKey,\n-                        getDecimatorsPayload(\n-                            config.decimators,\n-                            plotRef.current,\n-                            config.modes,\n-                            config.columns,\n-                            config.traces,\n-                            eventData\n-                        )\n-                    )\n-                );\n+                setDataKeys((oldDataKeys) => {\n+                    if (oldDataKeys.length === 0) {\n+                        return [dtKey];\n+                    }\n+                    if (oldDataKeys[0] !== dtKey) {\n+                        Promise.resolve().then(() =>\n+                            dispatch(\n+                                createRequestChartUpdateAction(\n+                                    updateVarName,\n+                                    id,\n+                                    module,\n+                                    backCols,\n+                                    dtKey,\n+                                    getDecimatorsPayload(\n+                                        config.decimators,\n+                                        plotRef.current,\n+                                        config.modes,\n+                                        config.columns?.length ? config.columns[0] : {},\n+                                        config.traces,\n+                                        eventData\n+                                    )\n+                                )\n+                            )\n+                        );\n+                        return [dtKey, ...oldDataKeys.slice(1)];\n+                    }\n+                    return oldDataKeys;\n+                });\n             }\n         },\n         [\n@@ -646,15 +725,21 @@ const Chart = (props: ChartProp) => {\n     );\n \n     const getRealIndex = useCallback(\n-        (index?: number) =>\n-            typeof index === \"number\"\n+        (dataIdx: number, index?: number) => {\n+            const lData = getData(data, additionalDatas, dataIdx);\n+            if (!lData) {\n+                return index || 0;\n+            }\n+            const dtKey = dataKeys[dataIdx];\n+            return typeof index === \"number\"\n                 ? props.figure\n                     ? index\n-                    : data[dataKey].tp_index\n-                    ? (data[dataKey].tp_index[index] as number)\n+                    : lData[dtKey].tp_index\n+                    ? (lData[dtKey].tp_index[index] as number)\n                     : index\n-                : 0,\n-        [data, dataKey, props.figure]\n+                : 0;\n+        },\n+        [data, additionalDatas, dataKeys, props.figure]\n     );\n \n     const onSelect = useCallback(\n@@ -662,7 +747,7 @@ const Chart = (props: ChartProp) => {\n             if (updateVars) {\n                 const traces = (evt?.points || []).reduce((tr, pt) => {\n                     tr[pt.curveNumber] = tr[pt.curveNumber] || [];\n-                    tr[pt.curveNumber].push(getRealIndex(getPlotIndex(pt)));\n+                    tr[pt.curveNumber].push(getRealIndex(pt.curveNumber, getPlotIndex(pt)));\n                     return tr;\n                 }, [] as number[][]);\n                 if (config.traces.length === 0) {\ndiff --git a/taipy/gui/_renderers/builder.py b/taipy/gui/_renderers/builder.py\nindex 02eea87fae..ba9d5ee95a 100644\n--- a/taipy/gui/_renderers/builder.py\n+++ b/taipy/gui/_renderers/builder.py\n@@ -610,7 +610,7 @@ def _get_chart_config(self, default_type: str, default_mode: str):\n         self.__attributes[\"_default_mode\"] = default_mode\n         rebuild_fn_hash = self.__build_rebuild_fn(\n             self.__gui._get_call_method_name(\"_chart_conf\"),\n-            _CHART_NAMES + (\"_default_type\", \"_default_mode\", \"data\"),\n+            _CHART_NAMES + (\"_default_type\", \"_default_mode\"),\n         )\n         if rebuild_fn_hash:\n             self.__set_react_attribute(\"config\", rebuild_fn_hash)\n@@ -618,7 +618,23 @@ def _get_chart_config(self, default_type: str, default_mode: str):\n         # read column definitions\n         data = self.__attributes.get(\"data\")\n         data_hash = self.__hashes.get(\"data\", \"\")\n-        col_types = self.__gui._get_accessor().get_col_types(data_hash, _TaipyData(data, data_hash))\n+        col_types = [self.__gui._get_accessor().get_col_types(data_hash, _TaipyData(data, data_hash))]\n+\n+        if data_hash:\n+            data_updates: t.List[str] = []\n+            data_idx = 1\n+            name_idx = f\"data[{data_idx}]\"\n+            while add_data_hash := self.__hashes.get(name_idx):\n+                typed_hash = self.__get_typed_hash_name(add_data_hash, _TaipyData)\n+                data_updates.append(typed_hash)\n+                self.__set_react_attribute(f\"data{data_idx}\",_get_client_var_name(typed_hash))\n+                add_data = self.__attributes.get(name_idx)\n+                data_idx += 1\n+                name_idx = f\"data[{data_idx}]\"\n+                col_types.append(\n+                    self.__gui._get_accessor().get_col_types(add_data_hash, _TaipyData(add_data, add_data_hash))\n+                )\n+            self.set_attribute(\"dataVarNames\", \";\".join(data_updates))\n \n         config = _build_chart_config(self.__gui, self.__attributes, col_types)\n \ndiff --git a/taipy/gui/gui.py b/taipy/gui/gui.py\nindex e2d57fc0f8..eff45ecb09 100644\n--- a/taipy/gui/gui.py\n+++ b/taipy/gui/gui.py\n@@ -1903,11 +1903,18 @@ def _chart_conf(\n                 rebuild = rebuild_val if rebuild_val is not None else rebuild\n                 if rebuild:\n                     attributes, hashes = self.__get_attributes(attr_json, hash_json, kwargs)\n-                    data_hash = hashes.get(\"data\", \"\")\n+                    idx = 0\n+                    data_hashes = []\n+                    while data_hash := hashes.get(\"data\" if idx == 0 else f\"data[{idx}]\", \"\"):\n+                        data_hashes.append(data_hash)\n+                        idx += 1\n                     config = _build_chart_config(\n                         self,\n                         attributes,\n-                        self._get_accessor().get_col_types(data_hash, _TaipyData(kwargs.get(data_hash), data_hash)),\n+                        [\n+                            self._get_accessor().get_col_types(data_hash, _TaipyData(kwargs.get(data_hash), data_hash))\n+                            for data_hash in data_hashes\n+                        ],\n                     )\n \n                     return json.dumps(config, cls=_TaipyJsonEncoder)\ndiff --git a/taipy/gui/utils/chart_config_builder.py b/taipy/gui/utils/chart_config_builder.py\nindex 6206cb93f4..4ce9c68e66 100644\n--- a/taipy/gui/utils/chart_config_builder.py\n+++ b/taipy/gui/utils/chart_config_builder.py\n@@ -112,7 +112,7 @@ def __get_col_from_indexed(col_name: str, idx: int) -> t.Optional[str]:\n     return col_name\n \n \n-def _build_chart_config(gui: \"Gui\", attributes: t.Dict[str, t.Any], col_types: t.Dict[str, str]):  # noqa: C901\n+def _build_chart_config(gui: \"Gui\", attributes: t.Dict[str, t.Any], col_types_list: t.List[t.Dict[str, str]]):  # noqa: C901\n     if \"data\" not in attributes and \"figure\" in attributes:\n         return {\"traces\": []}\n     default_type = attributes.get(\"_default_type\", \"scatter\")\n@@ -167,32 +167,47 @@ def _build_chart_config(gui: \"Gui\", attributes: t.Dict[str, t.Any], col_types: t\n         # axis names\n         axis.append(__CHART_AXIS.get(trace[_Chart_iprops.type.value] or \"\", __CHART_DEFAULT_AXIS))\n \n+    idx = 1\n+    while f\"data[{idx}]\" in attributes:\n+        if idx >= len(traces):\n+            traces.append(list(traces[0]))\n+            axis.append(__CHART_AXIS.get(traces[0][_Chart_iprops.type.value] or \"\", __CHART_DEFAULT_AXIS))\n+        idx += 1\n+\n     # list of data columns name indexes with label text\n     dt_idx = tuple(e.value for e in (axis[0] + (_Chart_iprops.label, _Chart_iprops.text)))\n \n     # configure columns\n-    columns: t.Set[str] = set()\n-    for j, trace in enumerate(traces):\n+    columns: t.List[t.Set[str]] = [set()] * len(traces)\n+    for idx, trace in enumerate(traces):\n         dt_idx = tuple(\n-            e.value for e in (axis[j] if j < len(axis) else axis[0]) + (_Chart_iprops.label, _Chart_iprops.text)\n+            e.value for e in (axis[idx] if idx < len(axis) else axis[0]) + (_Chart_iprops.label, _Chart_iprops.text)\n         )\n-        columns.update([trace[i] or \"\" for i in dt_idx if trace[i]])\n+        columns[idx].update([trace[i] or \"\" for i in dt_idx if trace[i]])\n     # add optional column if any\n     markers = [\n         t[_Chart_iprops.marker.value]\n         or ({\"color\": t[_Chart_iprops.color.value]} if t[_Chart_iprops.color.value] else None)\n         for t in traces\n     ]\n-    opt_cols = set()\n-    for m in markers:\n+    opt_cols: t.List[t.Set[str]] = [set()] * len(traces)\n+    for idx, m in enumerate(markers):\n         if isinstance(m, (dict, _MapDict)):\n             for prop1 in __CHART_MARKER_TO_COLS:\n                 val = m.get(prop1)\n-                if isinstance(val, str) and val not in columns:\n-                    opt_cols.add(val)\n+                if isinstance(val, str) and val not in columns[idx]:\n+                    opt_cols[idx].add(val)\n \n     # Validate the column names\n-    col_dict = _get_columns_dict(attributes.get(\"data\"), list(columns), col_types, opt_columns=opt_cols)\n+    col_dicts = []\n+    for idx, col_types in enumerate(col_types_list):\n+        if add_col_dict := _get_columns_dict(\n+            attributes.get(\"data\" if idx == 0 else f\"data[{idx}]\"),\n+            list(columns[idx] if idx < len(columns) else columns[0]),\n+            col_types,\n+            opt_columns=opt_cols[idx] if idx < len(opt_cols) else opt_cols[0],\n+        ):\n+            col_dicts.append(add_col_dict)\n \n     # Manage Decimator\n     decimators: t.List[t.Optional[str]] = []\n@@ -208,7 +223,14 @@ def _build_chart_config(gui: \"Gui\", attributes: t.Dict[str, t.Any], col_types: t\n \n     # set default columns if not defined\n     icols = [\n-        [c2 for c2 in [__get_col_from_indexed(c1, i) for c1 in t.cast(dict, col_dict).keys()] if c2]\n+        [\n+            c2\n+            for c2 in [\n+                __get_col_from_indexed(c1, i)\n+                for c1 in t.cast(dict, col_dicts[i] if i < len(col_dicts) else col_dicts[0]).keys()\n+            ]\n+            if c2\n+        ]\n         for i in range(len(traces))\n     ]\n \n@@ -222,21 +244,24 @@ def _build_chart_config(gui: \"Gui\", attributes: t.Dict[str, t.Any], col_types: t\n                     for j, v in enumerate(tr)\n                 ]\n \n-    if col_dict is not None:\n-        reverse_cols = {str(cd.get(\"dfid\")): c for c, cd in col_dict.items()}\n+    if col_dicts:\n+        reverse_cols = [{str(cd.get(\"dfid\")): c for c, cd in col_dict.items()} for col_dict in col_dicts]\n+        for idx in range(len(traces)):\n+            if idx < len(reverse_cols):\n+                reverse_cols.append(reverse_cols[0])\n \n         # List used axis\n         used_axis = [[e for e in (axis[j] if j < len(axis) else axis[0]) if tr[e.value]] for j, tr in enumerate(traces)]\n \n         ret_dict = {\n-            \"columns\": col_dict,\n+            \"columns\": col_dicts,\n             \"labels\": [\n-                reverse_cols.get(tr[_Chart_iprops.label.value] or \"\", (tr[_Chart_iprops.label.value] or \"\"))\n-                for tr in traces\n+                reverse_cols[idx].get(tr[_Chart_iprops.label.value] or \"\", (tr[_Chart_iprops.label.value] or \"\"))\n+                for idx, tr in enumerate(traces)\n             ],\n             \"texts\": [\n-                reverse_cols.get(tr[_Chart_iprops.text.value] or \"\", (tr[_Chart_iprops.text.value] or None))\n-                for tr in traces\n+                reverse_cols[idx].get(tr[_Chart_iprops.text.value] or \"\", (tr[_Chart_iprops.text.value] or None))\n+                for idx, tr in enumerate(traces)\n             ],\n             \"modes\": [tr[_Chart_iprops.mode.value] for tr in traces],\n             \"types\": [tr[_Chart_iprops.type.value] for tr in traces],\n@@ -253,8 +278,8 @@ def _build_chart_config(gui: \"Gui\", attributes: t.Dict[str, t.Any], col_types: t\n                 for tr in traces\n             ],\n             \"traces\": [\n-                [reverse_cols.get(c or \"\", c) for c in [tr[e.value] for e in used_axis[j]]]\n-                for j, tr in enumerate(traces)\n+                [reverse_cols[idx].get(c or \"\", c) for c in [tr[e.value] for e in used_axis[idx]]]\n+                for idx, tr in enumerate(traces)\n             ],\n             \"orientations\": [tr[_Chart_iprops.orientation.value] for tr in traces],\n             \"names\": [tr[_Chart_iprops._name.value] for tr in traces],\ndiff --git a/taipy/gui/viselements.json b/taipy/gui/viselements.json\nindex bb14fded3c..6636a3caf4 100644\n--- a/taipy/gui/viselements.json\n+++ b/taipy/gui/viselements.json\n@@ -492,7 +492,7 @@\n                         \"name\": \"data\",\n                         \"default_property\": true,\n                         \"required\": true,\n-                        \"type\": \"dynamic(Any)\",\n+                        \"type\": \"indexed(dynamic(Any))\",\n                         \"doc\": \"The data object bound to this chart control.<br/>See the section on the <a href=\\\"#the-data-property\\\"><i>data</i> property</a> below for more details.\"\n                     },\n                     {\n", "test_patch": "diff --git a/tests/gui/builder/control/test_chart.py b/tests/gui/builder/control/test_chart.py\nindex fc3932b1df..7f3ba83691 100644\n--- a/tests/gui/builder/control/test_chart.py\n+++ b/tests/gui/builder/control/test_chart.py\n@@ -258,3 +258,21 @@ def test_chart_indexed_properties_with_arrays_builder(gui: Gui, helpers):\n         \"&quot;lines&quot;: [null, &#x7B;&quot;dash&quot;: &quot;dashdot&quot;&#x7D;, &#x7B;&quot;dash&quot;: &quot;dash&quot;&#x7D;, null, &#x7B;&quot;dash&quot;: &quot;dashdot&quot;&#x7D;, &#x7B;&quot;dash&quot;: &quot;dash&quot;&#x7D;]\",  # noqa: E501\n     ]\n     helpers.test_control_builder(gui, page, expected_list)\n+\n+def test_chart_multi_data(gui: Gui, helpers, csvdata):\n+    with tgb.Page(frame=None) as page:\n+        tgb.chart(  # type: ignore[attr-defined]\n+            data=\"{csvdata}\",\n+            x=\"Day\",\n+            y=\"Daily hospital occupancy\",\n+            data__1=\"{csvdata}\",\n+        )\n+    expected_list = [\n+        \"<Chart\",\n+        'updateVarName=\"_TpD_tpec_TpExPr_csvdata_TPMDL_0\"',\n+        'dataVarNames=\"_TpD_tpec_TpExPr_csvdata_TPMDL_0\"',\n+        \"data={_TpD_tpec_TpExPr_csvdata_TPMDL_0}\",\n+        \"data1={_TpD_tpec_TpExPr_csvdata_TPMDL_0}\",\n+    ]\n+    gui._set_frame(inspect.currentframe())\n+    helpers.test_control_builder(gui, page, expected_list)\ndiff --git a/tests/gui/control/test_chart.py b/tests/gui/control/test_chart.py\nindex c289b4b687..5694d52c07 100644\n--- a/tests/gui/control/test_chart.py\n+++ b/tests/gui/control/test_chart.py\n@@ -218,3 +218,15 @@ def test_chart_indexed_properties_with_arrays(gui: Gui, helpers):\n         \"&quot;lines&quot;: [null, &#x7B;&quot;dash&quot;: &quot;dashdot&quot;&#x7D;, &#x7B;&quot;dash&quot;: &quot;dash&quot;&#x7D;, null, &#x7B;&quot;dash&quot;: &quot;dashdot&quot;&#x7D;, &#x7B;&quot;dash&quot;: &quot;dash&quot;&#x7D;]\",  # noqa: E501\n     ]\n     helpers.test_control_md(gui, md, expected_list)\n+\n+def test_chart_multi_data(gui: Gui, helpers, csvdata):\n+    md_string = \"<|{csvdata}|chart|x=Day|y=Daily hospital occupancy|data[1]={csvdata}|>\"\n+    expected_list = [\n+        \"<Chart\",\n+        'updateVarName=\"_TpD_tpec_TpExPr_csvdata_TPMDL_0\"',\n+        'dataVarNames=\"_TpD_tpec_TpExPr_csvdata_TPMDL_0\"',\n+        \"data={_TpD_tpec_TpExPr_csvdata_TPMDL_0}\",\n+        \"data1={_TpD_tpec_TpExPr_csvdata_TPMDL_0}\",\n+    ]\n+    gui._set_frame(inspect.currentframe())\n+    helpers.test_control_md(gui, md_string, expected_list)\ndiff --git a/tests/gui/gui_specific/test_gui.py b/tests/gui/gui_specific/test_gui.py\nindex f7f3b8c2a8..cf0fb2563e 100644\n--- a/tests/gui/gui_specific/test_gui.py\n+++ b/tests/gui/gui_specific/test_gui.py\n@@ -73,7 +73,7 @@ def test__chart_conf(gui: Gui):\n \n         d = json.loads(res)\n         assert isinstance(d, dict)\n-        assert d[\"columns\"][\"col1\"][\"type\"] == \"int\"\n+        assert d[\"columns\"][0][\"col1\"][\"type\"] == \"int\"\n \n         res = gui._chart_conf(False, None, \"\", \"\")\n         assert repr(res) == \"Taipy: Do not update\"\n", "problem_statement": "Add support for data slice update in charts\n### Description\n\nMulti-trace charts rely on a single *data* property, which is a limitation.\n\n### Solution Proposed\n\nMake *data* an indexed property.\n\n### Acceptance Criteria\n\n- [ ] If applicable, a new demo code is provided to show the new feature in action.\r\n- [ ] Integration tests exhibiting how the functionality works are added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\nAdd support for data slice update in charts\n### Description\n\nMulti-trace charts rely on a single *data* property, which is a limitation.\n\n### Solution Proposed\n\nMake *data* an indexed property.\n\n### Acceptance Criteria\n\n- [ ] If applicable, a new demo code is provided to show the new feature in action.\r\n- [ ] Integration tests exhibiting how the functionality works are added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "This issue has been labelled as \"\ud83e\udd76Waiting for contributor\" because it has been inactive for more than 14 days. If you would like to continue working on this issue, please add another comment or create a PR that links to this issue. If a PR has already been created which refers to this issue, then you should explicitly mention this issue in the relevant PR. Otherwise, you will be unassigned in 14 days. For more information please refer to the contributing guidelines.\nTo add my two cents to the topic, when communicating about this indexed data topic, instead of `data slice,` I would suggest using something else like `data layer` or `data stratum` or any better naming since data slicing already means something in data processing.\r\n\r\n\nThis issue has been labelled as \"\ud83e\udd76Waiting for contributor\" because it has been inactive for more than 14 days. If you would like to continue working on this issue, please add another comment or create a PR that links to this issue. If a PR has already been created which refers to this issue, then you should explicitly mention this issue in the relevant PR. Otherwise, you will be unassigned in 14 days. For more information please refer to the contributing guidelines.\nTo add my two cents to the topic, when communicating about this indexed data topic, instead of `data slice,` I would suggest using something else like `data layer` or `data stratum` or any better naming since data slicing already means something in data processing.\r\n\r\n", "created_at": "2025-01-10T16:34:43Z"}
{"repo": "Avaiga/taipy", "pull_number": 2367, "instance_id": "Avaiga__taipy-2367", "issue_numbers": ["2263"], "base_commit": "d536592428d16c6833601632788a782621f625fc", "patch": "diff --git a/taipy/templates/default/hooks/post_gen_project.py b/taipy/templates/default/hooks/post_gen_project.py\nindex 0774c93193..45253b0ddb 100644\n--- a/taipy/templates/default/hooks/post_gen_project.py\n+++ b/taipy/templates/default/hooks/post_gen_project.py\n@@ -77,33 +77,29 @@ def handle_single_page_app():\n         main_file.write(\"\\n\")\n         main_file.write(\"    gui = Gui(page=page)\\n\")\n \n+    with open(os.path.join(os.getcwd(), \"sections\", \"import.txt\"), \"a\") as import_file:\n+        import_file.write(\"import taipy.gui.builder as tgb\\n\")\n+\n     handle_run_service()\n \n     with open(os.path.join(os.getcwd(), \"sections\", \"page_content.txt\"), \"a\") as page_content_file:\n         page_content_file.write(\n-            '''\n-page = \"\"\"\n-<center>\n-<|navbar|lov={[(\"home\", \"Homepage\")]}|>\n-</center>\n+            \"\"\"\n+with tgb.Page() as page:\n+    tgb.navbar(lov=\"{[('home', 'Homepage')]}\")\n \n \"\"\"\n-'''\n         )\n \n \n def handle_multi_page_app(pages):\n     for page_name in pages:\n         os.mkdir(os.path.join(os.getcwd(), \"pages\", page_name))\n-        with open(os.path.join(os.getcwd(), \"pages\", \"page_example\", \"page_example.md\"), \"r\") as page_md_file:\n-            page_md_content = page_md_file.read()\n-        page_md_content = page_md_content.replace(\"Page example\", page_name.replace(\"_\", \" \").title())\n-        with open(os.path.join(os.getcwd(), \"pages\", page_name, page_name + \".md\"), \"w\") as page_md_file:\n-            page_md_file.write(page_md_content)\n \n         with open(os.path.join(os.getcwd(), \"pages\", \"page_example\", \"page_example.py\"), \"r\") as page_content_file:\n             page_py_content = page_content_file.read()\n         page_py_content = page_py_content.replace(\"page_example\", page_name)\n+        page_py_content = page_py_content.replace(\"Page example\", page_name.replace(\"_\", \" \").title())\n         with open(os.path.join(os.getcwd(), \"pages\", page_name, page_name + \".py\"), \"w\") as page_content_file:\n             page_content_file.write(page_py_content)\n \ndiff --git a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/page_example/page_example.md b/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/page_example/page_example.md\ndeleted file mode 100644\nindex dc0bea2fd6..0000000000\n--- a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/page_example/page_example.md\n+++ /dev/null\n@@ -1,1 +0,0 @@\n-# Page example\ndiff --git a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/page_example/page_example.py b/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/page_example/page_example.py\nindex 15dcc83469..ac1a6b94b5 100644\n--- a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/page_example/page_example.py\n+++ b/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/page_example/page_example.py\n@@ -11,11 +11,12 @@\n \n \"\"\"\n A page of the application.\n-Page content is imported from the page_example.md file.\n+Page content is built using the Page builder API.\n \n-Please refer to https://docs.taipy.io/en/latest/manuals/userman/gui/pages for more details.\n+Please refer to https://docs.taipy.io/en/latest/userman/gui/pages/builder/ for more details.\n \"\"\"\n \n-from taipy.gui import Markdown\n+import taipy.gui.builder as tgb\n \n-page_example = Markdown(\"pages/page_example/page_example.md\")\n+with tgb.Page() as page_example:\n+    tgb.text(\"# Page example\", mode=\"md\")\ndiff --git a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/root.md b/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/root.md\ndeleted file mode 100644\nindex 0216ecc457..0000000000\n--- a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/root.md\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-<center>\n-<|navbar|>\n-</center>\ndiff --git a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/root.py b/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/root.py\nindex c06b1fae6c..ac91eaffad 100644\n--- a/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/root.py\n+++ b/taipy/templates/default/{{cookiecutter.__root_folder}}/pages/root.py\n@@ -11,11 +11,12 @@\n \n \"\"\"\n The root page of the application.\n-Page content is imported from the root.md file.\n+Page content is built using the Page builder API.\n \n-Please refer to https://docs.taipy.io/en/latest/manuals/userman/gui/pages for more details.\n+Please refer to https://docs.taipy.io/en/latest/userman/gui/pages/builder/ for more details.\n \"\"\"\n \n-from taipy.gui import Markdown\n+import taipy.gui.builder as tgb\n \n-root_page = Markdown(\"pages/root.md\")\n+with tgb.Page() as root_page:\n+    tgb.navbar()\ndiff --git a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/job_page/job_page.md b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/job_page/job_page.md\ndeleted file mode 100644\nindex b498167e96..0000000000\n--- a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/job_page/job_page.md\n+++ /dev/null\n@@ -1,1 +0,0 @@\n-<|job_selector|>\ndiff --git a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/job_page/job_page.py b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/job_page/job_page.py\nindex d3d7f527dc..fb50ed5e3d 100644\n--- a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/job_page/job_page.py\n+++ b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/job_page/job_page.py\n@@ -9,6 +9,7 @@\n # an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n # specific language governing permissions and limitations under the License.\n \n-from taipy.gui import Markdown\n+import taipy.gui.builder as tgb\n \n-job_page = Markdown(\"pages/job_page/job_page.md\")\n+with tgb.Page() as job_page:\n+    tgb.job_selector()\ndiff --git a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/root.md b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/root.md\ndeleted file mode 100644\nindex 994124b8fd..0000000000\n--- a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/root.md\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-<|layout|columns=1 5|\n-\n-<|sidebar|\n-\n-<|{selected_scenario}|scenario_selector|>\n-\n-<|part|render={selected_scenario}|\n-<|{selected_data_node}|data_node_selector|not display_cycles|>\n-|>\n-|>\n-\n-<|part|class_name=main|\n-\n-<|navbar|>\n-\n-<|part|class_name=main|\n-<|content|>\n-|>\n-\n-|>\n-|>\ndiff --git a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/root.py b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/root.py\nindex f82dd0bce0..62b5838ed9 100644\n--- a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/root.py\n+++ b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/root.py\n@@ -9,10 +9,23 @@\n # an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n # specific language governing permissions and limitations under the License.\n \n-from taipy.gui import Markdown\n+import taipy.gui.builder as tgb\n \n selected_scenario = None\n selected_data_node = None\n content = \"\"\n \n-root = Markdown(\"pages/root.md\")\n+\n+with tgb.Page() as root:\n+    with tgb.layout(columns=\"1, 5\"):\n+        with tgb.part(class_name=\"sidebar\"):\n+            tgb.scenario_selector(\"{selected_scenario}\")\n+\n+            with tgb.part(render=\"{selected_scenario}\"):\n+                tgb.data_node_selector(\"{selected_data_node}\", display_cycles=False)\n+\n+        with tgb.part(class_name=\"main\"):\n+            tgb.navbar()\n+\n+            with tgb.part(class_name=\"main\"):\n+                tgb.text(\"{content}\")\ndiff --git a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/scenario_page/scenario_page.md b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/scenario_page/scenario_page.md\ndeleted file mode 100644\nindex 6c26000f84..0000000000\n--- a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/scenario_page/scenario_page.md\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-<|layout|columns=1 1|\n-\n-<|part|render={selected_scenario}|\n-\n-<|{selected_scenario}|scenario|not expandable|expanded|on_submission_change=notify_on_submission|>\n-\n-<|{selected_scenario}|scenario_dag|>\n-|>\n-\n-<|part|partial={data_node_partial}|render={selected_data_node}|>\n-\n-|>\ndiff --git a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/scenario_page/scenario_page.py b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/scenario_page/scenario_page.py\nindex 3e791b1806..2ae27ca268 100644\n--- a/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/scenario_page/scenario_page.py\n+++ b/taipy/templates/sdm/{{cookiecutter.__root_folder}}/pages/scenario_page/scenario_page.py\n@@ -9,7 +9,8 @@\n # an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n # specific language governing permissions and limitations under the License.\n \n-from taipy.gui import Markdown, notify\n+import taipy.gui.builder as tgb\n+from taipy.gui import notify\n \n from .data_node_management import manage_partial\n \n@@ -27,4 +28,16 @@ def manage_data_node_partial(state):\n     manage_partial(state)\n \n \n-scenario_page = Markdown(\"pages/scenario_page/scenario_page.md\")\n+with tgb.Page() as scenario_page:\n+    with tgb.layout(columns=\"1, 1\"):\n+        with tgb.part(render=\"{selected_scenario}\"):\n+            tgb.scenario(\n+                \"{selected_scenario}\",\n+                expandable=False,\n+                expanded=True,\n+                on_submission_change=notify_on_submission,\n+            )\n+\n+            tgb.scenario_dag(\"{selected_scenario}\")\n+\n+        tgb.part(partial=\"{data_node_partial}\", render=\"{selected_data_node}\")\n", "test_patch": "diff --git a/tests/templates/test_default_template.py b/tests/templates/test_default_template.py\nindex 61fef9902f..5574a084c9 100644\n--- a/tests/templates/test_default_template.py\n+++ b/tests/templates/test_default_template.py\n@@ -145,7 +145,7 @@ def test_multipage_gui_template(tmpdir):\n \n     assert sorted(os.listdir(os.path.join(tmpdir, \"foo_app\"))) == sorted([\"requirements.txt\", \"main.py\", \"pages\"])\n     assert sorted(os.listdir(os.path.join(tmpdir, \"foo_app\", \"pages\"))) == sorted(\n-        [\"name_1\", \"name_2\", \"name_3\", \"root.md\", \"root.py\", \"__init__.py\"]\n+        [\"name_1\", \"name_2\", \"name_3\", \"root.py\", \"__init__.py\"]\n     )\n \n     taipy_path = os.getcwd()\n", "problem_statement": "Convert templates from Markdown to TGB\n### Description\n\nWe want to push the Python API instead of the Markdown API.\n\n### Acceptance Criteria\n\n\n\n\n### Code of Conduct\n\n- [x] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "hey @jrobinAV  Can you describe more? \r\nCorrect me if i am wrong but as per this issue you want to conver all of the markdown to taipy graphical builder. \r\nBut here, I dont see much of markdown code.\r\n![image](https://github.com/user-attachments/assets/c58c5b55-1727-4195-8d72-a5f632b6c323)\r\n\r\nIf i am searching for it in the wrong place then where can i see the markdown code which is to be converted?\nHello @Ujj1225,\n\nIndeed, there is not much to convert. \n\nOn the default template: \n- In `pages/root.py`. Instead of using a Markdown page from `pages/root.md`, we want to use the GUI builder.\n- The Same in `pages/page_example/page_example.py`, where we don't want to use the `pages/page_example/page_example.md` anymore.\n \nOn the default template:\n- In `pages/root.py`. Instead of using a Markdown page from `pages/root.md`, we want to use the GUI builder.\n- The Same in `pages/scenario_page/scenario_page.py`. We no longer want to use `pages/scenario_page/scenario_page.md`.\n- - The Same in `pages/job_page/job_page.py`. We no longer want to use `pages/job_page/job_page.md`.\n\nDo you want to be assigned to the issue?", "created_at": "2024-12-24T09:13:20Z"}
{"repo": "Avaiga/taipy", "pull_number": 2363, "instance_id": "Avaiga__taipy-2363", "issue_numbers": ["1492"], "base_commit": "cacd40011ebb22c0462bb5610fe63c8692a92b67", "patch": "diff --git a/frontend/taipy-gui/src/components/Taipy/ThemeToggle.tsx b/frontend/taipy-gui/src/components/Taipy/ThemeToggle.tsx\nindex 6318fc8b8e..e8640f0a3b 100644\n--- a/frontend/taipy-gui/src/components/Taipy/ThemeToggle.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/ThemeToggle.tsx\n@@ -20,14 +20,14 @@ import ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\n import WbSunny from \"@mui/icons-material/WbSunny\";\n import Brightness3 from \"@mui/icons-material/Brightness3\";\n \n-import { TaipyActiveProps, getCssSize } from \"./utils\";\n+import { TaipyActiveProps, TaipyChangeProps, getCssSize } from \"./utils\";\n import { TaipyContext } from \"../../context/taipyContext\";\n-import { createThemeAction } from \"../../context/taipyReducers\";\n-import { useClassNames } from \"../../utils/hooks\";\n+import { createSendUpdateAction, createThemeAction } from \"../../context/taipyReducers\";\n+import { useClassNames, useModule } from \"../../utils/hooks\";\n import { getLocalStorageValue } from \"../../context/utils\";\n import { getComponentClassName } from \"./TaipyStyle\";\n \n-interface ThemeToggleProps extends TaipyActiveProps {\n+interface ThemeToggleProps extends TaipyActiveProps, TaipyChangeProps {\n     style?: SxProps;\n     label?: string;\n     width?: string | number;\n@@ -53,11 +53,29 @@ const ThemeToggle = (props: ThemeToggleProps) => {\n     const { id, label = \"Mode\", style = emptyStyle, active = true } = props;\n     const { state, dispatch } = useContext(TaipyContext);\n \n+    const module = useModule();\n+\n     const className = useClassNames(props.libClassName, props.dynamicClassName, props.className);\n \n+    const updateBoundValue = useCallback(\n+        (val: PaletteMode) => {\n+            if (!props.updateVarName) {\n+                return;\n+            }\n+            dispatch(\n+                createSendUpdateAction(props.updateVarName, val === \"dark\", module, props.onChange, props.propagate),\n+            );\n+        },\n+        [dispatch, props.updateVarName, props.onChange, props.propagate, module],\n+    );\n+\n+    useEffect(() => {\n+        updateBoundValue(state.theme.palette.mode);\n+    }, [state.theme.palette.mode, updateBoundValue]);\n+\n     const changeMode = useCallback(\n         (evt: MouseEvent, mode: PaletteMode) => mode !== null && dispatch(createThemeAction(mode === \"dark\")),\n-        [dispatch]\n+        [dispatch],\n     );\n \n     useEffect(() => {\n@@ -72,7 +90,7 @@ const ThemeToggle = (props: ThemeToggleProps) => {\n             props.width\n                 ? ({ ...boxSx, ...style, width: getCssSize(props.width) } as SxProps)\n                 : ({ ...boxSx, ...style } as SxProps),\n-        [style, props.width]\n+        [style, props.width],\n     );\n \n     return (\ndiff --git a/taipy/gui/viselements.json b/taipy/gui/viselements.json\nindex 4cf152bd9d..bb14fded3c 100644\n--- a/taipy/gui/viselements.json\n+++ b/taipy/gui/viselements.json\n@@ -2149,7 +2149,7 @@\n                         \"name\": \"value\",\n                         \"default_property\": true,\n                         \"type\": \"dynamic(Any)\",\n-                        \"doc\": \"Bound to the selection value.\"\n+                        \"doc\": \"Bound to the selection value.<br/>If this is used for theme toggling, it must be a Boolean value: True indicates that the current theme is set to \\\"dark\\\", while False indicates that the theme is set to \\\"light\\\".\"\n                     },\n                     {\n                         \"name\": \"lov\",\n", "test_patch": "", "problem_statement": "User theme (light or dark mode) should be an accessible variable\n### Description\r\n\r\nA user on Discord requested this. The user's theme (light or dark mode) should be a callable variable within the code. This way, the dev could have different images displayed according to the current theme (a white background image in light mode and a black background image in dark mode)\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] Ensure new code is unit tested, and check code coverage is at least 90%.\r\n- [ ] Create related issue in taipy-doc for documentation and Release Notes.\r\n- [ ] Check if a new demo could be provided based on this, or if legacy demos could be benefit from it.\r\n- [ ] Ensure any change is well documented.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "would love to work on this @AlexandreSajus. can you assign me this issue?\n@ranjanmangla1 The \"Help wanted\" and \"good first issue\" labels have been misused on this issue. The issue has not been validated nor discussed with the maintainer team, yet.\r\n\r\nWe will discuss it as soon as possible (probably tomorrow) and will let you know if the issue is ok to be assigned.\r\n\r\nThank you for your understanding.\r\n\r\n\nA priori, it will be implemented as a CSS rule. The documentation should provide an example.\n\n\nhey i would like to work on the issue\nHello @jrobinAV ,\r\n\r\nI would like to work on this issue and help implement the theme-based image display functionality. My plan is to:\r\n- Ensure the user's theme (light or dark mode) is stored as a variable in the code.\r\n- Implement conditional logic to switch between light and dark mode images.\r\n- Write unit tests to achieve at least 90% code coverage.\r\n- Document the changes in taipy-doc and consider updating or creating a demo based on this.\r\n\r\nCould you please assign this issue to me? Thank you!\r\n\nhey, I would like to work on this issue. You can assign this to me.\r\nThanks\nI will assign @sOnU1002 as it was the first reply. Thank you for your contribution!\r\n\r\n@PayalKumari10, @sangram-mkj-01, there are a lot of issues to take!\ncan u please specify wherei have add the code \r\n\n@FabienLelaquais will know which people in R&D you should talk to\n### ![New Quest! image](https://quine-assets.s3.amazonaws.com/assets/quest-bot/quest-generic/opening28.svg) New Quest!\n\n*A new Quest has been launched in @Avaiga\u2019s repo.\nMerge a PR that solves this issue to loot the Quest and earn your reward.*\n\n---\n\nSome loot has been stashed in this issue to reward the solver!\n\n\ud83d\udde1 Comment `@quest-bot embark` to check-in for this Quest and start solving the issue. Other solvers will be notified!\n\n\u2694\ufe0f When you submit a PR, comment `@quest-bot loot #1492` to link your PR to this Quest.\n\nQuestions? Check out [the docs](https://docs.quira.sh/for-developers/quests/solver-quests).\nThis issue has been labelled as \"\ud83e\udd76Waiting for contributor\" because it has been inactive for more than 14 days. If you would like to continue working on this issue, please add another comment or create a PR that links to this issue. If a PR has already been created which refers to this issue, then you should explicitly mention this issue in the relevant PR. Otherwise, you will be unassigned in 14 days. For more information please refer to the contributing guidelines.\nThis issue has been unassigned automatically because it has been marked as \"\ud83e\udd76Waiting for contributor\" for more than 14 days with no activity.\n@FlorianJacta Should i work on it", "created_at": "2024-12-23T05:34:35Z"}
{"repo": "Avaiga/taipy", "pull_number": 2360, "instance_id": "Avaiga__taipy-2360", "issue_numbers": ["2286", "2358"], "base_commit": "996f52488c2fe94f90800542b7dd1ebab88c282d", "patch": "diff --git a/frontend/taipy-gui/packaging/taipy-gui.d.ts b/frontend/taipy-gui/packaging/taipy-gui.d.ts\nindex 1521ae5291..1df9b82b44 100644\n--- a/frontend/taipy-gui/packaging/taipy-gui.d.ts\n+++ b/frontend/taipy-gui/packaging/taipy-gui.d.ts\n@@ -370,6 +370,8 @@ export interface ColumnDesc {\n     lov?: string[];\n     /** If true the user can enter any value besides the lov values. */\n     freeLov?: boolean;\n+    /** If false, the column cannot be sorted */\n+    sortable?: boolean;\n }\n /**\n  * A cell value type.\ndiff --git a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx\nindex 36b39da5a6..834496e399 100644\n--- a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx\n@@ -98,6 +98,7 @@ const tableValue = {\n     },\n };\n const tableColumns = JSON.stringify({ Entity: { dfid: \"Entity\" } });\n+const tableWidthColumns = JSON.stringify({ Entity: { dfid: \"Entity\", width: \"100px\" }, Country: {dfid: \"Country\"} });\n \n describe(\"AutoLoadingTable Component\", () => {\n     it(\"renders\", async () => {\n@@ -132,6 +133,16 @@ describe(\"AutoLoadingTable Component\", () => {\n         const { queryByTestId } = render(<AutoLoadingTable data={undefined} defaultColumns={tableColumns} active={false} />);\n         expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n     });\n+    it(\"hides sort icons when not sortable\", async () => {\n+        const { queryByTestId } = render(<AutoLoadingTable data={undefined} defaultColumns={tableColumns} sortable={false} />);\n+        expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n+    });\n+    it(\"set width if requested\", async () => {\n+        const { getByText } = render(<AutoLoadingTable data={undefined} defaultColumns={tableWidthColumns} />);\n+        const header = getByText(\"Entity\").closest(\"tr\");\n+        expect(header?.firstChild).toHaveStyle({\"min-width\": \"100px\"});\n+        expect(header?.lastChild).toHaveStyle({\"width\": \"100%\"});\n+    });\n     // keep getting undefined Error from jest, it seems to be linked to the setTimeout that makes the code run after the end of the test :-(\n     // https://github.com/facebook/jest/issues/12262\n     // Looks like the right way to handle this is to use jest fakeTimers and runAllTimers ...\ndiff --git a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\nindex ccd704d4e1..f1bb0e48f1 100644\n--- a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\n@@ -11,62 +11,33 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-import React, { useState, useEffect, useCallback, useRef, useMemo, CSSProperties, MouseEvent } from \"react\";\n+import React, { CSSProperties, MouseEvent, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n+import AddIcon from \"@mui/icons-material/Add\";\n+import DataSaverOff from \"@mui/icons-material/DataSaverOff\";\n+import DataSaverOn from \"@mui/icons-material/DataSaverOn\";\n+import Download from \"@mui/icons-material/Download\";\n import Box from \"@mui/material/Box\";\n+import IconButton from \"@mui/material/IconButton\";\n+import Paper from \"@mui/material/Paper\";\n+import Skeleton from \"@mui/material/Skeleton\";\n import MuiTable from \"@mui/material/Table\";\n import TableCell, { TableCellProps } from \"@mui/material/TableCell\";\n import TableContainer from \"@mui/material/TableContainer\";\n import TableHead from \"@mui/material/TableHead\";\n import TableRow from \"@mui/material/TableRow\";\n import TableSortLabel from \"@mui/material/TableSortLabel\";\n-import Paper from \"@mui/material/Paper\";\n+import Tooltip from \"@mui/material/Tooltip\";\n import { visuallyHidden } from \"@mui/utils\";\n import AutoSizer from \"react-virtualized-auto-sizer\";\n import { FixedSizeList, ListOnItemsRenderedProps } from \"react-window\";\n import InfiniteLoader from \"react-window-infinite-loader\";\n-import Skeleton from \"@mui/material/Skeleton\";\n-import IconButton from \"@mui/material/IconButton\";\n-import Tooltip from \"@mui/material/Tooltip\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DataSaverOn from \"@mui/icons-material/DataSaverOn\";\n-import DataSaverOff from \"@mui/icons-material/DataSaverOff\";\n-import Download from \"@mui/icons-material/Download\";\n \n import {\n     createRequestInfiniteTableUpdateAction,\n     createSendActionNameAction,\n     FormatConfig,\n } from \"../../context/taipyReducers\";\n-import {\n-    ColumnDesc,\n-    FilterDesc,\n-    getSortByIndex,\n-    Order,\n-    TaipyTableProps,\n-    baseBoxSx,\n-    paperSx,\n-    tableSx,\n-    RowType,\n-    EditableCell,\n-    OnCellValidation,\n-    RowValue,\n-    EDIT_COL,\n-    OnRowDeletion,\n-    addActionColumn,\n-    headBoxSx,\n-    getClassName,\n-    ROW_CLASS_NAME,\n-    iconInRowSx,\n-    DEFAULT_SIZE,\n-    OnRowSelection,\n-    getRowIndex,\n-    getTooltip,\n-    defaultColumns,\n-    OnRowClick,\n-    DownloadAction,\n-    getFormatFn,\n-    getPageKey,\n-} from \"./tableUtils\";\n+import { emptyArray } from \"../../utils\";\n import {\n     useClassNames,\n     useDispatch,\n@@ -77,8 +48,37 @@ import {\n     useModule,\n } from \"../../utils/hooks\";\n import TableFilter from \"./TableFilter\";\n-import { getSuffixedClassNames, getUpdateVar } from \"./utils\";\n-import { emptyArray } from \"../../utils\";\n+import {\n+    addActionColumn,\n+    baseBoxSx,\n+    ColumnDesc,\n+    DEFAULT_SIZE,\n+    defaultColumns,\n+    DownloadAction,\n+    EDIT_COL,\n+    EditableCell,\n+    FilterDesc,\n+    getClassName,\n+    getFormatFn,\n+    getPageKey,\n+    getRowIndex,\n+    getSortByIndex,\n+    getTooltip,\n+    headBoxSx,\n+    iconInRowSx,\n+    OnCellValidation,\n+    OnRowClick,\n+    OnRowDeletion,\n+    OnRowSelection,\n+    Order,\n+    paperSx,\n+    ROW_CLASS_NAME,\n+    RowType,\n+    RowValue,\n+    tableSx,\n+    TaipyTableProps,\n+} from \"./tableUtils\";\n+import { getCssSize, getSuffixedClassNames, getUpdateVar } from \"./utils\";\n \n interface RowData {\n     colsOrder: string[];\n@@ -201,6 +201,7 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n         compare = false,\n         onCompare = \"\",\n         useCheckbox = false,\n+        sortable = true,\n     } = props;\n     const [rows, setRows] = useState<RowType[]>([]);\n     const [compRows, setCompRows] = useState<RowType[]>([]);\n@@ -251,7 +252,7 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n     useDispatchRequestUpdateOnFirstRender(dispatch, id, module, updateVars);\n \n     const onSort = useCallback(\n-        (e: React.MouseEvent<HTMLElement>) => {\n+        (e: MouseEvent<HTMLElement>) => {\n             const col = e.currentTarget.getAttribute(\"data-dfid\");\n             if (col) {\n                 const isAsc = orderBy === col && order === \"asc\";\n@@ -285,82 +286,107 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n         e.stopPropagation();\n     }, []);\n \n-    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable] = useMemo(() => {\n-        let hNan = !!props.nanValue;\n-        if (baseColumns) {\n-            try {\n-                let filter = false;\n-                let partialEditable = editable;\n-                const newCols: Record<string, ColumnDesc> = {};\n-                Object.entries(baseColumns).forEach(([cId, cDesc]) => {\n-                    const nDesc = (newCols[cId] = { ...cDesc });\n-                    if (typeof nDesc.filter != \"boolean\") {\n-                        nDesc.filter = !!props.filter;\n-                    }\n-                    filter = filter || nDesc.filter;\n-                    if (typeof nDesc.notEditable == \"boolean\") {\n-                        nDesc.notEditable = !editable;\n-                    } else {\n-                        partialEditable = partialEditable || !nDesc.notEditable;\n-                    }\n-                    if (nDesc.tooltip === undefined) {\n-                        nDesc.tooltip = props.tooltip;\n+    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable, calcWidth] =\n+        useMemo(() => {\n+            let hNan = !!props.nanValue;\n+            if (baseColumns) {\n+                try {\n+                    let filter = false;\n+                    let partialEditable = editable;\n+                    const newCols: Record<string, ColumnDesc> = {};\n+                    Object.entries(baseColumns).forEach(([cId, cDesc]) => {\n+                        const nDesc = (newCols[cId] = { ...cDesc });\n+                        if (typeof nDesc.filter != \"boolean\") {\n+                            nDesc.filter = !!props.filter;\n+                        }\n+                        filter = filter || nDesc.filter;\n+                        if (typeof nDesc.notEditable == \"boolean\") {\n+                            nDesc.notEditable = !editable;\n+                        } else {\n+                            partialEditable = partialEditable || !nDesc.notEditable;\n+                        }\n+                        if (nDesc.tooltip === undefined) {\n+                            nDesc.tooltip = props.tooltip;\n+                        }\n+                        if (typeof nDesc.sortable != \"boolean\") {\n+                            nDesc.sortable = sortable;\n+                        }\n+                    });\n+                    addActionColumn(\n+                        (active && partialEditable && (onAdd || onDelete) ? 1 : 0) +\n+                            (active && filter ? 1 : 0) +\n+                            (active && downloadable ? 1 : 0),\n+                        newCols\n+                    );\n+                    const colsOrder = Object.keys(newCols).sort(getSortByIndex(newCols));\n+                    let nbWidth = 0;\n+                    const styTt = colsOrder.reduce<Record<string, Record<string, string>>>((pv, col) => {\n+                        if (newCols[col].className) {\n+                            pv.classNames = pv.classNames || {};\n+                            pv.classNames[newCols[col].dfid] = newCols[col].className as string;\n+                        }\n+                        hNan = hNan || !!newCols[col].nanValue;\n+                        if (newCols[col].tooltip) {\n+                            pv.tooltips = pv.tooltips || {};\n+                            pv.tooltips[newCols[col].dfid] = newCols[col].tooltip as string;\n+                        }\n+                        if (newCols[col].formatFn) {\n+                            pv.formats = pv.formats || {};\n+                            pv.formats[newCols[col].dfid] = newCols[col].formatFn;\n+                        }\n+                        if (newCols[col].width !== undefined) {\n+                            const cssWidth = getCssSize(newCols[col].width);\n+                            if (cssWidth) {\n+                                newCols[col].width = cssWidth;\n+                                nbWidth++;\n+                            }\n+                        }\n+                        return pv;\n+                    }, {});\n+                    nbWidth = nbWidth ? colsOrder.length - nbWidth : 0;\n+                    if (props.rowClassName) {\n+                        styTt.classNames = styTt.classNames || {};\n+                        styTt.classNames[ROW_CLASS_NAME] = props.rowClassName;\n                     }\n-                });\n-                addActionColumn(\n-                    (active && partialEditable && (onAdd || onDelete) ? 1 : 0) +\n-                        (active && filter ? 1 : 0) +\n-                        (active && downloadable ? 1 : 0),\n-                    newCols\n-                );\n-                const colsOrder = Object.keys(newCols).sort(getSortByIndex(newCols));\n-                const styTt = colsOrder.reduce<Record<string, Record<string, string>>>((pv, col) => {\n-                    if (newCols[col].className) {\n-                        pv.classNames = pv.classNames || {};\n-                        pv.classNames[newCols[col].dfid] = newCols[col].className as string;\n-                    }\n-                    hNan = hNan || !!newCols[col].nanValue;\n-                    if (newCols[col].tooltip) {\n-                        pv.tooltips = pv.tooltips || {};\n-                        pv.tooltips[newCols[col].dfid] = newCols[col].tooltip as string;\n-                    }\n-                    if (newCols[col].formatFn) {\n-                        pv.formats = pv.formats || {};\n-                        pv.formats[newCols[col].dfid] = newCols[col].formatFn;\n-                    }\n-                    return pv;\n-                }, {});\n-                if (props.rowClassName) {\n-                    styTt.classNames = styTt.classNames || {};\n-                    styTt.classNames[ROW_CLASS_NAME] = props.rowClassName;\n+                    return [\n+                        colsOrder,\n+                        newCols,\n+                        styTt.classNames,\n+                        styTt.tooltips,\n+                        styTt.formats,\n+                        hNan,\n+                        filter,\n+                        partialEditable,\n+                        nbWidth > 0 ? `${100 / nbWidth}%` : undefined,\n+                    ];\n+                } catch (e) {\n+                    console.info(\"ATable.columns: \" + ((e as Error).message || e));\n                 }\n-                return [colsOrder, newCols, styTt.classNames, styTt.tooltips, styTt.formats, hNan, filter, partialEditable];\n-            } catch (e) {\n-                console.info(\"ATable.columns: \" + ((e as Error).message || e));\n             }\n-        }\n-        return [\n-            [],\n-            {} as Record<string, ColumnDesc>,\n-            {} as Record<string, string>,\n-            {} as Record<string, string>,\n-            {} as Record<string, string>,\n-            hNan,\n-            false,\n-            false,\n-        ];\n-    }, [\n-        active,\n-        editable,\n-        onAdd,\n-        onDelete,\n-        baseColumns,\n-        props.rowClassName,\n-        props.tooltip,\n-        props.nanValue,\n-        props.filter,\n-        downloadable,\n-    ]);\n+            return [\n+                [],\n+                {} as Record<string, ColumnDesc>,\n+                {} as Record<string, string>,\n+                {} as Record<string, string>,\n+                {} as Record<string, string>,\n+                hNan,\n+                false,\n+                false,\n+                \"\",\n+            ];\n+        }, [\n+            active,\n+            editable,\n+            onAdd,\n+            onDelete,\n+            baseColumns,\n+            props.rowClassName,\n+            props.tooltip,\n+            props.nanValue,\n+            props.filter,\n+            downloadable,\n+            sortable,\n+        ]);\n \n     const boxBodySx = useMemo(() => ({ height: height }), [height]);\n \n@@ -387,7 +413,18 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n             return new Promise<void>((resolve, reject) => {\n                 const cols = colsOrder.map((col) => columns[col].dfid).filter((c) => c != EDIT_COL);\n                 const afs = appliedFilters.filter((fd) => Object.values(columns).some((cd) => cd.dfid === fd.col));\n-                const key = getPageKey(columns, \"Infinite\", cols, orderBy, order, afs, aggregates, cellClassNames, tooltips, formats);\n+                const key = getPageKey(\n+                    columns,\n+                    \"Infinite\",\n+                    cols,\n+                    orderBy,\n+                    order,\n+                    afs,\n+                    aggregates,\n+                    cellClassNames,\n+                    tooltips,\n+                    formats\n+                );\n                 page.current = {\n                     key: key,\n                     promises: { ...page.current.promises, [startIndex]: { resolve: resolve, reject: reject } },\n@@ -603,7 +640,13 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n                                         <TableCell\n                                             key={`head${columns[col].dfid}`}\n                                             sortDirection={orderBy === columns[col].dfid && order}\n-                                            sx={columns[col].width ? { width: columns[col].width } : undefined}\n+                                            sx={\n+                                                columns[col].width\n+                                                    ? { minWidth: columns[col].width }\n+                                                    : calcWidth\n+                                                    ? { width: calcWidth }\n+                                                    : undefined\n+                                            }\n                                         >\n                                             {columns[col].dfid === EDIT_COL ? (\n                                                 [\n@@ -647,8 +690,8 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n                                                     direction={orderBy === columns[col].dfid ? order : \"asc\"}\n                                                     data-dfid={columns[col].dfid}\n                                                     onClick={onSort}\n-                                                    disabled={!active}\n-                                                    hideSortIcon={!active}\n+                                                    disabled={!active || !columns[col].sortable}\n+                                                    hideSortIcon={!active || !columns[col].sortable}\n                                                 >\n                                                     <Box sx={headBoxSx}>\n                                                         {columns[col].groupBy ? (\ndiff --git a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx\nindex c2971bfecf..765e038cad 100644\n--- a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx\n@@ -94,6 +94,10 @@ const tableColumns = JSON.stringify({\n     Entity: { dfid: \"Entity\" },\n     \"Daily hospital occupancy\": { dfid: \"Daily hospital occupancy\", type: \"int64\" },\n });\n+const tableWidthColumns = JSON.stringify({\n+    Entity: { dfid: \"Entity\", width: \"100px\" },\n+    \"Daily hospital occupancy\": { dfid: \"Daily hospital occupancy\", type: \"int64\" },\n+});\n const changedValue = {\n     [valueKey]: {\n         data: [\n@@ -217,6 +221,18 @@ describe(\"PaginatedTable Component\", () => {\n         );\n         expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n     });\n+    it(\"Hides sort icons when not sortable\", async () => {\n+        const { queryByTestId } = render(\n+            <PaginatedTable data={undefined} defaultColumns={tableColumns} sortable={false} />\n+        );\n+        expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n+    });\n+    it(\"set width if requested\", async () => {\n+        const { getByText } = render(<PaginatedTable data={undefined} defaultColumns={tableWidthColumns} />);\n+        const header = getByText(\"Entity\").closest(\"tr\");\n+        expect(header?.firstChild).toHaveStyle({\"min-width\": \"100px\"});\n+        expect(header?.lastChild).toHaveStyle({\"width\": \"100%\"});\n+    });\n     it(\"dispatch 2 well formed messages at first render\", async () => {\n         const dispatch = jest.fn();\n         const state: TaipyState = INITIAL_STATE;\ndiff --git a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\nindex 8d36c1751a..fa882a5ef2 100644\n--- a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\n@@ -42,49 +42,49 @@ import DataSaverOff from \"@mui/icons-material/DataSaverOff\";\n import Download from \"@mui/icons-material/Download\";\n \n import { createRequestTableUpdateAction, createSendActionNameAction } from \"../../context/taipyReducers\";\n+import { emptyArray } from \"../../utils\";\n+import {\n+    useClassNames,\n+    useDispatch,\n+    useDispatchRequestUpdateOnFirstRender,\n+    useDynamicJsonProperty,\n+    useDynamicProperty,\n+    useFormatConfig,\n+    useModule,\n+} from \"../../utils/hooks\";\n+import TableFilter from \"./TableFilter\";\n import {\n     addActionColumn,\n     baseBoxSx,\n+    ColumnDesc,\n+    DEFAULT_SIZE,\n     defaultColumns,\n-    EditableCell,\n+    DownloadAction,\n     EDIT_COL,\n+    EditableCell,\n+    FilterDesc,\n     getClassName,\n+    getFormatFn,\n+    getPageKey,\n+    getRowIndex,\n     getSortByIndex,\n+    getTooltip,\n     headBoxSx,\n-    ROW_CLASS_NAME,\n+    iconInRowSx,\n     OnCellValidation,\n+    OnRowClick,\n     OnRowDeletion,\n+    OnRowSelection,\n     Order,\n     PageSizeOptionsType,\n     paperSx,\n+    ROW_CLASS_NAME,\n     RowType,\n     RowValue,\n     tableSx,\n     TaipyPaginatedTableProps,\n-    ColumnDesc,\n-    iconInRowSx,\n-    DEFAULT_SIZE,\n-    OnRowSelection,\n-    getRowIndex,\n-    getTooltip,\n-    OnRowClick,\n-    DownloadAction,\n-    getFormatFn,\n-    getPageKey,\n-    FilterDesc,\n } from \"./tableUtils\";\n-import {\n-    useClassNames,\n-    useDispatch,\n-    useDispatchRequestUpdateOnFirstRender,\n-    useDynamicJsonProperty,\n-    useDynamicProperty,\n-    useFormatConfig,\n-    useModule,\n-} from \"../../utils/hooks\";\n-import TableFilter from \"./TableFilter\";\n-import { getSuffixedClassNames, getUpdateVar } from \"./utils\";\n-import { emptyArray } from \"../../utils\";\n+import { getCssSize, getSuffixedClassNames, getUpdateVar } from \"./utils\";\n \n const loadingStyle: CSSProperties = { width: \"100%\", height: \"3em\", textAlign: \"right\", verticalAlign: \"center\" };\n const skeletonSx = { width: \"100%\", height: \"3em\" };\n@@ -112,6 +112,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n         compare = false,\n         onCompare = \"\",\n         useCheckbox = false,\n+        sortable = true,\n     } = props;\n     const pageSize = props.pageSize === undefined || props.pageSize < 1 ? 100 : Math.round(props.pageSize);\n     const [value, setValue] = useState<Record<string, unknown>>({});\n@@ -135,98 +136,111 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n     const hover = useDynamicProperty(props.hoverText, props.defaultHoverText, undefined);\n     const baseColumns = useDynamicJsonProperty(props.columns, props.defaultColumns, defaultColumns);\n \n-    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable, nbWidth] = useMemo(() => {\n-        let hNan = !!props.nanValue;\n-        if (baseColumns) {\n-            try {\n-                let filter = false;\n-                let partialEditable = editable;\n-                const newCols: Record<string, ColumnDesc> = {};\n-                Object.entries(baseColumns).forEach(([cId, cDesc]) => {\n-                    const nDesc = (newCols[cId] = { ...cDesc });\n-                    if (typeof nDesc.filter != \"boolean\") {\n-                        nDesc.filter = !!props.filter;\n-                    }\n-                    filter = filter || nDesc.filter;\n-                    if (typeof nDesc.notEditable == \"boolean\") {\n-                        partialEditable = partialEditable || !nDesc.notEditable;\n-                    } else {\n-                        nDesc.notEditable = !editable;\n-                    }\n-                    if (nDesc.tooltip === undefined) {\n-                        nDesc.tooltip = props.tooltip;\n-                    }\n-                });\n-                addActionColumn(\n-                    (active && partialEditable && (onAdd || onDelete) ? 1 : 0) +\n-                        (active && filter ? 1 : 0) +\n-                        (active && downloadable ? 1 : 0),\n-                    newCols\n-                );\n-                const colsOrder = Object.keys(newCols).sort(getSortByIndex(newCols));\n-                let nbWidth = 0;\n-                const functions = colsOrder.reduce<Record<string, Record<string, string>>>((pv, col) => {\n-                    if (newCols[col].className) {\n-                        pv.classNames = pv.classNames || {};\n-                        pv.classNames[newCols[col].dfid] = newCols[col].className;\n+    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable, calcWidth] =\n+        useMemo(() => {\n+            let hNan = !!props.nanValue;\n+            if (baseColumns) {\n+                try {\n+                    let filter = false;\n+                    let partialEditable = editable;\n+                    const newCols: Record<string, ColumnDesc> = {};\n+                    Object.entries(baseColumns).forEach(([cId, cDesc]) => {\n+                        const nDesc = (newCols[cId] = { ...cDesc });\n+                        if (typeof nDesc.filter != \"boolean\") {\n+                            nDesc.filter = !!props.filter;\n+                        }\n+                        filter = filter || nDesc.filter;\n+                        if (typeof nDesc.notEditable == \"boolean\") {\n+                            partialEditable = partialEditable || !nDesc.notEditable;\n+                        } else {\n+                            nDesc.notEditable = !editable;\n+                        }\n+                        if (nDesc.tooltip === undefined) {\n+                            nDesc.tooltip = props.tooltip;\n+                        }\n+                        if (typeof nDesc.sortable != \"boolean\") {\n+                            nDesc.sortable = sortable;\n+                        }\n+                    });\n+                    addActionColumn(\n+                        (active && partialEditable && (onAdd || onDelete) ? 1 : 0) +\n+                            (active && filter ? 1 : 0) +\n+                            (active && downloadable ? 1 : 0),\n+                        newCols\n+                    );\n+                    const colsOrder = Object.keys(newCols).sort(getSortByIndex(newCols));\n+                    let nbWidth = 0;\n+                    let widthRate = 0;\n+                    const functions = colsOrder.reduce<Record<string, Record<string, string>>>((pv, col) => {\n+                        if (newCols[col].className) {\n+                            pv.classNames = pv.classNames || {};\n+                            pv.classNames[newCols[col].dfid] = newCols[col].className;\n+                        }\n+                        hNan = hNan || !!newCols[col].nanValue;\n+                        if (newCols[col].tooltip) {\n+                            pv.tooltips = pv.tooltips || {};\n+                            pv.tooltips[newCols[col].dfid] = newCols[col].tooltip;\n+                        }\n+                        if (newCols[col].formatFn) {\n+                            pv.formats = pv.formats || {};\n+                            pv.formats[newCols[col].dfid] = newCols[col].formatFn;\n+                        }\n+                        if (newCols[col].width !== undefined) {\n+                            const cssWidth = getCssSize(newCols[col].width);\n+                            if (cssWidth) {\n+                                newCols[col].width = cssWidth;\n+                                nbWidth++;\n+                                if (cssWidth.endsWith(\"%\")) {\n+                                    widthRate += parseInt(cssWidth, 10);\n+                                }\n+                            }\n+                        }\n+                        return pv;\n+                    }, {});\n+                    nbWidth = nbWidth ? colsOrder.length - nbWidth : 0;\n+                    if (props.rowClassName) {\n+                        functions.classNames = functions.classNames || {};\n+                        functions.classNames[ROW_CLASS_NAME] = props.rowClassName;\n                     }\n-                    hNan = hNan || !!newCols[col].nanValue;\n-                    if (newCols[col].tooltip) {\n-                        pv.tooltips = pv.tooltips || {};\n-                        pv.tooltips[newCols[col].dfid] = newCols[col].tooltip;\n-                    }\n-                    if (newCols[col].formatFn) {\n-                        pv.formats = pv.formats || {};\n-                        pv.formats[newCols[col].dfid] = newCols[col].formatFn;\n-                    }\n-                    if (newCols[col].width !== undefined) {\n-                        nbWidth++;\n-                    }\n-                    return pv;\n-                }, {});\n-                nbWidth = nbWidth ? colsOrder.length - nbWidth : 0;\n-                if (props.rowClassName) {\n-                    functions.classNames = functions.classNames || {};\n-                    functions.classNames[ROW_CLASS_NAME] = props.rowClassName;\n+                    return [\n+                        colsOrder,\n+                        newCols,\n+                        functions.classNames,\n+                        functions.tooltips,\n+                        functions.formats,\n+                        hNan,\n+                        filter,\n+                        partialEditable,\n+                        nbWidth > 0 ? `${(100 - widthRate) / nbWidth}%` : undefined\n+                    ];\n+                } catch (e) {\n+                    console.info(\"PaginatedTable.columns: \", (e as Error).message || e);\n                 }\n-                return [\n-                    colsOrder,\n-                    newCols,\n-                    functions.classNames,\n-                    functions.tooltips,\n-                    functions.formats,\n-                    hNan,\n-                    filter,\n-                    partialEditable,\n-                    nbWidth,\n-                ];\n-            } catch (e) {\n-                console.info(\"PaginatedTable.columns: \", (e as Error).message || e);\n             }\n-        }\n-        return [\n-            [] as string[],\n-            {} as Record<string, ColumnDesc>,\n-            {} as Record<string, string>,\n-            {} as Record<string, string>,\n-            {} as Record<string, string>,\n-            hNan,\n-            false,\n-            false,\n-            0,\n-        ];\n-    }, [\n-        active,\n-        editable,\n-        onAdd,\n-        onDelete,\n-        baseColumns,\n-        props.rowClassName,\n-        props.tooltip,\n-        props.nanValue,\n-        props.filter,\n-        downloadable,\n-    ]);\n+            return [\n+                [] as string[],\n+                {} as Record<string, ColumnDesc>,\n+                {} as Record<string, string>,\n+                {} as Record<string, string>,\n+                {} as Record<string, string>,\n+                hNan,\n+                false,\n+                false,\n+                \"\"\n+            ];\n+        }, [\n+            active,\n+            editable,\n+            onAdd,\n+            onDelete,\n+            baseColumns,\n+            props.rowClassName,\n+            props.tooltip,\n+            props.nanValue,\n+            props.filter,\n+            downloadable,\n+            sortable,\n+        ]);\n \n     useDispatchRequestUpdateOnFirstRender(dispatch, id, module, updateVars);\n \n@@ -503,9 +517,9 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                                             sortDirection={orderBy === columns[col].dfid && order}\n                                             sx={\n                                                 columns[col].width\n-                                                    ? { minWidth: columns[col].width }\n-                                                    : nbWidth\n-                                                    ? { minWidth: `${100 / nbWidth}%` }\n+                                                    ? { minWidth:columns[col].width }\n+                                                    : calcWidth\n+                                                    ? { width: calcWidth }\n                                                     : undefined\n                                             }\n                                         >\n@@ -551,8 +565,8 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                                                     direction={orderBy === columns[col].dfid ? order : \"asc\"}\n                                                     data-dfid={columns[col].dfid}\n                                                     onClick={onSort}\n-                                                    disabled={!active}\n-                                                    hideSortIcon={!active}\n+                                                    disabled={!active || !columns[col].sortable}\n+                                                    hideSortIcon={!active || !columns[col].sortable}\n                                                 >\n                                                     <Box sx={headBoxSx}>\n                                                         {columns[col].groupBy ? (\ndiff --git a/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx b/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx\nindex cde96f8db3..8c4795417d 100644\n--- a/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx\n@@ -86,6 +86,8 @@ export interface ColumnDesc {\n     lov?: string[];\n     /** If true the user can enter any value besides the lov values. */\n     freeLov?: boolean;\n+    /** If false, the column cannot be sorted */\n+    sortable?: boolean;\n }\n \n export const DEFAULT_SIZE = \"small\";\n@@ -140,6 +142,7 @@ export interface TaipyTableProps extends TaipyActiveProps, TaipyMultiSelectProps\n     onCompare?: string;\n     compare?: boolean;\n     useCheckbox?: boolean;\n+    sortable?: boolean;\n }\n \n export const DownloadAction = \"__Taipy__download_csv\";\ndiff --git a/frontend/taipy-gui/src/components/Taipy/utils.ts b/frontend/taipy-gui/src/components/Taipy/utils.ts\nindex a769012411..203db6dcc6 100644\n--- a/frontend/taipy-gui/src/components/Taipy/utils.ts\n+++ b/frontend/taipy-gui/src/components/Taipy/utils.ts\n@@ -113,14 +113,14 @@ export const noDisplayStyle = { display: \"none\" };\n const RE_ONLY_NUMBERS = /^\\d+(\\.\\d*)?$/;\n export const getCssSize = (val: string | number) => {\n     if (typeof val === \"number\") {\n-        return \"\" + val + \"px\";\n+        return `${val}px`;\n     } else {\n-        val = val.trim();\n+        val = `${val}`.trim();\n         if (RE_ONLY_NUMBERS.test(val)) {\n-            return val + \"px\";\n+            return `${val}px`;\n         }\n+        return val;\n     }\n-    return val;\n };\n \n export const getSuffixedClassNames = (names: string | undefined, suffix: string) =>\ndiff --git a/taipy/gui/_renderers/factory.py b/taipy/gui/_renderers/factory.py\nindex 2ad05c4428..c7be2941c1 100644\n--- a/taipy/gui/_renderers/factory.py\n+++ b/taipy/gui/_renderers/factory.py\n@@ -553,6 +553,7 @@ class _Factory:\n                 (\"size\",),\n                 (\"downloadable\", PropertyType.boolean),\n                 (\"use_checkbox\", PropertyType.boolean),\n+                (\"sortable\", PropertyType.boolean, True),\n             ]\n         )\n         ._set_propagate()\ndiff --git a/taipy/gui/viselements.json b/taipy/gui/viselements.json\nindex 3cf59f44c2..66bb83c0a3 100644\n--- a/taipy/gui/viselements.json\n+++ b/taipy/gui/viselements.json\n@@ -739,7 +739,7 @@\n                     {\n                         \"name\": \"width[<i>column_name</i>]\",\n                         \"type\": \"str\",\n-                        \"doc\": \"The width of the indicated column, in CSS units.\"\n+                        \"doc\": \"The width of the indicated column, in CSS units (% values are not supported).\"\n                     },\n                     {\n                         \"name\": \"selected\",\n@@ -1001,6 +1001,12 @@\n                         \"type\": \"bool\",\n                         \"default_value\": \"False\",\n                         \"doc\": \"If True, boolean values are rendered as a simple HTML checkbox.\"\n+                    },\n+                    {\n+                        \"name\": \"sortable\",\n+                        \"type\": \"bool\",\n+                        \"default_value\": \"True\",\n+                        \"doc\": \"If False, the table provides no sorting capability. Individual columns can override this global setting, allowing specific columns to be marked as sortable or non-sortable regardless of value of <i>sortable</i>, by setting the <i>sortable</i> property to True or False accordingly, in the dictionary for that column in the <i>columns</i> property value.\"\n                     }\n                 ]\n             }\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] Applying width to a specific column in a tgb.table does not work\n### What went wrong? \ud83e\udd14\r\n\r\nA customer requested for specific columns in his tgb.table to have a bigger width. The column names have spaces in them so using tgb.table(width__column_name=\"200px\") won't work.\r\n\r\nThis example is supposed to work but applies the style to all columns instead:\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\nimport pandas as pd\r\n\r\ndata = pd.DataFrame({\"A C\": [1, 2, 3], \"B C\": [4, 5, 6], \"C C\": [7, 8, 9]})\r\n\r\nproperties_table = {\"width[B C]\": \"500px\"}\r\n\r\nwith tgb.Page() as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\nGui(page=page).run()\r\n```\r\n![image](https://github.com/user-attachments/assets/5636166c-59be-4c08-92f6-a1427cad5cd1)\r\n\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\ntable col width\n## What type of PR is this? (check all applicable)\r\n\r\n- [ ] Refactor\r\n- [ ] Feature\r\n- [x] Bug Fix\r\n- [ ] Optimization\r\n- [ ] Documentation Update\r\n\r\n## Description\r\nHandle column width when specified\r\n\r\nadd a sortable property to table (default True)\r\n\r\n## Related Tickets & Documents\r\n\r\n- Closes #2286\r\n\r\n## How to reproduce the issue\r\n```py\r\nimport pandas as pd\r\n\r\nimport taipy.gui.builder as tgb\r\nfrom taipy.gui import Gui\r\n\r\ndata = pd.DataFrame(\r\n    {\r\n        \"AC\": [1, 2, 3],\r\n        \"BC\": [4, 5, 6],\r\n        \"CC\": [\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque porttitor, ante et dictum rutrum, lacus turpis euismod dui, et suscipit nunc dolor in dui. Curabitur non elit tellus. Praesent sed placerat lorem. Nunc eleifend nisl vitae pretium iaculis. Donec dignissim, nisl a malesuada varius, risus elit tristique nisi, vitae imperdiet tortor dolor in dolor. In leo leo, finibus eget interdum sit amet, tempus maximus nibh. Pellentesque quis laoreet velit. Phasellus ultricies ligula sit amet ligula mollis placerat. Aenean eget iaculis felis. Aliquam vehicula rutrum justo a tincidunt. In hac habitasse platea dictumst. Aliquam volutpat in massa vel sodales.\",\r\n            \"8\",\r\n            \"9\",\r\n        ],\r\n    }\r\n)\r\n\r\nproperties_table = {\"width[BC]\": \"50px\"}\r\n\r\n# style={\"taipy-table\": {\"th:nth-child(2)\": {\"min-width\": \"700px\"}}}\r\n\r\nwith tgb.Page() as page:\r\n    # tgb.table(data=\"{data}\", sortable=False, show_all=True)\r\n    tgb.table(data=\"{data}\", width__BC=50, width__CC=\"\", sortable=False, show_all=True)\r\n\r\nGui(page=page).run(title=\"2286 [\ud83d\udc1b BUG] Applying width to a specific column\")\r\n\r\n```\r\n\r\n\n", "hints_text": "This issue is not linked to the column name.\nthe width for the column is propagated to the front-end but it was not noticed due to the way table handle column size requests.\nA css workaround\r\n\r\n```py\r\nwith tgb.Page(style={\"taipy-table\": {\"th:nth-child(2)\": {\"min-width\": \"500px\"}}}) as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\n```\nI believe this is not fixed. I cannot change the width of a single column\nIs it fixed in develop ?\nSame thing. It seems like changing the width of one column is changing everything.\r\n\r\nIf I configure every width for every column, I have a different behavior:\r\n\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\nimport pandas as pd\r\n\r\ndata = pd.DataFrame({\"A C\": [1, 2, 3], \"B C\": [4, 5, 6], \"C C\": [7, 8, 9]})\r\n\r\nproperties_table = {\"width[B C]\": \"50px\", \"width[A C]\": \"500px\", \"width[C C]\": \"100px\"}\r\n\r\nwith tgb.Page() as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\nGui(page=page).run()\r\n\r\n```\r\n\r\n\r\n \n<!-- jest coverage report action for options with hash f26a167df8054779ac35765165541183 -->\n\n## Coverage report for `./frontend/taipy`\n\n> [!CAUTION]\n> Coverage does not meet threshold\n> Statements coverage not met for global: expected >=80%, but got 51.87376725838264%\n> \n\n| <div title=\"Status of coverage:&#10; \ud83d\udfe2 - ok&#10; \ud83d\udfe1 - slightly more than threshold&#10; \ud83d\udd34 - under the threshold\">St.<sup>:grey_question:</sup></div> | Category | Percentage | Covered / Total |\n| :-: | :- | :- | :-: |\n| \ud83d\udd34 | Statements | 51.87% | 263/507 |\n| \ud83d\udd34 | Branches | 21.61% | 67/310 |\n| \ud83d\udd34 | Functions | 14.66% | 17/116 |\n| \ud83d\udd34 | Lines | 53.19% | 242/455 |\n\n\n## Test suite run success\n7 tests passing in 1 suite.\n\n<p align=\"right\">Report generated by <a href=\"https://github.com/ArtiomTr/jest-coverage-report-action\">\ud83e\uddeajest coverage report action</a> from cf29653d9f98423322e591ef6ab769bda235865d</p>\n\n<!-- jest coverage report action for options with hash 49c1eaa4a30af4c0caad1e60cb6399d9 -->\n\n## Coverage report for `./frontend/taipy-gui`\n\n> [!CAUTION]\n> Coverage does not meet threshold\n> Branches coverage not met for global: expected >=80%, but got 69.34244235695986%\n> \n\n| <div title=\"Status of coverage:&#10; \ud83d\udfe2 - ok&#10; \ud83d\udfe1 - slightly more than threshold&#10; \ud83d\udd34 - under the threshold\">St.<sup>:grey_question:</sup></div> | Category | Percentage | Covered / Total |\n| :-: | :- | :- | :-: |\n| \ud83d\udfe2 | Statements | <div title=\"Base coverage is: 87.49%\">87.52% (+0.04% \ud83d\udd3c)</div> | 3515/4016 |\n| \ud83d\udfe1 | Branches | <div title=\"Base coverage is: 69.11%\">69.34% (+0.23% \ud83d\udd3c)</div> | 2436/3513 |\n| \ud83d\udfe2 | Functions | 83.44% | 650/779 |\n| \ud83d\udfe2 | Lines | <div title=\"Base coverage is: 87.94%\">87.98% (+0.04% \ud83d\udd3c)</div> | 3256/3701 |\n\n\n## Test suite run success\n717 tests passing in 47 suites.\n\n<p align=\"right\">Report generated by <a href=\"https://github.com/ArtiomTr/jest-coverage-report-action\">\ud83e\uddeajest coverage report action</a> from 6e5d024ab177ba063aa50cee984666439872a6c1</p>\n\n# \u2602\ufe0f Python Coverage\n> current status: \u2705\n## Overall Coverage\n| Lines | Covered | Coverage | Threshold | Status |\n| :---: | :-----: | :------: | :-------: | :----: |\n| 19472 |  16976  |    87%   |     0%    |   \ud83d\udfe2   |\n## New Files\nNo new covered files...\n## Modified Files\n| File                            | Coverage | Status |\n| :------------------------------ | :------: | :----: |\n| taipy/gui/_renderers/factory.py |    96%   |   \ud83d\udfe2   |\n| **TOTAL**                       |  **96%** |   \ud83d\udfe2   |\n\n\n> **updated for commit: `cf29653` by [action](https://github.com/marketplace/actions/python-coverage)\ud83d\udc0d**", "created_at": "2024-12-20T11:03:12Z"}
{"repo": "Avaiga/taipy", "pull_number": 2358, "instance_id": "Avaiga__taipy-2358", "issue_numbers": ["2286", "2286"], "base_commit": "5a4b3f86ddf0fda618d71e685a43a74ae4bd8fa3", "patch": "diff --git a/frontend/taipy-gui/packaging/taipy-gui.d.ts b/frontend/taipy-gui/packaging/taipy-gui.d.ts\nindex bf07e4786b..ab7025678e 100644\n--- a/frontend/taipy-gui/packaging/taipy-gui.d.ts\n+++ b/frontend/taipy-gui/packaging/taipy-gui.d.ts\n@@ -388,6 +388,8 @@ export interface ColumnDesc {\n     lov?: string[];\n     /** If true the user can enter any value besides the lov values. */\n     freeLov?: boolean;\n+    /** If false, the column cannot be sorted */\n+    sortable?: boolean;\n }\n /**\n  * A cell value type.\ndiff --git a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx\nindex 36b39da5a6..834496e399 100644\n--- a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.spec.tsx\n@@ -98,6 +98,7 @@ const tableValue = {\n     },\n };\n const tableColumns = JSON.stringify({ Entity: { dfid: \"Entity\" } });\n+const tableWidthColumns = JSON.stringify({ Entity: { dfid: \"Entity\", width: \"100px\" }, Country: {dfid: \"Country\"} });\n \n describe(\"AutoLoadingTable Component\", () => {\n     it(\"renders\", async () => {\n@@ -132,6 +133,16 @@ describe(\"AutoLoadingTable Component\", () => {\n         const { queryByTestId } = render(<AutoLoadingTable data={undefined} defaultColumns={tableColumns} active={false} />);\n         expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n     });\n+    it(\"hides sort icons when not sortable\", async () => {\n+        const { queryByTestId } = render(<AutoLoadingTable data={undefined} defaultColumns={tableColumns} sortable={false} />);\n+        expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n+    });\n+    it(\"set width if requested\", async () => {\n+        const { getByText } = render(<AutoLoadingTable data={undefined} defaultColumns={tableWidthColumns} />);\n+        const header = getByText(\"Entity\").closest(\"tr\");\n+        expect(header?.firstChild).toHaveStyle({\"min-width\": \"100px\"});\n+        expect(header?.lastChild).toHaveStyle({\"width\": \"100%\"});\n+    });\n     // keep getting undefined Error from jest, it seems to be linked to the setTimeout that makes the code run after the end of the test :-(\n     // https://github.com/facebook/jest/issues/12262\n     // Looks like the right way to handle this is to use jest fakeTimers and runAllTimers ...\ndiff --git a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\nindex fabc2cafe7..0b73046d23 100644\n--- a/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/AutoLoadingTable.tsx\n@@ -11,63 +11,33 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-import React, { useState, useEffect, useCallback, useRef, useMemo, CSSProperties, MouseEvent } from \"react\";\n+import React, { CSSProperties, MouseEvent, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n+import AddIcon from \"@mui/icons-material/Add\";\n+import DataSaverOff from \"@mui/icons-material/DataSaverOff\";\n+import DataSaverOn from \"@mui/icons-material/DataSaverOn\";\n+import Download from \"@mui/icons-material/Download\";\n import Box from \"@mui/material/Box\";\n+import IconButton from \"@mui/material/IconButton\";\n+import Paper from \"@mui/material/Paper\";\n+import Skeleton from \"@mui/material/Skeleton\";\n import MuiTable from \"@mui/material/Table\";\n import TableCell, { TableCellProps } from \"@mui/material/TableCell\";\n import TableContainer from \"@mui/material/TableContainer\";\n import TableHead from \"@mui/material/TableHead\";\n import TableRow from \"@mui/material/TableRow\";\n import TableSortLabel from \"@mui/material/TableSortLabel\";\n-import Paper from \"@mui/material/Paper\";\n+import Tooltip from \"@mui/material/Tooltip\";\n import { visuallyHidden } from \"@mui/utils\";\n import AutoSizer from \"react-virtualized-auto-sizer\";\n import { FixedSizeList, ListOnItemsRenderedProps } from \"react-window\";\n import InfiniteLoader from \"react-window-infinite-loader\";\n-import Skeleton from \"@mui/material/Skeleton\";\n-import IconButton from \"@mui/material/IconButton\";\n-import Tooltip from \"@mui/material/Tooltip\";\n-import AddIcon from \"@mui/icons-material/Add\";\n-import DataSaverOn from \"@mui/icons-material/DataSaverOn\";\n-import DataSaverOff from \"@mui/icons-material/DataSaverOff\";\n-import Download from \"@mui/icons-material/Download\";\n-import { generateHeaderClassName } from \"./tableUtils\";\n \n import {\n     createRequestInfiniteTableUpdateAction,\n     createSendActionNameAction,\n     FormatConfig,\n } from \"../../context/taipyReducers\";\n-import {\n-    ColumnDesc,\n-    FilterDesc,\n-    getSortByIndex,\n-    Order,\n-    TaipyTableProps,\n-    baseBoxSx,\n-    paperSx,\n-    tableSx,\n-    RowType,\n-    EditableCell,\n-    OnCellValidation,\n-    RowValue,\n-    EDIT_COL,\n-    OnRowDeletion,\n-    addActionColumn,\n-    headBoxSx,\n-    getClassName,\n-    ROW_CLASS_NAME,\n-    iconInRowSx,\n-    DEFAULT_SIZE,\n-    OnRowSelection,\n-    getRowIndex,\n-    getTooltip,\n-    defaultColumns,\n-    OnRowClick,\n-    DownloadAction,\n-    getFormatFn,\n-    getPageKey,\n-} from \"./tableUtils\";\n+import { emptyArray } from \"../../utils\";\n import {\n     useClassNames,\n     useDispatch,\n@@ -78,9 +48,39 @@ import {\n     useModule,\n } from \"../../utils/hooks\";\n import TableFilter from \"./TableFilter\";\n-import { getSuffixedClassNames, getUpdateVar } from \"./utils\";\n-import { emptyArray } from \"../../utils\";\n+import {\n+    addActionColumn,\n+    baseBoxSx,\n+    ColumnDesc,\n+    DEFAULT_SIZE,\n+    defaultColumns,\n+    DownloadAction,\n+    EDIT_COL,\n+    EditableCell,\n+    FilterDesc,\n+    generateHeaderClassName,\n+    getClassName,\n+    getFormatFn,\n+    getPageKey,\n+    getRowIndex,\n+    getSortByIndex,\n+    getTooltip,\n+    headBoxSx,\n+    iconInRowSx,\n+    OnCellValidation,\n+    OnRowClick,\n+    OnRowDeletion,\n+    OnRowSelection,\n+    Order,\n+    paperSx,\n+    ROW_CLASS_NAME,\n+    RowType,\n+    RowValue,\n+    tableSx,\n+    TaipyTableProps,\n+} from \"./tableUtils\";\n import { getComponentClassName } from \"./TaipyStyle\";\n+import { getCssSize, getSuffixedClassNames, getUpdateVar } from \"./utils\";\n \n interface RowData {\n     colsOrder: string[];\n@@ -203,6 +203,7 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n         compare = false,\n         onCompare = \"\",\n         useCheckbox = false,\n+        sortable = true,\n     } = props;\n     const [rows, setRows] = useState<RowType[]>([]);\n     const [compRows, setCompRows] = useState<RowType[]>([]);\n@@ -253,7 +254,7 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n     useDispatchRequestUpdateOnFirstRender(dispatch, id, module, updateVars);\n \n     const onSort = useCallback(\n-        (e: React.MouseEvent<HTMLElement>) => {\n+        (e: MouseEvent<HTMLElement>) => {\n             const col = e.currentTarget.getAttribute(\"data-dfid\");\n             if (col) {\n                 const isAsc = orderBy === col && order === \"asc\";\n@@ -287,82 +288,107 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n         e.stopPropagation();\n     }, []);\n \n-    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable] = useMemo(() => {\n-        let hNan = !!props.nanValue;\n-        if (baseColumns) {\n-            try {\n-                let filter = false;\n-                let partialEditable = editable;\n-                const newCols: Record<string, ColumnDesc> = {};\n-                Object.entries(baseColumns).forEach(([cId, cDesc]) => {\n-                    const nDesc = (newCols[cId] = { ...cDesc });\n-                    if (typeof nDesc.filter != \"boolean\") {\n-                        nDesc.filter = !!props.filter;\n-                    }\n-                    filter = filter || nDesc.filter;\n-                    if (typeof nDesc.notEditable == \"boolean\") {\n-                        nDesc.notEditable = !editable;\n-                    } else {\n-                        partialEditable = partialEditable || !nDesc.notEditable;\n-                    }\n-                    if (nDesc.tooltip === undefined) {\n-                        nDesc.tooltip = props.tooltip;\n-                    }\n-                });\n-                addActionColumn(\n-                    (active && partialEditable && (onAdd || onDelete) ? 1 : 0) +\n-                        (active && filter ? 1 : 0) +\n-                        (active && downloadable ? 1 : 0),\n-                    newCols\n-                );\n-                const colsOrder = Object.keys(newCols).sort(getSortByIndex(newCols));\n-                const styTt = colsOrder.reduce<Record<string, Record<string, string>>>((pv, col) => {\n-                    if (newCols[col].className) {\n-                        pv.classNames = pv.classNames || {};\n-                        pv.classNames[newCols[col].dfid] = newCols[col].className as string;\n+    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable, calcWidth] =\n+        useMemo(() => {\n+            let hNan = !!props.nanValue;\n+            if (baseColumns) {\n+                try {\n+                    let filter = false;\n+                    let partialEditable = editable;\n+                    const newCols: Record<string, ColumnDesc> = {};\n+                    Object.entries(baseColumns).forEach(([cId, cDesc]) => {\n+                        const nDesc = (newCols[cId] = { ...cDesc });\n+                        if (typeof nDesc.filter != \"boolean\") {\n+                            nDesc.filter = !!props.filter;\n+                        }\n+                        filter = filter || nDesc.filter;\n+                        if (typeof nDesc.notEditable == \"boolean\") {\n+                            nDesc.notEditable = !editable;\n+                        } else {\n+                            partialEditable = partialEditable || !nDesc.notEditable;\n+                        }\n+                        if (nDesc.tooltip === undefined) {\n+                            nDesc.tooltip = props.tooltip;\n+                        }\n+                        if (typeof nDesc.sortable != \"boolean\") {\n+                            nDesc.sortable = sortable;\n+                        }\n+                    });\n+                    addActionColumn(\n+                        (active && partialEditable && (onAdd || onDelete) ? 1 : 0) +\n+                            (active && filter ? 1 : 0) +\n+                            (active && downloadable ? 1 : 0),\n+                        newCols\n+                    );\n+                    const colsOrder = Object.keys(newCols).sort(getSortByIndex(newCols));\n+                    let nbWidth = 0;\n+                    const styTt = colsOrder.reduce<Record<string, Record<string, string>>>((pv, col) => {\n+                        if (newCols[col].className) {\n+                            pv.classNames = pv.classNames || {};\n+                            pv.classNames[newCols[col].dfid] = newCols[col].className as string;\n+                        }\n+                        hNan = hNan || !!newCols[col].nanValue;\n+                        if (newCols[col].tooltip) {\n+                            pv.tooltips = pv.tooltips || {};\n+                            pv.tooltips[newCols[col].dfid] = newCols[col].tooltip as string;\n+                        }\n+                        if (newCols[col].formatFn) {\n+                            pv.formats = pv.formats || {};\n+                            pv.formats[newCols[col].dfid] = newCols[col].formatFn;\n+                        }\n+                        if (newCols[col].width !== undefined) {\n+                            const cssWidth = getCssSize(newCols[col].width);\n+                            if (cssWidth) {\n+                                newCols[col].width = cssWidth;\n+                                nbWidth++;\n+                            }\n+                        }\n+                        return pv;\n+                    }, {});\n+                    nbWidth = nbWidth ? colsOrder.length - nbWidth : 0;\n+                    if (props.rowClassName) {\n+                        styTt.classNames = styTt.classNames || {};\n+                        styTt.classNames[ROW_CLASS_NAME] = props.rowClassName;\n                     }\n-                    hNan = hNan || !!newCols[col].nanValue;\n-                    if (newCols[col].tooltip) {\n-                        pv.tooltips = pv.tooltips || {};\n-                        pv.tooltips[newCols[col].dfid] = newCols[col].tooltip as string;\n-                    }\n-                    if (newCols[col].formatFn) {\n-                        pv.formats = pv.formats || {};\n-                        pv.formats[newCols[col].dfid] = newCols[col].formatFn;\n-                    }\n-                    return pv;\n-                }, {});\n-                if (props.rowClassName) {\n-                    styTt.classNames = styTt.classNames || {};\n-                    styTt.classNames[ROW_CLASS_NAME] = props.rowClassName;\n+                    return [\n+                        colsOrder,\n+                        newCols,\n+                        styTt.classNames,\n+                        styTt.tooltips,\n+                        styTt.formats,\n+                        hNan,\n+                        filter,\n+                        partialEditable,\n+                        nbWidth > 0 ? `${100 / nbWidth}%` : undefined,\n+                    ];\n+                } catch (e) {\n+                    console.info(\"ATable.columns: \" + ((e as Error).message || e));\n                 }\n-                return [colsOrder, newCols, styTt.classNames, styTt.tooltips, styTt.formats, hNan, filter, partialEditable];\n-            } catch (e) {\n-                console.info(\"ATable.columns: \" + ((e as Error).message || e));\n             }\n-        }\n-        return [\n-            [],\n-            {} as Record<string, ColumnDesc>,\n-            {} as Record<string, string>,\n-            {} as Record<string, string>,\n-            {} as Record<string, string>,\n-            hNan,\n-            false,\n-            false,\n-        ];\n-    }, [\n-        active,\n-        editable,\n-        onAdd,\n-        onDelete,\n-        baseColumns,\n-        props.rowClassName,\n-        props.tooltip,\n-        props.nanValue,\n-        props.filter,\n-        downloadable,\n-    ]);\n+            return [\n+                [],\n+                {} as Record<string, ColumnDesc>,\n+                {} as Record<string, string>,\n+                {} as Record<string, string>,\n+                {} as Record<string, string>,\n+                hNan,\n+                false,\n+                false,\n+                \"\",\n+            ];\n+        }, [\n+            active,\n+            editable,\n+            onAdd,\n+            onDelete,\n+            baseColumns,\n+            props.rowClassName,\n+            props.tooltip,\n+            props.nanValue,\n+            props.filter,\n+            downloadable,\n+            sortable,\n+        ]);\n \n     const boxBodySx = useMemo(() => ({ height: height }), [height]);\n \n@@ -389,7 +415,18 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n             return new Promise<void>((resolve, reject) => {\n                 const cols = colsOrder.map((col) => columns[col].dfid).filter((c) => c != EDIT_COL);\n                 const afs = appliedFilters.filter((fd) => Object.values(columns).some((cd) => cd.dfid === fd.col));\n-                const key = getPageKey(columns, \"Infinite\", cols, orderBy, order, afs, aggregates, cellClassNames, tooltips, formats);\n+                const key = getPageKey(\n+                    columns,\n+                    \"Infinite\",\n+                    cols,\n+                    orderBy,\n+                    order,\n+                    afs,\n+                    aggregates,\n+                    cellClassNames,\n+                    tooltips,\n+                    formats\n+                );\n                 page.current = {\n                     key: key,\n                     promises: { ...page.current.promises, [startIndex]: { resolve: resolve, reject: reject } },\n@@ -594,7 +631,13 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n     const boxSx = useMemo(() => ({ ...baseBoxSx, width: width }), [width]);\n \n     return (\n-        <Box id={id} sx={boxSx} className={`${className} ${getSuffixedClassNames(className, \"-autoloading\")} ${getComponentClassName(props.children)}`}>\n+        <Box\n+            id={id}\n+            sx={boxSx}\n+            className={`${className} ${getSuffixedClassNames(className, \"-autoloading\")} ${getComponentClassName(\n+                props.children\n+            )}`}\n+        >\n             <Paper sx={paperSx}>\n                 <Tooltip title={hover || \"\"}>\n                     <TableContainer>\n@@ -605,10 +648,20 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n                                         <TableCell\n                                             key={`head${columns[col].dfid}`}\n                                             sortDirection={orderBy === columns[col].dfid && order}\n-                                            sx={columns[col].width ? { width: columns[col].width } : {}}\n-                                            className={col === \"EDIT_COL\"\n-                                                ? getSuffixedClassNames(className, \"-action\")\n-                                                : getSuffixedClassNames(className, generateHeaderClassName(columns[col].dfid))\n+                                            sx={\n+                                                columns[col].width\n+                                                    ? { minWidth: columns[col].width }\n+                                                    : calcWidth\n+                                                    ? { width: calcWidth }\n+                                                    : undefined\n+                                            }\n+                                            className={\n+                                                col === \"EDIT_COL\"\n+                                                    ? getSuffixedClassNames(className, \"-action\")\n+                                                    : getSuffixedClassNames(\n+                                                          className,\n+                                                          generateHeaderClassName(columns[col].dfid)\n+                                                      )\n                                             }\n                                         >\n                                             {columns[col].dfid === EDIT_COL ? (\n@@ -653,8 +706,8 @@ const AutoLoadingTable = (props: TaipyTableProps) => {\n                                                     direction={orderBy === columns[col].dfid ? order : \"asc\"}\n                                                     data-dfid={columns[col].dfid}\n                                                     onClick={onSort}\n-                                                    disabled={!active}\n-                                                    hideSortIcon={!active}\n+                                                    disabled={!active || !columns[col].sortable}\n+                                                    hideSortIcon={!active || !columns[col].sortable}\n                                                 >\n                                                     <Box sx={headBoxSx}>\n                                                         {columns[col].groupBy ? (\ndiff --git a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx\nindex c2971bfecf..765e038cad 100644\n--- a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.spec.tsx\n@@ -94,6 +94,10 @@ const tableColumns = JSON.stringify({\n     Entity: { dfid: \"Entity\" },\n     \"Daily hospital occupancy\": { dfid: \"Daily hospital occupancy\", type: \"int64\" },\n });\n+const tableWidthColumns = JSON.stringify({\n+    Entity: { dfid: \"Entity\", width: \"100px\" },\n+    \"Daily hospital occupancy\": { dfid: \"Daily hospital occupancy\", type: \"int64\" },\n+});\n const changedValue = {\n     [valueKey]: {\n         data: [\n@@ -217,6 +221,18 @@ describe(\"PaginatedTable Component\", () => {\n         );\n         expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n     });\n+    it(\"Hides sort icons when not sortable\", async () => {\n+        const { queryByTestId } = render(\n+            <PaginatedTable data={undefined} defaultColumns={tableColumns} sortable={false} />\n+        );\n+        expect(queryByTestId(\"ArrowDownwardIcon\")).toBeNull();\n+    });\n+    it(\"set width if requested\", async () => {\n+        const { getByText } = render(<PaginatedTable data={undefined} defaultColumns={tableWidthColumns} />);\n+        const header = getByText(\"Entity\").closest(\"tr\");\n+        expect(header?.firstChild).toHaveStyle({\"min-width\": \"100px\"});\n+        expect(header?.lastChild).toHaveStyle({\"width\": \"100%\"});\n+    });\n     it(\"dispatch 2 well formed messages at first render\", async () => {\n         const dispatch = jest.fn();\n         const state: TaipyState = INITIAL_STATE;\ndiff --git a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\nindex c5d28f2ec9..f0acba85e9 100644\n--- a/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/PaginatedTable.tsx\n@@ -41,7 +41,6 @@ import TableSortLabel from \"@mui/material/TableSortLabel\";\n import Tooltip from \"@mui/material/Tooltip\";\n import Typography from \"@mui/material/Typography\";\n import { visuallyHidden } from \"@mui/utils\";\n-import { generateHeaderClassName } from \"./tableUtils\";\n \n import { createRequestTableUpdateAction, createSendActionNameAction } from \"../../context/taipyReducers\";\n import { emptyArray } from \"../../utils\";\n@@ -65,6 +64,7 @@ import {\n     EDIT_COL,\n     EditableCell,\n     FilterDesc,\n+    generateHeaderClassName,\n     getClassName,\n     getFormatFn,\n     getPageKey,\n@@ -87,7 +87,7 @@ import {\n     TaipyPaginatedTableProps,\n } from \"./tableUtils\";\n import { getComponentClassName } from \"./TaipyStyle\";\n-import { getSuffixedClassNames, getUpdateVar } from \"./utils\";\n+import { getCssSize, getSuffixedClassNames, getUpdateVar } from \"./utils\";\n \n const loadingStyle: CSSProperties = { width: \"100%\", height: \"3em\", textAlign: \"right\", verticalAlign: \"center\" };\n const skeletonSx = { width: \"100%\", height: \"3em\" };\n@@ -115,6 +115,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n         compare = false,\n         onCompare = \"\",\n         useCheckbox = false,\n+        sortable = true,\n     } = props;\n     const pageSize = props.pageSize === undefined || props.pageSize < 1 ? 100 : Math.round(props.pageSize);\n     const [value, setValue] = useState<Record<string, unknown>>({});\n@@ -138,7 +139,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n     const hover = useDynamicProperty(props.hoverText, props.defaultHoverText, undefined);\n     const baseColumns = useDynamicJsonProperty(props.columns, props.defaultColumns, defaultColumns);\n \n-    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable, nbWidth] =\n+    const [colsOrder, columns, cellClassNames, tooltips, formats, handleNan, filter, partialEditable, calcWidth] =\n         useMemo(() => {\n             let hNan = !!props.nanValue;\n             if (baseColumns) {\n@@ -160,6 +161,9 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                         if (nDesc.tooltip === undefined) {\n                             nDesc.tooltip = props.tooltip;\n                         }\n+                        if (typeof nDesc.sortable != \"boolean\") {\n+                            nDesc.sortable = sortable;\n+                        }\n                     });\n                     addActionColumn(\n                         (active && partialEditable && (onAdd || onDelete) ? 1 : 0) +\n@@ -169,6 +173,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                     );\n                     const colsOrder = Object.keys(newCols).sort(getSortByIndex(newCols));\n                     let nbWidth = 0;\n+                    let widthRate = 0;\n                     const functions = colsOrder.reduce<Record<string, Record<string, string>>>((pv, col) => {\n                         if (newCols[col].className) {\n                             pv.classNames = pv.classNames || {};\n@@ -184,7 +189,14 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                             pv.formats[newCols[col].dfid] = newCols[col].formatFn;\n                         }\n                         if (newCols[col].width !== undefined) {\n-                            nbWidth++;\n+                            const cssWidth = getCssSize(newCols[col].width);\n+                            if (cssWidth) {\n+                                newCols[col].width = cssWidth;\n+                                nbWidth++;\n+                                if (cssWidth.endsWith(\"%\")) {\n+                                    widthRate += parseInt(cssWidth, 10);\n+                                }\n+                            }\n                         }\n                         return pv;\n                     }, {});\n@@ -202,7 +214,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                         hNan,\n                         filter,\n                         partialEditable,\n-                        nbWidth,\n+                        nbWidth > 0 ? `${(100 - widthRate) / nbWidth}%` : undefined\n                     ];\n                 } catch (e) {\n                     console.info(\"PaginatedTable.columns: \", (e as Error).message || e);\n@@ -217,7 +229,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                 hNan,\n                 false,\n                 false,\n-                0,\n+                \"\"\n             ];\n         }, [\n             active,\n@@ -230,6 +242,7 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n             props.nanValue,\n             props.filter,\n             downloadable,\n+            sortable,\n         ]);\n \n     useDispatchRequestUpdateOnFirstRender(dispatch, id, module, updateVars);\n@@ -524,9 +537,9 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                                             sortDirection={orderBy === columns[col].dfid && order}\n                                             sx={\n                                                 columns[col].width\n-                                                    ? { minWidth: columns[col].width }\n-                                                    : nbWidth\n-                                                    ? { minWidth: `${100 / nbWidth}%` }\n+                                                    ? { minWidth:columns[col].width }\n+                                                    : calcWidth\n+                                                    ? { width: calcWidth }\n                                                     : undefined\n                                             }\n                                             className={col === \"EDIT_COL\"\n@@ -576,8 +589,8 @@ const PaginatedTable = (props: TaipyPaginatedTableProps) => {\n                                                     direction={orderBy === columns[col].dfid ? order : \"asc\"}\n                                                     data-dfid={columns[col].dfid}\n                                                     onClick={onSort}\n-                                                    disabled={!active}\n-                                                    hideSortIcon={!active}\n+                                                    disabled={!active || !columns[col].sortable}\n+                                                    hideSortIcon={!active || !columns[col].sortable}\n                                                 >\n                                                     <Box sx={headBoxSx}>\n                                                         {columns[col].groupBy ? (\ndiff --git a/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx b/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx\nindex 3ef9c88453..2b3f295aba 100644\n--- a/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/tableUtils.tsx\n@@ -102,6 +102,8 @@ export interface ColumnDesc {\n     lov?: string[];\n     /** If true the user can enter any value besides the lov values. */\n     freeLov?: boolean;\n+    /** If false, the column cannot be sorted */\n+    sortable?: boolean;\n }\n \n export const DEFAULT_SIZE = \"small\";\n@@ -156,6 +158,7 @@ export interface TaipyTableProps extends TaipyActiveProps, TaipyMultiSelectProps\n     onCompare?: string;\n     compare?: boolean;\n     useCheckbox?: boolean;\n+    sortable?: boolean;\n }\n \n export const DownloadAction = \"__Taipy__download_csv\";\ndiff --git a/frontend/taipy-gui/src/components/Taipy/utils.ts b/frontend/taipy-gui/src/components/Taipy/utils.ts\nindex a714cbbea7..1e82d2d03e 100644\n--- a/frontend/taipy-gui/src/components/Taipy/utils.ts\n+++ b/frontend/taipy-gui/src/components/Taipy/utils.ts\n@@ -116,14 +116,14 @@ export const noDisplayStyle = { display: \"none\" };\n const RE_ONLY_NUMBERS = /^\\d+(\\.\\d*)?$/;\n export const getCssSize = (val: string | number) => {\n     if (typeof val === \"number\") {\n-        return \"\" + val + \"px\";\n+        return `${val}px`;\n     } else {\n-        val = val.trim();\n+        val = `${val}`.trim();\n         if (RE_ONLY_NUMBERS.test(val)) {\n-            return val + \"px\";\n+            return `${val}px`;\n         }\n+        return val;\n     }\n-    return val;\n };\n \n /**\ndiff --git a/taipy/gui/_renderers/factory.py b/taipy/gui/_renderers/factory.py\nindex 7a45cdb90f..f6126944c7 100644\n--- a/taipy/gui/_renderers/factory.py\n+++ b/taipy/gui/_renderers/factory.py\n@@ -585,6 +585,7 @@ class _Factory:\n                 (\"size\",),\n                 (\"downloadable\", PropertyType.boolean),\n                 (\"use_checkbox\", PropertyType.boolean),\n+                (\"sortable\", PropertyType.boolean, True),\n             ]\n         )\n         ._set_propagate()\ndiff --git a/taipy/gui/viselements.json b/taipy/gui/viselements.json\nindex 452ec035fb..4cf152bd9d 100644\n--- a/taipy/gui/viselements.json\n+++ b/taipy/gui/viselements.json\n@@ -814,7 +814,7 @@\n                     {\n                         \"name\": \"width[<i>column_name</i>]\",\n                         \"type\": \"str\",\n-                        \"doc\": \"The width of the indicated column, in CSS units.\"\n+                        \"doc\": \"The width of the indicated column, in CSS units (% values are not supported).\"\n                     },\n                     {\n                         \"name\": \"selected\",\n@@ -1076,6 +1076,12 @@\n                         \"type\": \"bool\",\n                         \"default_value\": \"False\",\n                         \"doc\": \"If True, boolean values are rendered as a simple HTML checkbox.\"\n+                    },\n+                    {\n+                        \"name\": \"sortable\",\n+                        \"type\": \"bool\",\n+                        \"default_value\": \"True\",\n+                        \"doc\": \"If False, the table provides no sorting capability. Individual columns can override this global setting, allowing specific columns to be marked as sortable or non-sortable regardless of value of <i>sortable</i>, by setting the <i>sortable</i> property to True or False accordingly, in the dictionary for that column in the <i>columns</i> property value.\"\n                     }\n                 ]\n             }\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] Applying width to a specific column in a tgb.table does not work\n### What went wrong? \ud83e\udd14\r\n\r\nA customer requested for specific columns in his tgb.table to have a bigger width. The column names have spaces in them so using tgb.table(width__column_name=\"200px\") won't work.\r\n\r\nThis example is supposed to work but applies the style to all columns instead:\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\nimport pandas as pd\r\n\r\ndata = pd.DataFrame({\"A C\": [1, 2, 3], \"B C\": [4, 5, 6], \"C C\": [7, 8, 9]})\r\n\r\nproperties_table = {\"width[B C]\": \"500px\"}\r\n\r\nwith tgb.Page() as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\nGui(page=page).run()\r\n```\r\n![image](https://github.com/user-attachments/assets/5636166c-59be-4c08-92f6-a1427cad5cd1)\r\n\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Applying width to a specific column in a tgb.table does not work\n### What went wrong? \ud83e\udd14\r\n\r\nA customer requested for specific columns in his tgb.table to have a bigger width. The column names have spaces in them so using tgb.table(width__column_name=\"200px\") won't work.\r\n\r\nThis example is supposed to work but applies the style to all columns instead:\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\nimport pandas as pd\r\n\r\ndata = pd.DataFrame({\"A C\": [1, 2, 3], \"B C\": [4, 5, 6], \"C C\": [7, 8, 9]})\r\n\r\nproperties_table = {\"width[B C]\": \"500px\"}\r\n\r\nwith tgb.Page() as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\nGui(page=page).run()\r\n```\r\n![image](https://github.com/user-attachments/assets/5636166c-59be-4c08-92f6-a1427cad5cd1)\r\n\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "This issue is not linked to the column name.\nthe width for the column is propagated to the front-end but it was not noticed due to the way table handle column size requests.\nA css workaround\r\n\r\n```py\r\nwith tgb.Page(style={\"taipy-table\": {\"th:nth-child(2)\": {\"min-width\": \"500px\"}}}) as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\n```\nI believe this is not fixed. I cannot change the width of a single column\nIs it fixed in develop ?\nSame thing. It seems like changing the width of one column is changing everything.\r\n\r\nIf I configure every width for every column, I have a different behavior:\r\n\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\nimport pandas as pd\r\n\r\ndata = pd.DataFrame({\"A C\": [1, 2, 3], \"B C\": [4, 5, 6], \"C C\": [7, 8, 9]})\r\n\r\nproperties_table = {\"width[B C]\": \"50px\", \"width[A C]\": \"500px\", \"width[C C]\": \"100px\"}\r\n\r\nwith tgb.Page() as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\nGui(page=page).run()\r\n\r\n```\r\n\r\n\r\n \nThis issue is not linked to the column name.\nthe width for the column is propagated to the front-end but it was not noticed due to the way table handle column size requests.\nA css workaround\r\n\r\n```py\r\nwith tgb.Page(style={\"taipy-table\": {\"th:nth-child(2)\": {\"min-width\": \"500px\"}}}) as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\n```\nI believe this is not fixed. I cannot change the width of a single column\nIs it fixed in develop ?\nSame thing. It seems like changing the width of one column is changing everything.\r\n\r\nIf I configure every width for every column, I have a different behavior:\r\n\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\nimport pandas as pd\r\n\r\ndata = pd.DataFrame({\"A C\": [1, 2, 3], \"B C\": [4, 5, 6], \"C C\": [7, 8, 9]})\r\n\r\nproperties_table = {\"width[B C]\": \"50px\", \"width[A C]\": \"500px\", \"width[C C]\": \"100px\"}\r\n\r\nwith tgb.Page() as page:\r\n    tgb.table(data=\"{data}\", properties=\"{properties_table}\")\r\n\r\nGui(page=page).run()\r\n\r\n```\r\n\r\n\r\n ", "created_at": "2024-12-19T17:31:52Z"}
{"repo": "Avaiga/taipy", "pull_number": 2357, "instance_id": "Avaiga__taipy-2357", "issue_numbers": ["562"], "base_commit": "d353533072ed47cf8c71421eef26f4ba36735b81", "patch": "diff --git a/taipy/gui_core/_context.py b/taipy/gui_core/_context.py\nindex 02355b2d40..5ff66032aa 100644\n--- a/taipy/gui_core/_context.py\n+++ b/taipy/gui_core/_context.py\n@@ -33,7 +33,6 @@\n     Sequence,\n     SequenceId,\n     Submission,\n-    SubmissionId,\n     cancel_job,\n     create_scenario,\n     delete_job,\n@@ -155,7 +154,7 @@ def scenario_refresh(self, scenario_id: t.Optional[str]):\n         self.broadcast_core_changed({\"scenario\": scenario_id or True})\n \n     def submission_status_callback(self, submission_id: t.Optional[str] = None, event: t.Optional[Event] = None):\n-        if not submission_id or not is_readable(t.cast(SubmissionId, submission_id)):\n+        if not submission_id:\n             return\n         submission = None\n         new_status: t.Optional[SubmissionStatus] = None\n", "test_patch": "diff --git a/tests/gui_core/test_context_is_readable.py b/tests/gui_core/test_context_is_readable.py\nindex 389dcf747b..528a0219bd 100644\n--- a/tests/gui_core/test_context_is_readable.py\n+++ b/tests/gui_core/test_context_is_readable.py\n@@ -213,10 +213,6 @@ def sub_cb():\n             assert found is True\n             mockget.reset_mock()\n \n-            with patch(\"taipy.gui_core._context.is_readable\", side_effect=mock_is_readable_false):\n-                gui_core_context.submission_status_callback(a_submission.id)\n-                mockget.assert_not_called()\n-\n     def test_data_node_adapter(self):\n         with patch(\"taipy.gui_core._context.core_get\", side_effect=mock_core_get):\n             gui_core_context = _GuiCoreContext(Mock())\n@@ -384,7 +380,7 @@ def test_get_scenarios_for_owner(self):\n             mockget.reset_mock()\n \n             with patch(\"taipy.gui_core._context.is_readable\", side_effect=mock_is_readable_false):\n-                gui_core_context.submission_status_callback(a_scenario.id)\n+                gui_core_context.get_scenarios_for_owner(a_scenario.id)\n                 mockget.assert_not_called()\n \n     def test_update_data(self):\n", "problem_statement": "partial.update_content() not updating as expected\n**Description**\nI expected partial.update_content() to immediately change a partial, which would allow for a dynamic element. In a callback there is immediate reaction to changes in the bound variables, but partial.update_content() seems to execute after the callback has finished. This leads to a raised exception in the example. \n\n**How to reproduce**\n```python\nimport taipy as tp\n\n\ndef make_partial(state):\n    state.my_partial.update_content(state, \"\"\"<|empty|>\"\"\")\n\n    if state.select == \"with Y\":\n        state.data_for_display = state.data\n    else:\n        state.data_for_display = state.data2\n\n    content = \"\"\"<|\n\"\"\"\n    for key in state.data_for_display.keys():\n        content = (\n            content + key + \"\"\" = <|{data_for_display['\"\"\" + key + \"\"\"']}|><br />\"\"\"\n        )\n    content = (\n        content\n        + \"\"\"\n|>\"\"\"\n    )\n\n    state.my_partial.update_content(state, content)\n\n\nif __name__ == \"__main__\":\n    data = {\"x\": \"X\", \"y\": \"Y\"}\n    data2 = {\"x\": \"X\"}\n\n    data_for_display = data\n    select = 1\n\n    gui = tp.Gui()\n    gui.add_page(\n        \"page\",\n        page=\"\"\"\n<|selector|value={select}|lov={['with Y','Exception without Y']}|adapter={lambda i: str(i)}|on_change=make_partial|>\n<br />\n<|part|partial={my_partial}|>  \n\"\"\",\n    )\n\n    my_partial = gui.add_partial(page=\"\"\"\"\"\")\n\n    tp.run(gui)\n```\n\n\n", "hints_text": "partial update is asynchronous by design\nyou could add a bit of test in your expression to avoid the exception\n\n```python\nfrom taipy.gui import Gui\n\n\ndef make_partial(state):\n    state.my_partial.update_content(state, \"<|empty|>\")\n\n    if state.select == \"with Y\":\n        state.data_for_display = state.data\n    else:\n        state.data_for_display = state.data2\n\n    content = \"\"\"<|\n\"\"\"\n    for key in state.data_for_display.keys():\n        content = f\"{content}{key} = <|{{data_for_display['{key}'] if '{key}' in data_for_display else ''}}|><br />\"\n    content += \"\"\"\n|>\"\"\"\n\n    state.my_partial.update_content(state, content)\n\n\nif __name__ == \"__main__\":\n    data = {\"x\": \"X\", \"y\": \"Y\"}\n    data2 = {\"x\": \"X\"}\n\n    data_for_display = data\n    select = None\n\n    gui = Gui()\n    gui.add_page(\n        \"page\",\n        page=\"\"\"\n<|selector|value={select}|lov=with Y;Exception without Y|on_change=make_partial|>\n<br />\n<|part|partial={my_partial}|>\n\"\"\",\n    )\n\n    my_partial = gui.add_partial(page=\"\")\n\n    gui.run()\n\n```\nDoes that answer your question @chrisOnWheels ?\nHi Fred,\r\n \r\nthis is exactly what I'm doing. Change the underlying data first, then rebuild/adapt the content for the partial, finally call update_partial. But I keep getting these exceptions.\r\nMy only problem is that these exceptions spam the console.\r\n \r\nBest regards,\r\nChris\r\n \r\n\r\n> Fred Lef\u00e9v\u00e8re-Laoide ***@***.***> hat am 14.09.2023 17:27 GMT geschrieben:\r\n>  \r\n>  \r\n> \r\n>  \r\n> \r\n> you could add a bit of test in your expression to avoid the exception\r\n> \r\n> from taipy.gui import Gui\r\n> \r\n> \r\n> def make_partial(state):\r\n> state.my_partial.update_content(state, \"<|empty|>\")\r\n> \r\n> if state.select == \"with Y\":\r\n> state.data_for_display = state.data\r\n> else:\r\n> state.data_for_display = state.data2\r\n> \r\n> content = \"\"\"<|\r\n> \"\"\"\r\n> for key in state.data_for_display.keys():\r\n> content = f\"{content}{key} = <|{{data_for_display['{key}'] if '{key}' in data_for_display else ''}}|><br />\"\r\n> content += \"\"\"\r\n> |>\"\"\"\r\n> \r\n> state.my_partial.update_content(state, content)\r\n> \r\n> \r\n> if __name__ == \"__main__\":\r\n> data = {\"x\": \"X\", \"y\": \"Y\"}\r\n> data2 = {\"x\": \"X\"}\r\n> \r\n> data_for_display = data\r\n> select = None\r\n> \r\n> gui = Gui()\r\n> gui.add_page(\r\n> \"page\",\r\n> page=\"\"\"\r\n> <|selector|value={select}|lov=with Y;Exception without Y|on_change=make_partial|>\r\n> <br />\r\n> <|part|partial={my_partial}|>\r\n> \"\"\",\r\n> )\r\n> \r\n> my_partial = gui.add_partial(page=\"\")\r\n> \r\n> gui.run()\r\n> \r\n> \r\n> \u2014\r\n> Reply to this email directly, view it on GitHub https://github.com/Avaiga/taipy/issues/562, or unsubscribe https://github.com/notifications/unsubscribe-auth/BB46L2Z3OCFIIQBBCI43BJDX2M46NANCNFSM6AAAAAA3SBI3GA.\r\n> You are receiving this because you authored the thread.Message ID: ***@***.***>\r\n> \r\n\nI don't get any exception with the code I provided.\nCan you give me some example ?\nI will try to isolate it, it's gonna take a while\r\n\r\n> Fred Lef\u00e9v\u00e8re-Laoide ***@***.***> hat am 19.09.2023 07:47 GMT geschrieben:\r\n>  \r\n>  \r\n> \r\n>  \r\n> \r\n> I don't get any exception with the code provided.\r\n> Can you give me some example ?\r\n> \r\n> \u2014\r\n> Reply to this email directly, view it on GitHub https://github.com/Avaiga/taipy/issues/562, or unsubscribe https://github.com/notifications/unsubscribe-auth/BB46L23GNSGFTBABZAXGR43X3FE2HANCNFSM6AAAAAA3SBI3GA.\r\n> You are receiving this because you were mentioned.Message ID: ***@***.***>\r\n> \r\n\n\ud83d\udc4d\nHi @chrisOnWheels \nIs this issue still relevant ?\nI'll not be working on the project in the near future, so it's up to you.\r\nThanks for the support :-)\nHere is a modified version of the code that works properly.\r\n\r\nAll I did was postpone the update of state.data_for_display until just before the partial gets updated.\r\nPlease let us know if this works for you, so we can Close the issue with a smile on our faces.\r\n\r\n```python\r\nimport taipy as tp\r\n\r\n\r\ndef make_partial(state):\r\n    state.my_partial.update_content(state, \"<|empty|>\")\r\n\r\n    new_data = data if state.select == \"with Y\" else data2\r\n    content = \"<|\\n\"\r\n    for key in new_data.keys():\r\n        content = content + key + f\" = <|{{data_for_display['{key}']}}|><br />\\n\"\r\n    content = content + \"|>\"\r\n\r\n    state.data_for_display = new_data\r\n    state.my_partial.update_content(state, content)\r\n\r\n\r\ndata = {\"x\": \"X\", \"y\": \"Y\"}\r\ndata2 = {\"x\": \"X\"}\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    data_for_display = data\r\n    select = 1\r\n\r\n    gui = tp.Gui()\r\n    gui.add_page(\r\n        \"page\",\r\n        page=\"\"\"\r\n<|selector|value={select}|lov={['with Y','Exception without Y']}|adapter={lambda i: str(i)}|on_change=make_partial|>\r\n<br />\r\n<|part|partial={my_partial}|>  \r\n\"\"\",\r\n    )\r\n\r\n    my_partial = gui.add_partial(page=\"<|empty|>\")\r\n\r\n    tp.run(gui)\r\n``` \nClosed as answered. ", "created_at": "2024-12-19T08:13:17Z"}
{"repo": "Avaiga/taipy", "pull_number": 2355, "instance_id": "Avaiga__taipy-2355", "issue_numbers": ["2152", "2152"], "base_commit": "11ff2778e86668b082ba6f44243bff8e63fc574e", "patch": "diff --git a/frontend/taipy-gui/public/stylekit/controls/button.css b/frontend/taipy-gui/public/stylekit/controls/button.css\nindex 9bf4d9a171..f2b1e56a6e 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/button.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/button.css\n@@ -21,6 +21,10 @@\n               MODIFIER CLASSES\n **************************************************/\n \n+.taipy-button {\n+    margin: 4px 0;\n+}\n+\n /* fullwidth :  */\n .taipy-button.fullwidth {\n     display: flex;\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/file_download.css b/frontend/taipy-gui/public/stylekit/controls/file_download.css\nindex 54085e4b4c..903818c918 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/file_download.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/file_download.css\n@@ -20,6 +20,9 @@\n /*************************************************\n               MODIFIER CLASSES\n **************************************************/\n+.taipy-file-download>button {\n+    margin: 4px 0;\n+}\n \n /* fullwidth :  */\n .taipy-file-download.fullwidth button {\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/file_selector.css b/frontend/taipy-gui/public/stylekit/controls/file_selector.css\nindex 08515985d8..d99757cdb8 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/file_selector.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/file_selector.css\n@@ -20,6 +20,9 @@\n /*************************************************\n               MODIFIER CLASSES\n **************************************************/\n+.taipy-file-selector .MuiButtonBase-root {\n+    margin: 4px 0;\n+}\n \n /* fullwidth :  */\n .taipy-file-selector.fullwidth [role='button'] {\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/selector.css b/frontend/taipy-gui/public/stylekit/controls/selector.css\nindex 0e56ecdc7d..cdb929aca4 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/selector.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/selector.css\n@@ -22,7 +22,7 @@\n **************************************************/\n \n .taipy-selector {\n-  margin: 0;\n+  margin: 4px 0;\n }\n \n \ndiff --git a/frontend/taipy-gui/public/stylekit/controls/slider.css b/frontend/taipy-gui/public/stylekit/controls/slider.css\nindex 4bba39e40a..e978642689 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/slider.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/slider.css\n@@ -26,4 +26,5 @@\n     max-width: 100%;\n     min-height: 48px;\n     align-items: center;\n+    margin: 4px 0;\n }\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/status.css b/frontend/taipy-gui/public/stylekit/controls/status.css\nindex c0e1d73381..3643303e77 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/status.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/status.css\n@@ -25,4 +25,5 @@\n     display: inline-flex;\n     min-height: 48px;\n     padding-top: 0.5em;\n+    margin: 4px 0;\n }\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/toggle.css b/frontend/taipy-gui/public/stylekit/controls/toggle.css\nindex 7ff2b1afe9..2a75e9ee5e 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/toggle.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/toggle.css\n@@ -36,6 +36,9 @@\n /*************************************************\n               MODIFIER CLASSES\n **************************************************/\n+.taipy-toggle {\n+    margin: 4px 0;\n+}\n \n /* relative : Reset the theme toggle position to fit page flow */\n .taipy-toggle.relative {\ndiff --git a/taipy/gui_core/_context.py b/taipy/gui_core/_context.py\nindex 82f8b7bdad..59ba3dddad 100644\n--- a/taipy/gui_core/_context.py\n+++ b/taipy/gui_core/_context.py\n@@ -33,7 +33,6 @@\n     Sequence,\n     SequenceId,\n     Submission,\n-    SubmissionId,\n     can_create,\n     cancel_job,\n     create_scenario,\n@@ -166,67 +165,64 @@ def submission_status_callback(self, submission_id: t.Optional[str] = None, even\n         if not submission_id:\n             return\n         submission = None\n-        new_status = None\n+        new_status: t.Optional[SubmissionStatus] = None\n         payload: t.Optional[t.Dict[str, t.Any]] = None\n         client_id: t.Optional[str] = None\n+        submission_name: t.Optional[str] = None\n         try:\n-            last_client_status = self.client_submission.get(submission_id)\n-            if not last_client_status:\n+            submission = t.cast(Submission, core_get(submission_id))\n+            if not submission or not submission.entity_id:\n                 return\n+            new_status = submission.submission_status\n \n-            client_id = last_client_status.client_id\n-\n-            with self.gui._get_authorization(client_id):\n-                if not is_readable(t.cast(SubmissionId, submission_id)):\n-                    return\n-                submission = t.cast(Submission, core_get(submission_id))\n-                if not submission or not submission.entity_id:\n+            with self.submissions_lock:\n+                last_client_status = self.client_submission.get(submission_id)\n+                if not last_client_status:\n                     return\n \n                 payload = {}\n-                new_status = t.cast(SubmissionStatus, submission.submission_status)\n-\n-                if client_id:\n-                    running_tasks = {}\n-                    # with self.gui._get_authorization(client_id):\n-                    for job in submission.jobs:\n-                        job = job if isinstance(job, Job) else t.cast(Job, core_get(job))\n-                        running_tasks[job.task.id] = (\n-                            SubmissionStatus.RUNNING.value\n-                            if job.is_running()\n-                            else SubmissionStatus.PENDING.value\n-                            if job.is_pending()\n-                            else None\n-                        )\n-                    payload.update(tasks=running_tasks)\n-\n-                    if last_client_status.submission_status is not new_status:\n-                        # callback\n-                        submission_name = submission.properties.get(\"on_submission\")\n-                        if submission_name:\n-                            self.gui.invoke_callback(\n-                                client_id,\n-                                submission_name,\n-                                [\n-                                    core_get(submission.id),\n-                                    {\n-                                        \"submission_status\": new_status.name,\n-                                        \"submittable_entity\": core_get(submission.entity_id),\n-                                        **(event.metadata if event else {}),\n-                                    },\n-                                ],\n-                                submission.properties.get(\"module_context\"),\n+                if last_client_status.submission_status is not new_status:\n+                    # callback\n+                    submission_name = submission.properties.get(\"on_submission\")\n+\n+                if new_status in (\n+                    SubmissionStatus.COMPLETED,\n+                    SubmissionStatus.FAILED,\n+                    SubmissionStatus.CANCELED,\n+                ):\n+                    self.client_submission.pop(submission_id, None)\n+                else:\n+                    last_client_status.submission_status = new_status\n+\n+            if client_id:= submission.properties.get(\"client_id\"):\n+                with self.gui._get_authorization(client_id):\n+                    if payload is not None:\n+                        running_tasks = {}\n+                        for job in submission.jobs:\n+                            job = job if isinstance(job, Job) else t.cast(Job, core_get(job))\n+                            running_tasks[job.task.id] = (\n+                                SubmissionStatus.RUNNING.value\n+                                if job.is_running()\n+                                else SubmissionStatus.PENDING.value\n+                                if job.is_pending()\n+                                else None\n                             )\n+                        payload.update(tasks=running_tasks)\n \n-            if new_status in (\n-                SubmissionStatus.COMPLETED,\n-                SubmissionStatus.FAILED,\n-                SubmissionStatus.CANCELED,\n-            ):\n-                with self.submissions_lock:\n-                    self.client_submission.pop(submission_id, None)\n-            else:\n-                last_client_status.submission_status = new_status\n+                    if submission_name:\n+                        self.gui.invoke_callback(\n+                            client_id,\n+                            submission_name,\n+                            [\n+                                core_get(submission.id),\n+                                {\n+                                    \"submission_status\": new_status.name if new_status else \"None\",\n+                                    \"submittable_entity\": core_get(submission.entity_id),\n+                                    **(event.metadata if event else {}),\n+                                },\n+                            ],\n+                            submission.properties.get(\"module_context\"),\n+                        )\n \n         except Exception as e:\n             _warn(f\"Submission ({submission_id}) is not available\", e)\n", "test_patch": "diff --git a/tests/gui_core/test_context_is_readable.py b/tests/gui_core/test_context_is_readable.py\nindex d321f31fb6..a2a4101bc9 100644\n--- a/tests/gui_core/test_context_is_readable.py\n+++ b/tests/gui_core/test_context_is_readable.py\n@@ -215,10 +215,6 @@ def test_submission_status_callback(self):\n             assert found is True\n             mockget.reset_mock()\n \n-            with patch(\"taipy.gui_core._context.is_readable\", side_effect=mock_is_readable_false):\n-                gui_core_context.submission_status_callback(a_submission.id)\n-                mockget.assert_not_called()\n-\n     def test_data_node_adapter(self):\n         with patch(\"taipy.gui_core._context.core_get\", side_effect=mock_core_get):\n             gui_core_context = _GuiCoreContext(Mock())\n@@ -386,7 +382,7 @@ def test_get_scenarios_for_owner(self):\n             mockget.reset_mock()\n \n             with patch(\"taipy.gui_core._context.is_readable\", side_effect=mock_is_readable_false):\n-                gui_core_context.submission_status_callback(a_scenario.id)\n+                gui_core_context.get_scenarios_for_owner(a_scenario.id)\n                 mockget.assert_not_called()\n \n     def test_update_data(self):\n", "problem_statement": "[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "Hmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n\nI can see it is closed. \r\nIt should be backported to release/4.0. Did I miss the PR for the backport, or is it planned for the future?\r\n@toan-quach @FredLL-Avaiga \nI guess @FabienLelaquais has backported this ?\nAll right. Thx!\nIt doesn't seem to be fixed in 4.0.2.dev1.\r\n\r\n```\r\n[2024-12-18 14:47:46.742][Taipy][INFO] Updating configuration with command-line arguments...\r\n[2024-12-18 14:47:46.743][Taipy][INFO] Managing application's version...\r\n[2024-12-18 14:47:46.744][Taipy][INFO] Development mode: Clean all entities of version 1b849301-77bb-43bd-b4c4-c4f0f33d15b5\r\n[2024-12-18 14:47:46.793][Taipy][INFO] Checking application's version...\r\n[2024-12-18 14:47:46.794][Taipy][INFO] Blocking configuration update...\r\n[2024-12-18 14:47:46.795][Taipy][INFO] Starting job dispatcher...\r\n[2024-12-18 14:47:46.798][Taipy][INFO] Orchestrator service has been started.\r\n[2024-12-18 14:47:48.220][Taipy][INFO]  * Server starting on http://127.0.0.1:5000\r\n[2024-12-18 14:47:52.302][Taipy][INFO] job JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68 is completed.\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B99723BC10>\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B9972600D0>\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_069b8ca0-845d-4929-a1bc-b59341925b2c', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 12, 18, 14, 47, 52, 88398), 'version': '1b849301-77bb-43bd-b4c4-c4f0f33d15b5', 'job_triggered_submission_status_changed': 'JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68'}\r\n```\non it\nHmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n\nI can see it is closed. \r\nIt should be backported to release/4.0. Did I miss the PR for the backport, or is it planned for the future?\r\n@toan-quach @FredLL-Avaiga \nI guess @FabienLelaquais has backported this ?\nAll right. Thx!\nIt doesn't seem to be fixed in 4.0.2.dev1.\r\n\r\n```\r\n[2024-12-18 14:47:46.742][Taipy][INFO] Updating configuration with command-line arguments...\r\n[2024-12-18 14:47:46.743][Taipy][INFO] Managing application's version...\r\n[2024-12-18 14:47:46.744][Taipy][INFO] Development mode: Clean all entities of version 1b849301-77bb-43bd-b4c4-c4f0f33d15b5\r\n[2024-12-18 14:47:46.793][Taipy][INFO] Checking application's version...\r\n[2024-12-18 14:47:46.794][Taipy][INFO] Blocking configuration update...\r\n[2024-12-18 14:47:46.795][Taipy][INFO] Starting job dispatcher...\r\n[2024-12-18 14:47:46.798][Taipy][INFO] Orchestrator service has been started.\r\n[2024-12-18 14:47:48.220][Taipy][INFO]  * Server starting on http://127.0.0.1:5000\r\n[2024-12-18 14:47:52.302][Taipy][INFO] job JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68 is completed.\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B99723BC10>\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B9972600D0>\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_069b8ca0-845d-4929-a1bc-b59341925b2c', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 12, 18, 14, 47, 52, 88398), 'version': '1b849301-77bb-43bd-b4c4-c4f0f33d15b5', 'job_triggered_submission_status_changed': 'JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68'}\r\n```\non it", "created_at": "2024-12-18T16:03:58Z"}
{"repo": "Avaiga/taipy", "pull_number": 2354, "instance_id": "Avaiga__taipy-2354", "issue_numbers": ["2305", "2305"], "base_commit": "f7deb54f8d607160fae37e5ce0d6410c7f7a2ce4", "patch": "diff --git a/frontend/taipy-gui/public/stylekit/controls/button.css b/frontend/taipy-gui/public/stylekit/controls/button.css\nindex 9bf4d9a171..f2b1e56a6e 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/button.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/button.css\n@@ -21,6 +21,10 @@\n               MODIFIER CLASSES\n **************************************************/\n \n+.taipy-button {\n+    margin: 4px 0;\n+}\n+\n /* fullwidth :  */\n .taipy-button.fullwidth {\n     display: flex;\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/file_download.css b/frontend/taipy-gui/public/stylekit/controls/file_download.css\nindex 54085e4b4c..903818c918 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/file_download.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/file_download.css\n@@ -20,6 +20,9 @@\n /*************************************************\n               MODIFIER CLASSES\n **************************************************/\n+.taipy-file-download>button {\n+    margin: 4px 0;\n+}\n \n /* fullwidth :  */\n .taipy-file-download.fullwidth button {\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/file_selector.css b/frontend/taipy-gui/public/stylekit/controls/file_selector.css\nindex 08515985d8..d99757cdb8 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/file_selector.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/file_selector.css\n@@ -20,6 +20,9 @@\n /*************************************************\n               MODIFIER CLASSES\n **************************************************/\n+.taipy-file-selector .MuiButtonBase-root {\n+    margin: 4px 0;\n+}\n \n /* fullwidth :  */\n .taipy-file-selector.fullwidth [role='button'] {\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/selector.css b/frontend/taipy-gui/public/stylekit/controls/selector.css\nindex 0e56ecdc7d..cdb929aca4 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/selector.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/selector.css\n@@ -22,7 +22,7 @@\n **************************************************/\n \n .taipy-selector {\n-  margin: 0;\n+  margin: 4px 0;\n }\n \n \ndiff --git a/frontend/taipy-gui/public/stylekit/controls/slider.css b/frontend/taipy-gui/public/stylekit/controls/slider.css\nindex 4bba39e40a..e978642689 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/slider.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/slider.css\n@@ -26,4 +26,5 @@\n     max-width: 100%;\n     min-height: 48px;\n     align-items: center;\n+    margin: 4px 0;\n }\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/status.css b/frontend/taipy-gui/public/stylekit/controls/status.css\nindex c0e1d73381..3643303e77 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/status.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/status.css\n@@ -25,4 +25,5 @@\n     display: inline-flex;\n     min-height: 48px;\n     padding-top: 0.5em;\n+    margin: 4px 0;\n }\ndiff --git a/frontend/taipy-gui/public/stylekit/controls/toggle.css b/frontend/taipy-gui/public/stylekit/controls/toggle.css\nindex 7ff2b1afe9..2a75e9ee5e 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/toggle.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/toggle.css\n@@ -36,6 +36,9 @@\n /*************************************************\n               MODIFIER CLASSES\n **************************************************/\n+.taipy-toggle {\n+    margin: 4px 0;\n+}\n \n /* relative : Reset the theme toggle position to fit page flow */\n .taipy-toggle.relative {\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] Improve and fix stylekit to make UI elements more consistent\n### What went wrong? \ud83e\udd14\r\n\r\nHere is a list of UI components. The stylekit should provide a consistent set of UI elements. Some viz elements are higher than others.\r\n\r\n![image](https://github.com/user-attachments/assets/f8ec9230-c224-4eb9-8d08-11f2d85d734a)\r\n\r\n\r\n### Expected Behavior\r\n\r\nSome elements should be fixed, and others may be improved. I don't have any specific recommendations for improvement.\r\n\r\n### Steps to Reproduce Issue\r\n\r\nRun this code.\r\n\r\n```python\r\nfrom taipy.gui import Gui, notify\r\nimport taipy.gui.builder as tgb\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.layout(columns=\"1 1 1 1 1\"):\r\n        tgb.selector(dropdown=True)\r\n        tgb.selector(dropdown=True, filter=True)\r\n        tgb.selector(\r\n            dropdown=True,\r\n            label=\"City\",\r\n        )\r\n        tgb.selector(dropdown=True, label=\"City\", filter=True)\r\n        tgb.input(\"Some Text\")\r\n        tgb.input(\"Some Text\", label=\"Write some text\")\r\n        tgb.number(10)\r\n        tgb.number(10, label=\"Write a number\")\r\n        tgb.date(\"2021-01-01\")\r\n        tgb.date(\"2021-01-01\", label=\"Pick a date\")\r\n        tgb.date(\"2021-01-01\", with_time=True)\r\n        tgb.date_range([\"2021-01-01\", \"2022-01-01\"])\r\n        tgb.date_range(\r\n            [\"2021-01-01\", \"2022-01-01\"], label_start=\"Start\", label_end=\"End\"\r\n        )\r\n        tgb.slider(10)\r\n        tgb.slider(10, label=\"Pick a number\")  # No label\r\n        tgb.toggle(lov=[\"Yes\", \"No\"])\r\n        tgb.toggle(lov=[\"Yes\", \"No\"], label=\"Yes or No\")  # Misplaced label\r\n        tgb.toggle(True)\r\n        tgb.toggle(True, label=\"Yes or No\")\r\n        tgb.button(\"Click me\")\r\n        tgb.button(\"Click me full and plain\", class_name=\"fullwidth plain\")\r\n        tgb.file_download()\r\n        tgb.file_selector()\r\n        tgb.file_selector(label=\"Pick a file\")\r\n        tgb.status(\"Ready\")\r\n\r\n\r\nGui(page).run()\r\n```\r\n\r\n## Other example\r\n\r\nhttps://github.com/Avaiga/taipy/issues/2262\r\n\r\nVisual elements should have the similar position and layouts in the default stylekit. For example, if I place a selector and a button side by side, they should be aligned:\r\n\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.layout(columns=\"1 1 10\"):\r\n        with tgb.part():\r\n            tgb.button(\"Click me\")\r\n        with tgb.part():\r\n            tgb.selector(\"{selected}\", lov=\"Furniture;Desk\", dropdown=True)\r\n\r\nGui(page=page).run()\r\n```\r\n\r\nHere, they are misaligned:\r\n![image](https://github.com/user-attachments/assets/64b3db15-3425-4d4b-8723-e85e1e6a5e1c)\r\n\r\nThis issue makes layouts a CSS nightmare in any application:\r\n![image](https://github.com/user-attachments/assets/c5ddc14e-c27b-40f0-86cb-16b459ec6f41)\r\n\r\n\r\n\r\n### Browsers\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nWindows\r\n\r\n\r\n### Version of Taipy\r\n\r\n4.0.1\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Improve and fix stylekit to make UI elements more consistent\n### What went wrong? \ud83e\udd14\r\n\r\nHere is a list of UI components. The stylekit should provide a consistent set of UI elements. Some viz elements are higher than others.\r\n\r\n![image](https://github.com/user-attachments/assets/f8ec9230-c224-4eb9-8d08-11f2d85d734a)\r\n\r\n\r\n### Expected Behavior\r\n\r\nSome elements should be fixed, and others may be improved. I don't have any specific recommendations for improvement.\r\n\r\n### Steps to Reproduce Issue\r\n\r\nRun this code.\r\n\r\n```python\r\nfrom taipy.gui import Gui, notify\r\nimport taipy.gui.builder as tgb\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.layout(columns=\"1 1 1 1 1\"):\r\n        tgb.selector(dropdown=True)\r\n        tgb.selector(dropdown=True, filter=True)\r\n        tgb.selector(\r\n            dropdown=True,\r\n            label=\"City\",\r\n        )\r\n        tgb.selector(dropdown=True, label=\"City\", filter=True)\r\n        tgb.input(\"Some Text\")\r\n        tgb.input(\"Some Text\", label=\"Write some text\")\r\n        tgb.number(10)\r\n        tgb.number(10, label=\"Write a number\")\r\n        tgb.date(\"2021-01-01\")\r\n        tgb.date(\"2021-01-01\", label=\"Pick a date\")\r\n        tgb.date(\"2021-01-01\", with_time=True)\r\n        tgb.date_range([\"2021-01-01\", \"2022-01-01\"])\r\n        tgb.date_range(\r\n            [\"2021-01-01\", \"2022-01-01\"], label_start=\"Start\", label_end=\"End\"\r\n        )\r\n        tgb.slider(10)\r\n        tgb.slider(10, label=\"Pick a number\")  # No label\r\n        tgb.toggle(lov=[\"Yes\", \"No\"])\r\n        tgb.toggle(lov=[\"Yes\", \"No\"], label=\"Yes or No\")  # Misplaced label\r\n        tgb.toggle(True)\r\n        tgb.toggle(True, label=\"Yes or No\")\r\n        tgb.button(\"Click me\")\r\n        tgb.button(\"Click me full and plain\", class_name=\"fullwidth plain\")\r\n        tgb.file_download()\r\n        tgb.file_selector()\r\n        tgb.file_selector(label=\"Pick a file\")\r\n        tgb.status(\"Ready\")\r\n\r\n\r\nGui(page).run()\r\n```\r\n\r\n## Other example\r\n\r\nhttps://github.com/Avaiga/taipy/issues/2262\r\n\r\nVisual elements should have the similar position and layouts in the default stylekit. For example, if I place a selector and a button side by side, they should be aligned:\r\n\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.layout(columns=\"1 1 10\"):\r\n        with tgb.part():\r\n            tgb.button(\"Click me\")\r\n        with tgb.part():\r\n            tgb.selector(\"{selected}\", lov=\"Furniture;Desk\", dropdown=True)\r\n\r\nGui(page=page).run()\r\n```\r\n\r\nHere, they are misaligned:\r\n![image](https://github.com/user-attachments/assets/64b3db15-3425-4d4b-8723-e85e1e6a5e1c)\r\n\r\nThis issue makes layouts a CSS nightmare in any application:\r\n![image](https://github.com/user-attachments/assets/c5ddc14e-c27b-40f0-86cb-16b459ec6f41)\r\n\r\n\r\n\r\n### Browsers\r\n\r\nChrome\r\n\r\n### OS\r\n\r\nWindows\r\n\r\n\r\n### Version of Taipy\r\n\r\n4.0.1\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "![Image](https://github.com/user-attachments/assets/93338623-dcd3-4e46-927e-0f71f86cfa8c)\n\nDo you have this example too? \r\n\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.layout(columns=\"1 1 10\"):\r\n        with tgb.part():\r\n            tgb.button(\"Click me\")\r\n        with tgb.part():\r\n            tgb.selector(\"{selected}\", lov=\"Furniture;Desk\", dropdown=True)\r\n\r\nGui(page=page).run()\r\n```\n![image](https://github.com/user-attachments/assets/e42c4c84-d858-4339-ae85-47ebadfa7688)\r\nWhen I change taipy-selector's margin to 0 in selector.css (I'll side load this in my current PR)\nThere is still a slight issue of alignment here\r\n![image](https://github.com/user-attachments/assets/6959cfa1-9553-40dc-b077-d48b7903dd5e)\r\n\nSome code?\n\nIt is the one from the issue. The top right of the screen\n![Image](https://github.com/user-attachments/assets/93338623-dcd3-4e46-927e-0f71f86cfa8c)\n\nDo you have this example too? \r\n\r\n```python\r\nfrom taipy.gui import Gui\r\nimport taipy.gui.builder as tgb\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.layout(columns=\"1 1 10\"):\r\n        with tgb.part():\r\n            tgb.button(\"Click me\")\r\n        with tgb.part():\r\n            tgb.selector(\"{selected}\", lov=\"Furniture;Desk\", dropdown=True)\r\n\r\nGui(page=page).run()\r\n```\n![image](https://github.com/user-attachments/assets/e42c4c84-d858-4339-ae85-47ebadfa7688)\r\nWhen I change taipy-selector's margin to 0 in selector.css (I'll side load this in my current PR)\nThere is still a slight issue of alignment here\r\n![image](https://github.com/user-attachments/assets/6959cfa1-9553-40dc-b077-d48b7903dd5e)\r\n\nSome code?\n\nIt is the one from the issue. The top right of the screen", "created_at": "2024-12-18T15:43:52Z"}
{"repo": "Avaiga/taipy", "pull_number": 2353, "instance_id": "Avaiga__taipy-2353", "issue_numbers": ["2152", "2152"], "base_commit": "ff44f460f337add841f1023650e57b47052b0614", "patch": "diff --git a/taipy/gui/gui.py b/taipy/gui/gui.py\nindex eb963ac796..6c80f0f547 100644\n--- a/taipy/gui/gui.py\n+++ b/taipy/gui/gui.py\n@@ -1557,7 +1557,7 @@ def _set_module_context(self, module_context: t.Optional[str]) -> t.ContextManag\n     def invoke_callback(\n         self,\n         state_id: str,\n-        callback: t.Callable,\n+        callback: t.Union[t.Callable, str],\n         args: t.Optional[t.Sequence[t.Any]] = None,\n         module_context: t.Optional[str] = None,\n     ) -> t.Any:\ndiff --git a/taipy/gui_core/_context.py b/taipy/gui_core/_context.py\nindex 1d8cb6cc77..02355b2d40 100644\n--- a/taipy/gui_core/_context.py\n+++ b/taipy/gui_core/_context.py\n@@ -158,55 +158,26 @@ def submission_status_callback(self, submission_id: t.Optional[str] = None, even\n         if not submission_id or not is_readable(t.cast(SubmissionId, submission_id)):\n             return\n         submission = None\n-        new_status = None\n+        new_status: t.Optional[SubmissionStatus] = None\n         payload: t.Optional[t.Dict[str, t.Any]] = None\n         client_id: t.Optional[str] = None\n+        submission_name: t.Optional[str] = None\n         try:\n-            last_client_status = self.client_submission.get(submission_id)\n-            if not last_client_status:\n-                return\n-\n             submission = t.cast(Submission, core_get(submission_id))\n             if not submission or not submission.entity_id:\n                 return\n+            new_status = submission.submission_status\n \n-            payload = {}\n-            new_status = t.cast(SubmissionStatus, submission.submission_status)\n+            with self.submissions_lock:\n+                last_client_status = self.client_submission.get(submission_id)\n+                if not last_client_status:\n+                    return\n \n-            client_id = submission.properties.get(\"client_id\")\n-            if client_id:\n-                running_tasks = {}\n-                with self.gui._get_authorization(client_id):\n-                    for job in submission.jobs:\n-                        job = job if isinstance(job, Job) else t.cast(Job, core_get(job))\n-                        running_tasks[job.task.id] = (\n-                            SubmissionStatus.RUNNING.value\n-                            if job.is_running()\n-                            else SubmissionStatus.PENDING.value\n-                            if job.is_pending()\n-                            else None\n-                        )\n-                    payload.update(tasks=running_tasks)\n-\n-                    if last_client_status.submission_status is not new_status:\n-                        # callback\n-                        submission_name = submission.properties.get(\"on_submission\")\n-                        if submission_name:\n-                            self.gui.invoke_callback(\n-                                client_id,\n-                                submission_name,\n-                                [\n-                                    core_get(submission.id),\n-                                    {\n-                                        \"submission_status\": new_status.name,\n-                                        \"submittable_entity\": core_get(submission.entity_id),\n-                                        **(event.metadata if event else {}),\n-                                    },\n-                                ],\n-                                submission.properties.get(\"module_context\"),\n-                            )\n+                payload = {}\n+                if last_client_status.submission_status is not new_status:\n+                    # callback\n+                    submission_name = submission.properties.get(\"on_submission\")\n \n-            with self.submissions_lock:\n                 if new_status in (\n                     SubmissionStatus.COMPLETED,\n                     SubmissionStatus.FAILED,\n@@ -216,6 +187,36 @@ def submission_status_callback(self, submission_id: t.Optional[str] = None, even\n                 else:\n                     last_client_status.submission_status = new_status\n \n+            if client_id:= submission.properties.get(\"client_id\"):\n+                with self.gui._get_authorization(client_id):\n+                    if payload is not None:\n+                        running_tasks = {}\n+                        for job in submission.jobs:\n+                            job = job if isinstance(job, Job) else t.cast(Job, core_get(job))\n+                            running_tasks[job.task.id] = (\n+                                SubmissionStatus.RUNNING.value\n+                                if job.is_running()\n+                                else SubmissionStatus.PENDING.value\n+                                if job.is_pending()\n+                                else None\n+                            )\n+                        payload.update(tasks=running_tasks)\n+\n+                    if submission_name:\n+                        self.gui.invoke_callback(\n+                            client_id,\n+                            submission_name,\n+                            [\n+                                core_get(submission.id),\n+                                {\n+                                    \"submission_status\": new_status.name if new_status else \"None\",\n+                                    \"submittable_entity\": core_get(submission.entity_id),\n+                                    **(event.metadata if event else {}),\n+                                },\n+                            ],\n+                            submission.properties.get(\"module_context\"),\n+                        )\n+\n         except Exception as e:\n             _warn(f\"Submission ({submission_id}) is not available\", e)\n \n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "Hmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n\nI can see it is closed. \r\nIt should be backported to release/4.0. Did I miss the PR for the backport, or is it planned for the future?\r\n@toan-quach @FredLL-Avaiga \nI guess @FabienLelaquais has backported this ?\nAll right. Thx!\nIt doesn't seem to be fixed in 4.0.2.dev1.\r\n\r\n```\r\n[2024-12-18 14:47:46.742][Taipy][INFO] Updating configuration with command-line arguments...\r\n[2024-12-18 14:47:46.743][Taipy][INFO] Managing application's version...\r\n[2024-12-18 14:47:46.744][Taipy][INFO] Development mode: Clean all entities of version 1b849301-77bb-43bd-b4c4-c4f0f33d15b5\r\n[2024-12-18 14:47:46.793][Taipy][INFO] Checking application's version...\r\n[2024-12-18 14:47:46.794][Taipy][INFO] Blocking configuration update...\r\n[2024-12-18 14:47:46.795][Taipy][INFO] Starting job dispatcher...\r\n[2024-12-18 14:47:46.798][Taipy][INFO] Orchestrator service has been started.\r\n[2024-12-18 14:47:48.220][Taipy][INFO]  * Server starting on http://127.0.0.1:5000\r\n[2024-12-18 14:47:52.302][Taipy][INFO] job JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68 is completed.\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B99723BC10>\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B9972600D0>\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_069b8ca0-845d-4929-a1bc-b59341925b2c', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 12, 18, 14, 47, 52, 88398), 'version': '1b849301-77bb-43bd-b4c4-c4f0f33d15b5', 'job_triggered_submission_status_changed': 'JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68'}\r\n```\non it\nHmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n\nI can see it is closed. \r\nIt should be backported to release/4.0. Did I miss the PR for the backport, or is it planned for the future?\r\n@toan-quach @FredLL-Avaiga \nI guess @FabienLelaquais has backported this ?\nAll right. Thx!\nIt doesn't seem to be fixed in 4.0.2.dev1.\r\n\r\n```\r\n[2024-12-18 14:47:46.742][Taipy][INFO] Updating configuration with command-line arguments...\r\n[2024-12-18 14:47:46.743][Taipy][INFO] Managing application's version...\r\n[2024-12-18 14:47:46.744][Taipy][INFO] Development mode: Clean all entities of version 1b849301-77bb-43bd-b4c4-c4f0f33d15b5\r\n[2024-12-18 14:47:46.793][Taipy][INFO] Checking application's version...\r\n[2024-12-18 14:47:46.794][Taipy][INFO] Blocking configuration update...\r\n[2024-12-18 14:47:46.795][Taipy][INFO] Starting job dispatcher...\r\n[2024-12-18 14:47:46.798][Taipy][INFO] Orchestrator service has been started.\r\n[2024-12-18 14:47:48.220][Taipy][INFO]  * Server starting on http://127.0.0.1:5000\r\n[2024-12-18 14:47:52.302][Taipy][INFO] job JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68 is completed.\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B99723BC10>\r\nCOMPLETED\r\n<taipy.core.submission.submission.Submission object at 0x000002B9972600D0>\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\r\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_069b8ca0-845d-4929-a1bc-b59341925b2c', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 12, 18, 14, 47, 52, 88398), 'version': '1b849301-77bb-43bd-b4c4-c4f0f33d15b5', 'job_triggered_submission_status_changed': 'JOB_double_2312965a-c72d-4649-aa26-53e9a2c74e68'}\r\n```\non it", "created_at": "2024-12-18T14:49:16Z"}
{"repo": "Avaiga/taipy", "pull_number": 2347, "instance_id": "Avaiga__taipy-2347", "issue_numbers": ["2326", "2326"], "base_commit": "15ad0a6041a831b01c37994c01733e8c601f494c", "patch": "diff --git a/frontend/taipy-gui/package-lock.json b/frontend/taipy-gui/package-lock.json\nindex 05af0f18c4..54e7c0c8a3 100644\n--- a/frontend/taipy-gui/package-lock.json\n+++ b/frontend/taipy-gui/package-lock.json\n@@ -79,17 +79,17 @@\n         \"ts-jest\": \"^29.0.0\",\n         \"ts-jest-mock-import-meta\": \"^1.2.0\",\n         \"ts-loader\": \"^9.2.6\",\n-        \"typedoc\": \"^0.26.3\",\n-        \"typedoc-plugin-markdown\": \"^4.1.1\",\n-        \"typescript\": \"^5.5.3\",\n+        \"typedoc\": \"^0.27.5\",\n+        \"typedoc-plugin-markdown\": \"^4.3.2\",\n+        \"typescript\": \"^5.7.2\",\n         \"webpack\": \"^5.61.0\",\n         \"webpack-cli\": \"^5.0.0\"\n       }\n     },\n     \"node_modules/@adobe/css-tools\": {\n-      \"version\": \"4.4.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.0.tgz\",\n-      \"integrity\": \"sha512-Ff9+ksdQQB3rMncgqDK78uLznstjyfIf2Arnh22pW8kBpLs6rpKDwgnZT46hin5Hl1WzazzK64DOrhSwYpS7bQ==\",\n+      \"version\": \"4.4.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.1.tgz\",\n+      \"integrity\": \"sha512-12WGKBQzjUAI4ayyF4IAtfw2QR/IDoqk6jTddXDhtYTJF9ASmoE1zst7cVtP0aL/F1jUJL5r+JxKXKEgHNbEUQ==\",\n       \"dev\": true\n     },\n     \"node_modules/@ampproject/remapping\": {\n@@ -119,9 +119,9 @@\n       }\n     },\n     \"node_modules/@babel/compat-data\": {\n-      \"version\": \"7.26.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.2.tgz\",\n-      \"integrity\": \"sha512-Z0WgzSEa+aUcdiJuCIqgujCshpMWgUpgOxXotrYPSA53hA3qopNaqcJpyr0hVb1FeWdnqFA35/fUtXgBK8srQg==\",\n+      \"version\": \"7.26.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.3.tgz\",\n+      \"integrity\": \"sha512-nHIxvKPniQXpmQLb0vhY3VaFb3S0YrTAwpOWJZh1wn3oJPjJk9Asva204PsBdmAE8vpzfHudT8DB0scYvy9q0g==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=6.9.0\"\n@@ -173,12 +173,12 @@\n       }\n     },\n     \"node_modules/@babel/generator\": {\n-      \"version\": \"7.26.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.2.tgz\",\n-      \"integrity\": \"sha512-zevQbhbau95nkoxSq3f/DC/SC+EEOUZd3DYqfSkMhY2/wfSeaHV1Ew4vk8e+x8lja31IbyuUa2uQ3JONqKbysw==\",\n+      \"version\": \"7.26.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.26.3.tgz\",\n+      \"integrity\": \"sha512-6FF/urZvD0sTeO7k6/B15pMLC4CHUv1426lzr3N01aHJTl046uCAh9LXW/fzeXXjPNCJ6iABW5XaWOsIZB93aQ==\",\n       \"dependencies\": {\n-        \"@babel/parser\": \"^7.26.2\",\n-        \"@babel/types\": \"^7.26.0\",\n+        \"@babel/parser\": \"^7.26.3\",\n+        \"@babel/types\": \"^7.26.3\",\n         \"@jridgewell/gen-mapping\": \"^0.3.5\",\n         \"@jridgewell/trace-mapping\": \"^0.3.25\",\n         \"jsesc\": \"^3.0.2\"\n@@ -289,11 +289,11 @@\n       }\n     },\n     \"node_modules/@babel/parser\": {\n-      \"version\": \"7.26.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.2.tgz\",\n-      \"integrity\": \"sha512-DWMCZH9WA4Maitz2q21SRKHo9QXZxkDsbNZoVD62gusNtNBBqDg9i7uOhASfTfIGNzW+O+r7+jAlM8dwphcJKQ==\",\n+      \"version\": \"7.26.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.26.3.tgz\",\n+      \"integrity\": \"sha512-WJ/CvmY8Mea8iDXo6a7RK2wbmJITT5fN3BEkRuFlxVyNx8jOKIIhmC4fSkTcPcf8JyavbBwIe6OpiCOBXt/IcA==\",\n       \"dependencies\": {\n-        \"@babel/types\": \"^7.26.0\"\n+        \"@babel/types\": \"^7.26.3\"\n       },\n       \"bin\": {\n         \"parser\": \"bin/babel-parser.js\"\n@@ -549,15 +549,15 @@\n       }\n     },\n     \"node_modules/@babel/traverse\": {\n-      \"version\": \"7.25.9\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.25.9.tgz\",\n-      \"integrity\": \"sha512-ZCuvfwOwlz/bawvAuvcj8rrithP2/N55Tzz342AkTvq4qaWbGfmCk/tKhNaV2cthijKrPAA8SRJV5WWe7IBMJw==\",\n+      \"version\": \"7.26.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.4.tgz\",\n+      \"integrity\": \"sha512-fH+b7Y4p3yqvApJALCPJcwb0/XaOSgtK4pzV6WVjPR5GLFQBRI7pfoX2V2iM48NXvX07NUxxm1Vw98YjqTcU5w==\",\n       \"dependencies\": {\n-        \"@babel/code-frame\": \"^7.25.9\",\n-        \"@babel/generator\": \"^7.25.9\",\n-        \"@babel/parser\": \"^7.25.9\",\n+        \"@babel/code-frame\": \"^7.26.2\",\n+        \"@babel/generator\": \"^7.26.3\",\n+        \"@babel/parser\": \"^7.26.3\",\n         \"@babel/template\": \"^7.25.9\",\n-        \"@babel/types\": \"^7.25.9\",\n+        \"@babel/types\": \"^7.26.3\",\n         \"debug\": \"^4.3.1\",\n         \"globals\": \"^11.1.0\"\n       },\n@@ -566,9 +566,9 @@\n       }\n     },\n     \"node_modules/@babel/types\": {\n-      \"version\": \"7.26.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.0.tgz\",\n-      \"integrity\": \"sha512-Z/yiTPj+lDVnF7lWeKCIJzaIkI0vYO87dMpZ4bg4TDrFe4XXLFWL1TbXU27gBP3QccxV9mZICCrnjnYlJjXHOA==\",\n+      \"version\": \"7.26.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.26.3.tgz\",\n+      \"integrity\": \"sha512-vN5p+1kl59GVKMvTHt55NzzmYVxprfJD+ql7U9NFIfKCBkYE55LYtS+WtPlaYOyzydrKI8Nezd+aZextrd+FMA==\",\n       \"dependencies\": {\n         \"@babel/helper-string-parser\": \"^7.25.9\",\n         \"@babel/helper-validator-identifier\": \"^7.25.9\"\n@@ -609,15 +609,15 @@\n       }\n     },\n     \"node_modules/@emotion/babel-plugin\": {\n-      \"version\": \"11.12.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@emotion/babel-plugin/-/babel-plugin-11.12.0.tgz\",\n-      \"integrity\": \"sha512-y2WQb+oP8Jqvvclh8Q55gLUyb7UFvgv7eJfsj7td5TToBrIUtPay2kMrZi4xjq9qw2vD0ZR5fSho0yqoFgX7Rw==\",\n+      \"version\": \"11.13.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@emotion/babel-plugin/-/babel-plugin-11.13.5.tgz\",\n+      \"integrity\": \"sha512-pxHCpT2ex+0q+HH91/zsdHkw/lXd468DIN2zvfvLtPKLLMo6gQj7oLObq8PhkrxOZb/gGCq03S3Z7PDhS8pduQ==\",\n       \"dependencies\": {\n         \"@babel/helper-module-imports\": \"^7.16.7\",\n         \"@babel/runtime\": \"^7.18.3\",\n         \"@emotion/hash\": \"^0.9.2\",\n         \"@emotion/memoize\": \"^0.9.0\",\n-        \"@emotion/serialize\": \"^1.2.0\",\n+        \"@emotion/serialize\": \"^1.3.3\",\n         \"babel-plugin-macros\": \"^3.1.0\",\n         \"convert-source-map\": \"^1.5.0\",\n         \"escape-string-regexp\": \"^4.0.0\",\n@@ -627,13 +627,13 @@\n       }\n     },\n     \"node_modules/@emotion/cache\": {\n-      \"version\": \"11.13.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@emotion/cache/-/cache-11.13.1.tgz\",\n-      \"integrity\": \"sha512-iqouYkuEblRcXmylXIwwOodiEK5Ifl7JcX7o6V4jI3iW4mLXX3dmt5xwBtIkJiQEXFAI+pC8X0i67yiPkH9Ucw==\",\n+      \"version\": \"11.14.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@emotion/cache/-/cache-11.14.0.tgz\",\n+      \"integrity\": \"sha512-L/B1lc/TViYk4DcpGxtAVbx0ZyiKM5ktoIyafGkH6zg/tj+mA+NE//aPYKG0k8kCHSHVJrpLpcAlOBEXQ3SavA==\",\n       \"dependencies\": {\n         \"@emotion/memoize\": \"^0.9.0\",\n         \"@emotion/sheet\": \"^1.4.0\",\n-        \"@emotion/utils\": \"^1.4.0\",\n+        \"@emotion/utils\": \"^1.4.2\",\n         \"@emotion/weak-memoize\": \"^0.4.0\",\n         \"stylis\": \"4.2.0\"\n       }\n@@ -657,16 +657,16 @@\n       \"integrity\": \"sha512-30FAj7/EoJ5mwVPOWhAyCX+FPfMDrVecJAM+Iw9NRoSl4BBAQeqj4cApHHUXOVvIPgLVDsCFoz/hGD+5QQD1GQ==\"\n     },\n     \"node_modules/@emotion/react\": {\n-      \"version\": \"11.13.3\",\n-      \"resolved\": \"https://registry.npmjs.org/@emotion/react/-/react-11.13.3.tgz\",\n-      \"integrity\": \"sha512-lIsdU6JNrmYfJ5EbUCf4xW1ovy5wKQ2CkPRM4xogziOxH1nXxBSjpC9YqbFAP7circxMfYp+6x676BqWcEiixg==\",\n+      \"version\": \"11.14.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@emotion/react/-/react-11.14.0.tgz\",\n+      \"integrity\": \"sha512-O000MLDBDdk/EohJPFUqvnp4qnHeYkVP5B0xEG0D/L7cOKP9kefu2DXn8dj74cQfsEzUqh+sr1RzFqiL1o+PpA==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.18.3\",\n-        \"@emotion/babel-plugin\": \"^11.12.0\",\n-        \"@emotion/cache\": \"^11.13.0\",\n-        \"@emotion/serialize\": \"^1.3.1\",\n-        \"@emotion/use-insertion-effect-with-fallbacks\": \"^1.1.0\",\n-        \"@emotion/utils\": \"^1.4.0\",\n+        \"@emotion/babel-plugin\": \"^11.13.5\",\n+        \"@emotion/cache\": \"^11.14.0\",\n+        \"@emotion/serialize\": \"^1.3.3\",\n+        \"@emotion/use-insertion-effect-with-fallbacks\": \"^1.2.0\",\n+        \"@emotion/utils\": \"^1.4.2\",\n         \"@emotion/weak-memoize\": \"^0.4.0\",\n         \"hoist-non-react-statics\": \"^3.3.1\"\n       },\n@@ -680,14 +680,14 @@\n       }\n     },\n     \"node_modules/@emotion/serialize\": {\n-      \"version\": \"1.3.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@emotion/serialize/-/serialize-1.3.2.tgz\",\n-      \"integrity\": \"sha512-grVnMvVPK9yUVE6rkKfAJlYZgo0cu3l9iMC77V7DW6E1DUIrU68pSEXRmFZFOFB1QFo57TncmOcvcbMDWsL4yA==\",\n+      \"version\": \"1.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@emotion/serialize/-/serialize-1.3.3.tgz\",\n+      \"integrity\": \"sha512-EISGqt7sSNWHGI76hC7x1CksiXPahbxEOrC5RjmFRJTqLyEK9/9hZvBbiYn70dw4wuwMKiEMCUlR6ZXTSWQqxA==\",\n       \"dependencies\": {\n         \"@emotion/hash\": \"^0.9.2\",\n         \"@emotion/memoize\": \"^0.9.0\",\n         \"@emotion/unitless\": \"^0.10.0\",\n-        \"@emotion/utils\": \"^1.4.1\",\n+        \"@emotion/utils\": \"^1.4.2\",\n         \"csstype\": \"^3.0.2\"\n       }\n     },\n@@ -697,16 +697,16 @@\n       \"integrity\": \"sha512-fTBW9/8r2w3dXWYM4HCB1Rdp8NLibOw2+XELH5m5+AkWiL/KqYX6dc0kKYlaYyKjrQ6ds33MCdMPEwgs2z1rqg==\"\n     },\n     \"node_modules/@emotion/styled\": {\n-      \"version\": \"11.13.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@emotion/styled/-/styled-11.13.0.tgz\",\n-      \"integrity\": \"sha512-tkzkY7nQhW/zC4hztlwucpT8QEZ6eUzpXDRhww/Eej4tFfO0FxQYWRyg/c5CCXa4d/f174kqeXYjuQRnhzf6dA==\",\n+      \"version\": \"11.14.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@emotion/styled/-/styled-11.14.0.tgz\",\n+      \"integrity\": \"sha512-XxfOnXFffatap2IyCeJyNov3kiDQWoR08gPUQxvbL7fxKryGBKUZUkG6Hz48DZwVrJSVh9sJboyV1Ds4OW6SgA==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.18.3\",\n-        \"@emotion/babel-plugin\": \"^11.12.0\",\n+        \"@emotion/babel-plugin\": \"^11.13.5\",\n         \"@emotion/is-prop-valid\": \"^1.3.0\",\n-        \"@emotion/serialize\": \"^1.3.0\",\n-        \"@emotion/use-insertion-effect-with-fallbacks\": \"^1.1.0\",\n-        \"@emotion/utils\": \"^1.4.0\"\n+        \"@emotion/serialize\": \"^1.3.3\",\n+        \"@emotion/use-insertion-effect-with-fallbacks\": \"^1.2.0\",\n+        \"@emotion/utils\": \"^1.4.2\"\n       },\n       \"peerDependencies\": {\n         \"@emotion/react\": \"^11.0.0-rc.0\",\n@@ -724,17 +724,17 @@\n       \"integrity\": \"sha512-dFoMUuQA20zvtVTuxZww6OHoJYgrzfKM1t52mVySDJnMSEa08ruEvdYQbhvyu6soU+NeLVd3yKfTfT0NeV6qGg==\"\n     },\n     \"node_modules/@emotion/use-insertion-effect-with-fallbacks\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@emotion/use-insertion-effect-with-fallbacks/-/use-insertion-effect-with-fallbacks-1.1.0.tgz\",\n-      \"integrity\": \"sha512-+wBOcIV5snwGgI2ya3u99D7/FJquOIniQT1IKyDsBmEgwvpxMNeS65Oib7OnE2d2aY+3BU4OiH+0Wchf8yk3Hw==\",\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@emotion/use-insertion-effect-with-fallbacks/-/use-insertion-effect-with-fallbacks-1.2.0.tgz\",\n+      \"integrity\": \"sha512-yJMtVdH59sxi/aVJBpk9FQq+OR8ll5GT8oWd57UpeaKEVGab41JWaCFA7FRLoMLloOZF/c/wsPoe+bfGmRKgDg==\",\n       \"peerDependencies\": {\n         \"react\": \">=16.8.0\"\n       }\n     },\n     \"node_modules/@emotion/utils\": {\n-      \"version\": \"1.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@emotion/utils/-/utils-1.4.1.tgz\",\n-      \"integrity\": \"sha512-BymCXzCG3r72VKJxaYVwOXATqXIZ85cuvg0YOUDxMGNrKc1DJRZk8MgV5wyXRyEayIMd4FuXJIUgTBXvDNW5cA==\"\n+      \"version\": \"1.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@emotion/utils/-/utils-1.4.2.tgz\",\n+      \"integrity\": \"sha512-3vLclRofFziIa3J2wDh9jjbkUz9qk5Vi3IZ/FSTKViB0k+ef0fPV7dYrUIugbgupYDx7v9ud/SjrtEP8Y4xLoA==\"\n     },\n     \"node_modules/@emotion/weak-memoize\": {\n       \"version\": \"0.4.0\",\n@@ -849,6 +849,17 @@\n         \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n       }\n     },\n+    \"node_modules/@gerrit0/mini-shiki\": {\n+      \"version\": \"1.24.4\",\n+      \"resolved\": \"https://registry.npmjs.org/@gerrit0/mini-shiki/-/mini-shiki-1.24.4.tgz\",\n+      \"integrity\": \"sha512-YEHW1QeAg6UmxEmswiQbOVEg1CW22b1XUD/lNTliOsu0LD0wqoyleFMnmbTp697QE0pcadQiR5cVtbbAPncvpw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"@shikijs/engine-oniguruma\": \"^1.24.2\",\n+        \"@shikijs/types\": \"^1.24.2\",\n+        \"@shikijs/vscode-textmate\": \"^9.3.1\"\n+      }\n+    },\n     \"node_modules/@humanwhocodes/config-array\": {\n       \"version\": \"0.13.0\",\n       \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz\",\n@@ -1110,6 +1121,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/@jest/core/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/@jest/environment\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/@jest/environment/-/environment-29.7.0.tgz\",\n@@ -1331,9 +1348,9 @@\n       }\n     },\n     \"node_modules/@jridgewell/gen-mapping\": {\n-      \"version\": \"0.3.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz\",\n-      \"integrity\": \"sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==\",\n+      \"version\": \"0.3.8\",\n+      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz\",\n+      \"integrity\": \"sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==\",\n       \"dependencies\": {\n         \"@jridgewell/set-array\": \"^1.2.1\",\n         \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n@@ -1516,18 +1533,18 @@\n       \"dev\": true\n     },\n     \"node_modules/@mui/core-downloads-tracker\": {\n-      \"version\": \"6.1.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-6.1.7.tgz\",\n-      \"integrity\": \"sha512-POuIBi80BZBogQkG4PQKIGwy4QFwB+kOr+OI4k7Znh7LqMAIhwB9OC00l6M+w1GrZJYj3T8R5WX8G6QAIvoVEw==\",\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-6.2.1.tgz\",\n+      \"integrity\": \"sha512-U/8vS1+1XiHBnnRRESSG1gvr6JDHdPjrpnW6KEebkAQWBn6wrpbSF/XSZ8/vJIRXH5NyDmMHi4Ro5Q70//JKhA==\",\n       \"funding\": {\n         \"type\": \"opencollective\",\n         \"url\": \"https://opencollective.com/mui-org\"\n       }\n     },\n     \"node_modules/@mui/icons-material\": {\n-      \"version\": \"6.1.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/icons-material/-/icons-material-6.1.7.tgz\",\n-      \"integrity\": \"sha512-RGzkeHNArIVy5ZQ12bq/8VYNeICEyngngsFskTJ/2hYKhIeIII3iRGtaZaSvLpXh7h3Fg3VKTulT+QU0w5K4XQ==\",\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/icons-material/-/icons-material-6.2.1.tgz\",\n+      \"integrity\": \"sha512-bP0XtW+t5KFL+wjfQp2UctN/8CuWqF1qaxbYuCAsJhL+AzproM8gGOh2n8sNBcrjbVckzDNqaXqxdpn+OmoWug==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\"\n       },\n@@ -1539,7 +1556,7 @@\n         \"url\": \"https://opencollective.com/mui-org\"\n       },\n       \"peerDependencies\": {\n-        \"@mui/material\": \"^6.1.7\",\n+        \"@mui/material\": \"^6.2.1\",\n         \"@types/react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n       },\n@@ -1550,21 +1567,21 @@\n       }\n     },\n     \"node_modules/@mui/material\": {\n-      \"version\": \"6.1.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/material/-/material-6.1.7.tgz\",\n-      \"integrity\": \"sha512-KsjujQL/A2hLd1PV3QboF+W6SSL5QqH6ZlSuQoeYz9r69+TnyBFIevbYLxdjJcJmGBjigL5pfpn7hTGop+vhSg==\",\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/material/-/material-6.2.1.tgz\",\n+      \"integrity\": \"sha512-7VlKGsRKsy1bOSOPaSNgpkzaL+0C7iWAVKd2KYyAvhR9fTLJtiAMpq+KuzgEh1so2mtvQERN0tZVIceWMiIesw==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/core-downloads-tracker\": \"^6.1.7\",\n-        \"@mui/system\": \"^6.1.7\",\n-        \"@mui/types\": \"^7.2.19\",\n-        \"@mui/utils\": \"^6.1.7\",\n+        \"@mui/core-downloads-tracker\": \"^6.2.1\",\n+        \"@mui/system\": \"^6.2.1\",\n+        \"@mui/types\": \"^7.2.20\",\n+        \"@mui/utils\": \"^6.2.1\",\n         \"@popperjs/core\": \"^2.11.8\",\n-        \"@types/react-transition-group\": \"^4.4.11\",\n+        \"@types/react-transition-group\": \"^4.4.12\",\n         \"clsx\": \"^2.1.1\",\n         \"csstype\": \"^3.1.3\",\n         \"prop-types\": \"^15.8.1\",\n-        \"react-is\": \"^18.3.1\",\n+        \"react-is\": \"^19.0.0\",\n         \"react-transition-group\": \"^4.4.5\"\n       },\n       \"engines\": {\n@@ -1577,7 +1594,7 @@\n       \"peerDependencies\": {\n         \"@emotion/react\": \"^11.5.0\",\n         \"@emotion/styled\": \"^11.3.0\",\n-        \"@mui/material-pigment-css\": \"^6.1.7\",\n+        \"@mui/material-pigment-css\": \"^6.2.1\",\n         \"@types/react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n         \"react-dom\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n@@ -1598,12 +1615,12 @@\n       }\n     },\n     \"node_modules/@mui/private-theming\": {\n-      \"version\": \"6.1.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/private-theming/-/private-theming-6.1.7.tgz\",\n-      \"integrity\": \"sha512-uLbfUSsug5K0LVkv0PI6Flste3le8+6WSL2omdTiYde93P89Qr7pKr8TA6d2yXfr+Bm+SvD8/fGnkaRwFkryuQ==\",\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/private-theming/-/private-theming-6.2.1.tgz\",\n+      \"integrity\": \"sha512-u1y0gpcfrRRxCcIdVeU5eIvkinA82Q8ft178WUNYuoFQrsOrXdlBdZlRVi+eYuUFp1iXI55Cud7sMZZtETix5Q==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/utils\": \"^6.1.7\",\n+        \"@mui/utils\": \"^6.2.1\",\n         \"prop-types\": \"^15.8.1\"\n       },\n       \"engines\": {\n@@ -1624,13 +1641,13 @@\n       }\n     },\n     \"node_modules/@mui/styled-engine\": {\n-      \"version\": \"6.1.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-6.1.7.tgz\",\n-      \"integrity\": \"sha512-Ou4CxN7MQmwrfG1Pu6EYjPgPChQXxPDJrwgizLXlRPOad5qAq4gYXRuzrGQ2DfGjjwmJhjI8T6A0SeapAZPGig==\",\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-6.2.1.tgz\",\n+      \"integrity\": \"sha512-6R3OgYw6zgCZWFYYMfxDqpGfJA78mUTOIlUDmmJlr60ogVNCrM87X0pqx5TbZ2OwUyxlJxN9qFgRr+J9H6cOBg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@emotion/cache\": \"^11.13.1\",\n-        \"@emotion/serialize\": \"^1.3.2\",\n+        \"@emotion/cache\": \"^11.13.5\",\n+        \"@emotion/serialize\": \"^1.3.3\",\n         \"@emotion/sheet\": \"^1.4.0\",\n         \"csstype\": \"^3.1.3\",\n         \"prop-types\": \"^15.8.1\"\n@@ -1657,15 +1674,15 @@\n       }\n     },\n     \"node_modules/@mui/system\": {\n-      \"version\": \"6.1.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/system/-/system-6.1.7.tgz\",\n-      \"integrity\": \"sha512-qbMGgcC/FodpuRSfjXlEDdbNQaW++eATh0vNBcPUv2/YXSpReoOpoT9FhogxEBNks+aQViDXBRZKh6HX2fVmwg==\",\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/system/-/system-6.2.1.tgz\",\n+      \"integrity\": \"sha512-0lc8CbBP4WAAF+SmGMFJI9bpIyQvW3zvwIDzLsb26FIB/4Z0pO7qGe8mkAl0RM63Vb37899qxnThhHKgAAdy6w==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/private-theming\": \"^6.1.7\",\n-        \"@mui/styled-engine\": \"^6.1.7\",\n-        \"@mui/types\": \"^7.2.19\",\n-        \"@mui/utils\": \"^6.1.7\",\n+        \"@mui/private-theming\": \"^6.2.1\",\n+        \"@mui/styled-engine\": \"^6.2.1\",\n+        \"@mui/types\": \"^7.2.20\",\n+        \"@mui/utils\": \"^6.2.1\",\n         \"clsx\": \"^2.1.1\",\n         \"csstype\": \"^3.1.3\",\n         \"prop-types\": \"^15.8.1\"\n@@ -1696,9 +1713,9 @@\n       }\n     },\n     \"node_modules/@mui/types\": {\n-      \"version\": \"7.2.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/types/-/types-7.2.19.tgz\",\n-      \"integrity\": \"sha512-6XpZEM/Q3epK9RN8ENoXuygnqUQxE+siN/6rGRi2iwJPgBUR25mphYQ9ZI87plGh58YoZ5pp40bFvKYOCDJ3tA==\",\n+      \"version\": \"7.2.20\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/types/-/types-7.2.20.tgz\",\n+      \"integrity\": \"sha512-straFHD7L8v05l/N5vcWk+y7eL9JF0C2mtph/y4BPm3gn2Eh61dDwDB65pa8DLss3WJfDXYC7Kx5yjP0EmXpgw==\",\n       \"peerDependencies\": {\n         \"@types/react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n       },\n@@ -1709,16 +1726,16 @@\n       }\n     },\n     \"node_modules/@mui/utils\": {\n-      \"version\": \"6.1.7\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/utils/-/utils-6.1.7.tgz\",\n-      \"integrity\": \"sha512-Gr7cRZxBoZ0BIa3Xqf/2YaUrBLyNPJvXPQH3OsD9WMZukI/TutibbQBVqLYpgqJn8pKSjbD50Yq2auG0wI1xOw==\",\n+      \"version\": \"6.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/utils/-/utils-6.2.1.tgz\",\n+      \"integrity\": \"sha512-ubLqGIMhKUH2TF/Um+wRzYXgAooQw35th+DPemGrTpgrZHpOgcnUDIDbwsk1e8iQiuJ3mV/ErTtcQrecmlj5cg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.26.0\",\n-        \"@mui/types\": \"^7.2.19\",\n-        \"@types/prop-types\": \"^15.7.13\",\n+        \"@mui/types\": \"^7.2.20\",\n+        \"@types/prop-types\": \"^15.7.14\",\n         \"clsx\": \"^2.1.1\",\n         \"prop-types\": \"^15.8.1\",\n-        \"react-is\": \"^18.3.1\"\n+        \"react-is\": \"^19.0.0\"\n       },\n       \"engines\": {\n         \"node\": \">=14.0.0\"\n@@ -1738,13 +1755,13 @@\n       }\n     },\n     \"node_modules/@mui/x-date-pickers\": {\n-      \"version\": \"7.22.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-date-pickers/-/x-date-pickers-7.22.2.tgz\",\n-      \"integrity\": \"sha512-1KHSlIlnSoY3oHm820By8X344pIdGYqPvCCvfVHrEeeIQ/pHdxDD8tjZFWkFl4Jgm9oVFK90fMcqNZAzc+WaCw==\",\n+      \"version\": \"7.23.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-date-pickers/-/x-date-pickers-7.23.2.tgz\",\n+      \"integrity\": \"sha512-Kt9VsEnShaBKiaastTYku66UIWptgc9UMA16d0G/0TkfIsvZrAD3iacQR6HHAXWspaFshdfsRmW2JAoFhzKZsg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\",\n-        \"@mui/x-internals\": \"7.21.0\",\n+        \"@mui/x-internals\": \"7.23.0\",\n         \"@types/react-transition-group\": \"^4.4.11\",\n         \"clsx\": \"^2.1.1\",\n         \"prop-types\": \"^15.8.1\",\n@@ -1769,8 +1786,8 @@\n         \"moment\": \"^2.29.4\",\n         \"moment-hijri\": \"^2.1.2 || ^3.0.0\",\n         \"moment-jalaali\": \"^0.7.4 || ^0.8.0 || ^0.9.0 || ^0.10.0\",\n-        \"react\": \"^17.0.0 || ^18.0.0\",\n-        \"react-dom\": \"^17.0.0 || ^18.0.0\"\n+        \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n+        \"react-dom\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n       },\n       \"peerDependenciesMeta\": {\n         \"@emotion/react\": {\n@@ -1803,9 +1820,9 @@\n       }\n     },\n     \"node_modules/@mui/x-internals\": {\n-      \"version\": \"7.21.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-internals/-/x-internals-7.21.0.tgz\",\n-      \"integrity\": \"sha512-94YNyZ0BhK5Z+Tkr90RKf47IVCW8R/1MvdUhh6MCQg6sZa74jsX+x+gEZ4kzuCqOsuyTyxikeQ8vVuCIQiP7UQ==\",\n+      \"version\": \"7.23.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-internals/-/x-internals-7.23.0.tgz\",\n+      \"integrity\": \"sha512-bPclKpqUiJYIHqmTxSzMVZi6MH51cQsn5U+8jskaTlo3J4QiMeCYJn/gn7YbeR9GOZFp8hetyHjoQoVHKRXCig==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\"\n@@ -1818,17 +1835,17 @@\n         \"url\": \"https://opencollective.com/mui-org\"\n       },\n       \"peerDependencies\": {\n-        \"react\": \"^17.0.0 || ^18.0.0\"\n+        \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n       }\n     },\n     \"node_modules/@mui/x-tree-view\": {\n-      \"version\": \"7.22.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@mui/x-tree-view/-/x-tree-view-7.22.1.tgz\",\n-      \"integrity\": \"sha512-EdFuzAgHn+/b++oNbm8JuXiF4MbRW+Dg70+MNbp2fQi8U1J38kg1hwvIFQ6Wi2AEt3Dv9euaPMFJM+a/4pk5Ng==\",\n+      \"version\": \"7.23.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@mui/x-tree-view/-/x-tree-view-7.23.2.tgz\",\n+      \"integrity\": \"sha512-/R/9/GSF311fVLOUCg7r+a/+AScYZezL0SJZPfsTOquL1RDPAFRZei7BZEivUzOSEELJc0cxLGapJyM6QCA7Zg==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.25.7\",\n         \"@mui/utils\": \"^5.16.6 || ^6.0.0\",\n-        \"@mui/x-internals\": \"7.21.0\",\n+        \"@mui/x-internals\": \"7.23.0\",\n         \"@types/react-transition-group\": \"^4.4.11\",\n         \"clsx\": \"^2.1.1\",\n         \"prop-types\": \"^15.8.1\",\n@@ -1846,8 +1863,8 @@\n         \"@emotion/styled\": \"^11.8.1\",\n         \"@mui/material\": \"^5.15.14 || ^6.0.0\",\n         \"@mui/system\": \"^5.15.14 || ^6.0.0\",\n-        \"react\": \"^17.0.0 || ^18.0.0\",\n-        \"react-dom\": \"^17.0.0 || ^18.0.0\"\n+        \"react\": \"^17.0.0 || ^18.0.0 || ^19.0.0\",\n+        \"react-dom\": \"^17.0.0 || ^18.0.0 || ^19.0.0\"\n       },\n       \"peerDependenciesMeta\": {\n         \"@emotion/react\": {\n@@ -1985,45 +2002,20 @@\n         \"node\": \">=14.0.0\"\n       }\n     },\n-    \"node_modules/@shikijs/core\": {\n-      \"version\": \"1.22.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@shikijs/core/-/core-1.22.2.tgz\",\n-      \"integrity\": \"sha512-bvIQcd8BEeR1yFvOYv6HDiyta2FFVePbzeowf5pPS1avczrPK+cjmaxxh0nx5QzbON7+Sv0sQfQVciO7bN72sg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"@shikijs/engine-javascript\": \"1.22.2\",\n-        \"@shikijs/engine-oniguruma\": \"1.22.2\",\n-        \"@shikijs/types\": \"1.22.2\",\n-        \"@shikijs/vscode-textmate\": \"^9.3.0\",\n-        \"@types/hast\": \"^3.0.4\",\n-        \"hast-util-to-html\": \"^9.0.3\"\n-      }\n-    },\n-    \"node_modules/@shikijs/engine-javascript\": {\n-      \"version\": \"1.22.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@shikijs/engine-javascript/-/engine-javascript-1.22.2.tgz\",\n-      \"integrity\": \"sha512-iOvql09ql6m+3d1vtvP8fLCVCK7BQD1pJFmHIECsujB0V32BJ0Ab6hxk1ewVSMFA58FI0pR2Had9BKZdyQrxTw==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"@shikijs/types\": \"1.22.2\",\n-        \"@shikijs/vscode-textmate\": \"^9.3.0\",\n-        \"oniguruma-to-js\": \"0.4.3\"\n-      }\n-    },\n     \"node_modules/@shikijs/engine-oniguruma\": {\n-      \"version\": \"1.22.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@shikijs/engine-oniguruma/-/engine-oniguruma-1.22.2.tgz\",\n-      \"integrity\": \"sha512-GIZPAGzQOy56mGvWMoZRPggn0dTlBf1gutV5TdceLCZlFNqWmuc7u+CzD0Gd9vQUTgLbrt0KLzz6FNprqYAxlA==\",\n+      \"version\": \"1.24.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@shikijs/engine-oniguruma/-/engine-oniguruma-1.24.2.tgz\",\n+      \"integrity\": \"sha512-ZN6k//aDNWRJs1uKB12pturKHh7GejKugowOFGAuG7TxDRLod1Bd5JhpOikOiFqPmKjKEPtEA6mRCf7q3ulDyQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@shikijs/types\": \"1.22.2\",\n+        \"@shikijs/types\": \"1.24.2\",\n         \"@shikijs/vscode-textmate\": \"^9.3.0\"\n       }\n     },\n     \"node_modules/@shikijs/types\": {\n-      \"version\": \"1.22.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@shikijs/types/-/types-1.22.2.tgz\",\n-      \"integrity\": \"sha512-NCWDa6LGZqTuzjsGfXOBWfjS/fDIbDdmVDug+7ykVe1IKT4c1gakrvlfFYp5NhAXH/lyqLM8wsAPo5wNy73Feg==\",\n+      \"version\": \"1.24.2\",\n+      \"resolved\": \"https://registry.npmjs.org/@shikijs/types/-/types-1.24.2.tgz\",\n+      \"integrity\": \"sha512-bdeWZiDtajGLG9BudI0AHet0b6e7FbR0EsE4jpGaI0YwHm/XJunI9+3uZnzFtX65gsyJ6ngCIWUfA4NWRPnBkQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@shikijs/vscode-textmate\": \"^9.3.0\",\n@@ -2031,9 +2023,9 @@\n       }\n     },\n     \"node_modules/@shikijs/vscode-textmate\": {\n-      \"version\": \"9.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@shikijs/vscode-textmate/-/vscode-textmate-9.3.0.tgz\",\n-      \"integrity\": \"sha512-jn7/7ky30idSkd/O5yDBfAnVt+JJpepofP/POZ1iMOxK59cOfqIgg/Dj0eFsjOTMw+4ycJN0uhZH/Eb0bs/EUA==\",\n+      \"version\": \"9.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@shikijs/vscode-textmate/-/vscode-textmate-9.3.1.tgz\",\n+      \"integrity\": \"sha512-79QfK1393x9Ho60QFyLti+QfdJzRQCVLFb97kOIV7Eo9vQU/roINgk7m24uv0a7AUvN//RDH36FLjjK48v0s9g==\",\n       \"dev\": true\n     },\n     \"node_modules/@sinclair/typebox\": {\n@@ -2145,9 +2137,9 @@\n       \"dev\": true\n     },\n     \"node_modules/@testing-library/react\": {\n-      \"version\": \"16.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@testing-library/react/-/react-16.0.1.tgz\",\n-      \"integrity\": \"sha512-dSmwJVtJXmku+iocRhWOUFbrERC76TX2Mnf0ATODz8brzAZrMBbzLwQixlBSanZxR6LddK3eiwpSFZgDET1URg==\",\n+      \"version\": \"16.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@testing-library/react/-/react-16.1.0.tgz\",\n+      \"integrity\": \"sha512-Q2ToPvg0KsVL0ohND9A3zLJWcOXXcO8IDu3fj11KhNt0UlCWyFyvnCIBkd12tidB2lkiVRG8VFqdhcqhqnAQtg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.12.5\"\n@@ -2157,10 +2149,10 @@\n       },\n       \"peerDependencies\": {\n         \"@testing-library/dom\": \"^10.0.0\",\n-        \"@types/react\": \"^18.0.0\",\n-        \"@types/react-dom\": \"^18.0.0\",\n-        \"react\": \"^18.0.0\",\n-        \"react-dom\": \"^18.0.0\"\n+        \"@types/react\": \"^18.0.0 || ^19.0.0\",\n+        \"@types/react-dom\": \"^18.0.0 || ^19.0.0\",\n+        \"react\": \"^18.0.0 || ^19.0.0\",\n+        \"react-dom\": \"^18.0.0 || ^19.0.0\"\n       },\n       \"peerDependenciesMeta\": {\n         \"@types/react\": {\n@@ -2363,9 +2355,9 @@\n       }\n     },\n     \"node_modules/@types/geojson\": {\n-      \"version\": \"7946.0.14\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/geojson/-/geojson-7946.0.14.tgz\",\n-      \"integrity\": \"sha512-WCfD5Ht3ZesJUsONdhvm84dmzWOiOzOAqOncN0++w0lBw1o8OuDNJF2McvvCef/yBqb/HYRahp1BYtODFQ8bRg==\"\n+      \"version\": \"7946.0.15\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/geojson/-/geojson-7946.0.15.tgz\",\n+      \"integrity\": \"sha512-9oSxFzDCT2Rj6DfcHF8G++jxBKS7mBqXl5xrRW+Kbvjry6Uduya2iiwqHPhVXpasAVMBYKkEPGgKhd3+/HZ6xA==\"\n     },\n     \"node_modules/@types/geojson-vt\": {\n       \"version\": \"3.2.5\",\n@@ -2464,6 +2456,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/@types/jest/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/@types/jsdom\": {\n       \"version\": \"20.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/@types/jsdom/-/jsdom-20.0.1.tgz\",\n@@ -2515,9 +2513,9 @@\n       \"integrity\": \"sha512-nG96G3Wp6acyAgJqGasjODb+acrI7KltPiRxzHPXnP3NgI28bpQDRv53olbqGXbfcgF5aiiHmO3xpwEpS5Ld9g==\"\n     },\n     \"node_modules/@types/node\": {\n-      \"version\": \"20.17.6\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.17.6.tgz\",\n-      \"integrity\": \"sha512-VEI7OdvK2wP7XHnsuXbAJnEpEkF6NjSN45QJlL4VGqZSXsnicpesdTWsg9RISeSdYd3yeRj/y3k5KGjUXYnFwQ==\",\n+      \"version\": \"20.17.10\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.17.10.tgz\",\n+      \"integrity\": \"sha512-/jrvh5h6NXhEauFFexRin69nA0uHJ5gwk4iDivp/DeoEua3uwCUto6PC86IpRITBOs4+6i2I56K5x5b6WYGXHA==\",\n       \"dependencies\": {\n         \"undici-types\": \"~6.19.2\"\n       }\n@@ -2533,32 +2531,32 @@\n       \"integrity\": \"sha512-j3pOPiEcWZ34R6a6mN07mUkM4o4Lwf6hPNt8eilOeZhTFbxFXmKhvXl9Y28jotFPaI1bpPDJsbCprUoNke6OrA==\"\n     },\n     \"node_modules/@types/plotly.js\": {\n-      \"version\": \"2.33.5\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/plotly.js/-/plotly.js-2.33.5.tgz\",\n-      \"integrity\": \"sha512-TSXtrlc/4Zz7FP8HyDjmhsFFZ9JlzRk0KdHxXieDno4yZB4Jm5ET873QH+qPm5iZMaRZAEJMOrs1AGgN7r4e4g==\",\n+      \"version\": \"2.35.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/plotly.js/-/plotly.js-2.35.1.tgz\",\n+      \"integrity\": \"sha512-9fTHC8qeJNEDpGJK1qIJAEcRxrI9uPrap32I8cbCLPKsqwFmafOYHecaBzvIJXEPhLIUiQocN9Bc/tIV9CjsxQ==\",\n       \"dev\": true\n     },\n     \"node_modules/@types/prop-types\": {\n-      \"version\": \"15.7.13\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.13.tgz\",\n-      \"integrity\": \"sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==\"\n+      \"version\": \"15.7.14\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.14.tgz\",\n+      \"integrity\": \"sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==\"\n     },\n     \"node_modules/@types/react\": {\n-      \"version\": \"18.3.12\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/react/-/react-18.3.12.tgz\",\n-      \"integrity\": \"sha512-D2wOSq/d6Agt28q7rSI3jhU7G6aiuzljDGZ2hTZHIkrTLUI+AF3WMeKkEZ9nN2fkBAlcktT6vcZjDFiIhMYEQw==\",\n+      \"version\": \"18.3.17\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/react/-/react-18.3.17.tgz\",\n+      \"integrity\": \"sha512-opAQ5no6LqJNo9TqnxBKsgnkIYHozW9KSTlFVoSUJYh1Fl/sswkEoqIugRSm7tbh6pABtYjGAjW+GOS23j8qbw==\",\n       \"dependencies\": {\n         \"@types/prop-types\": \"*\",\n         \"csstype\": \"^3.0.2\"\n       }\n     },\n     \"node_modules/@types/react-dom\": {\n-      \"version\": \"18.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.1.tgz\",\n-      \"integrity\": \"sha512-qW1Mfv8taImTthu4KoXgDfLuk4bydU6Q/TkADnDWWHwi4NX4BR+LWfTp2sVmTqRrsHvyDDTelgelxJ+SsejKKQ==\",\n+      \"version\": \"18.3.5\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.5.tgz\",\n+      \"integrity\": \"sha512-P4t6saawp+b/dFrUr2cvkVsfvPguwsxtH6dNIYRllMsefqFzkZk5UIjzyDOv5g1dXIPdG4Sp1yCR4Z6RCUsG/Q==\",\n       \"devOptional\": true,\n-      \"dependencies\": {\n-        \"@types/react\": \"*\"\n+      \"peerDependencies\": {\n+        \"@types/react\": \"^18.0.0\"\n       }\n     },\n     \"node_modules/@types/react-plotly.js\": {\n@@ -2593,10 +2591,10 @@\n       }\n     },\n     \"node_modules/@types/react-transition-group\": {\n-      \"version\": \"4.4.11\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.11.tgz\",\n-      \"integrity\": \"sha512-RM05tAniPZ5DZPzzNFP+DmrcOdD0efDUxMy3145oljWSl3x9ZV5vhme98gTxFrj2lhXvmGNnUiuDyJgY9IKkNA==\",\n-      \"dependencies\": {\n+      \"version\": \"4.4.12\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.12.tgz\",\n+      \"integrity\": \"sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==\",\n+      \"peerDependencies\": {\n         \"@types/react\": \"*\"\n       }\n     },\n@@ -2675,16 +2673,16 @@\n       \"dev\": true\n     },\n     \"node_modules/@typescript-eslint/eslint-plugin\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.14.0.tgz\",\n-      \"integrity\": \"sha512-tqp8H7UWFaZj0yNO6bycd5YjMwxa6wIHOLZvWPkidwbgLCsBMetQoGj7DPuAlWa2yGO3H48xmPwjhsSPPCGU5w==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.18.1.tgz\",\n+      \"integrity\": \"sha512-Ncvsq5CT3Gvh+uJG0Lwlho6suwDfUXH0HztslDf5I+F2wAFAZMRwYLEorumpKLzmO2suAXZ/td1tBg4NZIi9CQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/regexpp\": \"^4.10.0\",\n-        \"@typescript-eslint/scope-manager\": \"8.14.0\",\n-        \"@typescript-eslint/type-utils\": \"8.14.0\",\n-        \"@typescript-eslint/utils\": \"8.14.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.14.0\",\n+        \"@typescript-eslint/scope-manager\": \"8.18.1\",\n+        \"@typescript-eslint/type-utils\": \"8.18.1\",\n+        \"@typescript-eslint/utils\": \"8.18.1\",\n+        \"@typescript-eslint/visitor-keys\": \"8.18.1\",\n         \"graphemer\": \"^1.4.0\",\n         \"ignore\": \"^5.3.1\",\n         \"natural-compare\": \"^1.4.0\",\n@@ -2699,24 +2697,20 @@\n       },\n       \"peerDependencies\": {\n         \"@typescript-eslint/parser\": \"^8.0.0 || ^8.0.0-alpha.0\",\n-        \"eslint\": \"^8.57.0 || ^9.0.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"typescript\": {\n-          \"optional\": true\n-        }\n+        \"eslint\": \"^8.57.0 || ^9.0.0\",\n+        \"typescript\": \">=4.8.4 <5.8.0\"\n       }\n     },\n     \"node_modules/@typescript-eslint/parser\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.14.0.tgz\",\n-      \"integrity\": \"sha512-2p82Yn9juUJq0XynBXtFCyrBDb6/dJombnz6vbo6mgQEtWHfvHbQuEa9kAOVIt1c9YFwi7H6WxtPj1kg+80+RA==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.18.1.tgz\",\n+      \"integrity\": \"sha512-rBnTWHCdbYM2lh7hjyXqxk70wvon3p2FyaniZuey5TrcGBpfhVp0OxOa6gxr9Q9YhZFKyfbEnxc24ZnVbbUkCA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/scope-manager\": \"8.14.0\",\n-        \"@typescript-eslint/types\": \"8.14.0\",\n-        \"@typescript-eslint/typescript-estree\": \"8.14.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.14.0\",\n+        \"@typescript-eslint/scope-manager\": \"8.18.1\",\n+        \"@typescript-eslint/types\": \"8.18.1\",\n+        \"@typescript-eslint/typescript-estree\": \"8.18.1\",\n+        \"@typescript-eslint/visitor-keys\": \"8.18.1\",\n         \"debug\": \"^4.3.4\"\n       },\n       \"engines\": {\n@@ -2727,22 +2721,18 @@\n         \"url\": \"https://opencollective.com/typescript-eslint\"\n       },\n       \"peerDependencies\": {\n-        \"eslint\": \"^8.57.0 || ^9.0.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"typescript\": {\n-          \"optional\": true\n-        }\n+        \"eslint\": \"^8.57.0 || ^9.0.0\",\n+        \"typescript\": \">=4.8.4 <5.8.0\"\n       }\n     },\n     \"node_modules/@typescript-eslint/scope-manager\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.14.0.tgz\",\n-      \"integrity\": \"sha512-aBbBrnW9ARIDn92Zbo7rguLnqQ/pOrUguVpbUwzOhkFg2npFDwTgPGqFqE0H5feXcOoJOfX3SxlJaKEVtq54dw==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.18.1.tgz\",\n+      \"integrity\": \"sha512-HxfHo2b090M5s2+/9Z3gkBhI6xBH8OJCFjH9MhQ+nnoZqxU3wNxkLT+VWXWSFWc3UF3Z+CfPAyqdCTdoXtDPCQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.14.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.14.0\"\n+        \"@typescript-eslint/types\": \"8.18.1\",\n+        \"@typescript-eslint/visitor-keys\": \"8.18.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2753,13 +2743,13 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/type-utils\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.14.0.tgz\",\n-      \"integrity\": \"sha512-Xcz9qOtZuGusVOH5Uk07NGs39wrKkf3AxlkK79RBK6aJC1l03CobXjJbwBPSidetAOV+5rEVuiT1VSBUOAsanQ==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.18.1.tgz\",\n+      \"integrity\": \"sha512-jAhTdK/Qx2NJPNOTxXpMwlOiSymtR2j283TtPqXkKBdH8OAMmhiUfP0kJjc/qSE51Xrq02Gj9NY7MwK+UxVwHQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/typescript-estree\": \"8.14.0\",\n-        \"@typescript-eslint/utils\": \"8.14.0\",\n+        \"@typescript-eslint/typescript-estree\": \"8.18.1\",\n+        \"@typescript-eslint/utils\": \"8.18.1\",\n         \"debug\": \"^4.3.4\",\n         \"ts-api-utils\": \"^1.3.0\"\n       },\n@@ -2770,16 +2760,15 @@\n         \"type\": \"opencollective\",\n         \"url\": \"https://opencollective.com/typescript-eslint\"\n       },\n-      \"peerDependenciesMeta\": {\n-        \"typescript\": {\n-          \"optional\": true\n-        }\n+      \"peerDependencies\": {\n+        \"eslint\": \"^8.57.0 || ^9.0.0\",\n+        \"typescript\": \">=4.8.4 <5.8.0\"\n       }\n     },\n     \"node_modules/@typescript-eslint/types\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-8.14.0.tgz\",\n-      \"integrity\": \"sha512-yjeB9fnO/opvLJFAsPNYlKPnEM8+z4og09Pk504dkqonT02AyL5Z9SSqlE0XqezS93v6CXn49VHvB2G7XSsl0g==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-8.18.1.tgz\",\n+      \"integrity\": \"sha512-7uoAUsCj66qdNQNpH2G8MyTFlgerum8ubf21s3TSM3XmKXuIn+H2Sifh/ES2nPOPiYSRJWAk0fDkW0APBWcpfw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2790,13 +2779,13 @@\n       }\n     },\n     \"node_modules/@typescript-eslint/typescript-estree\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.14.0.tgz\",\n-      \"integrity\": \"sha512-OPXPLYKGZi9XS/49rdaCbR5j/S14HazviBlUQFvSKz3npr3NikF+mrgK7CFVur6XEt95DZp/cmke9d5i3vtVnQ==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.18.1.tgz\",\n+      \"integrity\": \"sha512-z8U21WI5txzl2XYOW7i9hJhxoKKNG1kcU4RzyNvKrdZDmbjkmLBo8bgeiOJmA06kizLI76/CCBAAGlTlEeUfyg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.14.0\",\n-        \"@typescript-eslint/visitor-keys\": \"8.14.0\",\n+        \"@typescript-eslint/types\": \"8.18.1\",\n+        \"@typescript-eslint/visitor-keys\": \"8.18.1\",\n         \"debug\": \"^4.3.4\",\n         \"fast-glob\": \"^3.3.2\",\n         \"is-glob\": \"^4.0.3\",\n@@ -2811,22 +2800,20 @@\n         \"type\": \"opencollective\",\n         \"url\": \"https://opencollective.com/typescript-eslint\"\n       },\n-      \"peerDependenciesMeta\": {\n-        \"typescript\": {\n-          \"optional\": true\n-        }\n+      \"peerDependencies\": {\n+        \"typescript\": \">=4.8.4 <5.8.0\"\n       }\n     },\n     \"node_modules/@typescript-eslint/utils\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.14.0.tgz\",\n-      \"integrity\": \"sha512-OGqj6uB8THhrHj0Fk27DcHPojW7zKwKkPmHXHvQ58pLYp4hy8CSUdTKykKeh+5vFqTTVmjz0zCOOPKRovdsgHA==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.18.1.tgz\",\n+      \"integrity\": \"sha512-8vikiIj2ebrC4WRdcAdDcmnu9Q/MXXwg+STf40BVfT8exDqBCUPdypvzcUPxEqRGKg9ALagZ0UWcYCtn+4W2iQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@eslint-community/eslint-utils\": \"^4.4.0\",\n-        \"@typescript-eslint/scope-manager\": \"8.14.0\",\n-        \"@typescript-eslint/types\": \"8.14.0\",\n-        \"@typescript-eslint/typescript-estree\": \"8.14.0\"\n+        \"@typescript-eslint/scope-manager\": \"8.18.1\",\n+        \"@typescript-eslint/types\": \"8.18.1\",\n+        \"@typescript-eslint/typescript-estree\": \"8.18.1\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2836,17 +2823,18 @@\n         \"url\": \"https://opencollective.com/typescript-eslint\"\n       },\n       \"peerDependencies\": {\n-        \"eslint\": \"^8.57.0 || ^9.0.0\"\n+        \"eslint\": \"^8.57.0 || ^9.0.0\",\n+        \"typescript\": \">=4.8.4 <5.8.0\"\n       }\n     },\n     \"node_modules/@typescript-eslint/visitor-keys\": {\n-      \"version\": \"8.14.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.14.0.tgz\",\n-      \"integrity\": \"sha512-vG0XZo8AdTH9OE6VFRwAZldNc7qtJ/6NLGWak+BtENuEUXGZgFpihILPiBvKXvJ2nFu27XNGC6rKiwuaoMbYzQ==\",\n+      \"version\": \"8.18.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.18.1.tgz\",\n+      \"integrity\": \"sha512-Vj0WLm5/ZsD013YeUKn+K0y8p1M0jPpxOkKdbD1wB0ns53a5piVY02zjf072TblEweAbcYiFiPoSMF3kp+VhhQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@typescript-eslint/types\": \"8.14.0\",\n-        \"eslint-visitor-keys\": \"^3.4.3\"\n+        \"@typescript-eslint/types\": \"8.18.1\",\n+        \"eslint-visitor-keys\": \"^4.2.0\"\n       },\n       \"engines\": {\n         \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n@@ -2856,10 +2844,22 @@\n         \"url\": \"https://opencollective.com/typescript-eslint\"\n       }\n     },\n+    \"node_modules/@typescript-eslint/visitor-keys/node_modules/eslint-visitor-keys\": {\n+      \"version\": \"4.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz\",\n+      \"integrity\": \"sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://opencollective.com/eslint\"\n+      }\n+    },\n     \"node_modules/@ungap/structured-clone\": {\n-      \"version\": \"1.2.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz\",\n-      \"integrity\": \"sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==\"\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.1.tgz\",\n+      \"integrity\": \"sha512-fEzPV3hSkSMltkw152tJKNARhOupqbH96MZWyRjNaYZOMIzbrTeQDG+MTc6Mr2pgzFQzFxAfmhGDNP5QK++2ZA==\"\n     },\n     \"node_modules/@webassemblyjs/ast\": {\n       \"version\": \"1.14.1\",\n@@ -3148,7 +3148,6 @@\n       \"version\": \"2.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n       \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"ajv\": \"^8.0.0\"\n       },\n@@ -3165,7 +3164,6 @@\n       \"version\": \"8.17.1\",\n       \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz\",\n       \"integrity\": \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"fast-deep-equal\": \"^3.1.3\",\n         \"fast-uri\": \"^3.0.1\",\n@@ -3180,8 +3178,7 @@\n     \"node_modules/ajv-formats/node_modules/json-schema-traverse\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n-      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n-      \"dev\": true\n+      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\"\n     },\n     \"node_modules/ajv-keywords\": {\n       \"version\": \"3.5.2\",\n@@ -3386,15 +3383,15 @@\n       }\n     },\n     \"node_modules/array.prototype.flat\": {\n-      \"version\": \"1.3.2\",\n-      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.2.tgz\",\n-      \"integrity\": \"sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==\",\n+      \"version\": \"1.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz\",\n+      \"integrity\": \"sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\",\n-        \"define-properties\": \"^1.2.0\",\n-        \"es-abstract\": \"^1.22.1\",\n-        \"es-shim-unscopables\": \"^1.0.0\"\n+        \"call-bind\": \"^1.0.8\",\n+        \"define-properties\": \"^1.2.1\",\n+        \"es-abstract\": \"^1.23.5\",\n+        \"es-shim-unscopables\": \"^1.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -3404,15 +3401,15 @@\n       }\n     },\n     \"node_modules/array.prototype.flatmap\": {\n-      \"version\": \"1.3.2\",\n-      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.2.tgz\",\n-      \"integrity\": \"sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==\",\n+      \"version\": \"1.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz\",\n+      \"integrity\": \"sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\",\n-        \"define-properties\": \"^1.2.0\",\n-        \"es-abstract\": \"^1.22.1\",\n-        \"es-shim-unscopables\": \"^1.0.0\"\n+        \"call-bind\": \"^1.0.8\",\n+        \"define-properties\": \"^1.2.1\",\n+        \"es-abstract\": \"^1.23.5\",\n+        \"es-shim-unscopables\": \"^1.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -3438,19 +3435,18 @@\n       }\n     },\n     \"node_modules/arraybuffer.prototype.slice\": {\n-      \"version\": \"1.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.3.tgz\",\n-      \"integrity\": \"sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==\",\n+      \"version\": \"1.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz\",\n+      \"integrity\": \"sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"array-buffer-byte-length\": \"^1.0.1\",\n-        \"call-bind\": \"^1.0.5\",\n+        \"call-bind\": \"^1.0.8\",\n         \"define-properties\": \"^1.2.1\",\n-        \"es-abstract\": \"^1.22.3\",\n-        \"es-errors\": \"^1.2.1\",\n-        \"get-intrinsic\": \"^1.2.3\",\n-        \"is-array-buffer\": \"^3.0.4\",\n-        \"is-shared-array-buffer\": \"^1.0.2\"\n+        \"es-abstract\": \"^1.23.5\",\n+        \"es-errors\": \"^1.3.0\",\n+        \"get-intrinsic\": \"^1.2.6\",\n+        \"is-array-buffer\": \"^3.0.4\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -3523,9 +3519,9 @@\n       }\n     },\n     \"node_modules/axios\": {\n-      \"version\": \"1.7.7\",\n-      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.7.7.tgz\",\n-      \"integrity\": \"sha512-S4kL7XrjgBmvdGut0sN3yJxqYzrDOnivkBiN0OFs6hLiUam3UPvswUo0kqGyhqUZGEOytHyumEdXsAkgCOUf3Q==\",\n+      \"version\": \"1.7.9\",\n+      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.7.9.tgz\",\n+      \"integrity\": \"sha512-LhLcE7Hbiryz8oMDdDptSrWowmB4Bl6RCt6sIJKpRB4XtVf0iEgewX3au/pJqm+Py1kCASkb/FFKjxQaLtxJvw==\",\n       \"dependencies\": {\n         \"follow-redirects\": \"^1.15.6\",\n         \"form-data\": \"^4.0.0\",\n@@ -3751,9 +3747,9 @@\n       }\n     },\n     \"node_modules/browserslist\": {\n-      \"version\": \"4.24.2\",\n-      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.24.2.tgz\",\n-      \"integrity\": \"sha512-ZIc+Q62revdMcqC6aChtW4jz3My3klmCO1fEmINZY/8J3EpBg5/A/D0AKmBveUh6pgoeycoMkVMko84tuYS+Gg==\",\n+      \"version\": \"4.24.3\",\n+      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.24.3.tgz\",\n+      \"integrity\": \"sha512-1CPmv8iobE2fyRMV97dAcMVegvvWKxmq94hkLiAkUGwKVTyDLw33K+ZxiFrREKmmps4rIw6grcCFCnTMSZ/YiA==\",\n       \"funding\": [\n         {\n           \"type\": \"opencollective\",\n@@ -3769,9 +3765,9 @@\n         }\n       ],\n       \"dependencies\": {\n-        \"caniuse-lite\": \"^1.0.30001669\",\n-        \"electron-to-chromium\": \"^1.5.41\",\n-        \"node-releases\": \"^2.0.18\",\n+        \"caniuse-lite\": \"^1.0.30001688\",\n+        \"electron-to-chromium\": \"^1.5.73\",\n+        \"node-releases\": \"^2.0.19\",\n         \"update-browserslist-db\": \"^1.1.1\"\n       },\n       \"bin\": {\n@@ -3808,16 +3804,44 @@\n       \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\"\n     },\n     \"node_modules/call-bind\": {\n-      \"version\": \"1.0.7\",\n-      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\n-      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\n+      \"version\": \"1.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz\",\n+      \"integrity\": \"sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==\",\n       \"dev\": true,\n       \"dependencies\": {\n+        \"call-bind-apply-helpers\": \"^1.0.0\",\n         \"es-define-property\": \"^1.0.0\",\n-        \"es-errors\": \"^1.3.0\",\n-        \"function-bind\": \"^1.1.2\",\n         \"get-intrinsic\": \"^1.2.4\",\n-        \"set-function-length\": \"^1.2.1\"\n+        \"set-function-length\": \"^1.2.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n+      }\n+    },\n+    \"node_modules/call-bind-apply-helpers\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.1.tgz\",\n+      \"integrity\": \"sha512-BhYE+WDaywFg2TBWYNXAE+8B1ATnThNBqXHP5nQu0jWJdVvY2hvkpyB3qOmtmDePiS5/BDQ8wASEWGMWRG148g==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"es-errors\": \"^1.3.0\",\n+        \"function-bind\": \"^1.1.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      }\n+    },\n+    \"node_modules/call-bound\": {\n+      \"version\": \"1.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz\",\n+      \"integrity\": \"sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"call-bind-apply-helpers\": \"^1.0.1\",\n+        \"get-intrinsic\": \"^1.2.6\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -3854,9 +3878,9 @@\n       }\n     },\n     \"node_modules/caniuse-lite\": {\n-      \"version\": \"1.0.30001680\",\n-      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001680.tgz\",\n-      \"integrity\": \"sha512-rPQy70G6AGUMnbwS1z6Xg+RkHYPAi18ihs47GH0jcxIG7wArmPgY3XbS2sRdBbxJljp3thdT8BIqv9ccCypiPA==\",\n+      \"version\": \"1.0.30001689\",\n+      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001689.tgz\",\n+      \"integrity\": \"sha512-CmeR2VBycfa+5/jOfnp/NpWPGd06nf1XYiefUvhXFfZE4GkRc9jv+eGPS4nT558WS/8lYCzV8SlANCIPvbWP1g==\",\n       \"funding\": [\n         {\n           \"type\": \"opencollective\",\n@@ -4469,9 +4493,9 @@\n       }\n     },\n     \"node_modules/cross-spawn\": {\n-      \"version\": \"7.0.5\",\n-      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.5.tgz\",\n-      \"integrity\": \"sha512-ZVJrKKYunU38/76t0RMOulHOnUcbU9GbpWKAOZ0mhjr7CX6FVrH+4FrAapSOekrgFQ3f/8gwMEuIft0aKq6Hug==\",\n+      \"version\": \"7.0.6\",\n+      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n+      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"path-key\": \"^3.1.0\",\n@@ -4864,9 +4888,9 @@\n       }\n     },\n     \"node_modules/debug\": {\n-      \"version\": \"4.3.7\",\n-      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.7.tgz\",\n-      \"integrity\": \"sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==\",\n+      \"version\": \"4.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.0.tgz\",\n+      \"integrity\": \"sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==\",\n       \"dependencies\": {\n         \"ms\": \"^2.1.3\"\n       },\n@@ -5221,6 +5245,20 @@\n         \"node\": \">= 0.8.0\"\n       }\n     },\n+    \"node_modules/dunder-proto\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n+      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"call-bind-apply-helpers\": \"^1.0.1\",\n+        \"es-errors\": \"^1.3.0\",\n+        \"gopd\": \"^1.2.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      }\n+    },\n     \"node_modules/dup\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/dup/-/dup-1.0.0.tgz\",\n@@ -5258,9 +5296,9 @@\n       }\n     },\n     \"node_modules/electron-to-chromium\": {\n-      \"version\": \"1.5.57\",\n-      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.57.tgz\",\n-      \"integrity\": \"sha512-xS65H/tqgOwUBa5UmOuNSLuslDo7zho0y/lgQw35pnrqiZh7UOWHCeL/Bt6noJATbA6tpQJGCifsFsIRZj1Fqg==\"\n+      \"version\": \"1.5.74\",\n+      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.74.tgz\",\n+      \"integrity\": \"sha512-ck3//9RC+6oss/1Bh9tiAVFy5vfSKbRHAFh7Z3/eTRkEqJeWgymloShB17Vg3Z4nmDNp35vAd1BZ6CMW4Wt6Iw==\"\n     },\n     \"node_modules/element-size\": {\n       \"version\": \"1.1.1\",\n@@ -5313,6 +5351,22 @@\n         \"xmlhttprequest-ssl\": \"~2.1.1\"\n       }\n     },\n+    \"node_modules/engine.io-client/node_modules/debug\": {\n+      \"version\": \"4.3.7\",\n+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.7.tgz\",\n+      \"integrity\": \"sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==\",\n+      \"dependencies\": {\n+        \"ms\": \"^2.1.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"supports-color\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n     \"node_modules/engine.io-client/node_modules/ws\": {\n       \"version\": \"8.17.1\",\n       \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.17.1.tgz\",\n@@ -5398,57 +5452,59 @@\n       }\n     },\n     \"node_modules/es-abstract\": {\n-      \"version\": \"1.23.4\",\n-      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.4.tgz\",\n-      \"integrity\": \"sha512-HR1gxH5OaiN7XH7uiWH0RLw0RcFySiSoW1ctxmD1ahTw3uGBtkmm/ng0tDU1OtYx5OK6EOL5Y6O21cDflG3Jcg==\",\n+      \"version\": \"1.23.6\",\n+      \"resolved\": \"https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.6.tgz\",\n+      \"integrity\": \"sha512-Ifco6n3yj2tMZDWNLyloZrytt9lqqlwvS83P3HtaETR0NUOYnIULGGHpktqYGObGy+8wc1okO25p8TjemhImvA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"array-buffer-byte-length\": \"^1.0.1\",\n-        \"arraybuffer.prototype.slice\": \"^1.0.3\",\n+        \"arraybuffer.prototype.slice\": \"^1.0.4\",\n         \"available-typed-arrays\": \"^1.0.7\",\n-        \"call-bind\": \"^1.0.7\",\n+        \"call-bind\": \"^1.0.8\",\n+        \"call-bound\": \"^1.0.3\",\n         \"data-view-buffer\": \"^1.0.1\",\n         \"data-view-byte-length\": \"^1.0.1\",\n         \"data-view-byte-offset\": \"^1.0.0\",\n-        \"es-define-property\": \"^1.0.0\",\n+        \"es-define-property\": \"^1.0.1\",\n         \"es-errors\": \"^1.3.0\",\n         \"es-object-atoms\": \"^1.0.0\",\n         \"es-set-tostringtag\": \"^2.0.3\",\n-        \"es-to-primitive\": \"^1.2.1\",\n-        \"function.prototype.name\": \"^1.1.6\",\n-        \"get-intrinsic\": \"^1.2.4\",\n+        \"es-to-primitive\": \"^1.3.0\",\n+        \"function.prototype.name\": \"^1.1.7\",\n+        \"get-intrinsic\": \"^1.2.6\",\n         \"get-symbol-description\": \"^1.0.2\",\n         \"globalthis\": \"^1.0.4\",\n-        \"gopd\": \"^1.0.1\",\n+        \"gopd\": \"^1.2.0\",\n         \"has-property-descriptors\": \"^1.0.2\",\n-        \"has-proto\": \"^1.0.3\",\n-        \"has-symbols\": \"^1.0.3\",\n+        \"has-proto\": \"^1.2.0\",\n+        \"has-symbols\": \"^1.1.0\",\n         \"hasown\": \"^2.0.2\",\n-        \"internal-slot\": \"^1.0.7\",\n+        \"internal-slot\": \"^1.1.0\",\n         \"is-array-buffer\": \"^3.0.4\",\n         \"is-callable\": \"^1.2.7\",\n-        \"is-data-view\": \"^1.0.1\",\n+        \"is-data-view\": \"^1.0.2\",\n         \"is-negative-zero\": \"^2.0.3\",\n-        \"is-regex\": \"^1.1.4\",\n+        \"is-regex\": \"^1.2.1\",\n         \"is-shared-array-buffer\": \"^1.0.3\",\n-        \"is-string\": \"^1.0.7\",\n+        \"is-string\": \"^1.1.1\",\n         \"is-typed-array\": \"^1.1.13\",\n-        \"is-weakref\": \"^1.0.2\",\n+        \"is-weakref\": \"^1.1.0\",\n+        \"math-intrinsics\": \"^1.0.0\",\n         \"object-inspect\": \"^1.13.3\",\n         \"object-keys\": \"^1.1.1\",\n         \"object.assign\": \"^4.1.5\",\n         \"regexp.prototype.flags\": \"^1.5.3\",\n-        \"safe-array-concat\": \"^1.1.2\",\n-        \"safe-regex-test\": \"^1.0.3\",\n-        \"string.prototype.trim\": \"^1.2.9\",\n-        \"string.prototype.trimend\": \"^1.0.8\",\n+        \"safe-array-concat\": \"^1.1.3\",\n+        \"safe-regex-test\": \"^1.1.0\",\n+        \"string.prototype.trim\": \"^1.2.10\",\n+        \"string.prototype.trimend\": \"^1.0.9\",\n         \"string.prototype.trimstart\": \"^1.0.8\",\n         \"typed-array-buffer\": \"^1.0.2\",\n         \"typed-array-byte-length\": \"^1.0.1\",\n-        \"typed-array-byte-offset\": \"^1.0.2\",\n-        \"typed-array-length\": \"^1.0.6\",\n+        \"typed-array-byte-offset\": \"^1.0.3\",\n+        \"typed-array-length\": \"^1.0.7\",\n         \"unbox-primitive\": \"^1.0.2\",\n-        \"which-typed-array\": \"^1.1.15\"\n+        \"which-typed-array\": \"^1.1.16\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -5458,13 +5514,10 @@\n       }\n     },\n     \"node_modules/es-define-property\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\n-      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n+      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n       \"dev\": true,\n-      \"dependencies\": {\n-        \"get-intrinsic\": \"^1.2.4\"\n-      },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n       }\n@@ -5545,14 +5598,14 @@\n       }\n     },\n     \"node_modules/es-to-primitive\": {\n-      \"version\": \"1.2.1\",\n-      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz\",\n-      \"integrity\": \"sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\",\n+      \"version\": \"1.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz\",\n+      \"integrity\": \"sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"is-callable\": \"^1.1.4\",\n-        \"is-date-object\": \"^1.0.1\",\n-        \"is-symbol\": \"^1.0.2\"\n+        \"is-callable\": \"^1.2.7\",\n+        \"is-date-object\": \"^1.0.5\",\n+        \"is-symbol\": \"^1.0.4\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -6189,8 +6242,7 @@\n     \"node_modules/fast-uri\": {\n       \"version\": \"3.0.3\",\n       \"resolved\": \"https://registry.npmjs.org/fast-uri/-/fast-uri-3.0.3.tgz\",\n-      \"integrity\": \"sha512-aLrHthzCjH5He4Z2H9YZ+v6Ujb9ocRuW6ZzkJQOrTxleEijANq4v1TsaPaVG1PZcuurEzrLcWRyYBYXD5cEiaw==\",\n-      \"dev\": true\n+      \"integrity\": \"sha512-aLrHthzCjH5He4Z2H9YZ+v6Ujb9ocRuW6ZzkJQOrTxleEijANq4v1TsaPaVG1PZcuurEzrLcWRyYBYXD5cEiaw==\"\n     },\n     \"node_modules/fastest-levenshtein\": {\n       \"version\": \"1.0.16\",\n@@ -6325,9 +6377,9 @@\n       \"integrity\": \"sha512-3HDgPbgiwWMI9zVB7VYBHaMrbOO7Gm0v+yD2FV/sCKj+9NDeVL7BOBYUuhWAQGKWOzBo8S9WdMvV0eixO233XQ==\"\n     },\n     \"node_modules/flatted\": {\n-      \"version\": \"3.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz\",\n-      \"integrity\": \"sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==\",\n+      \"version\": \"3.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.3.2.tgz\",\n+      \"integrity\": \"sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==\",\n       \"dev\": true\n     },\n     \"node_modules/flatten-vertex-data\": {\n@@ -6446,15 +6498,16 @@\n       }\n     },\n     \"node_modules/function.prototype.name\": {\n-      \"version\": \"1.1.6\",\n-      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz\",\n-      \"integrity\": \"sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==\",\n+      \"version\": \"1.1.7\",\n+      \"resolved\": \"https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.7.tgz\",\n+      \"integrity\": \"sha512-2g4x+HqTJKM9zcJqBSpjoRmdcPFtJM60J3xJisTQSXBWka5XqyBN/2tNUgma1mztTXyDuUsEtYe5qcs7xYzYQA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\",\n-        \"define-properties\": \"^1.2.0\",\n-        \"es-abstract\": \"^1.22.1\",\n-        \"functions-have-names\": \"^1.2.3\"\n+        \"call-bind\": \"^1.0.8\",\n+        \"define-properties\": \"^1.2.1\",\n+        \"functions-have-names\": \"^1.2.3\",\n+        \"hasown\": \"^2.0.2\",\n+        \"is-callable\": \"^1.2.7\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -6519,16 +6572,21 @@\n       }\n     },\n     \"node_modules/get-intrinsic\": {\n-      \"version\": \"1.2.4\",\n-      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\n-      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\n+      \"version\": \"1.2.6\",\n+      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.6.tgz\",\n+      \"integrity\": \"sha512-qxsEs+9A+u85HhllWJJFicJfPDhRmjzoYdl64aMWW9yRIJmSyxdn8IEkuIM530/7T+lv0TIHd8L6Q/ra0tEoeA==\",\n       \"dev\": true,\n       \"dependencies\": {\n+        \"call-bind-apply-helpers\": \"^1.0.1\",\n+        \"dunder-proto\": \"^1.0.0\",\n+        \"es-define-property\": \"^1.0.1\",\n         \"es-errors\": \"^1.3.0\",\n+        \"es-object-atoms\": \"^1.0.0\",\n         \"function-bind\": \"^1.1.2\",\n-        \"has-proto\": \"^1.0.1\",\n-        \"has-symbols\": \"^1.0.3\",\n-        \"hasown\": \"^2.0.0\"\n+        \"gopd\": \"^1.2.0\",\n+        \"has-symbols\": \"^1.1.0\",\n+        \"hasown\": \"^2.0.2\",\n+        \"math-intrinsics\": \"^1.0.0\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -6951,12 +7009,12 @@\n       }\n     },\n     \"node_modules/gopd\": {\n-      \"version\": \"1.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\n-      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n+      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n       \"dev\": true,\n-      \"dependencies\": {\n-        \"get-intrinsic\": \"^1.1.3\"\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n@@ -7024,10 +7082,13 @@\n       }\n     },\n     \"node_modules/has-proto\": {\n-      \"version\": \"1.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\n-      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz\",\n+      \"integrity\": \"sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==\",\n       \"dev\": true,\n+      \"dependencies\": {\n+        \"dunder-proto\": \"^1.0.0\"\n+      },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n       },\n@@ -7036,9 +7097,9 @@\n       }\n     },\n     \"node_modules/has-symbols\": {\n-      \"version\": \"1.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\n-      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n+      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7073,29 +7134,6 @@\n         \"node\": \">= 0.4\"\n       }\n     },\n-    \"node_modules/hast-util-to-html\": {\n-      \"version\": \"9.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/hast-util-to-html/-/hast-util-to-html-9.0.3.tgz\",\n-      \"integrity\": \"sha512-M17uBDzMJ9RPCqLMO92gNNUDuBSq10a25SDBI08iCCxmorf4Yy6sYHK57n9WAbRAAaU+DuR4W6GN9K4DFZesYg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"@types/hast\": \"^3.0.0\",\n-        \"@types/unist\": \"^3.0.0\",\n-        \"ccount\": \"^2.0.0\",\n-        \"comma-separated-tokens\": \"^2.0.0\",\n-        \"hast-util-whitespace\": \"^3.0.0\",\n-        \"html-void-elements\": \"^3.0.0\",\n-        \"mdast-util-to-hast\": \"^13.0.0\",\n-        \"property-information\": \"^6.0.0\",\n-        \"space-separated-tokens\": \"^2.0.0\",\n-        \"stringify-entities\": \"^4.0.0\",\n-        \"zwitch\": \"^2.0.4\"\n-      },\n-      \"funding\": {\n-        \"type\": \"opencollective\",\n-        \"url\": \"https://opencollective.com/unified\"\n-      }\n-    },\n     \"node_modules/hast-util-to-jsx-runtime\": {\n       \"version\": \"2.3.2\",\n       \"resolved\": \"https://registry.npmjs.org/hast-util-to-jsx-runtime/-/hast-util-to-jsx-runtime-2.3.2.tgz\",\n@@ -7209,16 +7247,6 @@\n         \"url\": \"https://opencollective.com/unified\"\n       }\n     },\n-    \"node_modules/html-void-elements\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/html-void-elements/-/html-void-elements-3.0.0.tgz\",\n-      \"integrity\": \"sha512-bEqo66MRXsUGxWHV5IP0PUiAWwoEjba4VCzg0LjFJBpchPaTfyfCKTG6bc5F8ucKec3q5y6qOdGyYTSBEvhCrg==\",\n-      \"dev\": true,\n-      \"funding\": {\n-        \"type\": \"github\",\n-        \"url\": \"https://github.com/sponsors/wooorm\"\n-      }\n-    },\n     \"node_modules/html-webpack-plugin\": {\n       \"version\": \"5.6.3\",\n       \"resolved\": \"https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-5.6.3.tgz\",\n@@ -7316,9 +7344,9 @@\n       }\n     },\n     \"node_modules/husky\": {\n-      \"version\": \"9.1.6\",\n-      \"resolved\": \"https://registry.npmjs.org/husky/-/husky-9.1.6.tgz\",\n-      \"integrity\": \"sha512-sqbjZKK7kf44hfdE94EoX8MZNk0n7HeW37O4YrVGCF4wzgQjp+akPAkfUK5LZ6KuR/6sqeAVuXHji+RzQgOn5A==\",\n+      \"version\": \"9.1.7\",\n+      \"resolved\": \"https://registry.npmjs.org/husky/-/husky-9.1.7.tgz\",\n+      \"integrity\": \"sha512-5gs5ytaNjBrh5Ow3zrvdUUY+0VxIuWVL4i9irt6friV+BqdCfmV11CQTWMiBYWHbXhco+J1kHfTOUkePhCDvMA==\",\n       \"dev\": true,\n       \"bin\": {\n         \"husky\": \"bin.js\"\n@@ -7462,14 +7490,14 @@\n       \"integrity\": \"sha512-0aO8FkhNZlj/ZIbNi7Lxxr12obT7cL1moPfE4tg1LkX7LlLfC6DeX4l2ZEud1ukP9jNQyNnfzQVqwbwmAATY4Q==\"\n     },\n     \"node_modules/internal-slot\": {\n-      \"version\": \"1.0.7\",\n-      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.7.tgz\",\n-      \"integrity\": \"sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz\",\n+      \"integrity\": \"sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"es-errors\": \"^1.3.0\",\n-        \"hasown\": \"^2.0.0\",\n-        \"side-channel\": \"^1.0.4\"\n+        \"hasown\": \"^2.0.2\",\n+        \"side-channel\": \"^1.1.0\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7515,13 +7543,14 @@\n       }\n     },\n     \"node_modules/is-array-buffer\": {\n-      \"version\": \"3.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz\",\n-      \"integrity\": \"sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==\",\n+      \"version\": \"3.0.5\",\n+      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz\",\n+      \"integrity\": \"sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\",\n-        \"get-intrinsic\": \"^1.2.1\"\n+        \"call-bind\": \"^1.0.8\",\n+        \"call-bound\": \"^1.0.3\",\n+        \"get-intrinsic\": \"^1.2.6\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7551,25 +7580,28 @@\n       }\n     },\n     \"node_modules/is-bigint\": {\n-      \"version\": \"1.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz\",\n-      \"integrity\": \"sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz\",\n+      \"integrity\": \"sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"has-bigints\": \"^1.0.1\"\n+        \"has-bigints\": \"^1.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n     \"node_modules/is-boolean-object\": {\n-      \"version\": \"1.1.2\",\n-      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz\",\n-      \"integrity\": \"sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==\",\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.1.tgz\",\n+      \"integrity\": \"sha512-l9qO6eFlUETHtuihLcYOaLKByJ1f+N4kthcU9YjHy3N+B3hWv0y/2Nd0mu/7lTFnRQHTrSdXF50HQ3bl5fEnng==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\",\n-        \"has-tostringtag\": \"^1.0.0\"\n+        \"call-bound\": \"^1.0.2\",\n+        \"has-tostringtag\": \"^1.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7596,9 +7628,9 @@\n       }\n     },\n     \"node_modules/is-core-module\": {\n-      \"version\": \"2.15.1\",\n-      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.15.1.tgz\",\n-      \"integrity\": \"sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==\",\n+      \"version\": \"2.16.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.0.tgz\",\n+      \"integrity\": \"sha512-urTSINYfAYgcbLb0yDQ6egFm6h3Mo1DcF9EkyXSRjjzdHbsulg01qhwWuXdOoUBuTkbQ80KDboXa0vFJ+BDH+g==\",\n       \"dependencies\": {\n         \"hasown\": \"^2.0.2\"\n       },\n@@ -7610,11 +7642,13 @@\n       }\n     },\n     \"node_modules/is-data-view\": {\n-      \"version\": \"1.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.1.tgz\",\n-      \"integrity\": \"sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==\",\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz\",\n+      \"integrity\": \"sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==\",\n       \"dev\": true,\n       \"dependencies\": {\n+        \"call-bound\": \"^1.0.2\",\n+        \"get-intrinsic\": \"^1.2.6\",\n         \"is-typed-array\": \"^1.1.13\"\n       },\n       \"engines\": {\n@@ -7625,12 +7659,13 @@\n       }\n     },\n     \"node_modules/is-date-object\": {\n-      \"version\": \"1.0.5\",\n-      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz\",\n-      \"integrity\": \"sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz\",\n+      \"integrity\": \"sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"has-tostringtag\": \"^1.0.0\"\n+        \"call-bound\": \"^1.0.2\",\n+        \"has-tostringtag\": \"^1.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7658,12 +7693,15 @@\n       }\n     },\n     \"node_modules/is-finalizationregistry\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.0.2.tgz\",\n-      \"integrity\": \"sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz\",\n+      \"integrity\": \"sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\"\n+        \"call-bound\": \"^1.0.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n@@ -7792,12 +7830,13 @@\n       }\n     },\n     \"node_modules/is-number-object\": {\n-      \"version\": \"1.0.7\",\n-      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz\",\n-      \"integrity\": \"sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz\",\n+      \"integrity\": \"sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"has-tostringtag\": \"^1.0.0\"\n+        \"call-bound\": \"^1.0.3\",\n+        \"has-tostringtag\": \"^1.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7850,13 +7889,15 @@\n       \"dev\": true\n     },\n     \"node_modules/is-regex\": {\n-      \"version\": \"1.1.4\",\n-      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz\",\n-      \"integrity\": \"sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==\",\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz\",\n+      \"integrity\": \"sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\",\n-        \"has-tostringtag\": \"^1.0.0\"\n+        \"call-bound\": \"^1.0.2\",\n+        \"gopd\": \"^1.2.0\",\n+        \"has-tostringtag\": \"^1.0.2\",\n+        \"hasown\": \"^2.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7905,12 +7946,13 @@\n       }\n     },\n     \"node_modules/is-string\": {\n-      \"version\": \"1.0.7\",\n-      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz\",\n-      \"integrity\": \"sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz\",\n+      \"integrity\": \"sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"has-tostringtag\": \"^1.0.0\"\n+        \"call-bound\": \"^1.0.3\",\n+        \"has-tostringtag\": \"^1.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7930,12 +7972,14 @@\n       \"integrity\": \"sha512-Lj4vePmqpPR1ZnRctHv8ltSh1OrSxHkhUkd7wi+VQdcdP15/KvQFyk7LhNuM7ZW0EVbJz8kZLVmL9quLrfq4Kg==\"\n     },\n     \"node_modules/is-symbol\": {\n-      \"version\": \"1.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz\",\n-      \"integrity\": \"sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz\",\n+      \"integrity\": \"sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"has-symbols\": \"^1.0.2\"\n+        \"call-bound\": \"^1.0.2\",\n+        \"has-symbols\": \"^1.1.0\",\n+        \"safe-regex-test\": \"^1.1.0\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -7972,25 +8016,28 @@\n       }\n     },\n     \"node_modules/is-weakref\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz\",\n-      \"integrity\": \"sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.0.tgz\",\n+      \"integrity\": \"sha512-SXM8Nwyys6nT5WP6pltOwKytLV7FqQ4UiibxVmW+EIosHcmCqkkjViTb5SNssDlkCiEYRP1/pdWUKVvZBmsR2Q==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\"\n+        \"call-bound\": \"^1.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n     \"node_modules/is-weakset\": {\n-      \"version\": \"2.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.3.tgz\",\n-      \"integrity\": \"sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==\",\n+      \"version\": \"2.0.4\",\n+      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz\",\n+      \"integrity\": \"sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.7\",\n-        \"get-intrinsic\": \"^1.2.4\"\n+        \"call-bound\": \"^1.0.3\",\n+        \"get-intrinsic\": \"^1.2.6\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -8095,16 +8142,17 @@\n       }\n     },\n     \"node_modules/iterator.prototype\": {\n-      \"version\": \"1.1.3\",\n-      \"resolved\": \"https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.3.tgz\",\n-      \"integrity\": \"sha512-FW5iMbeQ6rBGm/oKgzq2aW4KvAGpxPzYES8N4g4xNXUKpL1mclMvOe+76AcLDTvD+Ze+sOpVhgdAQEKF4L9iGQ==\",\n+      \"version\": \"1.1.4\",\n+      \"resolved\": \"https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.4.tgz\",\n+      \"integrity\": \"sha512-x4WH0BWmrMmg4oHHl+duwubhrvczGlyuGAZu3nvrf0UXOfPu8IhZObFEr7DE/iv01YgVZrsOiRcqw2srkKEDIA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"define-properties\": \"^1.2.1\",\n-        \"get-intrinsic\": \"^1.2.1\",\n-        \"has-symbols\": \"^1.0.3\",\n-        \"reflect.getprototypeof\": \"^1.0.4\",\n-        \"set-function-name\": \"^2.0.1\"\n+        \"define-data-property\": \"^1.1.4\",\n+        \"es-object-atoms\": \"^1.0.0\",\n+        \"get-intrinsic\": \"^1.2.6\",\n+        \"has-symbols\": \"^1.1.0\",\n+        \"reflect.getprototypeof\": \"^1.0.8\",\n+        \"set-function-name\": \"^2.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -8247,6 +8295,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-circus/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-cli\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-cli/-/jest-cli-29.7.0.tgz\",\n@@ -8351,6 +8405,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-config/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-diff\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-diff/-/jest-diff-29.7.0.tgz\",\n@@ -8392,6 +8452,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-diff/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-docblock\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-docblock/-/jest-docblock-29.7.0.tgz\",\n@@ -8446,6 +8512,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-each/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-environment-jsdom\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-29.7.0.tgz\",\n@@ -8563,6 +8635,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-leak-detector/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-matcher-utils\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-29.7.0.tgz\",\n@@ -8604,6 +8682,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-matcher-utils/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-message-util\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-message-util/-/jest-message-util-29.7.0.tgz\",\n@@ -8650,6 +8734,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-message-util/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-mock\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-mock/-/jest-mock-29.7.0.tgz\",\n@@ -8845,6 +8935,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-snapshot/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-util\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\",\n@@ -8917,6 +9013,12 @@\n         \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n       }\n     },\n+    \"node_modules/jest-validate/node_modules/react-is\": {\n+      \"version\": \"18.3.1\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n+      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n+      \"dev\": true\n+    },\n     \"node_modules/jest-watcher\": {\n       \"version\": \"29.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-watcher/-/jest-watcher-29.7.0.tgz\",\n@@ -9045,9 +9147,9 @@\n       }\n     },\n     \"node_modules/jsesc\": {\n-      \"version\": \"3.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-3.0.2.tgz\",\n-      \"integrity\": \"sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==\",\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz\",\n+      \"integrity\": \"sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==\",\n       \"bin\": {\n         \"jsesc\": \"bin/jsesc\"\n       },\n@@ -9171,9 +9273,9 @@\n       }\n     },\n     \"node_modules/lilconfig\": {\n-      \"version\": \"3.1.2\",\n-      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.2.tgz\",\n-      \"integrity\": \"sha512-eop+wDAvpItUys0FWkHIKeC9ybYrTGbU41U5K7+bttZZeohvnY7M9dZ5kB21GNWiFT2q1OoPTvncPCgSOVO5ow==\",\n+      \"version\": \"3.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz\",\n+      \"integrity\": \"sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=14\"\n@@ -9197,21 +9299,21 @@\n       }\n     },\n     \"node_modules/lint-staged\": {\n-      \"version\": \"15.2.10\",\n-      \"resolved\": \"https://registry.npmjs.org/lint-staged/-/lint-staged-15.2.10.tgz\",\n-      \"integrity\": \"sha512-5dY5t743e1byO19P9I4b3x8HJwalIznL5E1FWYnU6OWw33KxNBSLAc6Cy7F2PsFEO8FKnLwjwm5hx7aMF0jzZg==\",\n+      \"version\": \"15.2.11\",\n+      \"resolved\": \"https://registry.npmjs.org/lint-staged/-/lint-staged-15.2.11.tgz\",\n+      \"integrity\": \"sha512-Ev6ivCTYRTGs9ychvpVw35m/bcNDuBN+mnTeObCL5h+boS5WzBEC6LHI4I9F/++sZm1m+J2LEiy0gxL/R9TBqQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"chalk\": \"~5.3.0\",\n         \"commander\": \"~12.1.0\",\n-        \"debug\": \"~4.3.6\",\n+        \"debug\": \"~4.4.0\",\n         \"execa\": \"~8.0.1\",\n-        \"lilconfig\": \"~3.1.2\",\n-        \"listr2\": \"~8.2.4\",\n+        \"lilconfig\": \"~3.1.3\",\n+        \"listr2\": \"~8.2.5\",\n         \"micromatch\": \"~4.0.8\",\n         \"pidtree\": \"~0.6.0\",\n         \"string-argv\": \"~0.3.2\",\n-        \"yaml\": \"~2.5.0\"\n+        \"yaml\": \"~2.6.1\"\n       },\n       \"bin\": {\n         \"lint-staged\": \"bin/lint-staged.js\"\n@@ -9379,9 +9481,9 @@\n       }\n     },\n     \"node_modules/lint-staged/node_modules/yaml\": {\n-      \"version\": \"2.5.1\",\n-      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.5.1.tgz\",\n-      \"integrity\": \"sha512-bLQOjaX/ADgQ20isPJRvF0iRUHIxVhYvr53Of7wGcWlO2jvtUlH5m87DsmulFVxRpNLOnI4tB6p/oh8D7kpn9Q==\",\n+      \"version\": \"2.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.6.1.tgz\",\n+      \"integrity\": \"sha512-7r0XPzioN/Q9kXBro/XPnA6kznR73DHq+GXh5ON7ZozRO6aMjbmiBuKste2wslTFkC5d1dw0GooOCepZXJ2SAg==\",\n       \"dev\": true,\n       \"bin\": {\n         \"yaml\": \"bin.mjs\"\n@@ -9788,6 +9890,15 @@\n         \"markdown-it\": \"bin/markdown-it.mjs\"\n       }\n     },\n+    \"node_modules/math-intrinsics\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.0.0.tgz\",\n+      \"integrity\": \"sha512-4MqMiKP90ybymYvsut0CH2g4XWbfLtmlCkXmtmdcDCxNB+mQcu1w/1+L/VD7vi/PSv7X2JYV7SCcR+jiPXnQtA==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      }\n+    },\n     \"node_modules/math-log2\": {\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/math-log2/-/math-log2-1.0.1.tgz\",\n@@ -10353,9 +10464,9 @@\n       }\n     },\n     \"node_modules/micromark-util-subtokenize\": {\n-      \"version\": \"2.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/micromark-util-subtokenize/-/micromark-util-subtokenize-2.0.2.tgz\",\n-      \"integrity\": \"sha512-xKxhkB62vwHUuuxHe9Xqty3UaAsizV2YKq5OV344u3hFBbf8zIYrhYOWhAQb94MtMPkjTOzzjJ/hid9/dR5vFA==\",\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/micromark-util-subtokenize/-/micromark-util-subtokenize-2.0.3.tgz\",\n+      \"integrity\": \"sha512-VXJJuNxYWSoYL6AJ6OQECCFGhIU2GGHMw8tahogePBrjkG8aCCas3ibkp7RnVOSTClg2is05/R7maAhF1XyQMg==\",\n       \"funding\": [\n         {\n           \"type\": \"GitHub Sponsors\",\n@@ -10559,9 +10670,9 @@\n       \"integrity\": \"sha512-TvmkNhkv8yct0SVBSy+o8wYzXjE4Zz3PCesbfs8HiCXXdcTuocApFv11UWlNFWKYsP2okqrhb7JNlSm9InBhIw==\"\n     },\n     \"node_modules/nanoid\": {\n-      \"version\": \"5.0.8\",\n-      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-5.0.8.tgz\",\n-      \"integrity\": \"sha512-TcJPw+9RV9dibz1hHUzlLVy8N4X9TnwirAjrU08Juo6BNKggzVfP2ZJ/3ZUSq15Xl5i85i+Z89XBO90pB2PghQ==\",\n+      \"version\": \"5.0.9\",\n+      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-5.0.9.tgz\",\n+      \"integrity\": \"sha512-Aooyr6MXU6HpvvWXKoVoXwKMs/KyVakWwg7xQfv5/S/RIgJMy0Ifa45H9qqYy7pTCszrHzP21Uk4PZq2HpEM8Q==\",\n       \"funding\": [\n         {\n           \"type\": \"github\",\n@@ -10637,9 +10748,9 @@\n       \"dev\": true\n     },\n     \"node_modules/node-releases\": {\n-      \"version\": \"2.0.18\",\n-      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.18.tgz\",\n-      \"integrity\": \"sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==\"\n+      \"version\": \"2.0.19\",\n+      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz\",\n+      \"integrity\": \"sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==\"\n     },\n     \"node_modules/normalize-path\": {\n       \"version\": \"3.0.0\",\n@@ -10729,9 +10840,9 @@\n       }\n     },\n     \"node_modules/nwsapi\": {\n-      \"version\": \"2.2.13\",\n-      \"resolved\": \"https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.13.tgz\",\n-      \"integrity\": \"sha512-cTGB9ptp9dY9A5VbMSe7fQBcl/tt22Vcqdq8+eN93rblOuE0aCFu4aZ2vMwct/2t+lFnosm8RkQW1I0Omb1UtQ==\",\n+      \"version\": \"2.2.16\",\n+      \"resolved\": \"https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.16.tgz\",\n+      \"integrity\": \"sha512-F1I/bimDpj3ncaNDhfyMWuFqmQDBwDB0Fogc2qpL3BWvkQteFD/8BzWuIRl83rq0DXfm8SGt/HFhLXZyljTXcQ==\",\n       \"dev\": true\n     },\n     \"node_modules/object-assign\": {\n@@ -10853,18 +10964,6 @@\n         \"url\": \"https://github.com/sponsors/sindresorhus\"\n       }\n     },\n-    \"node_modules/oniguruma-to-js\": {\n-      \"version\": \"0.4.3\",\n-      \"resolved\": \"https://registry.npmjs.org/oniguruma-to-js/-/oniguruma-to-js-0.4.3.tgz\",\n-      \"integrity\": \"sha512-X0jWUcAlxORhOqqBREgPMgnshB7ZGYszBNspP+tS9hPD3l13CdaXcHbgImoHUHlrvGx/7AvFEkTRhAGYh+jzjQ==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"regex\": \"^4.3.2\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/antfu\"\n-      }\n-    },\n     \"node_modules/optionator\": {\n       \"version\": \"0.9.4\",\n       \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz\",\n@@ -10948,12 +11047,11 @@\n       \"integrity\": \"sha512-KF/U8tk54BgQewkJPvB4s/US3VQY68BRDpH638+7O/n58TpnwiwnOtGIOsT2/i+M78s61BBpeC83STB88d8sqw==\"\n     },\n     \"node_modules/parse-entities\": {\n-      \"version\": \"4.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/parse-entities/-/parse-entities-4.0.1.tgz\",\n-      \"integrity\": \"sha512-SWzvYcSJh4d/SGLIOQfZ/CoNv6BTlI6YEQ7Nj82oDVnRpwe/Z/F1EMx42x3JAOwGBlCjeCH0BRJQbQ/opHL17w==\",\n+      \"version\": \"4.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/parse-entities/-/parse-entities-4.0.2.tgz\",\n+      \"integrity\": \"sha512-GG2AQYWoLgL877gQIKeRPGO1xF9+eG1ujIb5soS5gPvLQ1y2o8FL90w2QWNdf9I361Mpp7726c+lj3U0qK1uGw==\",\n       \"dependencies\": {\n         \"@types/unist\": \"^2.0.0\",\n-        \"character-entities\": \"^2.0.0\",\n         \"character-entities-legacy\": \"^3.0.0\",\n         \"character-reference-invalid\": \"^2.0.0\",\n         \"decode-named-character-reference\": \"^1.0.0\",\n@@ -11193,9 +11291,9 @@\n       }\n     },\n     \"node_modules/plotly.js\": {\n-      \"version\": \"2.35.2\",\n-      \"resolved\": \"https://registry.npmjs.org/plotly.js/-/plotly.js-2.35.2.tgz\",\n-      \"integrity\": \"sha512-s0knlWzRvLQXxzf3JQ6qbm8FpwKuMjkr+6r04f8/yCEByAQ+I0jkUzY/hSGRGb+u7iljTh9hgpEiiJP90vjyeQ==\",\n+      \"version\": \"2.35.3\",\n+      \"resolved\": \"https://registry.npmjs.org/plotly.js/-/plotly.js-2.35.3.tgz\",\n+      \"integrity\": \"sha512-7RaC6FxmCUhpD6H4MpD+QLUu3hCn76I11rotRefrh3m1iDvWqGnVqVk9dSaKmRAhFD3vsNsYea0OxnR1rc2IzQ==\",\n       \"dependencies\": {\n         \"@plotly/d3\": \"3.8.2\",\n         \"@plotly/d3-sankey\": \"0.7.2\",\n@@ -11309,9 +11407,9 @@\n       }\n     },\n     \"node_modules/postcss-modules-local-by-default\": {\n-      \"version\": \"4.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-4.1.0.tgz\",\n-      \"integrity\": \"sha512-rm0bdSv4jC3BDma3s9H19ZddW0aHX6EoqwDYU2IfZhRN+53QrufTRo2IdkAbRqLx4R2IYbZnbjKKxg4VN5oU9Q==\",\n+      \"version\": \"4.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-4.2.0.tgz\",\n+      \"integrity\": \"sha512-5kcJm/zk+GJDSfw+V/42fJ5fhjL5YbFDl8nVdXkJPLLW+Vf9mTD5Xe0wqIaDnLuL2U6cDNpTr+UQ+v2HWIBhzw==\",\n       \"dependencies\": {\n         \"icss-utils\": \"^5.0.0\",\n         \"postcss-selector-parser\": \"^7.0.0\",\n@@ -11370,9 +11468,9 @@\n       \"integrity\": \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\"\n     },\n     \"node_modules/postcss/node_modules/nanoid\": {\n-      \"version\": \"3.3.7\",\n-      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz\",\n-      \"integrity\": \"sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==\",\n+      \"version\": \"3.3.8\",\n+      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.8.tgz\",\n+      \"integrity\": \"sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==\",\n       \"funding\": [\n         {\n           \"type\": \"github\",\n@@ -11508,12 +11606,15 @@\n       \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"\n     },\n     \"node_modules/psl\": {\n-      \"version\": \"1.10.0\",\n-      \"resolved\": \"https://registry.npmjs.org/psl/-/psl-1.10.0.tgz\",\n-      \"integrity\": \"sha512-KSKHEbjAnpUuAUserOq0FxGXCUrzC3WniuSJhvdbs102rL55266ZcHBqLWOsG30spQMlPdpy7icATiAQehg/iA==\",\n+      \"version\": \"1.15.0\",\n+      \"resolved\": \"https://registry.npmjs.org/psl/-/psl-1.15.0.tgz\",\n+      \"integrity\": \"sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"punycode\": \"^2.3.1\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/lupomontero\"\n       }\n     },\n     \"node_modules/punycode\": {\n@@ -11649,9 +11750,9 @@\n       }\n     },\n     \"node_modules/react-is\": {\n-      \"version\": \"18.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n-      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\"\n+      \"version\": \"19.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-19.0.0.tgz\",\n+      \"integrity\": \"sha512-H91OHcwjZsbq3ClIDHMzBShc1rotbfACdWENsmEf0IFvZ3FgGPtdHMcsv45bQ1hAbgdfiA8SnxTKfDS+x/8m2g==\"\n     },\n     \"node_modules/react-jsx-parser\": {\n       \"version\": \"2.2.2\",\n@@ -11756,18 +11857,18 @@\n       }\n     },\n     \"node_modules/react-virtualized-auto-sizer\": {\n-      \"version\": \"1.0.24\",\n-      \"resolved\": \"https://registry.npmjs.org/react-virtualized-auto-sizer/-/react-virtualized-auto-sizer-1.0.24.tgz\",\n-      \"integrity\": \"sha512-3kCn7N9NEb3FlvJrSHWGQ4iVl+ydQObq2fHMn12i5wbtm74zHOPhz/i64OL3c1S1vi9i2GXtZqNqUJTQ+BnNfg==\",\n+      \"version\": \"1.0.25\",\n+      \"resolved\": \"https://registry.npmjs.org/react-virtualized-auto-sizer/-/react-virtualized-auto-sizer-1.0.25.tgz\",\n+      \"integrity\": \"sha512-YHsksEGDfsHbHuaBVDYwJmcktblcHGafz4ZVuYPQYuSHMUGjpwmUCrAOcvMSGMwwk1eFWj1M/1GwYpNPuyhaBg==\",\n       \"peerDependencies\": {\n-        \"react\": \"^15.3.0 || ^16.0.0-alpha || ^17.0.0 || ^18.0.0\",\n-        \"react-dom\": \"^15.3.0 || ^16.0.0-alpha || ^17.0.0 || ^18.0.0\"\n+        \"react\": \"^15.3.0 || ^16.0.0-alpha || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n+        \"react-dom\": \"^15.3.0 || ^16.0.0-alpha || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n       }\n     },\n     \"node_modules/react-window\": {\n-      \"version\": \"1.8.10\",\n-      \"resolved\": \"https://registry.npmjs.org/react-window/-/react-window-1.8.10.tgz\",\n-      \"integrity\": \"sha512-Y0Cx+dnU6NLa5/EvoHukUD0BklJ8qITCtVEPY1C/nL8wwoZ0b5aEw8Ff1dOVHw7fCzMt55XfJDd8S8W8LCaUCg==\",\n+      \"version\": \"1.8.11\",\n+      \"resolved\": \"https://registry.npmjs.org/react-window/-/react-window-1.8.11.tgz\",\n+      \"integrity\": \"sha512-+SRbUVT2scadgFSWx+R1P754xHPEqvcfSfVX10QYg6POOz+WNgkN48pS+BtZNIMGiL1HYrSEiCkwsMS15QogEQ==\",\n       \"dependencies\": {\n         \"@babel/runtime\": \"^7.0.0\",\n         \"memoize-one\": \">=3.1.1 <6\"\n@@ -11776,8 +11877,8 @@\n         \"node\": \">8.0.0\"\n       },\n       \"peerDependencies\": {\n-        \"react\": \"^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0\",\n-        \"react-dom\": \"^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0\"\n+        \"react\": \"^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\",\n+        \"react-dom\": \"^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n       }\n     },\n     \"node_modules/react-window-infinite-loader\": {\n@@ -11842,18 +11943,19 @@\n       }\n     },\n     \"node_modules/reflect.getprototypeof\": {\n-      \"version\": \"1.0.6\",\n-      \"resolved\": \"https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.6.tgz\",\n-      \"integrity\": \"sha512-fmfw4XgoDke3kdI6h4xcUz1dG8uaiv5q9gcEwLS4Pnth2kxT+GZ7YehS1JTMGBQmtV7Y4GFGbs2re2NqhdozUg==\",\n+      \"version\": \"1.0.8\",\n+      \"resolved\": \"https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.8.tgz\",\n+      \"integrity\": \"sha512-B5dj6usc5dkk8uFliwjwDHM8To5/QwdKz9JcBZ8Ic4G1f0YmeeJTtE/ZTdgRFPAfxZFiUaPhZ1Jcs4qeagItGQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.7\",\n+        \"call-bind\": \"^1.0.8\",\n         \"define-properties\": \"^1.2.1\",\n-        \"es-abstract\": \"^1.23.1\",\n+        \"dunder-proto\": \"^1.0.0\",\n+        \"es-abstract\": \"^1.23.5\",\n         \"es-errors\": \"^1.3.0\",\n         \"get-intrinsic\": \"^1.2.4\",\n-        \"globalthis\": \"^1.0.3\",\n-        \"which-builtin-type\": \"^1.1.3\"\n+        \"gopd\": \"^1.2.0\",\n+        \"which-builtin-type\": \"^1.2.0\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -11867,12 +11969,6 @@\n       \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz\",\n       \"integrity\": \"sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==\"\n     },\n-    \"node_modules/regex\": {\n-      \"version\": \"4.4.0\",\n-      \"resolved\": \"https://registry.npmjs.org/regex/-/regex-4.4.0.tgz\",\n-      \"integrity\": \"sha512-uCUSuobNVeqUupowbdZub6ggI5/JZkYyJdDogddJr60L764oxC2pMZov1fQ3wM9bdyzUILDG+Sqx6NAKAz9rKQ==\",\n-      \"dev\": true\n-    },\n     \"node_modules/regexp.prototype.flags\": {\n       \"version\": \"1.5.3\",\n       \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.3.tgz\",\n@@ -12032,7 +12128,6 @@\n       \"version\": \"2.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n       \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n-      \"dev\": true,\n       \"engines\": {\n         \"node\": \">=0.10.0\"\n       }\n@@ -12044,11 +12139,11 @@\n       \"dev\": true\n     },\n     \"node_modules/resolve\": {\n-      \"version\": \"1.22.8\",\n-      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n-      \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n+      \"version\": \"1.22.9\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.9.tgz\",\n+      \"integrity\": \"sha512-QxrmX1DzraFIi9PxdG5VkRfRwIgjwyud+z/iBwfRRrVmHc+P9Q7u2lSSpQ6bjr2gy5lrqIiU9vb6iAeGf2400A==\",\n       \"dependencies\": {\n-        \"is-core-module\": \"^2.13.0\",\n+        \"is-core-module\": \"^2.16.0\",\n         \"path-parse\": \"^1.0.7\",\n         \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n       },\n@@ -12097,9 +12192,9 @@\n       }\n     },\n     \"node_modules/resolve.exports\": {\n-      \"version\": \"2.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/resolve.exports/-/resolve.exports-2.0.2.tgz\",\n-      \"integrity\": \"sha512-X2UW6Nw3n/aMgDVy+0rSqgHlv39WZAlZrXCdnbyEiKm17DSqHX4MmQMaST3FbeWR5FTuRcUwYAziZajji0Y7mg==\",\n+      \"version\": \"2.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/resolve.exports/-/resolve.exports-2.0.3.tgz\",\n+      \"integrity\": \"sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=10\"\n@@ -12214,14 +12309,15 @@\n       \"integrity\": \"sha512-PdhdWy89SiZogBLaw42zdeqtRJ//zFd2PgQavcICDUgJT5oW10QCRKbJ6bg4r0/UY2M6BWd5tkxuGFRvCkgfHQ==\"\n     },\n     \"node_modules/safe-array-concat\": {\n-      \"version\": \"1.1.2\",\n-      \"resolved\": \"https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz\",\n-      \"integrity\": \"sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==\",\n+      \"version\": \"1.1.3\",\n+      \"resolved\": \"https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz\",\n+      \"integrity\": \"sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.7\",\n-        \"get-intrinsic\": \"^1.2.4\",\n-        \"has-symbols\": \"^1.0.3\",\n+        \"call-bind\": \"^1.0.8\",\n+        \"call-bound\": \"^1.0.2\",\n+        \"get-intrinsic\": \"^1.2.6\",\n+        \"has-symbols\": \"^1.1.0\",\n         \"isarray\": \"^2.0.5\"\n       },\n       \"engines\": {\n@@ -12251,14 +12347,14 @@\n       ]\n     },\n     \"node_modules/safe-regex-test\": {\n-      \"version\": \"1.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.3.tgz\",\n-      \"integrity\": \"sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz\",\n+      \"integrity\": \"sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.6\",\n+        \"call-bound\": \"^1.0.2\",\n         \"es-errors\": \"^1.3.0\",\n-        \"is-regex\": \"^1.1.4\"\n+        \"is-regex\": \"^1.2.1\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -12298,10 +12394,9 @@\n       }\n     },\n     \"node_modules/schema-utils\": {\n-      \"version\": \"4.2.0\",\n-      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-4.2.0.tgz\",\n-      \"integrity\": \"sha512-L0jRsrPpjdckP3oPug3/VxNKt2trR8TcabrM6FOAAlvC/9Phcmm+cuAgTlxBqdBR1WJx7Naj9WHw+aOmheSVbw==\",\n-      \"dev\": true,\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.0.tgz\",\n+      \"integrity\": \"sha512-Gf9qqc58SpCA/xdziiHz35F4GNIWYWZrEshUc/G/r5BnLph6xpKuLeoJoQuj5WfBIx/eQLf+hmVPYHaxJu7V2g==\",\n       \"dependencies\": {\n         \"@types/json-schema\": \"^7.0.9\",\n         \"ajv\": \"^8.9.0\",\n@@ -12309,7 +12404,7 @@\n         \"ajv-keywords\": \"^5.1.0\"\n       },\n       \"engines\": {\n-        \"node\": \">= 12.13.0\"\n+        \"node\": \">= 10.13.0\"\n       },\n       \"funding\": {\n         \"type\": \"opencollective\",\n@@ -12320,7 +12415,6 @@\n       \"version\": \"8.17.1\",\n       \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz\",\n       \"integrity\": \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"fast-deep-equal\": \"^3.1.3\",\n         \"fast-uri\": \"^3.0.1\",\n@@ -12336,7 +12430,6 @@\n       \"version\": \"5.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz\",\n       \"integrity\": \"sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==\",\n-      \"dev\": true,\n       \"dependencies\": {\n         \"fast-deep-equal\": \"^3.1.3\"\n       },\n@@ -12347,8 +12440,7 @@\n     \"node_modules/schema-utils/node_modules/json-schema-traverse\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n-      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n-      \"dev\": true\n+      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\"\n     },\n     \"node_modules/semver\": {\n       \"version\": \"7.6.3\",\n@@ -12444,30 +12536,70 @@\n         \"node\": \">=8\"\n       }\n     },\n-    \"node_modules/shiki\": {\n-      \"version\": \"1.22.2\",\n-      \"resolved\": \"https://registry.npmjs.org/shiki/-/shiki-1.22.2.tgz\",\n-      \"integrity\": \"sha512-3IZau0NdGKXhH2bBlUk4w1IHNxPh6A5B2sUpyY+8utLu2j/h1QpFkAaUA1bAMxOWWGtTWcAh531vnS4NJKS/lA==\",\n+    \"node_modules/side-channel\": {\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n+      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@shikijs/core\": \"1.22.2\",\n-        \"@shikijs/engine-javascript\": \"1.22.2\",\n-        \"@shikijs/engine-oniguruma\": \"1.22.2\",\n-        \"@shikijs/types\": \"1.22.2\",\n-        \"@shikijs/vscode-textmate\": \"^9.3.0\",\n-        \"@types/hast\": \"^3.0.4\"\n+        \"es-errors\": \"^1.3.0\",\n+        \"object-inspect\": \"^1.13.3\",\n+        \"side-channel-list\": \"^1.0.0\",\n+        \"side-channel-map\": \"^1.0.1\",\n+        \"side-channel-weakmap\": \"^1.0.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n-    \"node_modules/side-channel\": {\n-      \"version\": \"1.0.6\",\n-      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\n-      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\n+    \"node_modules/side-channel-list\": {\n+      \"version\": \"1.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n+      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.7\",\n         \"es-errors\": \"^1.3.0\",\n-        \"get-intrinsic\": \"^1.2.4\",\n-        \"object-inspect\": \"^1.13.1\"\n+        \"object-inspect\": \"^1.13.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n+      }\n+    },\n+    \"node_modules/side-channel-map\": {\n+      \"version\": \"1.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n+      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"call-bound\": \"^1.0.2\",\n+        \"es-errors\": \"^1.3.0\",\n+        \"get-intrinsic\": \"^1.2.5\",\n+        \"object-inspect\": \"^1.13.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/ljharb\"\n+      }\n+    },\n+    \"node_modules/side-channel-weakmap\": {\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n+      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"call-bound\": \"^1.0.2\",\n+        \"es-errors\": \"^1.3.0\",\n+        \"get-intrinsic\": \"^1.2.5\",\n+        \"object-inspect\": \"^1.13.3\",\n+        \"side-channel-map\": \"^1.0.1\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -12544,6 +12676,22 @@\n         \"node\": \">=10.0.0\"\n       }\n     },\n+    \"node_modules/socket.io-client/node_modules/debug\": {\n+      \"version\": \"4.3.7\",\n+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.7.tgz\",\n+      \"integrity\": \"sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==\",\n+      \"dependencies\": {\n+        \"ms\": \"^2.1.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"supports-color\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n     \"node_modules/socket.io-parser\": {\n       \"version\": \"4.2.4\",\n       \"resolved\": \"https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.4.tgz\",\n@@ -12556,6 +12704,22 @@\n         \"node\": \">=10.0.0\"\n       }\n     },\n+    \"node_modules/socket.io-parser/node_modules/debug\": {\n+      \"version\": \"4.3.7\",\n+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.7.tgz\",\n+      \"integrity\": \"sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==\",\n+      \"dependencies\": {\n+        \"ms\": \"^2.1.3\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"supports-color\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n     \"node_modules/source-map\": {\n       \"version\": \"0.5.7\",\n       \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz\",\n@@ -12813,15 +12977,18 @@\n       }\n     },\n     \"node_modules/string.prototype.trim\": {\n-      \"version\": \"1.2.9\",\n-      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.9.tgz\",\n-      \"integrity\": \"sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==\",\n+      \"version\": \"1.2.10\",\n+      \"resolved\": \"https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz\",\n+      \"integrity\": \"sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.7\",\n+        \"call-bind\": \"^1.0.8\",\n+        \"call-bound\": \"^1.0.2\",\n+        \"define-data-property\": \"^1.1.4\",\n         \"define-properties\": \"^1.2.1\",\n-        \"es-abstract\": \"^1.23.0\",\n-        \"es-object-atoms\": \"^1.0.0\"\n+        \"es-abstract\": \"^1.23.5\",\n+        \"es-object-atoms\": \"^1.0.0\",\n+        \"has-property-descriptors\": \"^1.0.2\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -12831,15 +12998,19 @@\n       }\n     },\n     \"node_modules/string.prototype.trimend\": {\n-      \"version\": \"1.0.8\",\n-      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.8.tgz\",\n-      \"integrity\": \"sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==\",\n+      \"version\": \"1.0.9\",\n+      \"resolved\": \"https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz\",\n+      \"integrity\": \"sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.7\",\n+        \"call-bind\": \"^1.0.8\",\n+        \"call-bound\": \"^1.0.2\",\n         \"define-properties\": \"^1.2.1\",\n         \"es-object-atoms\": \"^1.0.0\"\n       },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n+      },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n@@ -13072,9 +13243,9 @@\n       }\n     },\n     \"node_modules/terser\": {\n-      \"version\": \"5.36.0\",\n-      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.36.0.tgz\",\n-      \"integrity\": \"sha512-IYV9eNMuFAV4THUspIRXkLakHnV6XO7FEdtKjf/mDyrnqUg9LnlOn6/RwRvM9SZjR4GUq8Nk8zj67FzVARr74w==\",\n+      \"version\": \"5.37.0\",\n+      \"resolved\": \"https://registry.npmjs.org/terser/-/terser-5.37.0.tgz\",\n+      \"integrity\": \"sha512-B8wRRkmre4ERucLM/uXx4MOV5cbnOlVAqUst+1+iLKPI0dOgFO28f84ptoQt9HEI537PMzfYa/d+GEPKTRXmYA==\",\n       \"dependencies\": {\n         \"@jridgewell/source-map\": \"^0.3.3\",\n         \"acorn\": \"^8.8.2\",\n@@ -13089,15 +13260,15 @@\n       }\n     },\n     \"node_modules/terser-webpack-plugin\": {\n-      \"version\": \"5.3.10\",\n-      \"resolved\": \"https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.10.tgz\",\n-      \"integrity\": \"sha512-BKFPWlPDndPs+NGGCr1U59t0XScL5317Y0UReNrHaw9/FwhPENlq6bfgs+4yPfyP51vqC1bQ4rp1EfXW5ZSH9w==\",\n+      \"version\": \"5.3.11\",\n+      \"resolved\": \"https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.11.tgz\",\n+      \"integrity\": \"sha512-RVCsMfuD0+cTt3EwX8hSl2Ks56EbFHWmhluwcqoPKtBnfjiT6olaq7PRIRfhyU8nnC2MrnDrBLfrD/RGE+cVXQ==\",\n       \"dependencies\": {\n-        \"@jridgewell/trace-mapping\": \"^0.3.20\",\n+        \"@jridgewell/trace-mapping\": \"^0.3.25\",\n         \"jest-worker\": \"^27.4.5\",\n-        \"schema-utils\": \"^3.1.1\",\n-        \"serialize-javascript\": \"^6.0.1\",\n-        \"terser\": \"^5.26.0\"\n+        \"schema-utils\": \"^4.3.0\",\n+        \"serialize-javascript\": \"^6.0.2\",\n+        \"terser\": \"^5.31.1\"\n       },\n       \"engines\": {\n         \"node\": \">= 10.13.0\"\n@@ -13134,23 +13305,6 @@\n         \"node\": \">= 10.13.0\"\n       }\n     },\n-    \"node_modules/terser-webpack-plugin/node_modules/schema-utils\": {\n-      \"version\": \"3.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-3.3.0.tgz\",\n-      \"integrity\": \"sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==\",\n-      \"dependencies\": {\n-        \"@types/json-schema\": \"^7.0.8\",\n-        \"ajv\": \"^6.12.5\",\n-        \"ajv-keywords\": \"^3.5.2\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 10.13.0\"\n-      },\n-      \"funding\": {\n-        \"type\": \"opencollective\",\n-        \"url\": \"https://opencollective.com/webpack\"\n-      }\n-    },\n     \"node_modules/terser-webpack-plugin/node_modules/supports-color\": {\n       \"version\": \"8.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n@@ -13343,9 +13497,9 @@\n       }\n     },\n     \"node_modules/ts-api-utils\": {\n-      \"version\": \"1.4.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.0.tgz\",\n-      \"integrity\": \"sha512-032cPxaEKwM+GT3vA5JXNzIaizx388rhsSW79vGRNGXfRRAdEAn2mvk36PvK5HnOchyWZ7afLEXqYCvPCrzuzQ==\",\n+      \"version\": \"1.4.3\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.4.3.tgz\",\n+      \"integrity\": \"sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=16\"\n@@ -13517,9 +13671,9 @@\n       }\n     },\n     \"node_modules/typed-array-byte-offset\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.2.tgz\",\n-      \"integrity\": \"sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==\",\n+      \"version\": \"1.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.3.tgz\",\n+      \"integrity\": \"sha512-GsvTyUHTriq6o/bHcTd0vM7OQ9JEdlvluu9YISaA7+KzDzPaIzEeDFNkTfhdE3MYcNhNi0vq/LlegYgIs5yPAw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"available-typed-arrays\": \"^1.0.7\",\n@@ -13527,7 +13681,8 @@\n         \"for-each\": \"^0.3.3\",\n         \"gopd\": \"^1.0.1\",\n         \"has-proto\": \"^1.0.3\",\n-        \"is-typed-array\": \"^1.1.13\"\n+        \"is-typed-array\": \"^1.1.13\",\n+        \"reflect.getprototypeof\": \"^1.0.6\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -13537,17 +13692,17 @@\n       }\n     },\n     \"node_modules/typed-array-length\": {\n-      \"version\": \"1.0.6\",\n-      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.6.tgz\",\n-      \"integrity\": \"sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==\",\n+      \"version\": \"1.0.7\",\n+      \"resolved\": \"https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz\",\n+      \"integrity\": \"sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"call-bind\": \"^1.0.7\",\n         \"for-each\": \"^0.3.3\",\n         \"gopd\": \"^1.0.1\",\n-        \"has-proto\": \"^1.0.3\",\n         \"is-typed-array\": \"^1.1.13\",\n-        \"possible-typed-array-names\": \"^1.0.0\"\n+        \"possible-typed-array-names\": \"^1.0.0\",\n+        \"reflect.getprototypeof\": \"^1.0.6\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -13571,16 +13726,16 @@\n       }\n     },\n     \"node_modules/typedoc\": {\n-      \"version\": \"0.26.11\",\n-      \"resolved\": \"https://registry.npmjs.org/typedoc/-/typedoc-0.26.11.tgz\",\n-      \"integrity\": \"sha512-sFEgRRtrcDl2FxVP58Ze++ZK2UQAEvtvvH8rRlig1Ja3o7dDaMHmaBfvJmdGnNEFaLTpQsN8dpvZaTqJSu/Ugw==\",\n+      \"version\": \"0.27.5\",\n+      \"resolved\": \"https://registry.npmjs.org/typedoc/-/typedoc-0.27.5.tgz\",\n+      \"integrity\": \"sha512-x+fhKJtTg4ozXwKayh/ek4wxZQI/+2hmZUdO2i2NGDBRUflDble70z+ewHod3d4gRpXSO6fnlnjbDTnJk7HlkQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n+        \"@gerrit0/mini-shiki\": \"^1.24.0\",\n         \"lunr\": \"^2.3.9\",\n         \"markdown-it\": \"^14.1.0\",\n         \"minimatch\": \"^9.0.5\",\n-        \"shiki\": \"^1.16.2\",\n-        \"yaml\": \"^2.5.1\"\n+        \"yaml\": \"^2.6.1\"\n       },\n       \"bin\": {\n         \"typedoc\": \"bin/typedoc\"\n@@ -13589,25 +13744,25 @@\n         \"node\": \">= 18\"\n       },\n       \"peerDependencies\": {\n-        \"typescript\": \"4.6.x || 4.7.x || 4.8.x || 4.9.x || 5.0.x || 5.1.x || 5.2.x || 5.3.x || 5.4.x || 5.5.x || 5.6.x\"\n+        \"typescript\": \"5.0.x || 5.1.x || 5.2.x || 5.3.x || 5.4.x || 5.5.x || 5.6.x || 5.7.x\"\n       }\n     },\n     \"node_modules/typedoc-plugin-markdown\": {\n-      \"version\": \"4.2.10\",\n-      \"resolved\": \"https://registry.npmjs.org/typedoc-plugin-markdown/-/typedoc-plugin-markdown-4.2.10.tgz\",\n-      \"integrity\": \"sha512-PLX3pc1/7z13UJm4TDE9vo9jWGcClFUErXXtd5LdnoLjV6mynPpqZLU992DwMGFSRqJFZeKbVyqlNNeNHnk2tQ==\",\n+      \"version\": \"4.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/typedoc-plugin-markdown/-/typedoc-plugin-markdown-4.3.2.tgz\",\n+      \"integrity\": \"sha512-hCF3V0axzbzGDYFW21XigWIJQBOJ2ZRVWWs7X+e62ew/pXnvz7iKF/zVdkBm3w8Mk4bmXWp/FT0IF4Zn9uBRww==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">= 18\"\n       },\n       \"peerDependencies\": {\n-        \"typedoc\": \"0.26.x\"\n+        \"typedoc\": \"0.27.x\"\n       }\n     },\n     \"node_modules/typedoc/node_modules/yaml\": {\n-      \"version\": \"2.6.0\",\n-      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.6.0.tgz\",\n-      \"integrity\": \"sha512-a6ae//JvKDEra2kdi1qzCyrJW/WZCgFi8ydDV+eXExl95t+5R+ijnqHJbz9tmMh8FUjx3iv2fCQ4dclAQlO2UQ==\",\n+      \"version\": \"2.6.1\",\n+      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.6.1.tgz\",\n+      \"integrity\": \"sha512-7r0XPzioN/Q9kXBro/XPnA6kznR73DHq+GXh5ON7ZozRO6aMjbmiBuKste2wslTFkC5d1dw0GooOCepZXJ2SAg==\",\n       \"dev\": true,\n       \"bin\": {\n         \"yaml\": \"bin.mjs\"\n@@ -13617,9 +13772,9 @@\n       }\n     },\n     \"node_modules/typescript\": {\n-      \"version\": \"5.6.3\",\n-      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.6.3.tgz\",\n-      \"integrity\": \"sha512-hjcS1mhfuyi4WW8IWtjP7brDrG2cuDZukyrYrSauoXGNgx0S7zceP07adYkJycEr56BOUTNPzbInooiN3fn1qw==\",\n+      \"version\": \"5.7.2\",\n+      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.7.2.tgz\",\n+      \"integrity\": \"sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==\",\n       \"dev\": true,\n       \"bin\": {\n         \"tsc\": \"bin/tsc\",\n@@ -13644,15 +13799,18 @@\n       \"dev\": true\n     },\n     \"node_modules/unbox-primitive\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz\",\n-      \"integrity\": \"sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==\",\n+      \"version\": \"1.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz\",\n+      \"integrity\": \"sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"call-bind\": \"^1.0.2\",\n+        \"call-bound\": \"^1.0.3\",\n         \"has-bigints\": \"^1.0.2\",\n-        \"has-symbols\": \"^1.0.3\",\n-        \"which-boxed-primitive\": \"^1.0.2\"\n+        \"has-symbols\": \"^1.1.0\",\n+        \"which-boxed-primitive\": \"^1.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n@@ -13956,15 +14114,15 @@\n       }\n     },\n     \"node_modules/webpack\": {\n-      \"version\": \"5.96.1\",\n-      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.96.1.tgz\",\n-      \"integrity\": \"sha512-l2LlBSvVZGhL4ZrPwyr8+37AunkcYj5qh8o6u2/2rzoPc8gxFJkLj1WxNgooi9pnoc06jh0BjuXnamM4qlujZA==\",\n+      \"version\": \"5.97.1\",\n+      \"resolved\": \"https://registry.npmjs.org/webpack/-/webpack-5.97.1.tgz\",\n+      \"integrity\": \"sha512-EksG6gFY3L1eFMROS/7Wzgrii5mBAFe4rIr3r2BTfo7bcc+DWwFZ4OJ/miOuHJO/A85HwyI4eQ0F6IKXesO7Fg==\",\n       \"dependencies\": {\n         \"@types/eslint-scope\": \"^3.7.7\",\n         \"@types/estree\": \"^1.0.6\",\n-        \"@webassemblyjs/ast\": \"^1.12.1\",\n-        \"@webassemblyjs/wasm-edit\": \"^1.12.1\",\n-        \"@webassemblyjs/wasm-parser\": \"^1.12.1\",\n+        \"@webassemblyjs/ast\": \"^1.14.1\",\n+        \"@webassemblyjs/wasm-edit\": \"^1.14.1\",\n+        \"@webassemblyjs/wasm-parser\": \"^1.14.1\",\n         \"acorn\": \"^8.14.0\",\n         \"browserslist\": \"^4.24.0\",\n         \"chrome-trace-event\": \"^1.0.2\",\n@@ -14175,39 +14333,43 @@\n       }\n     },\n     \"node_modules/which-boxed-primitive\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz\",\n-      \"integrity\": \"sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==\",\n+      \"version\": \"1.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz\",\n+      \"integrity\": \"sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"is-bigint\": \"^1.0.1\",\n-        \"is-boolean-object\": \"^1.1.0\",\n-        \"is-number-object\": \"^1.0.4\",\n-        \"is-string\": \"^1.0.5\",\n-        \"is-symbol\": \"^1.0.3\"\n+        \"is-bigint\": \"^1.1.0\",\n+        \"is-boolean-object\": \"^1.2.1\",\n+        \"is-number-object\": \"^1.1.1\",\n+        \"is-string\": \"^1.1.1\",\n+        \"is-symbol\": \"^1.1.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 0.4\"\n       },\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n     \"node_modules/which-builtin-type\": {\n-      \"version\": \"1.1.4\",\n-      \"resolved\": \"https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.1.4.tgz\",\n-      \"integrity\": \"sha512-bppkmBSsHFmIMSl8BO9TbsyzsvGjVoppt8xUiGzwiu/bhDCGxnpOKCxgqj6GuyHE0mINMDecBFPlOm2hzY084w==\",\n+      \"version\": \"1.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz\",\n+      \"integrity\": \"sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==\",\n       \"dev\": true,\n       \"dependencies\": {\n+        \"call-bound\": \"^1.0.2\",\n         \"function.prototype.name\": \"^1.1.6\",\n         \"has-tostringtag\": \"^1.0.2\",\n         \"is-async-function\": \"^2.0.0\",\n-        \"is-date-object\": \"^1.0.5\",\n-        \"is-finalizationregistry\": \"^1.0.2\",\n+        \"is-date-object\": \"^1.1.0\",\n+        \"is-finalizationregistry\": \"^1.1.0\",\n         \"is-generator-function\": \"^1.0.10\",\n-        \"is-regex\": \"^1.1.4\",\n+        \"is-regex\": \"^1.2.1\",\n         \"is-weakref\": \"^1.0.2\",\n         \"isarray\": \"^2.0.5\",\n-        \"which-boxed-primitive\": \"^1.0.2\",\n+        \"which-boxed-primitive\": \"^1.1.0\",\n         \"which-collection\": \"^1.0.2\",\n-        \"which-typed-array\": \"^1.1.15\"\n+        \"which-typed-array\": \"^1.1.16\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -14235,9 +14397,9 @@\n       }\n     },\n     \"node_modules/which-typed-array\": {\n-      \"version\": \"1.1.15\",\n-      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.15.tgz\",\n-      \"integrity\": \"sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==\",\n+      \"version\": \"1.1.16\",\n+      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.16.tgz\",\n+      \"integrity\": \"sha512-g+N+GAWiRj66DngFwHvISJd+ITsyphZvD1vChfVg6cEdnzy53GzB3oy0fUNlvhz7H7+MiqhYr26qxQShCpKTTQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"available-typed-arrays\": \"^1.0.7\",\ndiff --git a/frontend/taipy-gui/package.json b/frontend/taipy-gui/package.json\nindex f762cb2049..9afc6ba29b 100644\n--- a/frontend/taipy-gui/package.json\n+++ b/frontend/taipy-gui/package.json\n@@ -116,9 +116,9 @@\n     \"ts-jest\": \"^29.0.0\",\n     \"ts-jest-mock-import-meta\": \"^1.2.0\",\n     \"ts-loader\": \"^9.2.6\",\n-    \"typedoc\": \"^0.26.3\",\n-    \"typedoc-plugin-markdown\": \"^4.1.1\",\n-    \"typescript\": \"^5.5.3\",\n+    \"typedoc\": \"^0.27.5\",\n+    \"typedoc-plugin-markdown\": \"^4.3.2\",\n+    \"typescript\": \"^5.7.2\",\n     \"webpack\": \"^5.61.0\",\n     \"webpack-cli\": \"^5.0.0\"\n   }\ndiff --git a/frontend/taipy-gui/src/components/Taipy/Login.spec.tsx b/frontend/taipy-gui/src/components/Taipy/Login.spec.tsx\nindex b710d60ba0..5090276a45 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Login.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Login.spec.tsx\n@@ -65,4 +65,10 @@ describe(\"Login Component\", () => {\n             type: \"SEND_ACTION_ACTION\",\n         });\n     });\n+    it(\"shows additional buttons\", async () => {\n+        const { getByText } = render(<Login labels={JSON.stringify([\"Button one\", \"Second button\"])} />);\n+        const elt = getByText(\"Button one\");\n+        expect(elt).toBeInTheDocument();\n+        expect(elt.tagName).toBe(\"BUTTON\");\n+    });\n });\ndiff --git a/frontend/taipy-gui/src/components/Taipy/Login.tsx b/frontend/taipy-gui/src/components/Taipy/Login.tsx\nindex daefc82db1..8c2239d345 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Login.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Login.tsx\n@@ -40,6 +40,7 @@ interface LoginProps extends TaipyBaseProps {\n     onAction?: string;\n     defaultMessage?: string;\n     message?: string;\n+    labels?: string;\n }\n \n const closeSx: SxProps<Theme> = {\n@@ -64,13 +65,24 @@ const Login = (props: LoginProps) => {\n \n     const className = useClassNames(props.libClassName, props.dynamicClassName, props.className);\n \n+    const labels = useMemo(() => {\n+        if (props.labels) {\n+            try {\n+                return JSON.parse(props.labels) as string[];\n+            } catch (e) {\n+                console.info(`Error parsing login.labels\\n${(e as Error).message || e}`);\n+            }\n+        }\n+        return [];\n+    }, [props.labels]);\n+\n     const handleAction = useCallback(\n         (evt: MouseEvent<HTMLElement>) => {\n-            const { close } = evt?.currentTarget.dataset || {};\n+            const { close, idx } = evt?.currentTarget.dataset || {};\n             const args = close\n                 ? [null, null, document.location.pathname.substring(1)]\n-                : [user, password, document.location.pathname.substring(1)];\n-            setShowProgress(true);\n+                : idx ? [user, password, document.location.pathname.substring(1), parseInt(idx, 10)]: [user, password, document.location.pathname.substring(1)];\n+            setShowProgress(!idx);\n             dispatch(createSendActionNameAction(id, module, onAction, ...args));\n         },\n         [user, password, dispatch, id, onAction, module]\n@@ -168,6 +180,11 @@ const Login = (props: LoginProps) => {\n                 <DialogContentText>{message || defaultMessage}</DialogContentText>\n             </DialogContent>\n             <DialogActions>\n+                {labels.map((label, i) => (\n+                    <Button onClick={handleAction} key={\"label\" + i} data-idx={i}>\n+                        {label}\n+                    </Button>\n+                ))}\n                 <Button\n                     variant=\"outlined\"\n                     className={getSuffixedClassNames(className, \"-button\")}\ndiff --git a/taipy/gui/_renderers/factory.py b/taipy/gui/_renderers/factory.py\nindex e8c84e3569..74646fb986 100644\n--- a/taipy/gui/_renderers/factory.py\n+++ b/taipy/gui/_renderers/factory.py\n@@ -349,6 +349,7 @@ class _Factory:\n             [\n                 (\"message\", PropertyType.dynamic_string),\n                 (\"on_action\", PropertyType.function, \"on_login\"),\n+                (\"labels\", PropertyType.string_list),\n             ]\n         ),\n         \"menu\": lambda gui, control_type, attrs: _Builder(\ndiff --git a/taipy/gui/viselements.json b/taipy/gui/viselements.json\nindex 9b50e344a6..99da6c4f6b 100644\n--- a/taipy/gui/viselements.json\n+++ b/taipy/gui/viselements.json\n@@ -1760,6 +1760,11 @@\n                         \"name\": \"message\",\n                         \"type\": \"dynamic(str)\",\n                         \"doc\": \"The message shown in the dialog.\"\n+                    },\n+                    {\n+                        \"name\": \"labels\",\n+                        \"type\": \"Union[str,list[str]]\",\n+                        \"doc\": \"A list of labels to show in a row of buttons at the bottom of the dialog. The index of the button in the list is reported as args in the <code>on_action</code> callback (that index is -1 for the <i>close</i> icon).\"\n                     }\n                 ]\n             }\n", "test_patch": "", "problem_statement": "Adding a custom button in the login visual element\n### Description\n\nThis feature request comes from a customer.\r\n\r\nThe customer wants a custom button in the login visual element next to the login button. This would allow him to create a \"Login as guest\" functionality where users could log in without entering credentials\r\n\r\n![image](https://github.com/user-attachments/assets/50301189-99c3-4ecb-afc3-b25c6736507b)\r\n\r\nWhat is the best way to do this? Should this be a feature in Taipy or should I just code a custom dialog visual element which satisfies his query?\n\n### Acceptance Criteria\n\n- [ ] If applicable, a new demo code is provided to show the new feature in action.\r\n- [ ] Integration tests exhibiting how the functionality works are added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\nAdding a custom button in the login visual element\n### Description\n\nThis feature request comes from a customer.\r\n\r\nThe customer wants a custom button in the login visual element next to the login button. This would allow him to create a \"Login as guest\" functionality where users could log in without entering credentials\r\n\r\n![image](https://github.com/user-attachments/assets/50301189-99c3-4ecb-afc3-b25c6736507b)\r\n\r\nWhat is the best way to do this? Should this be a feature in Taipy or should I just code a custom dialog visual element which satisfies his query?\n\n### Acceptance Criteria\n\n- [ ] If applicable, a new demo code is provided to show the new feature in action.\r\n- [ ] Integration tests exhibiting how the functionality works are added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "A workaround using [dialog](https://docs.taipy.io/en/latest/refmans/gui/viselements/generic/dialog/):\r\n\r\n![image](https://github.com/user-attachments/assets/d0fd8e19-2c1d-44da-8569-9d51bfd20cec)\r\n\r\n```python\r\nimport os\r\n\r\nfrom taipy.gui import Gui, notify\r\nimport taipy.gui.builder as tgb\r\n\r\nfrom taipy.gui import notify\r\nimport taipy.gui.builder as tgb\r\nfrom taipy.auth import hash_taipy_password, Credentials, Authenticator\r\nimport taipy.enterprise.gui as tp_enterprise\r\n\r\n\r\nos.environ[\"TAIPY_AUTH_HASH\"] = \"taipy\"\r\n\r\nusername = \"login\"\r\n\r\ncredentials = Credentials(user_name=username, roles=[])\r\n\r\npasswords = {\r\n    \"Florian\": hash_taipy_password(\"mp153ap63\"),\r\n    \"Alexandre\": hash_taipy_password(\"m4a1m995\"),\r\n}\r\n\r\nroles = {\r\n    \"Florian\": [\"admin\", \"TAIPY_ADMIN\"],\r\n    \"Alexandre\": [\"TAIPY_READER\"],\r\n}\r\n\r\nauthenticator = Authenticator(protocol=\"taipy\", roles=roles, passwords=passwords)\r\n\r\nusername = \"\"\r\npassword = \"\"\r\n\r\nlogin_dialog = True\r\n\r\n\r\ndef login(state):\r\n    try:\r\n        state.credentials = tp_enterprise.login(state, state.username, state.password)\r\n        notify(state, \"success\", f\"Logged in as {state.username}...\")\r\n        state.login_dialog = False\r\n    except Exception as e:\r\n        notify(state, \"error\", f\"Login failed: {e}\")\r\n        print(f\"Login exception: {e}\")\r\n\r\n\r\ndef guest_login(state):\r\n    notify(state, \"success\", \"Logged in as Guest...\")\r\n    state.login_dialog = False\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.dialog(\"{login_dialog}\", title=\"Welcome!\"):\r\n        tgb.input(\"{username}\", label=\"Username\")\r\n        tgb.input(\"{password}\", label=\"Password\", password=True, on_action=login)\r\n        tgb.html(\"hr\")\r\n        with tgb.layout(\"1 1 1\"):\r\n            with tgb.part():\r\n                tgb.text(\"\")\r\n            with tgb.part():\r\n                tgb.button(\"Guest Login\", class_name=\"fullwidth\", on_action=guest_login)\r\n            with tgb.part():\r\n                tgb.button(\"Login\", class_name=\"fullwidth plain\", on_action=login)\r\n\r\nGui(page).run()\r\n```\nA workaround using [dialog](https://docs.taipy.io/en/latest/refmans/gui/viselements/generic/dialog/):\r\n\r\n![image](https://github.com/user-attachments/assets/d0fd8e19-2c1d-44da-8569-9d51bfd20cec)\r\n\r\n```python\r\nimport os\r\n\r\nfrom taipy.gui import Gui, notify\r\nimport taipy.gui.builder as tgb\r\n\r\nfrom taipy.gui import notify\r\nimport taipy.gui.builder as tgb\r\nfrom taipy.auth import hash_taipy_password, Credentials, Authenticator\r\nimport taipy.enterprise.gui as tp_enterprise\r\n\r\n\r\nos.environ[\"TAIPY_AUTH_HASH\"] = \"taipy\"\r\n\r\nusername = \"login\"\r\n\r\ncredentials = Credentials(user_name=username, roles=[])\r\n\r\npasswords = {\r\n    \"Florian\": hash_taipy_password(\"mp153ap63\"),\r\n    \"Alexandre\": hash_taipy_password(\"m4a1m995\"),\r\n}\r\n\r\nroles = {\r\n    \"Florian\": [\"admin\", \"TAIPY_ADMIN\"],\r\n    \"Alexandre\": [\"TAIPY_READER\"],\r\n}\r\n\r\nauthenticator = Authenticator(protocol=\"taipy\", roles=roles, passwords=passwords)\r\n\r\nusername = \"\"\r\npassword = \"\"\r\n\r\nlogin_dialog = True\r\n\r\n\r\ndef login(state):\r\n    try:\r\n        state.credentials = tp_enterprise.login(state, state.username, state.password)\r\n        notify(state, \"success\", f\"Logged in as {state.username}...\")\r\n        state.login_dialog = False\r\n    except Exception as e:\r\n        notify(state, \"error\", f\"Login failed: {e}\")\r\n        print(f\"Login exception: {e}\")\r\n\r\n\r\ndef guest_login(state):\r\n    notify(state, \"success\", \"Logged in as Guest...\")\r\n    state.login_dialog = False\r\n\r\n\r\nwith tgb.Page() as page:\r\n    with tgb.dialog(\"{login_dialog}\", title=\"Welcome!\"):\r\n        tgb.input(\"{username}\", label=\"Username\")\r\n        tgb.input(\"{password}\", label=\"Password\", password=True, on_action=login)\r\n        tgb.html(\"hr\")\r\n        with tgb.layout(\"1 1 1\"):\r\n            with tgb.part():\r\n                tgb.text(\"\")\r\n            with tgb.part():\r\n                tgb.button(\"Guest Login\", class_name=\"fullwidth\", on_action=guest_login)\r\n            with tgb.part():\r\n                tgb.button(\"Login\", class_name=\"fullwidth plain\", on_action=login)\r\n\r\nGui(page).run()\r\n```", "created_at": "2024-12-17T16:13:51Z"}
{"repo": "Avaiga/taipy", "pull_number": 2342, "instance_id": "Avaiga__taipy-2342", "issue_numbers": ["2152", "2152"], "base_commit": "1a4b844baff70e1eb4afdffb00ab97777f7b76d9", "patch": "diff --git a/taipy/gui_core/_context.py b/taipy/gui_core/_context.py\nindex 0823b8b10d..1d8cb6cc77 100644\n--- a/taipy/gui_core/_context.py\n+++ b/taipy/gui_core/_context.py\n@@ -68,6 +68,7 @@\n     _GuiCoreScenarioProperties,\n     _invoke_action,\n )\n+from ._utils import _ClientStatus\n from .filters import CustomScenarioFilter\n \n \n@@ -89,7 +90,7 @@ def __init__(self, gui: Gui) -> None:\n         self.data_nodes_by_owner: t.Optional[t.Dict[t.Optional[str], t.List[DataNode]]] = None\n         self.scenario_configs: t.Optional[t.List[t.Tuple[str, str]]] = None\n         self.jobs_list: t.Optional[t.List[Job]] = None\n-        self.client_submission: t.Dict[str, SubmissionStatus] = {}\n+        self.client_submission: t.Dict[str, _ClientStatus] = {}\n         # register to taipy core notification\n         reg_id, reg_queue = Notifier.register()\n         # locks\n@@ -161,8 +162,8 @@ def submission_status_callback(self, submission_id: t.Optional[str] = None, even\n         payload: t.Optional[t.Dict[str, t.Any]] = None\n         client_id: t.Optional[str] = None\n         try:\n-            last_status = self.client_submission.get(submission_id)\n-            if not last_status:\n+            last_client_status = self.client_submission.get(submission_id)\n+            if not last_client_status:\n                 return\n \n             submission = t.cast(Submission, core_get(submission_id))\n@@ -187,7 +188,7 @@ def submission_status_callback(self, submission_id: t.Optional[str] = None, even\n                         )\n                     payload.update(tasks=running_tasks)\n \n-                    if last_status is not new_status:\n+                    if last_client_status.submission_status is not new_status:\n                         # callback\n                         submission_name = submission.properties.get(\"on_submission\")\n                         if submission_name:\n@@ -213,7 +214,7 @@ def submission_status_callback(self, submission_id: t.Optional[str] = None, even\n                 ):\n                     self.client_submission.pop(submission_id, None)\n                 else:\n-                    self.client_submission[submission_id] = new_status\n+                    last_client_status.submission_status = new_status\n \n         except Exception as e:\n             _warn(f\"Submission ({submission_id}) is not available\", e)\n@@ -617,11 +618,10 @@ def submit_entity(self, state: State, id: str, payload: t.Dict[str, str]):\n                     client_id=self.gui._get_client_id(),\n                     module_context=self.gui._get_locals_context(),\n                 )\n+                client_status = _ClientStatus(self.gui._get_client_id(), None)\n                 with self.submissions_lock:\n-                    self.client_submission[submission_entity.id] = submission_entity.submission_status\n+                    self.client_submission[submission_entity.id] = client_status\n                 if Config.core.mode == \"development\":\n-                    with self.submissions_lock:\n-                        self.client_submission[submission_entity.id] = SubmissionStatus.SUBMITTED\n                     self.submission_status_callback(submission_entity.id)\n                 _GuiCoreContext.__assign_var(state, error_var, \"\")\n         except Exception as e:\ndiff --git a/taipy/gui_core/_utils.py b/taipy/gui_core/_utils.py\nnew file mode 100644\nindex 0000000000..27fe9f09f1\n--- /dev/null\n+++ b/taipy/gui_core/_utils.py\n@@ -0,0 +1,20 @@\n+# Copyright 2021-2024 Avaiga Private Limited\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+# the License. You may obtain a copy of the License at\n+#\n+#        http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+# an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+# specific language governing permissions and limitations under the License.\n+import typing as t\n+from dataclasses import dataclass\n+\n+from taipy.core.submission.submission_status import SubmissionStatus\n+\n+\n+@dataclass\n+class _ClientStatus:\n+    client_id: t.Optional[str]\n+    submission_status: t.Optional[SubmissionStatus]\n", "test_patch": "diff --git a/tests/gui_core/test_context_is_readable.py b/tests/gui_core/test_context_is_readable.py\nindex 29242610ec..389dcf747b 100644\n--- a/tests/gui_core/test_context_is_readable.py\n+++ b/tests/gui_core/test_context_is_readable.py\n@@ -25,10 +25,11 @@\n from taipy.core.job._job_manager_factory import _JobManagerFactory\n from taipy.core.scenario._scenario_manager_factory import _ScenarioManagerFactory\n from taipy.core.submission._submission_manager_factory import _SubmissionManagerFactory\n-from taipy.core.submission.submission import Submission, SubmissionStatus\n+from taipy.core.submission.submission import Submission\n from taipy.core.task._task_manager_factory import _TaskManagerFactory\n from taipy.gui import Gui\n from taipy.gui_core._context import _GuiCoreContext\n+from taipy.gui_core._utils import _ClientStatus\n \n a_cycle = Cycle(Frequency.DAILY, {}, datetime.now(), datetime.now(), datetime.now(), id=CycleId(\"CYCLE_id\"))\n a_scenario = Scenario(\"scenario_config_id\", None, {}, sequences={\"sequence\": {}})\n@@ -201,7 +202,7 @@ def test_submission_status_callback(self):\n             def sub_cb():\n                 return True\n \n-            gui_core_context.client_submission[a_submission.id] = SubmissionStatus.UNDEFINED\n+            gui_core_context.client_submission[a_submission.id] = _ClientStatus(\"client_id\", None)\n             gui_core_context.submission_status_callback(a_submission.id)\n             mockget.assert_called()\n             found = False\n", "problem_statement": "[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "Hmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n\nI can see it is closed. \r\nIt should be backported to release/4.0. Did I miss the PR for the backport, or is it planned for the future?\r\n@toan-quach @FredLL-Avaiga \nI guess @FabienLelaquais has backported this ?\nAll right. Thx!\nHmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n\nI can see it is closed. \r\nIt should be backported to release/4.0. Did I miss the PR for the backport, or is it planned for the future?\r\n@toan-quach @FredLL-Avaiga \nI guess @FabienLelaquais has backported this ?\nAll right. Thx!", "created_at": "2024-12-17T08:36:47Z"}
{"repo": "Avaiga/taipy", "pull_number": 2339, "instance_id": "Avaiga__taipy-2339", "issue_numbers": ["2293", "2293"], "base_commit": "31a6b968d7183e0848227d7f3397cb714569c085", "patch": "diff --git a/frontend/taipy-gui/src/components/Taipy/Chart.tsx b/frontend/taipy-gui/src/components/Taipy/Chart.tsx\nindex acdf280743..6e323292a0 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Chart.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Chart.tsx\n@@ -280,8 +280,8 @@ const updateArrays = (sel: number[][], val: number[], idx: number) => {\n     return sel;\n };\n \n-const getDataKey = (columns: Record<string, ColumnDesc>, decimators?: string[]): [string[], string] => {\n-    const backCols = Object.values(columns).map((col) => col.dfid);\n+const getDataKey = (columns?: Record<string, ColumnDesc>, decimators?: string[]): [string[], string] => {\n+    const backCols = columns ? Object.values(columns).map((col) => col.dfid) : [];\n     return [backCols, backCols.join(\"-\") + (decimators ? `--${decimators.join(\"\")}` : \"\")];\n };\n \ndiff --git a/frontend/taipy-gui/src/components/Taipy/Dialog.spec.tsx b/frontend/taipy-gui/src/components/Taipy/Dialog.spec.tsx\nindex 97e259b0fb..2a718e2776 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Dialog.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Dialog.spec.tsx\n@@ -44,7 +44,7 @@ describe(\"Dialog Component\", () => {\n         const { getByText } = render(\n             <HelmetProvider>\n                 <Dialog title=\"Dialog-Test-Title\" page=\"page\" open={true} />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         const elt = getByText(\"Dialog-Test-Title\");\n         expect(elt.tagName).toBe(\"H2\");\n@@ -54,7 +54,7 @@ describe(\"Dialog Component\", () => {\n         const { queryAllByText } = render(\n             <HelmetProvider>\n                 <Dialog title=\"Dialog-Test-Title\" page=\"page\" open={false} />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         expect(queryAllByText(\"Dialog-Test-Title\")).toHaveLength(0);\n         const divs = document.getElementsByTagName(\"div\");\n@@ -65,7 +65,7 @@ describe(\"Dialog Component\", () => {\n         const wrapper = render(\n             <HelmetProvider>\n                 <Dialog title=\"Dialog-Test-Title\" page=\"page\" open={true} className=\"taipy-dialog\" />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         const elt = document.querySelector(\".MuiDialog-root\");\n         expect(elt).toHaveClass(\"taipy-dialog\");\n@@ -79,7 +79,7 @@ describe(\"Dialog Component\", () => {\n                     defaultOpen=\"true\"\n                     open={undefined as unknown as boolean}\n                 />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         getByText(\"Dialog-Test-Title\");\n     });\n@@ -92,7 +92,7 @@ describe(\"Dialog Component\", () => {\n                     defaultOpen=\"true\"\n                     open={undefined as unknown as boolean}\n                 />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         expect(getAllByRole(\"button\")).toHaveLength(1);\n     });\n@@ -106,7 +106,7 @@ describe(\"Dialog Component\", () => {\n                     open={undefined as unknown as boolean}\n                     labels={JSON.stringify([\"toto\"])}\n                 />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         expect(getAllByRole(\"button\")).toHaveLength(2);\n     });\n@@ -120,7 +120,7 @@ describe(\"Dialog Component\", () => {\n                     open={undefined as unknown as boolean}\n                     labels={JSON.stringify([\"toto\", \"titi\", \"toto\"])}\n                 />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         expect(getAllByRole(\"button\")).toHaveLength(4);\n     });\n@@ -134,7 +134,7 @@ describe(\"Dialog Component\", () => {\n                     active={false}\n                     labels={JSON.stringify([\"testValidate\", \"testCancel\"])}\n                 />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         expect(getByText(\"testValidate\")).toBeDisabled();\n         expect(getByText(\"testCancel\")).toBeDisabled();\n@@ -148,7 +148,7 @@ describe(\"Dialog Component\", () => {\n                     open={true}\n                     labels={JSON.stringify([\"testValidate\", \"testCancel\"])}\n                 />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         expect(getByText(\"testValidate\")).not.toBeDisabled();\n         expect(getByText(\"testCancel\")).not.toBeDisabled();\n@@ -163,7 +163,7 @@ describe(\"Dialog Component\", () => {\n                     active={true}\n                     labels={JSON.stringify([\"testValidate\", \"testCancel\"])}\n                 />\n-            </HelmetProvider>,\n+            </HelmetProvider>\n         );\n         expect(getByText(\"testValidate\")).not.toBeDisabled();\n         expect(getByText(\"testCancel\")).not.toBeDisabled();\n@@ -183,7 +183,7 @@ describe(\"Dialog Component\", () => {\n                         onAction=\"testValidateAction\"\n                     />\n                 </HelmetProvider>\n-            </TaipyContext.Provider>,\n+            </TaipyContext.Provider>\n         );\n         await userEvent.click(getByTitle(\"Close\"));\n         expect(dispatch).toHaveBeenLastCalledWith({\n@@ -208,7 +208,7 @@ describe(\"Dialog Component\", () => {\n                         onAction=\"testValidateAction\"\n                     />\n                 </HelmetProvider>\n-            </TaipyContext.Provider>,\n+            </TaipyContext.Provider>\n         );\n         await userEvent.click(getByText(\"testValidate\"));\n         expect(dispatch).toHaveBeenLastCalledWith({\n@@ -233,7 +233,7 @@ describe(\"Dialog Component\", () => {\n                         onAction=\"testValidateAction\"\n                     />\n                 </HelmetProvider>\n-            </TaipyContext.Provider>,\n+            </TaipyContext.Provider>\n         );\n         await userEvent.click(getByText(\"Another One\"));\n         expect(dispatch).toHaveBeenLastCalledWith({\n@@ -259,13 +259,28 @@ describe(\"Dialog Component\", () => {\n         expect(computedStyles.width).not.toBe(\"500px\");\n         expect(computedStyles.height).not.toBe(\"300px\");\n     });\n-    it(\"calls localAction prop when handleAction is triggered\", () => {\n+    it(\"calls localAction prop when handleAction is triggered\", async () => {\n         const localActionMock = jest.fn();\n         const { getByLabelText } = render(\n-            <Dialog id=\"test-dialog\" title=\"Test Dialog\" localAction={localActionMock} open={true} />,\n+            <Dialog id=\"test-dialog\" title=\"Test Dialog\" localAction={localActionMock} open={true} />\n         );\n         const closeButton = getByLabelText(\"close\");\n-        fireEvent.click(closeButton);\n+        await fireEvent.click(closeButton);\n+        expect(localActionMock).toHaveBeenCalledWith(-1);\n+    });\n+    it(\"shows a popup\", async () => {\n+        const localActionMock = jest.fn();\n+        const { getByText } = render(\n+            <>\n+                <Dialog id=\"test-dialog\" title=\"\" open={true} popup={true} localAction={localActionMock}>\n+                    Hello\n+                </Dialog>\n+                <div>Outside</div>\n+            </>\n+        );\n+        const Hello = getByText(\"Hello\");\n+        const Outside = getByText(\"Outside\");\n+        await userEvent.keyboard(\"{Escape}\")\n         expect(localActionMock).toHaveBeenCalledWith(-1);\n     });\n });\ndiff --git a/frontend/taipy-gui/src/components/Taipy/Dialog.tsx b/frontend/taipy-gui/src/components/Taipy/Dialog.tsx\nindex 00ea80d9cb..9d39616464 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Dialog.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Dialog.tsx\n@@ -17,10 +17,11 @@ import DialogTitle from \"@mui/material/DialogTitle\";\n import MuiDialog from \"@mui/material/Dialog\";\n import DialogActions from \"@mui/material/DialogActions\";\n import DialogContent from \"@mui/material/DialogContent\";\n-import Tooltip from \"@mui/material/Tooltip\";\n import IconButton from \"@mui/material/IconButton\";\n-import CloseIcon from \"@mui/icons-material/Close\";\n+import Popover, { PopoverOrigin } from \"@mui/material/Popover\";\n+import Tooltip from \"@mui/material/Tooltip\";\n import { SxProps, Theme } from \"@mui/system\";\n+import CloseIcon from \"@mui/icons-material/Close\";\n \n import { createSendActionNameAction } from \"../../context/taipyReducers\";\n import TaipyRendered from \"../pages/TaipyRendered\";\n@@ -41,6 +42,9 @@ interface DialogProps extends TaipyActiveProps {\n     height?: string | number;\n     width?: string | number;\n     localAction?: (idx: number) => void;\n+    refId?: string;\n+    defaultRefId?: string;\n+    popup?: boolean;\n }\n \n const closeSx: SxProps<Theme> = {\n@@ -51,6 +55,29 @@ const closeSx: SxProps<Theme> = {\n };\n const titleSx = { m: 0, p: 2, display: \"flex\", paddingRight: \"0.1em\" };\n \n+const virtualElt = {\n+    nodeType: 1,\n+    getBoundingClientRect: () => {\n+        const x = (document.body.offsetWidth - document.body.offsetLeft) / 2;\n+        const y = (document.body.offsetHeight - document.body.offsetTop) / 2;\n+        return {\n+            x,\n+            y,\n+            width: 0,\n+            height: 0,\n+            top: y,\n+            left: x,\n+            bottom: y,\n+            right: x,\n+        };\n+    },\n+} as Element;\n+\n+const popoverAnchor: PopoverOrigin = {\n+    vertical: \"center\",\n+    horizontal: \"center\",\n+};\n+\n const Dialog = (props: DialogProps) => {\n     const {\n         id,\n@@ -64,6 +91,7 @@ const Dialog = (props: DialogProps) => {\n         partial,\n         width,\n         height,\n+        popup = false,\n     } = props;\n     const dispatch = useDispatch();\n     const module = useModule();\n@@ -71,6 +99,7 @@ const Dialog = (props: DialogProps) => {\n     const className = useClassNames(props.libClassName, props.dynamicClassName, props.className);\n     const active = useDynamicProperty(props.active, props.defaultActive, true);\n     const hover = useDynamicProperty(props.hoverText, props.defaultHoverText, undefined);\n+    const refId = useDynamicProperty(props.refId, props.defaultRefId, undefined);\n \n     const handleAction = useCallback(\n         (evt: MouseEvent<HTMLElement>) => {\n@@ -110,7 +139,22 @@ const Dialog = (props: DialogProps) => {\n         return {};\n     }, [width, height]);\n \n-    return (\n+    const getAnchorEl = useCallback(() => (refId && document.querySelector(refId)) || virtualElt, [refId]);\n+\n+    return popup ? (\n+        <Popover\n+            id={id}\n+            onClose={handleAction}\n+            open={open === undefined ? defaultOpen === \"true\" || defaultOpen === true : !!open}\n+            className={`${className} ${getComponentClassName(props.children)}`}\n+            sx={paperProps.sx}\n+            anchorEl={getAnchorEl}\n+            anchorOrigin={popoverAnchor}\n+        >\n+            {page ? <TaipyRendered path={\"/\" + page} partial={partial} fromBlock={true} /> : null}\n+            {props.children}\n+        </Popover>\n+    ) : (\n         <MuiDialog\n             id={id}\n             onClose={handleAction}\n@@ -133,9 +177,9 @@ const Dialog = (props: DialogProps) => {\n             </DialogContent>\n             {labels.length ? (\n                 <DialogActions>\n-                    {labels.map((l, i) => (\n+                    {labels.map((label, i) => (\n                         <Button onClick={handleAction} disabled={!active} key={\"label\" + i} data-idx={i}>\n-                            {l}\n+                            {label}\n                         </Button>\n                     ))}\n                 </DialogActions>\ndiff --git a/taipy/gui/_renderers/factory.py b/taipy/gui/_renderers/factory.py\nindex e8c84e3569..2deb62522e 100644\n--- a/taipy/gui/_renderers/factory.py\n+++ b/taipy/gui/_renderers/factory.py\n@@ -215,6 +215,8 @@ class _Factory:\n                 (\"width\", PropertyType.string_or_number),\n                 (\"height\", PropertyType.string_or_number),\n                 (\"hover_text\", PropertyType.dynamic_string),\n+                (\"ref_id\", PropertyType.dynamic_string),\n+                (\"popup\", PropertyType.boolean),\n             ]\n         )\n         ._set_propagate(),\ndiff --git a/taipy/gui/viselements.json b/taipy/gui/viselements.json\nindex 25adeafe92..b7581a0569 100644\n--- a/taipy/gui/viselements.json\n+++ b/taipy/gui/viselements.json\n@@ -2013,7 +2013,8 @@\n                         \"name\": \"height\",\n                         \"type\": \"Union[str,int,float]\",\n                         \"doc\": \"The height of the dialog, in CSS units.\"\n-                    }\n+                    },\n+                    {\"name\": \"ref_id\", \"type\": \"dynamic(str)\", \"doc\": \"TODO an id or a query selector that allows to identify an HTML component that would be the anchor for the dialog.\"}\n                 ]\n             }\n         ],\n", "test_patch": "", "problem_statement": "Have part or dialog centered to the element clicked\n### Description\r\n\r\nHere, I have clicked on an icon and I have a dropdown menu of labels next to where I clicked:\r\n![image](https://github.com/user-attachments/assets/025d60d6-8c2e-47ab-a534-74ac68ddc239)\r\n\r\nHere, I have clicked on icon and I see a dialog/part showing up next to where I clicked:\r\n\r\n![image](https://github.com/user-attachments/assets/0bba233b-f0c6-45f1-bd4a-33d6b99bf64c)\r\n\r\n\r\nI want to do that generically to put anything in this part. If I click somewhere else, this dialog should disappear. \r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] If applicable, a new demo code is provided to show the new feature in action.\r\n- [ ] Integration tests exhibiting how the functionality works are added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\nHave part or dialog centered to the element clicked\n### Description\r\n\r\nHere, I have clicked on an icon and I have a dropdown menu of labels next to where I clicked:\r\n![image](https://github.com/user-attachments/assets/025d60d6-8c2e-47ab-a534-74ac68ddc239)\r\n\r\nHere, I have clicked on icon and I see a dialog/part showing up next to where I clicked:\r\n\r\n![image](https://github.com/user-attachments/assets/0bba233b-f0c6-45f1-bd4a-33d6b99bf64c)\r\n\r\n\r\nI want to do that generically to put anything in this part. If I click somewhere else, this dialog should disappear. \r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] If applicable, a new demo code is provided to show the new feature in action.\r\n- [ ] Integration tests exhibiting how the functionality works are added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "it'a dialog then\nBut you want to position it relatively to another component.\nWould it be acceptable to provide the id of the other component ? (would need to be defined in the other comp and dynamically in the dialog)\nThis relates slightly to another issue: [#2252](https://github.com/Avaiga/taipy/issues/2252). By the way, a contributor has proposed to help with it.\n@FredLL-Avaiga That works for me. What do you mean by dynamically?\nI mean that you can change the id to which the dialog is related.\r\nMaybe we should make it a selector so that you can relate to any component (while still supporting the id for simplicity).\nOk, I agree that the id should be dynamic. Now, I don't understand the part about the selector \ud83d\ude06 \nThe id is a string that allows to locate a component on a page and position a dialog based on it.\r\nthis string could also be treated as a CSS selector to locate components that don't have an id.\nGot it, thanks!\nHow about this ?\nhttps://github.com/user-attachments/assets/a23cc134-126f-4a82-9fbd-33f97d8179a1\n\nfrom \n\n```py\nfrom taipy.gui import Gui, State\n\nref_id = None\npop_open = False\nval = None\n\ndef on_action(state: State, id: str):\n  if id == \"dialog\":\n    state.ref_id = None\n    state.pop_open = False\n  elif id:\n    state.ref_id = f\"#{id}\"\n    state.pop_open = True\n  else:\n      state.val = state.val +1 if state.val is not None else 1\n\npage = \"\"\"\n<|button 1 |button|id=id1|>\n<|button 2|button|id=id2|>\n\n\n<|button |button|id=id3|>\n<|button |button|id=id4|>\n<|button |button|id=id5|>\n\n\n<|button |button|id=id6|>\n<|button |button|id=id7|>\n<|button |button|id=id8|>\n<|button |button|id=id9|>\n\n\n<|button |button|id=id10|>\n<|button |button|id=id11|>\n\n<|{pop_open}|dialog|popup|ref_id={ref_id}|id=dialog|\n<|inside the popup|button|>\n\n<|{val}|>\n|>\n\"\"\"\n\nif __name__ == \"__main__\":\n  Gui(page).run(title=\"2293 popup\")\n\n```\nit'a dialog then\nBut you want to position it relatively to another component.\nWould it be acceptable to provide the id of the other component ? (would need to be defined in the other comp and dynamically in the dialog)\nThis relates slightly to another issue: [#2252](https://github.com/Avaiga/taipy/issues/2252). By the way, a contributor has proposed to help with it.\n@FredLL-Avaiga That works for me. What do you mean by dynamically?\nI mean that you can change the id to which the dialog is related.\r\nMaybe we should make it a selector so that you can relate to any component (while still supporting the id for simplicity).\nOk, I agree that the id should be dynamic. Now, I don't understand the part about the selector \ud83d\ude06 \nThe id is a string that allows to locate a component on a page and position a dialog based on it.\r\nthis string could also be treated as a CSS selector to locate components that don't have an id.\nGot it, thanks!\nHow about this ?\nhttps://github.com/user-attachments/assets/a23cc134-126f-4a82-9fbd-33f97d8179a1\n\nfrom \n\n```py\nfrom taipy.gui import Gui, State\n\nref_id = None\npop_open = False\nval = None\n\ndef on_action(state: State, id: str):\n  if id == \"dialog\":\n    state.ref_id = None\n    state.pop_open = False\n  elif id:\n    state.ref_id = f\"#{id}\"\n    state.pop_open = True\n  else:\n      state.val = state.val +1 if state.val is not None else 1\n\npage = \"\"\"\n<|button 1 |button|id=id1|>\n<|button 2|button|id=id2|>\n\n\n<|button |button|id=id3|>\n<|button |button|id=id4|>\n<|button |button|id=id5|>\n\n\n<|button |button|id=id6|>\n<|button |button|id=id7|>\n<|button |button|id=id8|>\n<|button |button|id=id9|>\n\n\n<|button |button|id=id10|>\n<|button |button|id=id11|>\n\n<|{pop_open}|dialog|popup|ref_id={ref_id}|id=dialog|\n<|inside the popup|button|>\n\n<|{val}|>\n|>\n\"\"\"\n\nif __name__ == \"__main__\":\n  Gui(page).run(title=\"2293 popup\")\n\n```", "created_at": "2024-12-16T16:10:18Z"}
{"repo": "Avaiga/taipy", "pull_number": 2328, "instance_id": "Avaiga__taipy-2328", "issue_numbers": ["2298"], "base_commit": "cacd40011ebb22c0462bb5610fe63c8692a92b67", "patch": "diff --git a/taipy/core/config/checkers/_data_node_config_checker.py b/taipy/core/config/checkers/_data_node_config_checker.py\nindex 823da79069..e7f35ab66b 100644\n--- a/taipy/core/config/checkers/_data_node_config_checker.py\n+++ b/taipy/core/config/checkers/_data_node_config_checker.py\n@@ -10,7 +10,7 @@\n # specific language governing permissions and limitations under the License.\n \n from datetime import timedelta\n-from typing import Any, Callable, Dict, List, Tuple, cast\n+from typing import Callable, Dict, List, cast\n \n from taipy.common.config._config import _Config\n from taipy.common.config.checker._checkers._config_checker import _ConfigChecker\n@@ -23,27 +23,6 @@\n \n \n class _DataNodeConfigChecker(_ConfigChecker):\n-    _PROPERTIES_TYPES: Dict[str, List[Tuple[Any, List[str]]]] = {\n-        DataNodeConfig._STORAGE_TYPE_VALUE_GENERIC: [\n-            (\n-                Callable,\n-                [\n-                    DataNodeConfig._OPTIONAL_READ_FUNCTION_GENERIC_PROPERTY,\n-                    DataNodeConfig._OPTIONAL_WRITE_FUNCTION_GENERIC_PROPERTY,\n-                ],\n-            )\n-        ],\n-        DataNodeConfig._STORAGE_TYPE_VALUE_SQL: [\n-            (\n-                Callable,\n-                [\n-                    DataNodeConfig._REQUIRED_WRITE_QUERY_BUILDER_SQL_PROPERTY,\n-                    DataNodeConfig._OPTIONAL_APPEND_QUERY_BUILDER_SQL_PROPERTY,\n-                ],\n-            ),\n-        ],\n-    }\n-\n     def __init__(self, config: _Config, collector: IssueCollector):\n         super().__init__(config, collector)\n \n@@ -67,7 +46,7 @@ def _check(self) -> IssueCollector:\n             self._check_scope(data_node_config_id, data_node_config)\n             self._check_validity_period(data_node_config_id, data_node_config)\n             self._check_required_properties(data_node_config_id, data_node_config)\n-            self._check_class_type(data_node_config_id, data_node_config)\n+            self._check_property_types(data_node_config_id, data_node_config)\n             self._check_generic_read_write_fct_and_args(data_node_config_id, data_node_config)\n             self._check_exposed_type(data_node_config_id, data_node_config)\n         return self._collector\n@@ -217,25 +196,26 @@ def _check_generic_read_write_fct_and_args(self, data_node_config_id: str, data_\n                     f\"DataNodeConfig `{data_node_config_id}` must be populated with a Callable function.\",\n                 )\n \n-    def _check_class_type(self, data_node_config_id: str, data_node_config: DataNodeConfig):\n-        if data_node_config.storage_type in self._PROPERTIES_TYPES.keys():\n-            for class_type, prop_keys in self._PROPERTIES_TYPES[data_node_config.storage_type]:\n-                for prop_key in prop_keys:\n-                    prop_value = data_node_config.properties.get(prop_key) if data_node_config.properties else None\n-                    if prop_value and not isinstance(prop_value, class_type):\n-                        self._error(\n-                            prop_key,\n-                            prop_value,\n-                            f\"`{prop_key}` of DataNodeConfig `{data_node_config_id}` must be\"\n-                            f\" populated with a {'Callable' if class_type == Callable else class_type.__name__}.\",\n-                        )\n-                    if class_type == Callable and callable(prop_value) and prop_value.__name__ == \"<lambda>\":\n-                        self._error(\n-                            prop_key,\n-                            prop_value,\n-                            f\"`{prop_key}` of DataNodeConfig `{data_node_config_id}` must be\"\n-                            f\" populated with a serializable Callable function but not a lambda.\",\n-                        )\n+    def _check_property_types(self, data_node_config_id: str, data_node_config: DataNodeConfig):\n+        if property_types := data_node_config._PROPERTIES_TYPES.get(data_node_config.storage_type):\n+            for prop_key, prop_type in property_types.items():\n+                prop_value = data_node_config.properties.get(prop_key) if data_node_config.properties else None\n+\n+                if prop_value and not isinstance(prop_value, prop_type):\n+                    self._error(\n+                        prop_key,\n+                        prop_value,\n+                        f\"`{prop_key}` of DataNodeConfig `{data_node_config_id}` must be\"\n+                        f\" populated with a {prop_type}.\",\n+                    )\n+\n+                if prop_type == Callable and callable(prop_value) and prop_value.__name__ == \"<lambda>\":\n+                    self._error(\n+                        prop_key,\n+                        prop_value,\n+                        f\"`{prop_key}` of DataNodeConfig `{data_node_config_id}` must be\"\n+                        f\" populated with a serializable typing.Callable function but not a lambda.\",\n+                    )\n \n     def _check_exposed_type(self, data_node_config_id: str, data_node_config: DataNodeConfig):\n         if not isinstance(data_node_config.exposed_type, str):\ndiff --git a/taipy/core/config/data_node_config.py b/taipy/core/config/data_node_config.py\nindex 8edc6ce171..abf6293da7 100644\n--- a/taipy/core/config/data_node_config.py\n+++ b/taipy/core/config/data_node_config.py\n@@ -38,7 +38,7 @@ class DataNodeConfig(Section):\n     \"\"\"\n \n     name = \"DATA_NODE\"\n-\n+    _ALL_TYPES = (str, int, float, bool, list, dict, tuple, set, type(None), callable)\n     _STORAGE_TYPE_KEY = \"storage_type\"\n     _STORAGE_TYPE_VALUE_PICKLE = \"pickle\"\n     _STORAGE_TYPE_VALUE_SQL_TABLE = \"sql_table\"\n@@ -150,6 +150,99 @@ class DataNodeConfig(Section):\n     _OPTIONAL_AWS_S3_GET_OBJECT_PARAMETERS_PROPERTY = \"aws_s3_get_object_parameters\"\n     _OPTIONAL_AWS_S3_PUT_OBJECT_PARAMETERS_PROPERTY = \"aws_s3_put_object_parameters\"\n \n+    _PROPERTIES_TYPES: Dict[str, Dict[str, Any]] = {\n+        _STORAGE_TYPE_VALUE_GENERIC: {\n+            _OPTIONAL_READ_FUNCTION_GENERIC_PROPERTY: Callable,\n+            _OPTIONAL_WRITE_FUNCTION_GENERIC_PROPERTY: Callable,\n+            _OPTIONAL_READ_FUNCTION_ARGS_GENERIC_PROPERTY: list,\n+            _OPTIONAL_WRITE_FUNCTION_ARGS_GENERIC_PROPERTY: list,\n+        },\n+        _STORAGE_TYPE_VALUE_SQL: {\n+            _REQUIRED_DB_NAME_SQL_PROPERTY: str,\n+            _REQUIRED_DB_ENGINE_SQL_PROPERTY: str,\n+            _REQUIRED_READ_QUERY_SQL_PROPERTY: str,\n+            _REQUIRED_WRITE_QUERY_BUILDER_SQL_PROPERTY: Callable,\n+            _OPTIONAL_APPEND_QUERY_BUILDER_SQL_PROPERTY: Callable,\n+            _OPTIONAL_DB_USERNAME_SQL_PROPERTY: str,\n+            _OPTIONAL_DB_PASSWORD_SQL_PROPERTY: str,\n+            _OPTIONAL_HOST_SQL_PROPERTY: str,\n+            _OPTIONAL_PORT_SQL_PROPERTY: int,\n+            _OPTIONAL_DRIVER_SQL_PROPERTY: str,\n+            _OPTIONAL_FOLDER_PATH_SQLITE_PROPERTY: str,\n+            _OPTIONAL_FILE_EXTENSION_SQLITE_PROPERTY: str,\n+            _OPTIONAL_DB_EXTRA_ARGS_SQL_PROPERTY: dict,\n+            _OPTIONAL_EXPOSED_TYPE_SQL_PROPERTY: (str, Callable),\n+        },\n+        _STORAGE_TYPE_VALUE_SQL_TABLE: {\n+            _REQUIRED_DB_NAME_SQL_PROPERTY: str,\n+            _REQUIRED_DB_ENGINE_SQL_PROPERTY: str,\n+            _REQUIRED_TABLE_NAME_SQL_TABLE_PROPERTY: str,\n+            _OPTIONAL_DB_USERNAME_SQL_PROPERTY: str,\n+            _OPTIONAL_DB_PASSWORD_SQL_PROPERTY: str,\n+            _OPTIONAL_HOST_SQL_PROPERTY: str,\n+            _OPTIONAL_PORT_SQL_PROPERTY: int,\n+            _OPTIONAL_DRIVER_SQL_PROPERTY: str,\n+            _OPTIONAL_FOLDER_PATH_SQLITE_PROPERTY: str,\n+            _OPTIONAL_FILE_EXTENSION_SQLITE_PROPERTY: str,\n+            _OPTIONAL_DB_EXTRA_ARGS_SQL_PROPERTY: dict,\n+            _OPTIONAL_EXPOSED_TYPE_SQL_PROPERTY: (str, Callable),\n+        },\n+        _STORAGE_TYPE_VALUE_CSV: {\n+            _OPTIONAL_DEFAULT_PATH_CSV_PROPERTY: str,\n+            _OPTIONAL_ENCODING_PROPERTY: str,\n+            _OPTIONAL_HAS_HEADER_CSV_PROPERTY: bool,\n+            _OPTIONAL_EXPOSED_TYPE_CSV_PROPERTY: (str, Callable),\n+        },\n+        _STORAGE_TYPE_VALUE_EXCEL: {\n+            _OPTIONAL_DEFAULT_PATH_EXCEL_PROPERTY: str,\n+            _OPTIONAL_HAS_HEADER_EXCEL_PROPERTY: bool,\n+            _OPTIONAL_SHEET_NAME_EXCEL_PROPERTY: (str, list),\n+            _OPTIONAL_EXPOSED_TYPE_EXCEL_PROPERTY: (str, Callable),\n+        },\n+        _STORAGE_TYPE_VALUE_IN_MEMORY: {\n+            _OPTIONAL_DEFAULT_DATA_IN_MEMORY_PROPERTY: _ALL_TYPES,\n+        },\n+        _STORAGE_TYPE_VALUE_PICKLE: {\n+            _OPTIONAL_DEFAULT_PATH_PICKLE_PROPERTY: str,\n+            _OPTIONAL_DEFAULT_DATA_PICKLE_PROPERTY: _ALL_TYPES,\n+        },\n+        _STORAGE_TYPE_VALUE_JSON: {\n+            _OPTIONAL_DEFAULT_PATH_JSON_PROPERTY: str,\n+            _OPTIONAL_ENCODING_PROPERTY: str,\n+            _OPTIONAL_ENCODER_JSON_PROPERTY: json.JSONEncoder,\n+            _OPTIONAL_DECODER_JSON_PROPERTY: json.JSONDecoder,\n+        },\n+        _STORAGE_TYPE_VALUE_PARQUET: {\n+            _OPTIONAL_DEFAULT_PATH_PARQUET_PROPERTY: str,\n+            _OPTIONAL_ENGINE_PARQUET_PROPERTY: str,\n+            _OPTIONAL_COMPRESSION_PARQUET_PROPERTY: str,\n+            _OPTIONAL_READ_KWARGS_PARQUET_PROPERTY: dict,\n+            _OPTIONAL_WRITE_KWARGS_PARQUET_PROPERTY: dict,\n+            _OPTIONAL_EXPOSED_TYPE_PARQUET_PROPERTY: (str, Callable),\n+        },\n+        _STORAGE_TYPE_VALUE_MONGO_COLLECTION: {\n+            _REQUIRED_DB_NAME_MONGO_PROPERTY: str,\n+            _REQUIRED_COLLECTION_NAME_MONGO_PROPERTY: str,\n+            _OPTIONAL_CUSTOM_DOCUMENT_MONGO_PROPERTY: str,\n+            _OPTIONAL_USERNAME_MONGO_PROPERTY: str,\n+            _OPTIONAL_PASSWORD_MONGO_PROPERTY: str,\n+            _OPTIONAL_HOST_MONGO_PROPERTY: str,\n+            _OPTIONAL_PORT_MONGO_PROPERTY: int,\n+            _OPTIONAL_DRIVER_MONGO_PROPERTY: str,\n+            _OPTIONAL_DB_EXTRA_ARGS_MONGO_PROPERTY: dict,\n+        },\n+        _STORAGE_TYPE_VALUE_S3_OBJECT: {\n+            _REQUIRED_AWS_ACCESS_KEY_ID_PROPERTY: str,\n+            _REQUIRED_AWS_SECRET_ACCESS_KEY_PROPERTY: str,\n+            _REQUIRED_AWS_STORAGE_BUCKET_NAME_PROPERTY: str,\n+            _REQUIRED_AWS_S3_OBJECT_KEY_PROPERTY: str,\n+            _OPTIONAL_AWS_REGION_PROPERTY: str,\n+            _OPTIONAL_AWS_S3_CLIENT_PARAMETERS_PROPERTY: dict,\n+            _OPTIONAL_AWS_S3_GET_OBJECT_PARAMETERS_PROPERTY: dict,\n+            _OPTIONAL_AWS_S3_PUT_OBJECT_PARAMETERS_PROPERTY: dict,\n+        },\n+    }\n+\n     _REQUIRED_PROPERTIES: Dict[str, List] = {\n         _STORAGE_TYPE_VALUE_PICKLE: [],\n         _STORAGE_TYPE_VALUE_SQL_TABLE: [\n", "test_patch": "diff --git a/tests/core/config/checkers/test_data_node_config_checker.py b/tests/core/config/checkers/test_data_node_config_checker.py\nindex 7c9c3f93b5..8a687a4d0b 100644\n--- a/tests/core/config/checkers/test_data_node_config_checker.py\n+++ b/tests/core/config/checkers/test_data_node_config_checker.py\n@@ -513,12 +513,12 @@ def test_check_callable_properties(self, caplog):\n             Config.check()\n         assert len(Config._collector.errors) == 2\n         expected_error_message_1 = (\n-            \"`write_query_builder` of DataNodeConfig `new` must be populated with a Callable.\"\n+            \"`write_query_builder` of DataNodeConfig `new` must be populated with a typing.Callable.\"\n             \" Current value of property `write_query_builder` is 1.\"\n         )\n         assert expected_error_message_1 in caplog.text\n         expected_error_message_2 = (\n-            \"`append_query_builder` of DataNodeConfig `new` must be populated with a Callable.\"\n+            \"`append_query_builder` of DataNodeConfig `new` must be populated with a typing.Callable.\"\n             \" Current value of property `append_query_builder` is 2.\"\n         )\n         assert expected_error_message_2 in caplog.text\n@@ -530,7 +530,7 @@ def test_check_callable_properties(self, caplog):\n             Config.check()\n         assert len(Config._collector.errors) == 1\n         expected_error_messages = [\n-            \"`write_fct` of DataNodeConfig `new` must be populated with a Callable. Current value\"\n+            \"`write_fct` of DataNodeConfig `new` must be populated with a typing.Callable. Current value\"\n             \" of property `write_fct` is 12.\",\n         ]\n         assert all(message in caplog.text for message in expected_error_messages)\n@@ -542,7 +542,7 @@ def test_check_callable_properties(self, caplog):\n             Config.check()\n         assert len(Config._collector.errors) == 1\n         expected_error_messages = [\n-            \"`read_fct` of DataNodeConfig `new` must be populated with a Callable. Current value\"\n+            \"`read_fct` of DataNodeConfig `new` must be populated with a typing.Callable. Current value\"\n             \" of property `read_fct` is 5.\",\n         ]\n         assert all(message in caplog.text for message in expected_error_messages)\n@@ -554,9 +554,9 @@ def test_check_callable_properties(self, caplog):\n             Config.check()\n         assert len(Config._collector.errors) == 2\n         expected_error_messages = [\n-            \"`write_fct` of DataNodeConfig `new` must be populated with a Callable. Current value\"\n+            \"`write_fct` of DataNodeConfig `new` must be populated with a typing.Callable. Current value\"\n             \" of property `write_fct` is 9.\",\n-            \"`read_fct` of DataNodeConfig `new` must be populated with a Callable. Current value\"\n+            \"`read_fct` of DataNodeConfig `new` must be populated with a typing.Callable. Current value\"\n             \" of property `read_fct` is 5.\",\n         ]\n         assert all(message in caplog.text for message in expected_error_messages)\n@@ -588,10 +588,10 @@ def test_check_callable_properties(self, caplog):\n             Config.check()\n         assert len(Config._collector.errors) == 2\n         expected_error_messages = [\n-            \"`write_fct` of DataNodeConfig `new` must be populated with a serializable Callable function but\"\n+            \"`write_fct` of DataNodeConfig `new` must be populated with a serializable typing.Callable function but\"\n             \" not a lambda. Current value of property `write_fct` is <function TestDataNodeConfigChecker.\"\n             \"test_check_callable_properties.<locals>.<lambda>\",\n-            \"`read_fct` of DataNodeConfig `new` must be populated with a serializable Callable function but\"\n+            \"`read_fct` of DataNodeConfig `new` must be populated with a serializable typing.Callable function but\"\n             \" not a lambda. Current value of property `read_fct` is <function TestDataNodeConfigChecker.\"\n             \"test_check_callable_properties.<locals>.<lambda>\",\n         ]\n@@ -616,12 +616,15 @@ def test_check_read_write_fct_args(self, caplog):\n         with pytest.raises(SystemExit):\n             Config._collector = IssueCollector()\n             Config.check()\n-        assert len(Config._collector.errors) == 1\n-        expected_error_message = (\n+        assert len(Config._collector.errors) == 2\n+\n+        expected_error_messages = (\n+            \"`write_fct_args` of DataNodeConfig `default` must be populated with a <class 'list'>.\"\n+            ' Current value of property `write_fct_args` is \"foo\".',\n             \"`write_fct_args` field of DataNodeConfig `default` must be populated with a List value.\"\n-            ' Current value of property `write_fct_args` is \"foo\".'\n+            ' Current value of property `write_fct_args` is \"foo\".',\n         )\n-        assert expected_error_message in caplog.text\n+        assert all(message in caplog.text for message in expected_error_messages)\n         config._sections[DataNodeConfig.name][\"default\"].storage_type = \"generic\"\n         config._sections[DataNodeConfig.name][\"default\"].properties = {\n             \"write_fct\": print,\n@@ -641,12 +644,15 @@ def test_check_read_write_fct_args(self, caplog):\n         with pytest.raises(SystemExit):\n             Config._collector = IssueCollector()\n             Config.check()\n-        assert len(Config._collector.errors) == 1\n-        expected_error_message = (\n+        assert len(Config._collector.errors) == 2\n+\n+        expected_error_messages = (\n+            \"`read_fct_args` of DataNodeConfig `default` must be populated with a <class 'list'>.\"\n+            \" Current value of property `read_fct_args` is 1.\",\n             \"`read_fct_args` field of DataNodeConfig `default` must be populated with a List value.\"\n-            \" Current value of property `read_fct_args` is 1.\"\n+            \" Current value of property `read_fct_args` is 1.\",\n         )\n-        assert expected_error_message in caplog.text\n+        assert all(message in caplog.text for message in expected_error_messages)\n \n         config._sections[DataNodeConfig.name][\"default\"].storage_type = \"generic\"\n         config._sections[DataNodeConfig.name][\"default\"].properties = {\n", "problem_statement": "Add checker to check value type of configuration properties\n1. We should also add all the properties to check. not only the callable.\n\n2. The dictionary should be moved close to the definition of the properties, in the DataNodeCOnfig class.\n\n3. The format should be updated to `Dict[str, Dict[str, Any]]` from `Dict[str, List[Tuple[Any, List[str]]]]`\n\nExample:\n```\n{\n    DataNodeConfig._STORAGE_TYPE_VALUE_GENERIC: \n        {\n            DataNodeConfig._OPTIONAL_READ_FUNCTION_GENERIC_PROPERTY: Callable,\n            DataNodeConfig._OPTIONAL_WRITE_FUNCTION_GENERIC_PROPERTY: Callable\n        },\n    DataNodeConfig._STORAGE_TYPE_VALUE_SQL:\n        {\n            DataNodeConfig._REQUIRED_WRITE_QUERY_BUILDER_SQL_PROPERTY: Callable,\n            DataNodeConfig._OPTIONAL_APPEND_QUERY_BUILDER_SQL_PROPERTY: Callable\n        }\n}\n```\n\n4. Add the changes to documentation\n- An entry in the release notes as an improvement of the checkers for checking the property types.\n- A new item in the list: https://docs.taipy.io/en/develop/userman/advanced_features/configuration/config-checker/\n", "hints_text": "Hi @joaoandre-avaiga, @jrobinAV \n\nI want to ask you guys if we can expand this idea a bit further. I want to add 2 points that will make this ticket more complicated \ud83d\ude05 \n1. Can we also include parameters that can be None?\n2. Can we somehow declare that in case the value is None, we want to throw a warning except for an error (the message might have to be declared elsewhere)\n\nI'm thinking about this as I found a missing implementation in the current databricks ticket: https://github.com/Avaiga/taipy-enterprise/pull/557/files#diff-6dd483af9d43a6ce79f513e4d9cd499ddceef45cddcbb1a30b589aace7255b30R81", "created_at": "2024-12-13T01:48:12Z"}
{"repo": "Avaiga/taipy", "pull_number": 2325, "instance_id": "Avaiga__taipy-2325", "issue_numbers": ["2152", "2152"], "base_commit": "2e8c6ba22676f234411f800313723f9d1a5e1252", "patch": "diff --git a/taipy/gui_core/_context.py b/taipy/gui_core/_context.py\nindex 8928d589af..82f8b7bdad 100644\n--- a/taipy/gui_core/_context.py\n+++ b/taipy/gui_core/_context.py\n@@ -639,11 +639,10 @@ def submit_entity(self, state: State, id: str, payload: t.Dict[str, str]):\n                     client_id=self.gui._get_client_id(),\n                     module_context=self.gui._get_locals_context(),\n                 )\n-                client_status = _ClientStatus(self.gui._get_client_id(), submission_entity.submission_status)\n+                client_status = _ClientStatus(self.gui._get_client_id(), None)\n                 with self.submissions_lock:\n                     self.client_submission[submission_entity.id] = client_status\n                 if Config.core.mode == \"development\":\n-                    client_status.submission_status = SubmissionStatus.SUBMITTED\n                     self.submission_status_callback(submission_entity.id)\n                 _GuiCoreContext.__assign_var(state, error_var, \"\")\n         except Exception as e:\n@@ -715,7 +714,6 @@ def _get_sort_params(params: t.Optional[t.List[t.Any]] = None, parent: t.Optiona\n                     args.append(None)\n         return args\n \n-\n     def get_sorted_datanode_list(\n         self,\n         entities: t.Union[\ndiff --git a/taipy/gui_core/_utils.py b/taipy/gui_core/_utils.py\nindex bdb7656b7b..27fe9f09f1 100644\n--- a/taipy/gui_core/_utils.py\n+++ b/taipy/gui_core/_utils.py\n@@ -17,4 +17,4 @@\n @dataclass\n class _ClientStatus:\n     client_id: t.Optional[str]\n-    submission_status: SubmissionStatus\n+    submission_status: t.Optional[SubmissionStatus]\n", "test_patch": "diff --git a/tests/gui_core/test_context_is_readable.py b/tests/gui_core/test_context_is_readable.py\nindex e495a238ca..d321f31fb6 100644\n--- a/tests/gui_core/test_context_is_readable.py\n+++ b/tests/gui_core/test_context_is_readable.py\n@@ -25,7 +25,7 @@\n from taipy.core.job._job_manager_factory import _JobManagerFactory\n from taipy.core.scenario._scenario_manager_factory import _ScenarioManagerFactory\n from taipy.core.submission._submission_manager_factory import _SubmissionManagerFactory\n-from taipy.core.submission.submission import Submission, SubmissionStatus\n+from taipy.core.submission.submission import Submission\n from taipy.core.task._task_manager_factory import _TaskManagerFactory\n from taipy.gui import Gui, State\n from taipy.gui_core._context import _GuiCoreContext\n@@ -204,7 +204,7 @@ def test_submission_status_callback(self):\n             mockGui._get_authorization = lambda s: contextlib.nullcontext()\n             gui_core_context = _GuiCoreContext(mockGui)\n \n-            gui_core_context.client_submission[a_submission.id] = _ClientStatus(\"client_id\", SubmissionStatus.UNDEFINED)\n+            gui_core_context.client_submission[a_submission.id] = _ClientStatus(\"client_id\", None)\n             gui_core_context.submission_status_callback(a_submission.id)\n             mockget.assert_called()\n             found = False\n", "problem_statement": "[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] On_submission_change - submission is completed twice\n### What went wrong? \ud83e\udd14\n\nThe callback is called twice sometimes with the same parameters. It leads to notifying twice the user that the scenario is completed.\n\n## How to replicate\n\n```python\nfrom taipy import Config\nimport taipy as tp\nfrom taipy.gui import Gui, notify\n\n\n# Normal function used by Taipy\ndef double(nb):\n    return nb * 2\n\n\n# Configuration of Data Nodes\ninput_cfg = Config.configure_data_node(\"input_dn\", default_data=21)\noutput_cfg = Config.configure_data_node(\"output_dn\")\n\n\n# Configuration of tasks\nfirst_task_cfg = Config.configure_task(\"double\",\n                                       double,\n                                       input_cfg,\n                                       output_cfg)\n\n\n# Configuration of scenario\nscenario_cfg = Config.configure_scenario(id=\"my_scenario\",\n                                         task_configs=[first_task_cfg],\n                                         name=\"my_scenario\")\n\n\n\ndef notify_from_submissions(state, submittable, details):\n    submission_status = details.get('submission_status')\n\n    if submission_status == 'COMPLETED':\n        print(\"COMPLETED\")\n        print(submittable)\n        print(details)\n        notify(state, 'success', 'Completed!')\n        # Add additional actions here, like updating the GUI or logging the completion.\n\n    elif submission_status == 'FAILED':\n        print(\"FAILED\")\n        notify(state, 'error', 'FAILED!')\n        # Handle failure, like sending notifications or logging the error.\n\n\nif __name__==\"__main__\":\n    tp.Orchestrator().run()\n    scenario_1 = tp.create_scenario(scenario_cfg)\n\n    scenario_md = \"\"\"\n<|{scenario_1}|scenario|on_submission_change=notify_from_submissions|>\n\"\"\"\n    Gui(scenario_md).run()\n```\n\nThis is what I receive sometimes. The callback is called twice:\n\n```console\n[2024-10-25 11:50:04.385][Taipy][INFO] job JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec is completed.\nCOMPLETED\nCOMPLETED\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCCE90>\n<taipy.core.submission.submission.Submission object at 0x000001BAC6CCD310>\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario, 'origin_entity_id': 'SCENARIO_my_scenario_6c3d70af-a896-46f8-a0dc-4f17628b29d4', 'origin_entity_type': 'SCENARIO', 'origin_entity_config_id': 'my_scenario', 'creation_date': datetime.datetime(2024, 10, 25, 11, 50, 4, 207191), 'version': '5395d6e1-e5b7-4c2e-a391-7f71d04e8047', 'job_triggered_submission_status_changed': 'JOB_double_bd8e666f-5ce5-40ad-8694-af7d02a3faec'}\n{'submission_status': 'COMPLETED', 'submittable_entity': my_scenario}\n```\n\n## Expected behavior\n\nThis callback should be called once with these parameters\n\n### Version of Taipy\n\n- release/4.0\n- develop\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "Hmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n\nHmmm I'm running it on the develop branch and it doesn't seem to have this issue\r\n![image](https://github.com/user-attachments/assets/a0f69c6c-d456-437a-be4a-f5db99d87e9d)\r\n\nBut the problem does happen on 4.0!\r\n![image](https://github.com/user-attachments/assets/541d8390-8418-42d4-85b3-46ab64aac632)\r\n", "created_at": "2024-12-12T10:11:48Z"}
{"repo": "Avaiga/taipy", "pull_number": 2321, "instance_id": "Avaiga__taipy-2321", "issue_numbers": ["2319"], "base_commit": "44c366312b73a366ab9238dff03d938c85d1758e", "patch": "diff --git a/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py b/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py\nindex 7a43f43923..b1ea92cc76 100644\n--- a/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py\n+++ b/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py\n@@ -159,4 +159,7 @@ def _update_job_status(job: Job, exceptions):\n                 _TaipyLogger._get_logger().error(st)\n             _JobManagerFactory._build_manager()._set(job)\n         else:\n+            for output in job.task.output.values():\n+                output.track_edit(job_id=job.id)\n+                output.unlock_edit()\n             job.completed()\ndiff --git a/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py b/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py\nindex f410ca9191..3a83ccf2f2 100644\n--- a/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py\n+++ b/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py\n@@ -65,7 +65,7 @@ def _write_data(self, outputs: List[DataNode], results, job_id: JobId):\n                 for res, dn in zip(_results, outputs):\n                     try:\n                         data_node = data_manager._get(dn.id)\n-                        data_node.write(res, job_id=job_id)\n+                        data_node._write(res)\n                     except Exception as e:\n                         logger.error(\"Error during write\", exc_info=1)\n                         exceptions.append(DataNodeWritingError(f\"Error writing in datanode id {dn.id}: {e}\"))\n", "test_patch": "diff --git a/tests/core/job/test_job.py b/tests/core/job/test_job.py\nindex 9bf16a1990..b6d9b239d2 100644\n--- a/tests/core/job/test_job.py\n+++ b/tests/core/job/test_job.py\n@@ -72,10 +72,10 @@ def job(task, job_id):\n \n @pytest.fixture\n def replace_in_memory_write_fct():\n-    default_write = InMemoryDataNode.write\n-    InMemoryDataNode.write = _error\n+    default_write = InMemoryDataNode._write\n+    InMemoryDataNode._write = _error\n     yield\n-    InMemoryDataNode.write = default_write\n+    InMemoryDataNode._write = default_write\n \n \n def _foo():\n", "problem_statement": "[\ud83d\udc1b BUG] Never receiving Data Node notifications/update with Core event\n### What went wrong? \ud83e\udd14\r\n\r\nTaipy doesn't always publish the event of a data node update. Therefore, when a data node is changed, creating simple code to update my UI through Core events is impossible.\r\n\r\n### Expected Behavior\r\n\r\nI should receive all the appropriate events.\r\n\r\n### Steps to Reproduce Issue\r\n\r\nRun this code and the scenario:\r\n\r\n```python\r\nfrom taipy.core.notification import (\r\n    CoreEventConsumerBase,\r\n    Event,\r\n    EventEntityType,\r\n    EventOperation,\r\n    Notifier,\r\n)\r\nimport taipy as tp\r\nimport taipy.gui.builder as tgb\r\nfrom taipy.gui import Gui, State, notify\r\nfrom taipy.core import Scenario, DataNode\r\nfrom taipy import Config\r\n\r\nimport time\r\nimport random\r\nimport pandas as pd\r\n\r\n\r\ndef some_task_1(input_data):\r\n    time.sleep(2)\r\n    print(\"Hello world\")\r\n    return \"hello world\"\r\n\r\n\r\ndef some_task_2(intermediate_data):\r\n    time.sleep(2)\r\n    print(f\"{intermediate_data} from Taipy!\")\r\n    random_value = random.randint(0, 100)\r\n    return f\"{intermediate_data} from Taipy! {random_value}\"\r\n\r\n\r\nConfig.configure_job_executions(mode=\"standalone\", max_nb_of_workers=2)\r\n\r\ninput_data_cfg = Config.configure_csv_data_node(id=\"input_data\", default_data={\"x\": [1, 2, 3], \"y\": [4, 5, 6]})\r\nintermediate_data_cfg = Config.configure_data_node(id=\"intermediate_data\")\r\noutput_data_cfg = Config.configure_data_node(id=\"output_data\")\r\n\r\ntask_1_cfg = Config.configure_task(\r\n    id=\"task_1\",\r\n    function=some_task_1,\r\n    input=input_data_cfg,\r\n    output=intermediate_data_cfg,\r\n    skippable=True,\r\n)\r\n\r\ntask_2_cfg = Config.configure_task(\r\n    id=\"task_2\",\r\n    function=some_task_2,\r\n    input=intermediate_data_cfg,\r\n    output=output_data_cfg,\r\n    skippable=True,\r\n)\r\n\r\nscenario_cfg = Config.configure_scenario(\r\n    id=\"scenario\",\r\n    task_configs=[task_1_cfg, task_2_cfg],\r\n)\r\n\r\n\r\ndef notify_user(state, data_node, scenarios):\r\n    if state.scenario.id in scenarios:\r\n        if data_node.config_id == \"input_data\":\r\n            state.input_data = data_node.read()\r\n        if data_node.config_id == \"intermediate_data\":\r\n            notify(state, \"success\", \"Task 1 is finished!\")\r\n        if data_node.config_id == \"output_data\":\r\n            state.output_data = data_node.read()\r\n            notify(state, \"success\", \"Submission is finished!\")\r\n\r\n\r\nclass SpecificCoreConsumer(CoreEventConsumerBase):\r\n    def __init__(self, gui: Gui):\r\n        self.gui = gui\r\n\r\n        reg_id, queue = Notifier.register(\r\n            # attribute_name=\"last_edit_date\",\r\n        )  # Adapt the registration to the events you want to listen to\r\n        super().__init__(reg_id, queue)\r\n\r\n    def process_event(self, event: Event):\r\n        if (event.entity_type == EventEntityType.DATA_NODE\r\n                and event.operation == EventOperation.UPDATE\r\n                and event.attribute_name == \"last_edit_date\"):\r\n            print(\r\n                f\"Received event: {event.operation} - {event.entity_type} - {event.entity_id}\\n\"\r\n                f\"                {event.attribute_name} - {event.attribute_value}\\n\"\r\n            )\r\n            data_node: DataNode = tp.get(event.entity_id)\r\n            scenarios = [s.id for s in data_node.get_parents().get(\"scenario\")]\r\n            self.gui.broadcast_callback(\r\n                notify_user,\r\n                [data_node, scenarios],\r\n            )\r\n\r\ndef change_scenario(state: State):\r\n    state.input_data = state.scenario.input_data.read()\r\n    state.output_data = state.scenario.output_data.read()\r\n\r\ndef run_scenario(state: State):\r\n    print(\"Running scenario...\")\r\n    state.scenario.submit()\r\n    print(\"Done!\")\r\n\r\nif __name__ == \"__main__\":\r\n    tp.Orchestrator().run()\r\n    scenario: Scenario = tp.create_scenario(scenario_cfg)\r\n    input_data: pd.DataFrame = scenario.input_data.read()\r\n    output_data: int = scenario.output_data.read()\r\n\r\n    with tgb.Page() as page:\r\n        tgb.scenario_selector(scenario, on_change=change_scenario)\r\n        tgb.button(\"Run Scenario\", on_action=run_scenario)\r\n        tgb.chart(\"{input_data}\")\r\n        tgb.input(\"{output_data}\")\r\n\r\n    gui = Gui(page)\r\n    SpecificCoreConsumer(gui).start()\r\n    gui.run(debug=True)\r\n```\r\n\r\n\r\n\r\n### Versions of Taipy\r\n\r\n- develop\r\n- 4.0.1\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "", "created_at": "2024-12-11T12:31:26Z"}
{"repo": "Avaiga/taipy", "pull_number": 2316, "instance_id": "Avaiga__taipy-2316", "issue_numbers": ["2319"], "base_commit": "9cc59f2fbd5ed3d261905923a9cb85dcd623e3f3", "patch": "diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md\nindex 51f88beae8..07527d7c09 100644\n--- a/.github/PULL_REQUEST_TEMPLATE.md\n+++ b/.github/PULL_REQUEST_TEMPLATE.md\n@@ -32,9 +32,9 @@ _Describe which projects this change will impact and that needs to be backported\n ## Checklist\n _We encourage you to keep the code coverage percentage at 80% and above._\n \n-- [ ] Does this solution meet the acceptance criteria of the related issue?\n-- [ ] Is the related issue checklist completed?\n-- [ ] Does this PR adds unit tests for the developed code? If not, why?\n-- [ ] End-to-End tests have been added or updated?\n-- [ ] Was the documentation updated, or a dedicated issue for documentation created? (If applicable)\n-- [ ] Is the release notes updated? (If applicable)\n+- [ ] This solution meets the acceptance criteria of the related issue.\n+- [ ] The related issue checklist is completed.\n+- [ ] This PR adds unit tests for the developed code. If not, why?\n+- [ ] End-to-End tests have been added or updated. If not, why?\n+- [ ] The documentation has been updated, or a dedicated issue created. (If applicable)\n+- [ ] The release notes have been updated? (If applicable)\ndiff --git a/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py b/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py\nindex aa325ec23c..f6d46fb310 100644\n--- a/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py\n+++ b/taipy/core/_orchestrator/_dispatcher/_job_dispatcher.py\n@@ -159,4 +159,7 @@ def _update_job_status(job: Job, exceptions):\n                 _TaipyLogger._get_logger().error(st)\n             _JobManagerFactory._build_manager()._set(job)\n         else:\n+            for output in job.task.output.values():\n+                output.track_edit(job_id=job.id)\n+                output.unlock_edit()\n             job.completed()\ndiff --git a/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py b/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py\nindex f410ca9191..3a83ccf2f2 100644\n--- a/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py\n+++ b/taipy/core/_orchestrator/_dispatcher/_task_function_wrapper.py\n@@ -65,7 +65,7 @@ def _write_data(self, outputs: List[DataNode], results, job_id: JobId):\n                 for res, dn in zip(_results, outputs):\n                     try:\n                         data_node = data_manager._get(dn.id)\n-                        data_node.write(res, job_id=job_id)\n+                        data_node._write(res)\n                     except Exception as e:\n                         logger.error(\"Error during write\", exc_info=1)\n                         exceptions.append(DataNodeWritingError(f\"Error writing in datanode id {dn.id}: {e}\"))\ndiff --git a/taipy/core/data/data_node.py b/taipy/core/data/data_node.py\nindex 2b9d3bba05..67dcfc0f98 100644\n--- a/taipy/core/data/data_node.py\n+++ b/taipy/core/data/data_node.py\n@@ -461,8 +461,6 @@ def write(self,\n             **kwargs (Any): Extra information to attach to the edit document\n                 corresponding to this write.\n         \"\"\"\n-        from ._data_manager_factory import _DataManagerFactory\n-\n         if (editor_id\n             and self.edit_in_progress\n             and self.editor_id != editor_id\n@@ -471,6 +469,8 @@ def write(self,\n         self._write(data)\n         self.track_edit(job_id=job_id, editor_id=editor_id, comment=comment, **kwargs)\n         self.unlock_edit()\n+        from ._data_manager_factory import _DataManagerFactory\n+\n         _DataManagerFactory._build_manager()._set(self)\n \n     def track_edit(self,\n", "test_patch": "diff --git a/tests/core/_orchestrator/_dispatcher/test_dispatcher__update_job_status.py b/tests/core/_orchestrator/_dispatcher/test_dispatcher__update_job_status.py\nindex baecbd185b..674900a435 100644\n--- a/tests/core/_orchestrator/_dispatcher/test_dispatcher__update_job_status.py\n+++ b/tests/core/_orchestrator/_dispatcher/test_dispatcher__update_job_status.py\n@@ -10,19 +10,25 @@\n # specific language governing permissions and limitations under the License.\n import traceback\n \n-from taipy import Job, JobId, Status, Task\n+from taipy import Job, JobId, Scope, Status, Task\n from taipy.core._orchestrator._dispatcher import _JobDispatcher\n from taipy.core._orchestrator._orchestrator_factory import _OrchestratorFactory\n+from taipy.core.data import InMemoryDataNode\n+from taipy.core.data.data_node_id import EDIT_JOB_ID_KEY, EDIT_TIMESTAMP_KEY\n from taipy.core.job._job_manager_factory import _JobManagerFactory\n from taipy.core.task._task_manager_factory import _TaskManagerFactory\n \n \n def nothing(*args):\n-    pass\n+    return 42\n \n \n+def _error():\n+    raise RuntimeError(\"Something bad has happened\")\n+\n def test_update_job_status_no_exception():\n-    task = Task(\"config_id\", {}, nothing)\n+    output = InMemoryDataNode(\"data_node\", scope=Scope.SCENARIO)\n+    task = Task(\"config_id\",  {}, nothing, output=[output])\n     _TaskManagerFactory._build_manager()._set(task)\n     job = Job(JobId(\"id\"), task, \"s_id\", task.id)\n     _JobManagerFactory._build_manager()._set(job)\n@@ -31,6 +37,14 @@ def test_update_job_status_no_exception():\n \n     assert job.status == Status.COMPLETED\n     assert job.stacktrace == []\n+    assert len(output.edits) == 1\n+    assert len(output.edits[0]) == 2\n+    assert output.edits[0][EDIT_JOB_ID_KEY] == job.id\n+    assert output.edits[0][EDIT_TIMESTAMP_KEY] is not None\n+    assert output.last_edit_date is not None\n+    assert output.editor_id is None\n+    assert output.editor_expiration_date is None\n+    assert not output.edit_in_progress\n \n \n def test_update_job_status_with_one_exception():\ndiff --git a/tests/core/job/test_job.py b/tests/core/job/test_job.py\nindex 9bf16a1990..30bc56bcd7 100644\n--- a/tests/core/job/test_job.py\n+++ b/tests/core/job/test_job.py\n@@ -73,9 +73,12 @@ def job(task, job_id):\n @pytest.fixture\n def replace_in_memory_write_fct():\n     default_write = InMemoryDataNode.write\n+    default__write = InMemoryDataNode._write\n     InMemoryDataNode.write = _error\n+    InMemoryDataNode._write = _error\n     yield\n     InMemoryDataNode.write = default_write\n+    InMemoryDataNode._write = default__write\n \n \n def _foo():\ndiff --git a/tests/core/notification/test_events_published.py b/tests/core/notification/test_events_published.py\nindex b791d2ed42..abb580c706 100644\n--- a/tests/core/notification/test_events_published.py\n+++ b/tests/core/notification/test_events_published.py\n@@ -12,6 +12,9 @@\n from queue import SimpleQueue\n from typing import Any, Dict, List\n \n+import pytest\n+\n+from taipy import Orchestrator\n from taipy.common.config import Config, Frequency\n from taipy.core import taipy as tp\n from taipy.core.job.status import Status\n@@ -154,8 +157,10 @@ def test_events_published_for_writing_dn():\n     assert snapshot.operation_collected.get(EventOperation.UPDATE, 0) == 5\n     all_evts.stop()\n \n-\n-def test_events_published_for_scenario_submission():\n+@pytest.mark.parametrize(\"standalone\", [False, True])\n+def test_events_published_for_scenario_submission(standalone):\n+    if standalone:\n+        Config.configure_job_executions(mode=\"standalone\", max_nb_of_workers=2)\n     input_config = Config.configure_data_node(\"the_input\")\n     output_config = Config.configure_data_node(\"the_output\")\n     task_config = Config.configure_task(\"the_task\", identity, input=input_config, output=output_config)\n@@ -176,7 +181,11 @@ def test_events_published_for_scenario_submission():\n     # 1 submission update event for jobs\n     # 3 submission update events (for status: PENDING, RUNNING and COMPLETED)\n     # 1 submission update event for is_completed\n-    scenario.submit()\n+    if standalone:\n+        Orchestrator().run()\n+        scenario.submit(wait=True)\n+    else:\n+        scenario.submit()\n     snapshot = all_evts.capture()\n     assert len(snapshot.collected_events) == 18\n     assert snapshot.entity_type_collected.get(EventEntityType.CYCLE, 0) == 0\n", "problem_statement": "[\ud83d\udc1b BUG] Never receiving Data Node notifications/update with Core event\n### What went wrong? \ud83e\udd14\r\n\r\nTaipy doesn't always publish the event of a data node update. Therefore, when a data node is changed, creating simple code to update my UI through Core events is impossible.\r\n\r\n### Expected Behavior\r\n\r\nI should receive all the appropriate events.\r\n\r\n### Steps to Reproduce Issue\r\n\r\nRun this code and the scenario:\r\n\r\n```python\r\nfrom taipy.core.notification import (\r\n    CoreEventConsumerBase,\r\n    Event,\r\n    EventEntityType,\r\n    EventOperation,\r\n    Notifier,\r\n)\r\nimport taipy as tp\r\nimport taipy.gui.builder as tgb\r\nfrom taipy.gui import Gui, State, notify\r\nfrom taipy.core import Scenario, DataNode\r\nfrom taipy import Config\r\n\r\nimport time\r\nimport random\r\nimport pandas as pd\r\n\r\n\r\ndef some_task_1(input_data):\r\n    time.sleep(2)\r\n    print(\"Hello world\")\r\n    return \"hello world\"\r\n\r\n\r\ndef some_task_2(intermediate_data):\r\n    time.sleep(2)\r\n    print(f\"{intermediate_data} from Taipy!\")\r\n    random_value = random.randint(0, 100)\r\n    return f\"{intermediate_data} from Taipy! {random_value}\"\r\n\r\n\r\nConfig.configure_job_executions(mode=\"standalone\", max_nb_of_workers=2)\r\n\r\ninput_data_cfg = Config.configure_csv_data_node(id=\"input_data\", default_data={\"x\": [1, 2, 3], \"y\": [4, 5, 6]})\r\nintermediate_data_cfg = Config.configure_data_node(id=\"intermediate_data\")\r\noutput_data_cfg = Config.configure_data_node(id=\"output_data\")\r\n\r\ntask_1_cfg = Config.configure_task(\r\n    id=\"task_1\",\r\n    function=some_task_1,\r\n    input=input_data_cfg,\r\n    output=intermediate_data_cfg,\r\n    skippable=True,\r\n)\r\n\r\ntask_2_cfg = Config.configure_task(\r\n    id=\"task_2\",\r\n    function=some_task_2,\r\n    input=intermediate_data_cfg,\r\n    output=output_data_cfg,\r\n    skippable=True,\r\n)\r\n\r\nscenario_cfg = Config.configure_scenario(\r\n    id=\"scenario\",\r\n    task_configs=[task_1_cfg, task_2_cfg],\r\n)\r\n\r\n\r\ndef notify_user(state, data_node, scenarios):\r\n    if state.scenario.id in scenarios:\r\n        if data_node.config_id == \"input_data\":\r\n            state.input_data = data_node.read()\r\n        if data_node.config_id == \"intermediate_data\":\r\n            notify(state, \"success\", \"Task 1 is finished!\")\r\n        if data_node.config_id == \"output_data\":\r\n            state.output_data = data_node.read()\r\n            notify(state, \"success\", \"Submission is finished!\")\r\n\r\n\r\nclass SpecificCoreConsumer(CoreEventConsumerBase):\r\n    def __init__(self, gui: Gui):\r\n        self.gui = gui\r\n\r\n        reg_id, queue = Notifier.register(\r\n            # attribute_name=\"last_edit_date\",\r\n        )  # Adapt the registration to the events you want to listen to\r\n        super().__init__(reg_id, queue)\r\n\r\n    def process_event(self, event: Event):\r\n        if (event.entity_type == EventEntityType.DATA_NODE\r\n                and event.operation == EventOperation.UPDATE\r\n                and event.attribute_name == \"last_edit_date\"):\r\n            print(\r\n                f\"Received event: {event.operation} - {event.entity_type} - {event.entity_id}\\n\"\r\n                f\"                {event.attribute_name} - {event.attribute_value}\\n\"\r\n            )\r\n            data_node: DataNode = tp.get(event.entity_id)\r\n            scenarios = [s.id for s in data_node.get_parents().get(\"scenario\")]\r\n            self.gui.broadcast_callback(\r\n                notify_user,\r\n                [data_node, scenarios],\r\n            )\r\n\r\ndef change_scenario(state: State):\r\n    state.input_data = state.scenario.input_data.read()\r\n    state.output_data = state.scenario.output_data.read()\r\n\r\ndef run_scenario(state: State):\r\n    print(\"Running scenario...\")\r\n    state.scenario.submit()\r\n    print(\"Done!\")\r\n\r\nif __name__ == \"__main__\":\r\n    tp.Orchestrator().run()\r\n    scenario: Scenario = tp.create_scenario(scenario_cfg)\r\n    input_data: pd.DataFrame = scenario.input_data.read()\r\n    output_data: int = scenario.output_data.read()\r\n\r\n    with tgb.Page() as page:\r\n        tgb.scenario_selector(scenario, on_change=change_scenario)\r\n        tgb.button(\"Run Scenario\", on_action=run_scenario)\r\n        tgb.chart(\"{input_data}\")\r\n        tgb.input(\"{output_data}\")\r\n\r\n    gui = Gui(page)\r\n    SpecificCoreConsumer(gui).start()\r\n    gui.run(debug=True)\r\n```\r\n\r\n\r\n\r\n### Versions of Taipy\r\n\r\n- develop\r\n- 4.0.1\r\n\r\n### Acceptance Criteria\r\n\r\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\r\n\r\n### Code of Conduct\r\n\r\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\r\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "", "created_at": "2024-12-10T17:59:23Z"}
{"repo": "Avaiga/taipy", "pull_number": 2315, "instance_id": "Avaiga__taipy-2315", "issue_numbers": ["2281", "2281"], "base_commit": "9cc59f2fbd5ed3d261905923a9cb85dcd623e3f3", "patch": "diff --git a/frontend/taipy-gui/src/components/Taipy/Chat.spec.tsx b/frontend/taipy-gui/src/components/Taipy/Chat.spec.tsx\nindex cfc88195c3..324d08efb1 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Chat.spec.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Chat.spec.tsx\n@@ -212,7 +212,7 @@ describe(\"Chat Component\", () => {\n         });\n         jest.restoreAllMocks();\n     });\n-    it(\"Not upload image over a file size limit\", async () => {\n+    it(\"does not upload image over a file size limit\", async () => {\n         const dispatch = jest.fn();\n         const state: TaipyState = INITIAL_STATE;\n         const { getByText, getByAltText } = render(\ndiff --git a/frontend/taipy-gui/src/components/Taipy/Chat.tsx b/frontend/taipy-gui/src/components/Taipy/Chat.tsx\nindex 7eb5ea070f..94ea8a2f46 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Chat.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Chat.tsx\n@@ -22,6 +22,7 @@ import React, {\n     ReactNode,\n     lazy,\n     ChangeEvent,\n+    UIEvent,\n } from \"react\";\n import { SxProps, Theme, darken, lighten } from \"@mui/material/styles\";\n import Avatar from \"@mui/material/Avatar\";\n@@ -250,6 +251,7 @@ const Chat = (props: ChatProps) => {\n     const [imagePreview, setImagePreview] = useState<string | null>(null);\n     const [objectURLs, setObjectURLs] = useState<string[]>([]);\n     const fileInputRef = useRef<HTMLInputElement>(null);\n+    const userScrolled = useRef(false);\n \n     const className = useClassNames(props.libClassName, props.dynamicClassName, props.className);\n     const active = useDynamicProperty(props.active, props.defaultActive, true);\n@@ -424,7 +426,7 @@ const Chat = (props: ChatProps) => {\n     );\n \n     const showBottom = useCallback(() => {\n-        anchorDivRef.current?.scrollIntoView();\n+        anchorDivRef.current?.scrollIntoView && anchorDivRef.current?.scrollIntoView();\n         setShowMessage(false);\n     }, []);\n \n@@ -450,8 +452,9 @@ const Chat = (props: ChatProps) => {\n                 }\n             }\n             page.current.key = getChatKey(0, pageSize);\n+            !userScrolled.current && showBottom();\n         }\n-    }, [refresh, pageSize, props.messages]);\n+    }, [refresh, pageSize, props.messages, showBottom]);\n \n     useEffect(() => {\n         if (showMessage && !isAnchorDivVisible) {\n@@ -490,10 +493,14 @@ const Chat = (props: ChatProps) => {\n         [loadMoreItems]\n     );\n \n+    const handleOnScroll = useCallback((evt: UIEvent) => {\n+        userScrolled.current = (evt.target as HTMLDivElement).scrollHeight - (evt.target as HTMLDivElement).offsetHeight - (evt.target as HTMLDivElement).scrollTop > 1;\n+    }, []);\n+\n     return (\n         <Tooltip title={hover || \"\"}>\n             <Paper className={`${className} ${getComponentClassName(props.children)}`} sx={boxSx} id={id}>\n-                <Grid container rowSpacing={2} sx={gridSx} ref={scrollDivRef}>\n+                <Grid container rowSpacing={2} sx={gridSx} ref={scrollDivRef} onScroll={handleOnScroll}>\n                     {rows.length && !rows[0] ? (\n                         <Grid className={getSuffixedClassNames(className, \"-load\")} size={12} sx={noAnchorSx}>\n                             <Box sx={loadMoreSx}>\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] Chat control should automatically scroll down when a new message is added\n### What went wrong? \ud83e\udd14\n\nThis is needed in a patch version of the 4.0 version.\n\nThis issue comes from a customer who needs to solve this in December.\n\nWhen a new message is added in the chat control, the chat should (or should at least have the option to) automatically scroll down to see the new message, even if the chat is not scrolled all the way down.\n\n### Steps to Reproduce Issue\n\nUsing the following:\n```python\nfrom taipy.gui import Gui\nimport taipy.gui.builder as tgb\n\nmessages = []\n\n\ndef evaluate(state, var_name: str, payload: dict):\n    state.messages.append(\n        [10, \"The MP5 is pretty fun to shoot actually, virtually no recoil\", \"Robot\"]\n    )\n    state.messages = state.messages\n\n\nwith tgb.Page() as page_home:\n    tgb.chat(\n        messages=\"{messages}\",\n        on_action=evaluate,\n        height=\"80vh\",\n    )\n\ngui = Gui(page=page_home)\ngui.run()\n```\n\nType a bunch of messages until there is no more space left in the chat control. The newer messages won't be visible unless you scroll.\n\n### Browsers\n\nChrome\n\n### OS\n\nWindows\n\n### Version of Taipy\n\n4.0.1\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Chat control should automatically scroll down when a new message is added\n### What went wrong? \ud83e\udd14\n\nThis is needed in a patch version of the 4.0 version.\n\nThis issue comes from a customer who needs to solve this in December.\n\nWhen a new message is added in the chat control, the chat should (or should at least have the option to) automatically scroll down to see the new message, even if the chat is not scrolled all the way down.\n\n### Steps to Reproduce Issue\n\nUsing the following:\n```python\nfrom taipy.gui import Gui\nimport taipy.gui.builder as tgb\n\nmessages = []\n\n\ndef evaluate(state, var_name: str, payload: dict):\n    state.messages.append(\n        [10, \"The MP5 is pretty fun to shoot actually, virtually no recoil\", \"Robot\"]\n    )\n    state.messages = state.messages\n\n\nwith tgb.Page() as page_home:\n    tgb.chat(\n        messages=\"{messages}\",\n        on_action=evaluate,\n        height=\"80vh\",\n    )\n\ngui = Gui(page=page_home)\ngui.run()\n```\n\nType a bunch of messages until there is no more space left in the chat control. The newer messages won't be visible unless you scroll.\n\n### Browsers\n\nChrome\n\n### OS\n\nWindows\n\n### Version of Taipy\n\n4.0.1\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\n- [ ] Any new code is covered by a unit tested.\n- [ ] Check code coverage is at least 90%.\n- [ ] The bug reporter validated the fix.\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "Hi, I'd like to contribute to solving this issue. I plan to implement an automatic scroll-to-bottom functionality for the chat control when a new message is added, with an optional setting to toggle this behavior. I'll make sure to consider the current implementation and test the changes thoroughly. Please let me know if there are any specific requirements or considerations I should keep in mind. Thanks!\r\n\nI have assigned it to you! \r\n\r\nThis should automatically scroll down only if you are already scrolled down at the bottom \n@Akashns007. This issue suddenly appears to be a priority.\r\nWe are assigning someone from the team on this as well, and let the faster win.\r\n\r\nHere are the requirements:\r\n- When the chat receives its first messages, they should stack until the area becomes scrollable.\r\n  Then the bottom area should remain visible, as if the user was scrolling down manually.\r\n- If the user wants to go back in the history, this auto-scroll should stop, to let the user read what needs to be.\r\n  When new messages come in, instead of scrolling, a little overlay indicator shows that new incoming message are to be read (this is already implemented). Clicking this indicator scrolls all down the way to reveal the new messages.\r\n- If the chat area is scrolled entirely to the bottom (whether when it first becomes scrollable, or when the user manually scrolls all the way down, or if the 'new incoming messages' notification was clicked), then auto-scroll is re-enabled.\r\n\r\nI see no point of providing a new property to handle this, which should be the normal behavior.\nHi, I'd like to contribute to solving this issue. I plan to implement an automatic scroll-to-bottom functionality for the chat control when a new message is added, with an optional setting to toggle this behavior. I'll make sure to consider the current implementation and test the changes thoroughly. Please let me know if there are any specific requirements or considerations I should keep in mind. Thanks!\r\n\nI have assigned it to you! \r\n\r\nThis should automatically scroll down only if you are already scrolled down at the bottom \n@Akashns007. This issue suddenly appears to be a priority.\r\nWe are assigning someone from the team on this as well, and let the faster win.\r\n\r\nHere are the requirements:\r\n- When the chat receives its first messages, they should stack until the area becomes scrollable.\r\n  Then the bottom area should remain visible, as if the user was scrolling down manually.\r\n- If the user wants to go back in the history, this auto-scroll should stop, to let the user read what needs to be.\r\n  When new messages come in, instead of scrolling, a little overlay indicator shows that new incoming message are to be read (this is already implemented). Clicking this indicator scrolls all down the way to reveal the new messages.\r\n- If the chat area is scrolled entirely to the bottom (whether when it first becomes scrollable, or when the user manually scrolls all the way down, or if the 'new incoming messages' notification was clicked), then auto-scroll is re-enabled.\r\n\r\nI see no point of providing a new property to handle this, which should be the normal behavior.", "created_at": "2024-12-10T16:56:57Z"}
{"repo": "Avaiga/taipy", "pull_number": 2314, "instance_id": "Avaiga__taipy-2314", "issue_numbers": ["2302", "2302"], "base_commit": "89363325b1b4d60a7a3673d1db934d4e15c3d40f", "patch": "diff --git a/frontend/taipy-gui/public/stylekit/controls/selector.css b/frontend/taipy-gui/public/stylekit/controls/selector.css\nindex cdb929aca4..0e56ecdc7d 100644\n--- a/frontend/taipy-gui/public/stylekit/controls/selector.css\n+++ b/frontend/taipy-gui/public/stylekit/controls/selector.css\n@@ -22,7 +22,7 @@\n **************************************************/\n \n .taipy-selector {\n-  margin: 4px 0;\n+  margin: 0;\n }\n \n \ndiff --git a/frontend/taipy-gui/src/components/Taipy/Chart.tsx b/frontend/taipy-gui/src/components/Taipy/Chart.tsx\nindex c8411cbf78..acdf280743 100644\n--- a/frontend/taipy-gui/src/components/Taipy/Chart.tsx\n+++ b/frontend/taipy-gui/src/components/Taipy/Chart.tsx\n@@ -280,6 +280,11 @@ const updateArrays = (sel: number[][], val: number[], idx: number) => {\n     return sel;\n };\n \n+const getDataKey = (columns: Record<string, ColumnDesc>, decimators?: string[]): [string[], string] => {\n+    const backCols = Object.values(columns).map((col) => col.dfid);\n+    return [backCols, backCols.join(\"-\") + (decimators ? `--${decimators.join(\"\")}` : \"\")];\n+};\n+\n const Chart = (props: ChartProp) => {\n     const {\n         title = \"\",\n@@ -348,9 +353,8 @@ const Chart = (props: ChartProp) => {\n     const config = useDynamicJsonProperty(props.config, props.defaultConfig, defaultConfig);\n \n     useEffect(() => {\n-        if (updateVarName && (refresh || !data[dataKey])) {\n-            const backCols = Object.values(config.columns).map((col) => col.dfid);\n-            const dtKey = backCols.join(\"-\") + (config.decimators ? `--${config.decimators.join(\"\")}` : \"\");\n+        if (updateVarName) {\n+            const [backCols, dtKey] = getDataKey(config.columns, config.decimators);\n             setDataKey(dtKey);\n             if (refresh || !data[dtKey]) {\n                 dispatch(\n@@ -395,7 +399,10 @@ const Chart = (props: ChartProp) => {\n             layout.template = template;\n         }\n         if (props.figure) {\n-            return merge({},props.figure[0].layout as Partial<Layout>, layout, {title: title || layout.title || (props.figure[0].layout as Partial<Layout>).title, clickmode: \"event+select\"});\n+            return merge({}, props.figure[0].layout as Partial<Layout>, layout, {\n+                title: title || layout.title || (props.figure[0].layout as Partial<Layout>).title,\n+                clickmode: \"event+select\",\n+            });\n         }\n         return {\n             ...layout,\n@@ -442,8 +449,12 @@ const Chart = (props: ChartProp) => {\n         if (props.figure) {\n             return lastDataPl.current;\n         }\n-        if (data.__taipy_refresh !== undefined && lastDataPl.current) {\n-            return lastDataPl.current;\n+        if (data.__taipy_refresh !== undefined) {\n+            return lastDataPl.current || [];\n+        }\n+        const dtKey = getDataKey(config.columns, config.decimators)[1];\n+        if (!dataKey.startsWith(dtKey)) {\n+            return lastDataPl.current || [];\n         }\n         const datum = data[dataKey];\n         lastDataPl.current = datum\n@@ -525,7 +536,7 @@ const Chart = (props: ChartProp) => {\n                   }\n                   return ret as Data;\n               })\n-            : [];\n+            : lastDataPl.current || [];\n         return lastDataPl.current;\n     }, [props.figure, selected, data, config, dataKey]);\n \n@@ -556,15 +567,10 @@ const Chart = (props: ChartProp) => {\n         (eventData: PlotRelayoutEvent) => {\n             onRangeChange && dispatch(createSendActionNameAction(id, module, { action: onRangeChange, ...eventData }));\n             if (config.decimators && !config.types.includes(\"scatter3d\")) {\n-                const backCols = Object.values(config.columns).map((col) => col.dfid);\n-                const eventDataKey = Object.entries(eventData)\n+                const [backCols, dtKeyBase] = getDataKey(config.columns, config.decimators);\n+                const dtKey = `${dtKeyBase}--${Object.entries(eventData)\n                     .map(([k, v]) => `${k}=${v}`)\n-                    .join(\"-\");\n-                const dtKey =\n-                    backCols.join(\"-\") +\n-                    (config.decimators ? `--${config.decimators.join(\"\")}` : \"\") +\n-                    \"--\" +\n-                    eventDataKey;\n+                    .join(\"-\")}`;\n                 setDataKey(dtKey);\n                 dispatch(\n                     createRequestChartUpdateAction(\n", "test_patch": "", "problem_statement": "[\ud83d\udc1b BUG] Issue when rebuilding bar charts\n### What went wrong? \ud83e\udd14\n\nI'm using Taipy 4.0.1\r\nI created a bar chart, where I want a variable to determine the y axis, with always the same x. For example, I want to display the sales for a list of products, but sometimes I want the number of items sold, and sometimes I want the total amount in money units. And I can change the metric to use in y with a toggle button.\r\n\r\nWhile I don't get log errors, the chart has a weird behavior, like if it resets the index or something like that. \n\n### Expected Behavior\n\nThe x axis shouldn't change, and the y axis should show the values of the selected column\n\n### Steps to Reproduce Issue\n\n```python\r\nimport pandas as pd\r\nimport taipy as tp\r\nimport taipy.gui.builder as tgb\r\nfrom taipy.gui import Gui\r\n\r\ndf = pd.DataFrame(\r\n    {\r\n        \"class\": [\"a\", \"b\", \"c\", \"d\", \"e\"],\r\n        \"number_sales\": [100, 200, 150, 180, 220],\r\n        \"amount_sales\": [1503, 2560, 2009, 2302, 2708],\r\n    }\r\n)\r\n\r\nsales_display = \"number_sales\"\r\n\r\nwith tgb.Page() as bug_chart:\r\n    tgb.toggle(\"{sales_display}\", lov=[\"number_sales\", \"amount_sales\"])\r\n    tgb.chart(\r\n        data=\"{df}\",\r\n        type=\"bar\",\r\n        x=\"class\",\r\n        y=\"{sales_display}\",\r\n        rebuild=True,\r\n    )\r\n\r\ngui = Gui(page=bug_chart)\r\ngui.run(rebuild=True)\r\n```\n\n### Runtime Environment\n\nWindows 10, I used Python 12 within Anaconda, Taipy 4.0.1\n\n### Browsers\n\nChrome\n\n### OS\n\nWindows\n\n### Version of Taipy\n\n4.0.1\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n[\ud83d\udc1b BUG] Issue when rebuilding bar charts\n### What went wrong? \ud83e\udd14\n\nI'm using Taipy 4.0.1\r\nI created a bar chart, where I want a variable to determine the y axis, with always the same x. For example, I want to display the sales for a list of products, but sometimes I want the number of items sold, and sometimes I want the total amount in money units. And I can change the metric to use in y with a toggle button.\r\n\r\nWhile I don't get log errors, the chart has a weird behavior, like if it resets the index or something like that. \n\n### Expected Behavior\n\nThe x axis shouldn't change, and the y axis should show the values of the selected column\n\n### Steps to Reproduce Issue\n\n```python\r\nimport pandas as pd\r\nimport taipy as tp\r\nimport taipy.gui.builder as tgb\r\nfrom taipy.gui import Gui\r\n\r\ndf = pd.DataFrame(\r\n    {\r\n        \"class\": [\"a\", \"b\", \"c\", \"d\", \"e\"],\r\n        \"number_sales\": [100, 200, 150, 180, 220],\r\n        \"amount_sales\": [1503, 2560, 2009, 2302, 2708],\r\n    }\r\n)\r\n\r\nsales_display = \"number_sales\"\r\n\r\nwith tgb.Page() as bug_chart:\r\n    tgb.toggle(\"{sales_display}\", lov=[\"number_sales\", \"amount_sales\"])\r\n    tgb.chart(\r\n        data=\"{df}\",\r\n        type=\"bar\",\r\n        x=\"class\",\r\n        y=\"{sales_display}\",\r\n        rebuild=True,\r\n    )\r\n\r\ngui = Gui(page=bug_chart)\r\ngui.run(rebuild=True)\r\n```\n\n### Runtime Environment\n\nWindows 10, I used Python 12 within Anaconda, Taipy 4.0.1\n\n### Browsers\n\nChrome\n\n### OS\n\nWindows\n\n### Version of Taipy\n\n4.0.1\n\n### Acceptance Criteria\n\n- [ ] A unit test reproducing the bug is added.\r\n- [ ] Any new code is covered by a unit tested.\r\n- [ ] Check code coverage is at least 90%.\r\n- [ ] The bug reporter validated the fix.\r\n- [ ] Related issue(s) in taipy-doc are created for documentation and Release Notes are updated.\r\n\n\n### Code of Conduct\n\n- [X] I have checked the [existing issues](https://github.com/Avaiga/taipy/issues?q=is%3Aissue+).\n- [ ] I am willing to work on this issue (optional)\n", "hints_text": "\n", "created_at": "2024-12-10T15:34:11Z"}
