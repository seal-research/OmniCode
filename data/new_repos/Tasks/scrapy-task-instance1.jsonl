{"repo": "scrapy/scrapy", "pull_number": 5526, "instance_id": "scrapy__scrapy-5526", "issue_numbers": ["5515"], "base_commit": "e2769cfe484fa9bf3d4b36623471cc605393ec85", "patch": "diff --git a/scrapy/http/headers.py b/scrapy/http/headers.py\nindex 1a2b99b0a4e..9c03fe54f09 100644\n--- a/scrapy/http/headers.py\n+++ b/scrapy/http/headers.py\n@@ -1,3 +1,5 @@\n+from collections.abc import Mapping\n+\n from w3lib.http import headers_dict_to_raw\n from scrapy.utils.datatypes import CaselessDict\n from scrapy.utils.python import to_unicode\n@@ -10,6 +12,13 @@ def __init__(self, seq=None, encoding='utf-8'):\n         self.encoding = encoding\n         super().__init__(seq)\n \n+    def update(self, seq):\n+        seq = seq.items() if isinstance(seq, Mapping) else seq\n+        iseq = {}\n+        for k, v in seq:\n+            iseq.setdefault(self.normkey(k), []).extend(self.normvalue(v))\n+        super().update(iseq)\n+\n     def normkey(self, key):\n         \"\"\"Normalize key to bytes\"\"\"\n         return self._tobytes(key.title())\n@@ -86,4 +95,5 @@ def to_unicode_dict(self):\n \n     def __copy__(self):\n         return self.__class__(self)\n+\n     copy = __copy__\n", "test_patch": "diff --git a/tests/test_http_headers.py b/tests/test_http_headers.py\nindex 64ff7a73dbf..1ca93624794 100644\n--- a/tests/test_http_headers.py\n+++ b/tests/test_http_headers.py\n@@ -38,6 +38,12 @@ def test_multivalue(self):\n         self.assertEqual(h.getlist('X-Forwarded-For'), [b'ip1', b'ip2'])\n         assert h.getlist('X-Forwarded-For') is not hlist\n \n+    def test_multivalue_for_one_header(self):\n+        h = Headers(((\"a\", \"b\"), (\"a\", \"c\")))\n+        self.assertEqual(h[\"a\"], b\"c\")\n+        self.assertEqual(h.get(\"a\"), b\"c\")\n+        self.assertEqual(h.getlist(\"a\"), [b\"b\", b\"c\"])\n+\n     def test_encode_utf8(self):\n         h = Headers({'key': '\\xa3'}, encoding='utf-8')\n         key, val = dict(h).popitem()\n", "problem_statement": "Response.headers loses data on multiple values\nhttps://github.com/scrapy/scrapy/issues/1262 reported that by default `response.headers` would only expose the first value of a header e.g. when casted as a `dict`, acknowledging that `response.headers.getlist` could be used instead to get all values.\r\n\r\nI have just found out that the latter is not true:\r\n\r\n```python\r\n>>> from scrapy.http import Response\r\n>>> response = Response(\"https://example.com\", headers=((\"a\", \"b\"), (\"a\", \"c\")))\r\n>>> response.headers.getlist(\"a\")\r\n[b'c']\r\n```\r\n\r\nI could verify the issue happening as far back as Scrapy 1.6, so it does not look like a recent bug.\n", "hints_text": "", "created_at": "2022-06-11T19:24:16Z"}
