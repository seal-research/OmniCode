{"repo": "Textualize/rich", "pull_number": 3518, "instance_id": "Textualize__rich-3518", "issue_numbers": ["3517"], "base_commit": "5ba9cb56e68dcdf2db50c214d8f1412c8a50761b", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex a0bae8d55..1915a9d3c 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## Unreleased\n+\n+### Fixed\n+\n+- Fixed `Table` columns not highlighting when added by `add_row` https://github.com/Textualize/rich/issues/3517\n+\n ## [13.9.1] - 2024-10-01\n \n ### Fixed\ndiff --git a/rich/table.py b/rich/table.py\nindex 10af2e6f4..7b1fa9e4b 100644\n--- a/rich/table.py\n+++ b/rich/table.py\n@@ -451,7 +451,7 @@ def add_cell(column: Column, renderable: \"RenderableType\") -> None:\n             ]\n         for index, renderable in enumerate(cell_renderables):\n             if index == len(columns):\n-                column = Column(_index=index)\n+                column = Column(_index=index, highlight=self.highlight)\n                 for _ in self.rows:\n                     add_cell(column, Text(\"\"))\n                 self.columns.append(column)\n", "test_patch": "diff --git a/tests/test_table.py b/tests/test_table.py\nindex 79033f215..8767283c5 100644\n--- a/tests/test_table.py\n+++ b/tests/test_table.py\n@@ -363,6 +363,25 @@ def test_placement_table_box_elements(show_header, show_footer, expected):\n     assert output == expected\n \n \n+def test_columns_highlight_added_by_add_row() -> None:\n+    \"\"\"Regression test for https://github.com/Textualize/rich/issues/3517\"\"\"\n+    table = Table(show_header=False, highlight=True)\n+    table.add_row(\"1\", repr(\"FOO\"))\n+\n+    assert table.columns[0].highlight == table.highlight\n+    assert table.columns[1].highlight == table.highlight\n+\n+    console = Console(record=True)\n+    console.print(table)\n+    output = console.export_text(styles=True)\n+    print(repr(output))\n+\n+    expected = (\n+        \"\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n\u2502 \\x1b[1;36m1\\x1b[0m \u2502 \\x1b[32m'FOO'\\x1b[0m \u2502\\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n\"\n+    )\n+    assert output == expected\n+\n+\n if __name__ == \"__main__\":\n     render = render_tables()\n     print(render)\n", "problem_statement": "[BUG] Post 13.8.1 table automatic highlighting no longer works\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nPost the 13.8.1 release, automatic highlighting of cell contents no longer seems to work.\r\n\r\nRunning the following\r\n```python\r\nfrom rich import print\r\nfrom rich.table import Table\r\n\r\nt = Table(highlight=True, show_header=False)\r\nt.add_row(\"1\", repr(\"FOO\"))\r\nprint(t)\r\n```\r\n\r\nWith release 13.7.1, one before 13.8.1, automatic highlighting works.\r\n\r\nBut with 13.8.1 or greater there's no automatic highlighting in the output.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\n```\r\n(python -m rich.diagnose & pip freeze | grep rich) | clipcopy\r\n```\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=265 None>                                                     \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = None                                                          \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 38                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = False                                                         \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = False                                                         \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=265, height=38),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=265,                                            \u2502\r\n\u2502                        is_terminal=False,                                        \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=38,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=265, height=38)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 265                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {'TERM': 'alacritty', 'COLORTERM': 'truecolor', 'CLICOLOR': None, 'NO_COLOR': None, 'TERM_PROGRAM': 'tmux', 'COLUMNS': None, 'LINES': None, 'JUPYTER_COLUMNS': None, 'JUPYTER_LINES': None, 'JPY_PARENT_PID': None, 'VSCODE_VERBOSE_LOGGING': None} \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Darwin\"\r\nrich==13.7.1\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2024-10-03T15:10:54Z"}
{"repo": "Textualize/rich", "pull_number": 3455, "instance_id": "Textualize__rich-3455", "issue_numbers": ["3368", "3368"], "base_commit": "1b2dada1c9fa6f16ec319a8d370458c8bde203f7", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex ef65c7a78..078a5c050 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -17,6 +17,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Progress track thread is now a daemon thread https://github.com/Textualize/rich/pull/3402\n - Fixed cached hash preservation upon clearing meta and links https://github.com/Textualize/rich/issues/2942\n - Fixed overriding the `background_color` of `Syntax` not including padding https://github.com/Textualize/rich/issues/3295\n+- Fixed pretty printing of dataclasses with a default repr in Python 3.13 https://github.com/Textualize/rich/pull/3455\n - Fixed selective enabling of highlighting when disabled in the `Console` https://github.com/Textualize/rich/issues/3419\n - Fixed BrokenPipeError writing an error message https://github.com/Textualize/rich/pull/3468\n - Fixed superfluous space above Markdown tables https://github.com/Textualize/rich/pull/3469\ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex edacc5885..7b95e1484 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -85,3 +85,4 @@ The following people have contributed to the development of Rich:\n - [Pierro](https://github.com/xpierroz)\n - [Bernhard Wagner](https://github.com/bwagner)\n - [Aaron Beaudoin](https://github.com/AaronBeaudoin)\n+- [Jonathan Helmus](https://github.com/jjhelmus)\ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex fa340212e..e0c78f627 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -3,6 +3,7 @@\n import dataclasses\n import inspect\n import os\n+import reprlib\n import sys\n from array import array\n from collections import Counter, UserDict, UserList, defaultdict, deque\n@@ -78,7 +79,10 @@ def _is_dataclass_repr(obj: object) -> bool:\n     # Digging in to a lot of internals here\n     # Catching all exceptions in case something is missing on a non CPython implementation\n     try:\n-        return obj.__repr__.__code__.co_filename == dataclasses.__file__\n+        return obj.__repr__.__code__.co_filename in (\n+            dataclasses.__file__,\n+            reprlib.__file__,\n+        )\n     except Exception:  # pragma: no coverage\n         return False\n \n", "test_patch": "", "problem_statement": "[BUG] Test failures with Python 3.13.0b1: test_pretty.py and dataclass repr\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\n3 of `test_pretty` fail with Python 3.13.0b1:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n____________________________ test_pretty_dataclass _____________________________\r\n\r\n    def test_pretty_dataclass():\r\n        dc = ExampleDataclass(1000, \"Hello, World\", 999, [\"foo\", \"bar\", \"baz\"])\r\n        result = pretty_repr(dc, max_width=80)\r\n        print(repr(result))\r\n        assert (\r\n            result\r\n            == \"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\"\r\n        )\r\n        result = pretty_repr(dc, max_width=16)\r\n        print(repr(result))\r\n>       assert (\r\n            result\r\n            == \"ExampleDataclass(\\n    foo=1000,\\n    bar='Hello, World',\\n    baz=[\\n        'foo',\\n        'bar',\\n        'baz'\\n    ]\\n)\"\r\n        )\r\nE       assert \"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\" == \"ExampleDataclass(\\n    foo=1000,\\n    bar='Hello, World',\\n    baz=[\\n        'foo',\\n        'bar',\\n        'baz'\\n    ]\\n)\"\r\nE         + ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\r\nE         - ExampleDataclass(\r\nE         -     foo=1000,\r\nE         -     bar='Hello, World',\r\nE         -     baz=[\r\nE         -         'foo',\r\nE         -         'bar',\r\nE         -         'baz'\r\nE         -     ]\r\nE         - )\r\n\r\ntests/test_pretty.py:184: AssertionError\r\n----------------------------- Captured stdout call -----------------------------\r\n\"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\"\r\n\"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\"\r\n________________________ test_reference_cycle_dataclass ________________________\r\n\r\n    def test_reference_cycle_dataclass():\r\n        @dataclass\r\n        class Example:\r\n            x: int\r\n            y: Any\r\n    \r\n        test = Example(1, None)\r\n        test.y = test\r\n        res = pretty_repr(test)\r\n>       assert res == \"Example(x=1, y=...)\"\r\nE       AssertionError: assert 'test_reference_cycle_dataclass.<locals>.Example(x=1, y=...)' == 'Example(x=1, y=...)'\r\nE         - Example(x=1, y=...)\r\nE         + test_reference_cycle_dataclass.<locals>.Example(x=1, y=...)\r\n\r\ntests/test_pretty.py:356: AssertionError\r\n___________________________ test_max_depth_dataclass ___________________________\r\n\r\n    def test_max_depth_dataclass():\r\n        @dataclass\r\n        class Foo:\r\n            foo: object\r\n    \r\n        @dataclass\r\n        class Bar:\r\n            bar: object\r\n    \r\n>       assert (\r\n            pretty_repr(Foo(foo=Bar(bar=Foo(foo=[]))), max_depth=2)\r\n            == \"Foo(foo=Bar(bar=Foo(...)))\"\r\n        )\r\nE       AssertionError: assert 'test_max_depth_dataclass.<locals>.Foo(foo=test_max_depth_dataclass.<locals>.Bar(bar=test_max_depth_dataclass.<locals>.Foo(foo=[])))' == 'Foo(foo=Bar(bar=Foo(...)))'\r\nE         - Foo(foo=Bar(bar=Foo(...)))\r\nE         + test_max_depth_dataclass.<locals>.Foo(foo=test_max_depth_dataclass.<locals>.Bar(bar=test_max_depth_dataclass.<locals>.Foo(foo=[])))\r\n\r\ntests/test_pretty.py:487: AssertionError\r\n=========================== short test summary info ============================\r\nFAILED tests/test_pretty.py::test_pretty_dataclass - assert \"ExampleDataclass...\r\nFAILED tests/test_pretty.py::test_reference_cycle_dataclass - AssertionError:...\r\nFAILED tests/test_pretty.py::test_max_depth_dataclass - AssertionError: asser...\r\n============= 3 failed, 799 passed, 24 skipped, 1 warning in 4.76s =============\r\n```\r\nEdit this with a clear and concise description of what the bug.\r\n\r\nProvide a minimal code example that demonstrates the issue if you can. If the issue is visual in nature, consider posting a screenshot.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nFedora Linux 41\r\n\r\n</details>\r\n\n[BUG] Test failures with Python 3.13.0b1: test_pretty.py and dataclass repr\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\n3 of `test_pretty` fail with Python 3.13.0b1:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n____________________________ test_pretty_dataclass _____________________________\r\n\r\n    def test_pretty_dataclass():\r\n        dc = ExampleDataclass(1000, \"Hello, World\", 999, [\"foo\", \"bar\", \"baz\"])\r\n        result = pretty_repr(dc, max_width=80)\r\n        print(repr(result))\r\n        assert (\r\n            result\r\n            == \"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\"\r\n        )\r\n        result = pretty_repr(dc, max_width=16)\r\n        print(repr(result))\r\n>       assert (\r\n            result\r\n            == \"ExampleDataclass(\\n    foo=1000,\\n    bar='Hello, World',\\n    baz=[\\n        'foo',\\n        'bar',\\n        'baz'\\n    ]\\n)\"\r\n        )\r\nE       assert \"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\" == \"ExampleDataclass(\\n    foo=1000,\\n    bar='Hello, World',\\n    baz=[\\n        'foo',\\n        'bar',\\n        'baz'\\n    ]\\n)\"\r\nE         + ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\r\nE         - ExampleDataclass(\r\nE         -     foo=1000,\r\nE         -     bar='Hello, World',\r\nE         -     baz=[\r\nE         -         'foo',\r\nE         -         'bar',\r\nE         -         'baz'\r\nE         -     ]\r\nE         - )\r\n\r\ntests/test_pretty.py:184: AssertionError\r\n----------------------------- Captured stdout call -----------------------------\r\n\"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\"\r\n\"ExampleDataclass(foo=1000, bar='Hello, World', baz=['foo', 'bar', 'baz'])\"\r\n________________________ test_reference_cycle_dataclass ________________________\r\n\r\n    def test_reference_cycle_dataclass():\r\n        @dataclass\r\n        class Example:\r\n            x: int\r\n            y: Any\r\n    \r\n        test = Example(1, None)\r\n        test.y = test\r\n        res = pretty_repr(test)\r\n>       assert res == \"Example(x=1, y=...)\"\r\nE       AssertionError: assert 'test_reference_cycle_dataclass.<locals>.Example(x=1, y=...)' == 'Example(x=1, y=...)'\r\nE         - Example(x=1, y=...)\r\nE         + test_reference_cycle_dataclass.<locals>.Example(x=1, y=...)\r\n\r\ntests/test_pretty.py:356: AssertionError\r\n___________________________ test_max_depth_dataclass ___________________________\r\n\r\n    def test_max_depth_dataclass():\r\n        @dataclass\r\n        class Foo:\r\n            foo: object\r\n    \r\n        @dataclass\r\n        class Bar:\r\n            bar: object\r\n    \r\n>       assert (\r\n            pretty_repr(Foo(foo=Bar(bar=Foo(foo=[]))), max_depth=2)\r\n            == \"Foo(foo=Bar(bar=Foo(...)))\"\r\n        )\r\nE       AssertionError: assert 'test_max_depth_dataclass.<locals>.Foo(foo=test_max_depth_dataclass.<locals>.Bar(bar=test_max_depth_dataclass.<locals>.Foo(foo=[])))' == 'Foo(foo=Bar(bar=Foo(...)))'\r\nE         - Foo(foo=Bar(bar=Foo(...)))\r\nE         + test_max_depth_dataclass.<locals>.Foo(foo=test_max_depth_dataclass.<locals>.Bar(bar=test_max_depth_dataclass.<locals>.Foo(foo=[])))\r\n\r\ntests/test_pretty.py:487: AssertionError\r\n=========================== short test summary info ============================\r\nFAILED tests/test_pretty.py::test_pretty_dataclass - assert \"ExampleDataclass...\r\nFAILED tests/test_pretty.py::test_reference_cycle_dataclass - AssertionError:...\r\nFAILED tests/test_pretty.py::test_max_depth_dataclass - AssertionError: asser...\r\n============= 3 failed, 799 passed, 24 skipped, 1 warning in 4.76s =============\r\n```\r\nEdit this with a clear and concise description of what the bug.\r\n\r\nProvide a minimal code example that demonstrates the issue if you can. If the issue is visual in nature, consider posting a screenshot.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nFedora Linux 41\r\n\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)\nThank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2024-08-16T17:48:35Z"}
{"repo": "Textualize/rich", "pull_number": 3420, "instance_id": "Textualize__rich-3420", "issue_numbers": ["3419"], "base_commit": "e1e6d745f670ff3df6b8f47377c0a4006cb74066", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex e1a042249..9a33db4ab 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -17,6 +17,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Progress track thread is now a daemon thread https://github.com/Textualize/rich/pull/3402\n - Fixed cached hash preservation upon clearing meta and links https://github.com/Textualize/rich/issues/2942\n - Fixed overriding the `background_color` of `Syntax` not including padding https://github.com/Textualize/rich/issues/3295\n+- Fixed selective enabling of highlighting when disabled in the `Console` https://github.com/Textualize/rich/issues/3419\n \n ### Changed\n \ndiff --git a/rich/console.py b/rich/console.py\nindex 23cc44d55..ee543553d 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -1535,7 +1535,11 @@ def check_text() -> None:\n             if isinstance(renderable, str):\n                 append_text(\n                     self.render_str(\n-                        renderable, emoji=emoji, markup=markup, highlighter=_highlighter\n+                        renderable,\n+                        emoji=emoji,\n+                        markup=markup,\n+                        highlight=highlight,\n+                        highlighter=_highlighter,\n                     )\n                 )\n             elif isinstance(renderable, Text):\n", "test_patch": "", "problem_statement": "[BUG] highlighting for console.print cannot be enabled per line later on if disabled during creation of Console\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\n\n- [X] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\n\n\n**Describe the bug**\n\n\nWhen `highlight` is set to False upon creation of Console (console = Console(highlight=False), it does not appear to re-enable later on if I set `highlight=True` for an individual line.\n\n\nI have only been learning Python for 3-4 weeks at most so far, so apologies if this is not actually a bug and I'm doing something incorrectly (or it actually *is* in the docs)\n\n\n```py\n\nfrom rich.console import Console\n\n\nconsole = Console(highlight=False)\n\n\n# This works as intended with no highlighting applied to the numbers.\n\nconsole.print('Testing 1 2 3')\n\n# This does not, as the output is the same as the above even though I have tried to enable highlighting for this line.\n\nconsole.print('Testing 1 2 3', highlight=True)\n\n```\n\n\n**Platform**\n\n<details>\n\n<summary>Click to expand</summary>\n\n\nWindows 11, Windows Terminal\n\nWindows 11, Visual Studio Code integrated terminal\n\nUbuntu 22.04, Visual Studio Code integrated terminal\n\n\n```\n\npython -m rich.diagnose:\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\n\u2502 A high level console interface. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\n\u2502 \u2502 <console width=198 ColorSystem.TRUECOLOR> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502 \u2502\n\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 color_system = 'truecolor' \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 encoding = 'utf-8' \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 height = 13 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0is_alt_screen = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 is_dumb_terminal = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 is_interactive = True \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 is_jupyter = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0is_terminal = True \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 legacy_windows = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 no_color = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0options = ConsoleOptions( \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size=ConsoleDimensions(width=198, height=13), \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0legacy_windows=False, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0min_width=1, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0max_width=198, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0is_terminal=True, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0encoding='utf-8', \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0max_height=13, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0justify=None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0overflow=None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0no_wrap=False, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0highlight=None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0markup=None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0height=None \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0quiet = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 record = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 safe_box = True \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 size = ConsoleDimensions(width=198, height=13) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0soft_wrap = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stderr = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0style = None \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 tab_size = 8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0width = 198 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\n\n\u2502 Windows features available. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\n\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 truecolor = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 \u00a0 \u00a0vt = False \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\n\u2502 { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 'TERM': 'xterm-256color', \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 'COLORTERM': 'truecolor', \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 'CLICOLOR': None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 'NO_COLOR': None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 'TERM_PROGRAM': 'vscode', \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 'COLUMNS': None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 'LINES': None, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 'JUPYTER_COLUMNS': None, \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 'JUPYTER_LINES': None, \u00a0 \u00a0 \u00a0 \u00a0 \u2502\n\n\u2502 \u00a0 \u00a0 'JPY_PARENT_PID': None, \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2502 \u00a0 \u00a0 'VSCODE_VERBOSE_LOGGING': None \u2502\n\n\u2502 } \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2502\n\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nplatform=\"Linux\"\n\n\npip freeze | grep rich:\n\nrich==13.7.1\n\n```\n\n</details>\n", "hints_text": "We found the following entries in the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) which you may find helpful:\n\n\n- [How do I render console markup in RichHandler?](https://github.com/textualize/rich/blob/master/FAQ.md#how-do-i-render-console-markup-in-richhandler)\n- [Strange colors in console output.](https://github.com/textualize/rich/blob/master/FAQ.md#strange-colors-in-console-output)\n\nFeel free to close this issue if you found an answer in the FAQ. Otherwise, please give us a little time to review.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2024-07-10T10:19:53Z"}
{"repo": "Textualize/rich", "pull_number": 3413, "instance_id": "Textualize__rich-3413", "issue_numbers": ["3412"], "base_commit": "ee46ccd301c311d93cafd82c4eac9066f06646dd", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 8191a7767..c86bf324c 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -16,6 +16,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n ### Fixed\n \n - Fixed issue with Segment._split_cells https://github.com/Textualize/rich/pull/3506\n+- Fix auto detection of terminal size on Windows https://github.com/Textualize/rich/pull/2916\n \n ### Added\n \ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 9294136fa..4dd14dde1 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -87,5 +87,6 @@ The following people have contributed to the development of Rich:\n - [Pierro](https://github.com/xpierroz)\n - [Bernhard Wagner](https://github.com/bwagner)\n - [Aaron Beaudoin](https://github.com/AaronBeaudoin)\n+- [L. Yeung](https://github.com/lewis-yeung)\n - [chthollyphile](https://github.com/chthollyphile)\n - [Jonathan Helmus](https://github.com/jjhelmus)\ndiff --git a/rich/console.py b/rich/console.py\nindex 9e697327b..9ef0d60bb 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -1005,19 +1005,13 @@ def size(self) -> ConsoleDimensions:\n         width: Optional[int] = None\n         height: Optional[int] = None\n \n-        if WINDOWS:  # pragma: no cover\n+        for file_descriptor in _STD_STREAMS_OUTPUT if WINDOWS else _STD_STREAMS:\n             try:\n-                width, height = os.get_terminal_size()\n+                width, height = os.get_terminal_size(file_descriptor)\n             except (AttributeError, ValueError, OSError):  # Probably not a terminal\n                 pass\n-        else:\n-            for file_descriptor in _STD_STREAMS:\n-                try:\n-                    width, height = os.get_terminal_size(file_descriptor)\n-                except (AttributeError, ValueError, OSError):\n-                    pass\n-                else:\n-                    break\n+            else:\n+                break\n \n         columns = self._environ.get(\"COLUMNS\")\n         if columns is not None and columns.isdigit():\n", "test_patch": "", "problem_statement": "[BUG] Incorrect auto detection of terminal size on Windows\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n## Describe the bug\r\n\r\n**I don't know why my PR #2916 didn't get any response and was finally closed. Anyway, I'm opening this issue to restate the bug.**\r\n\r\nCurrently, the automatic detection of terminal size **on Windows** is only performed for `_STDOUT_FILENO` which is the default value passed to `os.get_terminal_size`. So if we redirect the standard output (`stdout`) to a file and create a `Console` on the standard error (`stderr`) with `width` and `height` left `None`, the auto-detected terminal size will always be a fallback value `(80, 25)` (supposing that `legacy_windows` is `False`).\r\n\r\nA simple example to illustrate this problem: on Windows, run the following test script with `stdout` redirected to a file, while `stderr` was still connected to a terminal, e.g., with width = 140 and height = 21:\r\n\r\n```python\r\nimport sys\r\nfrom rich.console import Console\r\n\r\nconsole = Console(stderr=True, legacy_windows=False)\r\nprint(console.size, file=sys.stderr)\r\n```\r\n\r\nThe output is\r\n\r\n```\r\nConsoleDimensions(width=80, height=25)\r\n```\r\n\r\nwhich is not the expected:\r\n\r\n```\r\nConsoleDimensions(width=140, height=21)\r\n```\r\n\r\nHowever, this works as expected On Linux.\r\n\r\n## Platform\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nThe output of `python -m rich.diagnose` (tested in Rich v13.7.1):\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=140 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 21                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=140, height=21),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=140,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=21,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=140, height=21)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 140                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                         \u2502\r\n\u2502                                                     \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=True, truecolor=True) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                     \u2502\r\n\u2502 truecolor = True                                    \u2502\r\n\u2502        vt = True                                    \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': None,                  \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': 'vscode',      \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': None,       \u2502\r\n\u2502     'JUPYTER_LINES': None,         \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Windows\"\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2024-07-02T14:34:01Z"}
{"repo": "Textualize/rich", "pull_number": 3296, "instance_id": "Textualize__rich-3296", "issue_numbers": ["3295"], "base_commit": "fde5d6eee3b0437eaecdcbf6f8b11aeab3a5d503", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex e153073c2..9eff3e39f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,7 +5,6 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n-\n ## Unreleased\n \n ### Fixed\n@@ -16,6 +15,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Thread used in progress.track will exit if an exception occurs in a generator https://github.com/Textualize/rich/pull/3402\n - Progress track thread is now a daemon thread https://github.com/Textualize/rich/pull/3402\n - Fixed cached hash preservation upon clearing meta and links https://github.com/Textualize/rich/issues/2942\n+- Fixed overriding the `background_color` of `Syntax` not including padding https://github.com/Textualize/rich/issues/3295\n \n ### Changed\n \n@@ -31,6 +31,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ## [13.7.1] - 2024-02-28\n \n+\n ### Fixed\n \n - Updated the widths of some characters https://github.com/Textualize/rich/pull/3289\ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex b107adc83..0ce5307ab 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -20,6 +20,7 @@ The following people have contributed to the development of Rich:\n - [Aryaz Eghbali](https://github.com/AryazE)\n - [Oleksis Fraga](https://github.com/oleksis)\n - [Andy Gimblett](https://github.com/gimbo)\n+- [Tom Gooding](https://github.com/TomJGooding)\n - [Micha\u0142 G\u00f3rny](https://github.com/mgorny)\n - [Nok Lam Chan](https://github.com/noklam)\n - [Leron Gray](https://github.com/daddycocoaman)\ndiff --git a/rich/syntax.py b/rich/syntax.py\nindex f3ceff758..4da6c3b7a 100644\n--- a/rich/syntax.py\n+++ b/rich/syntax.py\n@@ -619,9 +619,7 @@ def __rich_console__(\n     ) -> RenderResult:\n         segments = Segments(self._get_syntax(console, options))\n         if self.padding:\n-            yield Padding(\n-                segments, style=self._theme.get_background_style(), pad=self.padding\n-            )\n+            yield Padding(segments, style=self._get_base_style(), pad=self.padding)\n         else:\n             yield segments\n \n", "test_patch": "diff --git a/tests/test_syntax.py b/tests/test_syntax.py\nindex 37cc293eb..bbd4c7a5c 100644\n--- a/tests/test_syntax.py\n+++ b/tests/test_syntax.py\n@@ -406,6 +406,23 @@ def test_syntax_measure():\n     assert code.__rich_measure__(console, console.options) == Measurement(3, 24)\n \n \n+def test_background_color_override_includes_padding():\n+    \"\"\"Regression test for https://github.com/Textualize/rich/issues/3295\"\"\"\n+\n+    syntax = Syntax(\n+        \"x = 1\",\n+        lexer=\"python\",\n+        padding=(1, 3),\n+        background_color=\"red\",\n+    )\n+    result = render(syntax)\n+    print(repr(result))\n+    assert (\n+        result\n+        == \"\\x1b[41m                                                                                                    \\x1b[0m\\n\\x1b[41m   \\x1b[0m\\x1b[38;2;248;248;242;41mx\\x1b[0m\\x1b[38;2;248;248;242;41m \\x1b[0m\\x1b[38;2;255;70;137;41m=\\x1b[0m\\x1b[38;2;248;248;242;41m \\x1b[0m\\x1b[38;2;174;129;255;41m1\\x1b[0m\\x1b[41m                                                                                         \\x1b[0m\\x1b[41m   \\x1b[0m\\n\\x1b[41m                                                                                                    \\x1b[0m\\n\"\n+    )\n+\n+\n if __name__ == \"__main__\":\n     syntax = Panel.fit(\n         Syntax(\n", "problem_statement": "[BUG] Overriding `background_color` of `Syntax` doesn't include padding\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nSee https://github.com/Textualize/textual/discussions/4227#discussioncomment-8634837 for context.\r\n\r\nAccording to the [Syntax documentation](https://rich.readthedocs.io/en/stable/syntax.html#background-color):\r\n\r\n> You can override the background color from the theme by supplying a background_color argument to the constructor.\r\n\r\nHowever this doesn't seem to work as expected if the `Syntax` has padding:\r\n\r\n![image](https://github.com/Textualize/rich/assets/101601846/65b375da-a8ca-4f6d-b208-4f2435f713f8)\r\n\r\n```python\r\nfrom rich.console import Console\r\nfrom rich.syntax import Syntax\r\n\r\ncode = \"\"\"\\\r\ndef do_something():\r\n    pass\\\r\n\"\"\"\r\n\r\nconsole = Console()\r\n\r\nsyntax = Syntax(\r\n    code,\r\n    lexer=\"python\",\r\n    word_wrap=False,\r\n    indent_guides=True,\r\n    padding=(1, 2),\r\n    theme=\"material\",\r\n    background_color=\"red\",\r\n)\r\n\r\nconsole.print(syntax)\r\n```\r\n\r\nIf you set the `background_color` to the special value \"default\", this produces a different unexpected result:\r\n\r\n![image](https://github.com/Textualize/rich/assets/101601846/9a21cdf2-3617-4cb8-9e60-1891a8b7a67a)\r\n\r\n**Platform**\r\n\r\nPlatform is Linux and tested in various terminal emulators.\r\n\r\n```console\r\n$ pip freeze | grep rich\r\nrich==13.6.0\r\n```\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2024-02-29T20:41:42Z"}
{"repo": "Textualize/rich", "pull_number": 3257, "instance_id": "Textualize__rich-3257", "issue_numbers": ["3213"], "base_commit": "fd981823644ccf50d685ac9c0cfe8e1e56c9dd35", "patch": "diff --git a/docs/source/reference/text.rst b/docs/source/reference/text.rst\nindex 76b41f4bb..0b929e44b 100644\n--- a/docs/source/reference/text.rst\n+++ b/docs/source/reference/text.rst\n@@ -2,5 +2,5 @@ rich.text\n =========\n \n .. automodule:: rich.text\n-    :members: Text\n+    :members: Text, TextType\n \ndiff --git a/rich/text.py b/rich/text.py\nindex 7091e4291..7b32967f7 100644\n--- a/rich/text.py\n+++ b/rich/text.py\n@@ -38,7 +38,7 @@\n _re_whitespace = re.compile(r\"\\s+$\")\n \n TextType = Union[str, \"Text\"]\n-\"\"\"A plain string or a [Text][rich.text.Text] instance.\"\"\"\n+\"\"\"A plain string or a :class:`Text` instance.\"\"\"\n \n GetStyleCallable = Callable[[str], Optional[StyleType]]\n \n", "test_patch": "", "problem_statement": "Export `rich.text.TextType` so it shows up in the reference\nExporting `TextType` and making it visible in the docs means we'll be able to link to it from the Textual docs, where it shows up _a lot_.\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)\n@rodrigogiraoserrao I think this is done. Please check and close if it is.\nI don't think it is.\r\n`TextType` in `rich/text.py` _is_ documented with a docstring but it doesn't show up in the rich documentation online: https://rich.readthedocs.io/en/stable/reference/text.html\r\n\r\nIt's also not linked to from the Textual docs.\r\nE.g., in the `Button` reference the table with its parameters mentions the `TextType` but doesn't link to it: https://textual.textualize.io/widgets/button/#textual.widgets.Button\r\n\r\nThe rich docs may need to be rebuilt.\r\nI don't know how these docs work but maybe we need to add `TextStyle` to `rich/docs/source/reference/text.rst`:\r\n\r\nhttps://github.com/Textualize/rich/blob/fd981823644ccf50d685ac9c0cfe8e1e56c9dd35/docs/source/reference/text.rst?plain=1#L1-L5", "created_at": "2024-01-10T14:36:31Z"}
{"repo": "Textualize/rich", "pull_number": 3192, "instance_id": "Textualize__rich-3192", "issue_numbers": ["3142"], "base_commit": "21c0f25869bcdd0ef4e8ebc8d48c4b362147f740", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 1113f8617..f68d33c02 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## Unreleased\n+\n+### Added\n+\n+- Adds missing parameters to Panel.fit https://github.com/Textualize/rich/issues/3142\n+\n ## [13.6.0] - 2023-09-30\n \n ### Added\ndiff --git a/rich/panel.py b/rich/panel.py\nindex d522d80b5..95f4c84cf 100644\n--- a/rich/panel.py\n+++ b/rich/panel.py\n@@ -82,7 +82,9 @@ def fit(\n         style: StyleType = \"none\",\n         border_style: StyleType = \"none\",\n         width: Optional[int] = None,\n+        height: Optional[int] = None,\n         padding: PaddingDimensions = (0, 1),\n+        highlight: bool = False,\n     ) -> \"Panel\":\n         \"\"\"An alternative constructor that sets expand=False.\"\"\"\n         return cls(\n@@ -96,7 +98,9 @@ def fit(\n             style=style,\n             border_style=border_style,\n             width=width,\n+            height=height,\n             padding=padding,\n+            highlight=highlight,\n             expand=False,\n         )\n \n", "test_patch": "", "problem_statement": "[BUG] `Panel.fit` forgot `height` and `highlight` parameters\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\n`Panel.fit` forgot `height` and `highlight` parameters. It should be updated to synchronize with the constructor.\r\n\r\n```python\r\nclass Panel(JupyterMixin):\r\n    def __init__(\r\n        self,\r\n        renderable: \"RenderableType\",\r\n        box: Box = ROUNDED,\r\n        *,\r\n        title: Optional[TextType] = None,\r\n        title_align: AlignMethod = \"center\",\r\n        subtitle: Optional[TextType] = None,\r\n        subtitle_align: AlignMethod = \"center\",\r\n        safe_box: Optional[bool] = None,\r\n        expand: bool = True,\r\n        style: StyleType = \"none\",\r\n        border_style: StyleType = \"none\",\r\n        width: Optional[int] = None,\r\n        height: Optional[int] = None,\r\n        padding: PaddingDimensions = (0, 1),\r\n        highlight: bool = False,\r\n    ) -> None:\r\n        ...\r\n\r\n    @classmethod\r\n    def fit(\r\n        cls,\r\n        renderable: \"RenderableType\",\r\n        box: Box = ROUNDED,\r\n        *,\r\n        title: Optional[TextType] = None,\r\n        title_align: AlignMethod = \"center\",\r\n        subtitle: Optional[TextType] = None,\r\n        subtitle_align: AlignMethod = \"center\",\r\n        safe_box: Optional[bool] = None,\r\n        style: StyleType = \"none\",\r\n        border_style: StyleType = \"none\",\r\n        width: Optional[int] = None,\r\n        padding: PaddingDimensions = (0, 1),\r\n    ) -> \"Panel\":\r\n        ...\r\n```\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2023-11-07T12:21:27Z"}
{"repo": "Textualize/rich", "pull_number": 3180, "instance_id": "Textualize__rich-3180", "issue_numbers": ["3176"], "base_commit": "e76f3c3ea78481342e21a7b3328075462ab69c2b", "patch": "diff --git a/.gitignore b/.gitignore\nindex b291d4c2a..4d0a1d3a8 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -117,3 +117,5 @@ venv.bak/\n # airspeed velocity\n benchmarks/env/\n benchmarks/html/\n+\n+sandbox/\ndiff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 3562f6df6..64bcc5606 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -13,6 +13,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ### Fixed\n \n+- Some text goes missing during wrapping when it contains double width characters https://github.com/Textualize/rich/issues/3176\n - Ensure font is correctly inherited in exported HTML https://github.com/Textualize/rich/issues/3104\n \n ## [13.6.0] - 2023-09-30\ndiff --git a/rich/_wrap.py b/rich/_wrap.py\nindex c45f193f7..2e94ff6f4 100644\n--- a/rich/_wrap.py\n+++ b/rich/_wrap.py\n@@ -1,5 +1,7 @@\n+from __future__ import annotations\n+\n import re\n-from typing import Iterable, List, Tuple\n+from typing import Iterable\n \n from ._loop import loop_last\n from .cells import cell_len, chop_cells\n@@ -7,7 +9,11 @@\n re_word = re.compile(r\"\\s*\\S+\\s*\")\n \n \n-def words(text: str) -> Iterable[Tuple[int, int, str]]:\n+def words(text: str) -> Iterable[tuple[int, int, str]]:\n+    \"\"\"Yields each word from the text as a tuple\n+    containing (start_index, end_index, word). A \"word\" in this context may\n+    include the actual word and any whitespace to the right.\n+    \"\"\"\n     position = 0\n     word_match = re_word.match(text, position)\n     while word_match is not None:\n@@ -17,35 +23,59 @@ def words(text: str) -> Iterable[Tuple[int, int, str]]:\n         word_match = re_word.match(text, end)\n \n \n-def divide_line(text: str, width: int, fold: bool = True) -> List[int]:\n-    divides: List[int] = []\n-    append = divides.append\n-    line_position = 0\n+def divide_line(text: str, width: int, fold: bool = True) -> list[int]:\n+    \"\"\"Given a string of text, and a width (measured in cells), return a list\n+    of cell offsets which the string should be split at in order for it to fit\n+    within the given width.\n+\n+    Args:\n+        text: The text to examine.\n+        width: The available cell width.\n+        fold: If True, words longer than `width` will be folded onto a new line.\n+\n+    Returns:\n+        A list of indices to break the line at.\n+    \"\"\"\n+    break_positions: list[int] = []  # offsets to insert the breaks at\n+    append = break_positions.append\n+    cell_offset = 0\n     _cell_len = cell_len\n+\n     for start, _end, word in words(text):\n         word_length = _cell_len(word.rstrip())\n-        if line_position + word_length > width:\n+        remaining_space = width - cell_offset\n+        word_fits_remaining_space = remaining_space >= word_length\n+\n+        if word_fits_remaining_space:\n+            # Simplest case - the word fits within the remaining width for this line.\n+            cell_offset += _cell_len(word)\n+        else:\n+            # Not enough space remaining for this word on the current line.\n             if word_length > width:\n+                # The word doesn't fit on any line, so we can't simply\n+                # place it on the next line...\n                 if fold:\n-                    chopped_words = chop_cells(word, max_size=width, position=0)\n-                    for last, line in loop_last(chopped_words):\n+                    # Fold the word across multiple lines.\n+                    folded_word = chop_cells(word, width=width)\n+                    for last, line in loop_last(folded_word):\n                         if start:\n                             append(start)\n-\n                         if last:\n-                            line_position = _cell_len(line)\n+                            cell_offset = _cell_len(line)\n                         else:\n                             start += len(line)\n                 else:\n+                    # Folding isn't allowed, so crop the word.\n                     if start:\n                         append(start)\n-                    line_position = _cell_len(word)\n-            elif line_position and start:\n+                    cell_offset = _cell_len(word)\n+            elif cell_offset and start:\n+                # The word doesn't fit within the remaining space on the current\n+                # line, but it *can* fit on to the next (empty) line.\n                 append(start)\n-                line_position = _cell_len(word)\n-        else:\n-            line_position += _cell_len(word)\n-    return divides\n+                cell_offset = _cell_len(word)\n+\n+    return break_positions\n \n \n if __name__ == \"__main__\":  # pragma: no cover\n@@ -53,4 +83,11 @@ def divide_line(text: str, width: int, fold: bool = True) -> List[int]:\n \n     console = Console(width=10)\n     console.print(\"12345 abcdefghijklmnopqrstuvwyxzABCDEFGHIJKLMNOPQRSTUVWXYZ 12345\")\n-    print(chop_cells(\"abcdefghijklmnopqrstuvwxyz\", 10, position=2))\n+    print(chop_cells(\"abcdefghijklmnopqrstuvwxyz\", 10))\n+\n+    console = Console(width=20)\n+    console.rule()\n+    console.print(\"Textual\u306fPython\u306e\u9ad8\u901f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\")\n+\n+    console.rule()\n+    console.print(\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f1670\u4e07\u8272\u3092\u4f7f\u7528\u3067\u304d\")\ndiff --git a/rich/cells.py b/rich/cells.py\nindex 9354f9e31..c0ddef6e7 100644\n--- a/rich/cells.py\n+++ b/rich/cells.py\n@@ -1,6 +1,8 @@\n+from __future__ import annotations\n+\n import re\n from functools import lru_cache\n-from typing import Callable, List\n+from typing import Callable\n \n from ._cell_widths import CELL_WIDTHS\n \n@@ -119,27 +121,39 @@ def set_cell_size(text: str, total: int) -> str:\n             start = pos\n \n \n-# TODO: This is inefficient\n-# TODO: This might not work with CWJ type characters\n-def chop_cells(text: str, max_size: int, position: int = 0) -> List[str]:\n-    \"\"\"Break text in to equal (cell) length strings, returning the characters in reverse\n-    order\"\"\"\n+def chop_cells(\n+    text: str,\n+    width: int,\n+) -> list[str]:\n+    \"\"\"Split text into lines such that each line fits within the available (cell) width.\n+\n+    Args:\n+        text: The text to fold such that it fits in the given width.\n+        width: The width available (number of cells).\n+\n+    Returns:\n+        A list of strings such that each string in the list has cell width\n+        less than or equal to the available width.\n+    \"\"\"\n     _get_character_cell_size = get_character_cell_size\n-    characters = [\n-        (character, _get_character_cell_size(character)) for character in text\n-    ]\n-    total_size = position\n-    lines: List[List[str]] = [[]]\n-    append = lines[-1].append\n-\n-    for character, size in reversed(characters):\n-        if total_size + size > max_size:\n-            lines.append([character])\n-            append = lines[-1].append\n-            total_size = size\n+    lines: list[list[str]] = [[]]\n+\n+    append_new_line = lines.append\n+    append_to_last_line = lines[-1].append\n+\n+    total_width = 0\n+\n+    for character in text:\n+        cell_width = _get_character_cell_size(character)\n+        char_doesnt_fit = total_width + cell_width > width\n+\n+        if char_doesnt_fit:\n+            append_new_line([character])\n+            append_to_last_line = lines[-1].append\n+            total_width = cell_width\n         else:\n-            total_size += size\n-            append(character)\n+            append_to_last_line(character)\n+            total_width += cell_width\n \n     return [\"\".join(line) for line in lines]\n \n", "test_patch": "diff --git a/tests/test_cells.py b/tests/test_cells.py\nindex 50fa52192..fe451fa57 100644\n--- a/tests/test_cells.py\n+++ b/tests/test_cells.py\n@@ -1,4 +1,5 @@\n from rich import cells\n+from rich.cells import chop_cells\n \n \n def test_cell_len_long_string():\n@@ -40,3 +41,21 @@ def test_set_cell_size_infinite():\n             )\n             == size\n         )\n+\n+\n+def test_chop_cells():\n+    \"\"\"Simple example of splitting cells into lines of width 3.\"\"\"\n+    text = \"abcdefghijk\"\n+    assert chop_cells(text, 3) == [\"abc\", \"def\", \"ghi\", \"jk\"]\n+\n+\n+def test_chop_cells_double_width_boundary():\n+    \"\"\"The available width lies within a double-width character.\"\"\"\n+    text = \"\u3042\u308a\u304c\u3068\u3046\"\n+    assert chop_cells(text, 3) == [\"\u3042\", \"\u308a\", \"\u304c\", \"\u3068\", \"\u3046\"]\n+\n+\n+def test_chop_cells_mixed_width():\n+    \"\"\"Mixed single and double-width characters.\"\"\"\n+    text = \"\u30421\u308a234\u304c5\u30686\u304678\"\n+    assert chop_cells(text, 3) == [\"\u30421\", \"\u308a2\", \"34\", \"\u304c5\", \"\u30686\", \"\u30467\", \"8\"]\ndiff --git a/tests/test_text.py b/tests/test_text.py\nindex 22c34e442..18c91cffa 100644\n--- a/tests/test_text.py\n+++ b/tests/test_text.py\n@@ -449,6 +449,20 @@ def test_wrap_cjk_width_mid_character():\n     ]\n \n \n+def test_wrap_cjk_mixed():\n+    \"\"\"Regression test covering https://github.com/Textualize/rich/issues/3176 and\n+    https://github.com/Textualize/textual/issues/3567 - double width characters could\n+    result in text going missing when wrapping.\"\"\"\n+    text = Text(\"123\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\")\n+    console = Console(width=20)  # let's ensure the width passed to wrap() wins.\n+\n+    wrapped_lines = text.wrap(console, width=8)\n+    with console.capture() as capture:\n+        console.print(wrapped_lines)\n+\n+    assert capture.get() == \"123\u3042\u308a\\n\u304c\u3068\u3046\u3054\\n\u3056\u3044\u307e\u3057\\n\u305f\\n\"\n+\n+\n def test_wrap_long():\n     text = Text(\"abracadabra\", justify=\"left\")\n     lines = text.wrap(Console(), 4)\n@@ -497,6 +511,47 @@ def test_wrap_long_words_2():\n     ]\n \n \n+def test_wrap_long_words_followed_by_other_words():\n+    \"\"\"After folding a word across multiple lines, we should continue from\n+    the next word immediately after the folded word (don't take a newline\n+    following completion of the folded word).\"\"\"\n+    text = Text(\"123 12345678 123 123\")\n+    lines = text.wrap(Console(), 6)\n+    assert lines._lines == [\n+        Text(\"123 \"),\n+        Text(\"123456\"),\n+        Text(\"78 123\"),\n+        Text(\"123\"),\n+    ]\n+\n+\n+def test_wrap_long_word_preceeded_by_word_of_full_line_length():\n+    \"\"\"The width of the first word is the same as the available width.\n+    Ensures that folding works correctly when there's no space available\n+    on the current line.\"\"\"\n+    text = Text(\"123456 12345678 123 123\")\n+    lines = text.wrap(Console(), 6)\n+    assert lines._lines == [\n+        Text(\"123456\"),\n+        Text(\"123456\"),\n+        Text(\"78 123\"),\n+        Text(\"123\"),\n+    ]\n+\n+\n+def test_wrap_multiple_consecutive_spaces():\n+    \"\"\"Adding multiple consecutive spaces at the end of a line does not impact\n+    the location at which a break will be added during the process of wrapping.\"\"\"\n+    text = Text(\"123456    12345678 123 123\")\n+    lines = text.wrap(Console(), 6)\n+    assert lines._lines == [\n+        Text(\"123456\"),\n+        Text(\"123456\"),\n+        Text(\"78 123\"),\n+        Text(\"123\"),\n+    ]\n+\n+\n def test_wrap_long_words_justify_left():\n     text = Text(\"X 123456789\", justify=\"left\")\n     lines = text.wrap(Console(), 4)\n@@ -508,6 +563,17 @@ def test_wrap_long_words_justify_left():\n     assert lines[3] == Text(\"9   \")\n \n \n+def test_wrap_leading_and_trailing_whitespace():\n+    text = Text(\"   123  456 789   \")\n+    lines = text.wrap(Console(), 4)\n+    assert lines._lines == [\n+        Text(\"   1\"),\n+        Text(\"23  \"),\n+        Text(\"456 \"),\n+        Text(\"789 \"),\n+    ]\n+\n+\n def test_no_wrap_no_crop():\n     text = Text(\"Hello World!\" * 3)\n \n", "problem_statement": "[BUG] Chunks of text go missing when writing Asian text (wrapping issue)\n### Description\r\n\r\n(Originally reported in Textual: https://github.com/Textualize/textual/issues/3567)\r\n\r\nWhen you print Asian text (specifically Chinese and Japanese, which do not use spaces), portions of the text go missing, making it unreadable.\r\n\r\nThis seems to be related to wrapping, as the characters which go missing are at the end of a line.\r\nInstead of being wrapped on to a new line, they disappear.\r\n\r\nThere are [rules for wrapping](https://en.m.wikipedia.org/wiki/Line_breaking_rules_in_East_Asian_languages) in these languages which would take more effort to adhere to, but at the very least, text should not go missing when printed.\r\n\r\n### Examples\r\n\r\nFor example, running the snippet below, the `7` in `1670` disappears:\r\n\r\n```python\r\nfrom rich.console import Console\r\nconsole = Console(width=20)\r\nconsole.print(\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f1670\u4e07\u8272\u3092\u4f7f\u7528\u3067\u304d\")\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f16\r\n0\u4e07\u8272\u3092\u4f7f\u7528\u3067\u304d\r\n```\r\n\r\nAnd in many cases, like those reported in this issue, multiple characters disappear:\r\n\r\n```python\r\nfrom rich.console import Console\r\nconsole = Console(width=20)\r\nconsole.print(\"Textual\u306fPython\u306e\u9ad8\u901f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\")\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nTextual\u306fPy\r\nthon\u306e\u9ad8\u901f\u30a2\u30d7\u30ea\r\n\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30d5\u30ec\u30fc\r\n```\r\n\r\nNotice that many of the characters at the end of the text are completely missing (`\u30e0\u30ef\u30fc\u30af\u3067\u3059`).\r\n\n", "hints_text": "", "created_at": "2023-11-01T16:49:15Z"}
{"repo": "Textualize/rich", "pull_number": 3130, "instance_id": "Textualize__rich-3130", "issue_numbers": ["3115"], "base_commit": "720800e6930d85ad027b1e9bd0cbb96b5e994ce3", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 89843c0ae..8e74f4b2a 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## Unreleased\n+\n+### Fixed\n+\n+- Markdown table rendering issue with inline styles and links https://github.com/Textualize/rich/issues/3115\n+\n ## [13.5.2] - 2023-08-01\n \n ### Fixed\ndiff --git a/rich/markdown.py b/rich/markdown.py\nindex 704da3010..86edbfebd 100644\n--- a/rich/markdown.py\n+++ b/rich/markdown.py\n@@ -314,7 +314,7 @@ class TableDataElement(MarkdownElement):\n \n     @classmethod\n     def create(cls, markdown: \"Markdown\", token: Token) -> \"MarkdownElement\":\n-        style = str(token.attrs.get(\"style\" \"\")) or \"\"\n+        style = str(token.attrs.get(\"style\")) or \"\"\n \n         justify: JustifyMethod\n         if \"text-align:right\" in style:\n@@ -330,15 +330,13 @@ def create(cls, markdown: \"Markdown\", token: Token) -> \"MarkdownElement\":\n         return cls(justify=justify)\n \n     def __init__(self, justify: JustifyMethod) -> None:\n-        self.content: TextType = \"\"\n+        self.content: Text = Text(\"\", justify=justify)\n         self.justify = justify\n \n     def on_text(self, context: \"MarkdownContext\", text: TextType) -> None:\n-        plain = text.plain if isinstance(text, Text) else text\n-        style = text.style if isinstance(text, Text) else \"\"\n-        self.content = Text(\n-            plain, justify=self.justify, style=context.style_stack.current\n-        )\n+        text = Text(text) if isinstance(text, str) else text\n+        text.stylize(context.current_style)\n+        self.content.append_text(text)\n \n \n class ListElement(MarkdownElement):\n", "test_patch": "diff --git a/tests/test_markdown.py b/tests/test_markdown.py\nindex 1321dceab..08c81736e 100644\n--- a/tests/test_markdown.py\n+++ b/tests/test_markdown.py\n@@ -121,7 +121,7 @@ def test_markdown_table():\n         \"\"\"\\\n | Year |                      Title                       | Director          |  Box Office (USD) |\n |------|:------------------------------------------------:|:------------------|------------------:|\n-| 1982 |            *E.T. the Extra-Terrestrial*            | Steven Spielberg  |    $792.9 million |\n+| 1982 |            *E.T. the Extra-Terrestrial*          | Steven Spielberg  |    $792.9 million |\n | 1980 |  Star Wars: Episode V \u2013 The Empire Strikes Back  | Irvin Kershner    |    $538.4 million |\n | 1983 |    Star Wars: Episode VI \u2013 Return of the Jedi    | Richard Marquand  |    $475.1 million |\n | 1981 |             Raiders of the Lost Ark              | Steven Spielberg  |    $389.9 million |\n@@ -129,7 +129,40 @@ def test_markdown_table():\n \"\"\"\n     )\n     result = render(markdown)\n-    expected = \"\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982   \\x1b[3m          E.T. the Extra-Terrestrial          \\x1b[0m   Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n\"\n+    expected = \"\\n                                                                                               \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                    Title                     \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982             \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m             Steven Spielberg     $792.9 million  \\n  1980   Star Wars: Episode V \u2013 The Empire Strikes Back   Irvin Kershner       $538.4 million  \\n  1983     Star Wars: Episode VI \u2013 Return of the Jedi     Richard Marquand     $475.1 million  \\n  1981              Raiders of the Lost Ark               Steven Spielberg     $389.9 million  \\n  1984        Indiana Jones and the Temple of Doom        Steven Spielberg     $333.1 million  \\n                                                                                               \\n\"\n+    assert result == expected\n+\n+\n+def test_inline_styles_in_table():\n+    \"\"\"Regression test for https://github.com/Textualize/rich/issues/3115\"\"\"\n+    markdown = Markdown(\n+        \"\"\"\\\n+| Year | This **column** displays _the_ movie _title_ ~~description~~ | Director          |  Box Office (USD) |\n+|------|:----------------------------------------------------------:|:------------------|------------------:|\n+| 1982 | *E.T. the Extra-Terrestrial* ([Wikipedia article](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial)) | Steven Spielberg  |    $792.9 million |\n+| 1980 |  Star Wars: Episode V \u2013 The *Empire* **Strikes** ~~Back~~  | Irvin Kershner    |    $538.4 million |\n+\"\"\"\n+    )\n+    result = render(markdown)\n+    expected = \"\\n                                                                                                 \\n \\x1b[1m \\x1b[0m\\x1b[1mYear\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mThis \\x1b[0m\\x1b[1mcolumn\\x1b[0m\\x1b[1m displays \\x1b[0m\\x1b[1;3mthe\\x1b[0m\\x1b[1m movie \\x1b[0m\\x1b[1;3mtitle\\x1b[0m\\x1b[1m \\x1b[0m\\x1b[1;9mdescription\\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mDirector        \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1mBox Office (USD)\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  1982    \\x1b[3mE.T. the Extra-Terrestrial\\x1b[0m (\\x1b]8;id=0;foo\\x1b\\\\\\x1b[4;34mWikipedia article\\x1b[0m\\x1b]8;;\\x1b\\\\)    Steven Spielberg     $792.9 million  \\n  1980    Star Wars: Episode V \u2013 The \\x1b[3mEmpire\\x1b[0m \\x1b[1mStrikes\\x1b[0m \\x1b[9mBack\\x1b[0m    Irvin Kershner       $538.4 million  \\n                                                                                                 \\n\"\n+    assert result == expected\n+\n+\n+def test_inline_styles_with_justification():\n+    \"\"\"Regression test for https://github.com/Textualize/rich/issues/3115\n+\n+    In particular, this tests the interaction between the change that was made to fix\n+    #3115 and column text justification.\n+    \"\"\"\n+    markdown = Markdown(\n+        \"\"\"\\\n+| left | center | right |\n+| :- | :-: | -: |\n+| This is a long row | because it contains | a fairly long sentence. |\n+| a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e | a*b* _c_ ~~d~~ e |\"\"\"\n+    )\n+    result = render(markdown)\n+    expected = \"\\n                                                                      \\n \\x1b[1m \\x1b[0m\\x1b[1mleft              \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m      center       \\x1b[0m\\x1b[1m \\x1b[0m \\x1b[1m \\x1b[0m\\x1b[1m                  right\\x1b[0m\\x1b[1m \\x1b[0m \\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \\n  This is a long row   because it contains   a fairly long sentence.  \\n  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                  a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e                        a\\x1b[3mb\\x1b[0m \\x1b[3mc\\x1b[0m \\x1b[9md\\x1b[0m e  \\n                                                                      \\n\"\n     assert result == expected\n \n \n", "problem_statement": "[BUG] Rich markdown printed to console only shows a single link in a column/ table cell\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nI use Rich to format a pandas data frame with multiple links in some column to markdown and show it in the terminal. However, when there are more than a single link in a column rich only shows the last one?\r\n\r\n```python\r\nfrom rich.console import Console\r\nfrom rich.markdown import Markdown\r\n\r\nimport pandas as pd\r\n\r\nmd_table = pd.DataFrame(\r\n    {\r\n        \"links\": [\"[page1](https://www.example.com/page1), [page2](https://www.example.com/page2)\"]\r\n    }\r\n).to_markdown()\r\n\r\nconsole = Console()\r\nconsole.print(Markdown(md_table))\r\n```\r\n\r\nOutput:\r\n```bash\r\n      links  \r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \r\n  0   page2  \r\n```\r\n\r\nExpected\r\n```\r\n      links  \r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \r\n  0   page1, page2  \r\n```\r\n\r\nIf I write the markdown to a file I get the expected table with multiple links...\r\n\r\n**Platform**\r\n\r\nplatform=\"Darwin\"\r\nrich==13.5.2\r\n\r\n\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)\nCould you post the Markdown it generates?\n```\r\n|    | links                                                                          |\r\n|---:|:-------------------------------------------------------------------------------|\r\n|  0 | [page1](https://www.example.com/page1), [page2](https://www.example.com/page2) |\r\n```\nI actually discovered that the problem is that if there is a link in a table, only the link (and in case of multiple links the last one) is rendered.\r\n\r\nFor instance:\r\n\r\n```python\r\nfrom rich.console import Console\r\nfrom rich.markdown import Markdown\r\n\r\nimport pandas as pd\r\n\r\nmd_table = pd.DataFrame(\r\n    {\r\n        \"links\": [\"some text [page1](https://www.example.com/page1 )\"]\r\n    }\r\n).to_markdown()\r\n\r\nconsole = Console()\r\nconsole.print(Markdown(md_table)) \r\n```\r\n\r\nwill result in:\r\n```bash\r\n      links  \r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \r\n  0   page1  \r\n```\r\n\r\nThus, swallowing \"some text\" that was also present in this table cell. Not sure if this gives a clue about what might be wrong?\nThis may also be present in Textual.\n> This may also be present in Textual.\r\n\r\nIf I'm reading the issue correctly, it seems to be working fine in Textual (as seen via Frogmouth):\r\n\r\n![Screenshot 2023-08-31 at 13 13 57](https://github.com/Textualize/rich/assets/28237/3a6e2c59-6b87-4816-8a8b-134b7c36c065)\r\n\r\nviewing this Markdown:\r\n\r\n```markdown\r\n| One                                                        | Two       | Three                                 |\r\n|------------------------------------------------------------|-----------|---------------------------------------|\r\n| Some test [and then a link](https://textualize.io/)        | Just Text | [Just a link](https://textualize.io/) |\r\n| Text [then a link](https://blog.davep.org/) then more text | Just Text | Some final text                       |\r\n```\r\n\nGood to know. We must be doing something different in Rich.\nOh nice. Wondering: Can I use `textual` to render my Markdown before I hand it over to `console.print()`until this bug is fixed? I haven't used `textual` before but don't mind this extra dependency for the moment...\nYou can certainly use Textual, but it works differently from `console.print`. It creates an interactive window inside the terminal.\nConsider this markdown file:\r\n\r\n```md\r\n[page 1](https://mathspp.com)\r\n\r\n| links |\r\n| - |\r\n| asdfasdf  [page 1](https://mathspp.com) |\r\n```\r\n\r\nRunning `python -m rich.markdown file.md` will show the first link just fine but the one on the table doesn't:\r\n\r\n```\r\npage 1 (https://mathspp.com)\r\n\r\n\r\n  links\r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\r\n  )\r\n```\r\n\r\nPutting text on the right of the table link makes the link go away and only displays that text:\r\n\r\n<details>\r\n<summary <code>file.md</code> with text on the right. </summary>\r\n\r\n```md\r\n[page 1](https://mathspp.com)\r\n\r\n| links |\r\n| - |\r\n| asdfasdf  [page 1](https://mathspp.com) right |\r\n```\r\n</details>\r\n<details>\r\n<summary> Output of <code>python -m rich.markdown file.md</code> </summary>\r\n\r\n```\r\npage 1 (https://mathspp.com)\r\n\r\n\r\n  links\r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\r\n   right\r\n```\r\n\r\n</details>\r\n\r\n---\r\n\r\nRunning with `--hyperlinks` does a slightly better job, but it still drops things.\r\n\r\n### With text on the right\r\n\r\n<details>\r\n<summary <code>file.md</code> with text on the right. </summary>\r\n\r\n```md\r\n[page 1](https://mathspp.com)\r\n\r\n| links |\r\n| - |\r\n| asdfasdf  [page 1](https://mathspp.com) some text |\r\n```\r\n\r\n</details>\r\n<details>\r\n<summary> Output of <code>python -m rich.markdown file.md -y</code> </summary>\r\n(The \u201cpage 1\u201d has the proper link in the terminal)\r\n\r\n```\r\npage 1\r\n\r\n\r\n  links\r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\r\n   some text\r\n```\r\n</details>\r\n\r\n---\r\n\r\n### Without text on the right\r\n\r\n<details>\r\n<summary <code>file.md</code> without text on the right. </summary>\r\n\r\n```md\r\n[page 1](https://mathspp.com)\r\n\r\n| links |\r\n| - |\r\n| asdfasdf  [page 1](https://mathspp.com) |\r\n```\r\n</details>\r\n<details>\r\n<summary> Output of <code>python -m rich.markdown file.md -y</code> </summary>\r\n(The output has the proper links in the terminal)\r\n\r\n```\r\npage 1\r\n\r\n\r\n  links\r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\r\n  page 1\r\n```\r\n</details>\nTurns out we're seeing this interesting interaction with a bunch of inline styles in markdown.\r\n\r\nThe markdown below gets rendered into the output shown after that:\r\n\r\n```md\r\n| stuff |\r\n| - |\r\n| asdfasdf  [page 1](https://mathspp.com) some text |\r\n| This is `some code` here |\r\n| This is `some code` |\r\n| Can I set this to _italics_? |\r\n```\r\n\r\n```\r\n  stuff\r\n \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\r\n   some text\r\n   here\r\n  some code\r\n  ?\r\n```\nI've tracked the issue down to `rich/markdown.py::TableDataElement.on_text`, which should append to its content instead of setting it directly.", "created_at": "2023-09-13T12:36:24Z"}
{"repo": "Textualize/rich", "pull_number": 3113, "instance_id": "Textualize__rich-3113", "issue_numbers": ["3112"], "base_commit": "720800e6930d85ad027b1e9bd0cbb96b5e994ce3", "patch": "diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 1d27aae3f..68f32b175 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -3,7 +3,7 @@\n exclude: benchmarks/\n repos:\n   - repo: https://github.com/pre-commit/pre-commit-hooks\n-    rev: v4.0.1\n+    rev: v4.4.0\n     hooks:\n       - id: check-ast\n       - id: check-builtin-literals\n@@ -18,7 +18,7 @@ repos:\n       - id: check-vcs-permalinks\n       - id: check-shebang-scripts-are-executable\n   - repo: https://github.com/pre-commit/pygrep-hooks\n-    rev: v1.9.0\n+    rev: v1.10.0\n     hooks:\n       - id: python-check-mock-methods\n       - id: python-no-log-warn\n@@ -26,12 +26,12 @@ repos:\n       - id: rst-directive-colons\n       - id: rst-inline-touching-normal\n   - repo: https://github.com/hadialqattan/pycln\n-    rev: v1.2.5\n+    rev: v2.2.2\n     hooks:\n       - id: pycln\n         args: [--all]\n   - repo: https://github.com/psf/black\n-    rev: 22.3.0\n+    rev: 23.7.0\n     hooks:\n       - id: black\n         exclude: ^benchmarks/\n", "test_patch": "", "problem_statement": "[BUG] pre-commit hook installation is broken on 3.10+\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\nPre-commit hook installation on newer versions of Python it appears to be due to the pycln hook\r\n\r\n<details>\r\n<summary>pre-commit.log</summary>\r\n\r\n### version information\r\n\r\n```\r\npre-commit version: 2.21.0\r\ngit --version: git version 2.41.0\r\nsys.version:\r\n    3.11.4 (main, Jul 28 2023, 05:02:22) [GCC 12.2.0]\r\nsys.executable: /home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/bin/python\r\nos.name: posix\r\nsys.platform: linux\r\n```\r\n\r\n### error information\r\n\r\n```\r\nAn unexpected error has occurred: CalledProcessError: command: ('/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/bin/python', '-mpip', 'install', '.')\r\nreturn code: 1\r\nstdout:\r\n    Processing /home/vscode/.cache/pre-commit/repopym0e_4s\r\n      Installing build dependencies: started\r\n      Installing build dependencies: finished with status 'done'\r\n      Getting requirements to build wheel: started\r\n      Getting requirements to build wheel: finished with status 'done'\r\n      Preparing metadata (pyproject.toml): started\r\n      Preparing metadata (pyproject.toml): finished with status 'done'\r\n    Collecting libcst<0.4.0,>=0.3.10 (from pycln==1.2.5)\r\n      Using cached libcst-0.3.23-py3-none-any.whl (517 kB)\r\n    Collecting pathspec<0.10.0,>=0.9.0 (from pycln==1.2.5)\r\n      Using cached pathspec-0.9.0-py2.py3-none-any.whl (31 kB)\r\n    Collecting pyyaml<6.0.0,>=5.3.1 (from pycln==1.2.5)\r\n      Using cached PyYAML-5.4.1.tar.gz (175 kB)\r\n      Installing build dependencies: started\r\n      Installing build dependencies: finished with status 'done'\r\n      Getting requirements to build wheel: started\r\n      Getting requirements to build wheel: finished with status 'error'\r\n    \r\nstderr:\r\n      error: subprocess-exited-with-error\r\n      \r\n      \u00d7 Getting requirements to build wheel did not run successfully.\r\n      \u2502 exit code: 1\r\n      \u2570\u2500> [68 lines of output]\r\n          /tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/config/setupcfg.py:293: _DeprecatedConfig: Deprecated config in `setup.cfg`\r\n          !!\r\n          \r\n                  ********************************************************************************\r\n                  The license_file parameter is deprecated, use license_files instead.\r\n          \r\n                  By 2023-Oct-30, you need to update your project and remove deprecated calls\r\n                  or your builds will no longer be supported.\r\n          \r\n                  See https://setuptools.pypa.io/en/latest/userguide/declarative_config.html for details.\r\n                  ********************************************************************************\r\n          \r\n          !!\r\n            parsed = self.parsers.get(option_name, lambda x: x)(value)\r\n          running egg_info\r\n          writing lib3/PyYAML.egg-info/PKG-INFO\r\n          writing dependency_links to lib3/PyYAML.egg-info/dependency_links.txt\r\n          writing top-level names to lib3/PyYAML.egg-info/top_level.txt\r\n          Traceback (most recent call last):\r\n            File \"/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 353, in <module>\r\n              main()\r\n            File \"/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 335, in main\r\n              json_out['return_val'] = hook(**hook_input['kwargs'])\r\n                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 118, in get_requires_for_build_wheel\r\n              return hook(config_settings)\r\n                     ^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/build_meta.py\", line 355, in get_requires_for_build_wheel\r\n              return self._get_build_requires(config_settings, requirements=['wheel'])\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/build_meta.py\", line 325, in _get_build_requires\r\n              self.run_setup()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/build_meta.py\", line 341, in run_setup\r\n              exec(code, locals())\r\n            File \"<string>\", line 271, in <module>\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/__init__.py\", line 107, in setup\r\n              return distutils.core.setup(**attrs)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/core.py\", line 185, in setup\r\n              return run_commands(dist)\r\n                     ^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/core.py\", line 201, in run_commands\r\n              dist.run_commands()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/dist.py\", line 969, in run_commands\r\n              self.run_command(cmd)\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/dist.py\", line 1233, in run_command\r\n              super().run_command(command)\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n              cmd_obj.run()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 319, in run\r\n              self.find_sources()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 327, in find_sources\r\n              mm.run()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 549, in run\r\n              self.add_defaults()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 587, in add_defaults\r\n              sdist.add_defaults(self)\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/sdist.py\", line 113, in add_defaults\r\n              super().add_defaults()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/command/sdist.py\", line 251, in add_defaults\r\n              self._add_defaults_ext()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/command/sdist.py\", line 336, in _add_defaults_ext\r\n              self.filelist.extend(build_ext.get_source_files())\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"<string>\", line 201, in get_source_files\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/cmd.py\", line 107, in __getattr__\r\n              raise AttributeError(attr)\r\n          AttributeError: cython_sources\r\n          [end of output]\r\n      \r\n      note: This error originates from a subprocess, and is likely not a problem with pip.\r\n    error: subprocess-exited-with-error\r\n    \r\n    \u00d7 Getting requirements to build wheel did not run successfully.\r\n    \u2502 exit code: 1\r\n    \u2570\u2500> See above for output.\r\n    \r\n    note: This error originates from a subprocess, and is likely not a problem with pip.\r\n    \r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/error_handler.py\", line 73, in error_handler\r\n    yield\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/main.py\", line 390, in main\r\n    return install_hooks(args.config, store)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/commands/install_uninstall.py\", line 146, in install_hooks\r\n    install_hook_envs(all_hooks(load_config(config_file), store), store)\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/repository.py\", line 223, in install_hook_envs\r\n    _hook_install(hook)\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/repository.py\", line 79, in _hook_install\r\n    lang.install_environment(\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/languages/python.py\", line 221, in install_environment\r\n    helpers.run_setup_cmd(prefix, install_cmd)\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/languages/helpers.py\", line 48, in run_setup_cmd\r\n    cmd_output_b(*cmd, cwd=prefix.prefix_dir, **kwargs)\r\n  File \"/home/vscode/.cache/pypoetry/virtualenvs/rich-2QMMeOcc-py3.11/lib/python3.11/site-packages/pre_commit/util.py\", line 143, in cmd_output_b\r\n    raise CalledProcessError(returncode, cmd, stdout_b, stderr_b)\r\npre_commit.util.CalledProcessError: command: ('/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/bin/python', '-mpip', 'install', '.')\r\nreturn code: 1\r\nstdout:\r\n    Processing /home/vscode/.cache/pre-commit/repopym0e_4s\r\n      Installing build dependencies: started\r\n      Installing build dependencies: finished with status 'done'\r\n      Getting requirements to build wheel: started\r\n      Getting requirements to build wheel: finished with status 'done'\r\n      Preparing metadata (pyproject.toml): started\r\n      Preparing metadata (pyproject.toml): finished with status 'done'\r\n    Collecting libcst<0.4.0,>=0.3.10 (from pycln==1.2.5)\r\n      Using cached libcst-0.3.23-py3-none-any.whl (517 kB)\r\n    Collecting pathspec<0.10.0,>=0.9.0 (from pycln==1.2.5)\r\n      Using cached pathspec-0.9.0-py2.py3-none-any.whl (31 kB)\r\n    Collecting pyyaml<6.0.0,>=5.3.1 (from pycln==1.2.5)\r\n      Using cached PyYAML-5.4.1.tar.gz (175 kB)\r\n      Installing build dependencies: started\r\n      Installing build dependencies: finished with status 'done'\r\n      Getting requirements to build wheel: started\r\n      Getting requirements to build wheel: finished with status 'error'\r\n    \r\nstderr:\r\n      error: subprocess-exited-with-error\r\n      \r\n      \u00d7 Getting requirements to build wheel did not run successfully.\r\n      \u2502 exit code: 1\r\n      \u2570\u2500> [68 lines of output]\r\n          /tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/config/setupcfg.py:293: _DeprecatedConfig: Deprecated config in `setup.cfg`\r\n          !!\r\n          \r\n                  ********************************************************************************\r\n                  The license_file parameter is deprecated, use license_files instead.\r\n          \r\n                  By 2023-Oct-30, you need to update your project and remove deprecated calls\r\n                  or your builds will no longer be supported.\r\n          \r\n                  See https://setuptools.pypa.io/en/latest/userguide/declarative_config.html for details.\r\n                  ********************************************************************************\r\n          \r\n          !!\r\n            parsed = self.parsers.get(option_name, lambda x: x)(value)\r\n          running egg_info\r\n          writing lib3/PyYAML.egg-info/PKG-INFO\r\n          writing dependency_links to lib3/PyYAML.egg-info/dependency_links.txt\r\n          writing top-level names to lib3/PyYAML.egg-info/top_level.txt\r\n          Traceback (most recent call last):\r\n            File \"/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 353, in <module>\r\n              main()\r\n            File \"/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 335, in main\r\n              json_out['return_val'] = hook(**hook_input['kwargs'])\r\n                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/home/vscode/.cache/pre-commit/repopym0e_4s/py_env-python3/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py\", line 118, in get_requires_for_build_wheel\r\n              return hook(config_settings)\r\n                     ^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/build_meta.py\", line 355, in get_requires_for_build_wheel\r\n              return self._get_build_requires(config_settings, requirements=['wheel'])\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/build_meta.py\", line 325, in _get_build_requires\r\n              self.run_setup()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/build_meta.py\", line 341, in run_setup\r\n              exec(code, locals())\r\n            File \"<string>\", line 271, in <module>\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/__init__.py\", line 107, in setup\r\n              return distutils.core.setup(**attrs)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/core.py\", line 185, in setup\r\n              return run_commands(dist)\r\n                     ^^^^^^^^^^^^^^^^^^\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/core.py\", line 201, in run_commands\r\n              dist.run_commands()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/dist.py\", line 969, in run_commands\r\n              self.run_command(cmd)\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/dist.py\", line 1233, in run_command\r\n              super().run_command(command)\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/dist.py\", line 988, in run_command\r\n              cmd_obj.run()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 319, in run\r\n              self.find_sources()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 327, in find_sources\r\n              mm.run()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 549, in run\r\n              self.add_defaults()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/egg_info.py\", line 587, in add_defaults\r\n              sdist.add_defaults(self)\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/command/sdist.py\", line 113, in add_defaults\r\n              super().add_defaults()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/command/sdist.py\", line 251, in add_defaults\r\n              self._add_defaults_ext()\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/command/sdist.py\", line 336, in _add_defaults_ext\r\n              self.filelist.extend(build_ext.get_source_files())\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n            File \"<string>\", line 201, in get_source_files\r\n            File \"/tmp/pip-build-env-a7onesou/overlay/lib/python3.11/site-packages/setuptools/_distutils/cmd.py\", line 107, in __getattr__\r\n              raise AttributeError(attr)\r\n          AttributeError: cython_sources\r\n          [end of output]\r\n      \r\n      note: This error originates from a subprocess, and is likely not a problem with pip.\r\n    error: subprocess-exited-with-error\r\n    \r\n    \u00d7 Getting requirements to build wheel did not run successfully.\r\n    \u2502 exit code: 1\r\n    \u2570\u2500> See above for output.\r\n    \r\n    note: This error originates from a subprocess, and is likely not a problem with pip.\r\n</details>\r\n\r\n\r\n\r\n**Platform**\r\nI've tried on Mac and Linux Python 3.9, 3.10, 3.11. The hooks fail to install on 3.10 and 3.11\r\n\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2023-08-30T23:58:15Z"}
{"repo": "Textualize/rich", "pull_number": 3105, "instance_id": "Textualize__rich-3105", "issue_numbers": ["3104"], "base_commit": "9f620dc50c0008c35e9f8493f198e6e593574a70", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex f68d33c02..3562f6df6 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -11,6 +11,10 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n - Adds missing parameters to Panel.fit https://github.com/Textualize/rich/issues/3142\n \n+### Fixed\n+\n+- Ensure font is correctly inherited in exported HTML https://github.com/Textualize/rich/issues/3104\n+\n ## [13.6.0] - 2023-09-30\n \n ### Added\ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex bff51eea3..ba8759eae 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -73,3 +73,4 @@ The following people have contributed to the development of Rich:\n - [James Addison](https://github.com/jayaddison)\n - [Pierro](https://github.com/xpierroz)\n - [Bernhard Wagner](https://github.com/bwagner)\n+- [Aaron Beaudoin](https://github.com/AaronBeaudoin)\ndiff --git a/rich/_export_format.py b/rich/_export_format.py\nindex 998a9b0de..e7527e52f 100644\n--- a/rich/_export_format.py\n+++ b/rich/_export_format.py\n@@ -12,7 +12,7 @@\n </style>\n </head>\n <body>\n-    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code>{code}</code></pre>\n+    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><code style=\"font-family:inherit\">{code}</code></pre>\n </body>\n </html>\n \"\"\"\n", "test_patch": "diff --git a/tests/test_console.py b/tests/test_console.py\nindex a3b73793c..36d15df00 100644\n--- a/tests/test_console.py\n+++ b/tests/test_console.py\n@@ -529,7 +529,7 @@ def test_export_html():\n     console.print(\"[b]foo <script> 'test' [link=https://example.org]Click[/link]\")\n     html = console.export_html()\n     print(repr(html))\n-    expected = '<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n.r1 {font-weight: bold}\\n.r2 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold}\\n.r3 {color: #008000; text-decoration-color: #008000; font-weight: bold}\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<body>\\n    <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\"><code><span class=\"r1\">foo &lt;</span><span class=\"r2\">script</span><span class=\"r1\">&gt; </span><span class=\"r3\">&#x27;test&#x27;</span><span class=\"r1\"> </span><a class=\"r1\" href=\"https://example.org\">Click</a>\\n</code></pre>\\n</body>\\n</html>\\n'\n+    expected = '<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n.r1 {font-weight: bold}\\n.r2 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold}\\n.r3 {color: #008000; text-decoration-color: #008000; font-weight: bold}\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<body>\\n    <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\"><code style=\"font-family:inherit\"><span class=\"r1\">foo &lt;</span><span class=\"r2\">script</span><span class=\"r1\">&gt; </span><span class=\"r3\">&#x27;test&#x27;</span><span class=\"r1\"> </span><a class=\"r1\" href=\"https://example.org\">Click</a>\\n</code></pre>\\n</body>\\n</html>\\n'\n     assert html == expected\n \n \n@@ -538,7 +538,7 @@ def test_export_html_inline():\n     console.print(\"[b]foo [link=https://example.org]Click[/link]\")\n     html = console.export_html(inline_styles=True)\n     print(repr(html))\n-    expected = '<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<body>\\n    <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\"><code><span style=\"font-weight: bold\">foo </span><span style=\"font-weight: bold\"><a href=\"https://example.org\">Click</a></span>\\n</code></pre>\\n</body>\\n</html>\\n'\n+    expected = '<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<body>\\n    <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\"><code style=\"font-family:inherit\"><span style=\"font-weight: bold\">foo </span><span style=\"font-weight: bold\"><a href=\"https://example.org\">Click</a></span>\\n</code></pre>\\n</body>\\n</html>\\n'\n     assert html == expected\n \n \n@@ -591,7 +591,7 @@ def test_save_text():\n \n \n def test_save_html():\n-    expected = \"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\\\"UTF-8\\\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<body>\\n    <pre style=\\\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\"><code>foo\\n</code></pre>\\n</body>\\n</html>\\n\"\n+    expected = '<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<body>\\n    <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\"><code style=\"font-family:inherit\">foo\\n</code></pre>\\n</body>\\n</html>\\n'\n     console = Console(record=True, width=100)\n     console.print(\"foo\")\n     with tempfile.TemporaryDirectory() as path:\n", "problem_statement": "[BUG] `font-family` ignored in `html_export` due to user agent stylesheet for `<code>`\n- [X] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [X] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nRun this code:\r\n\r\n```py\r\nimport rich.console\r\n\r\ntry:\r\n    test = 1\r\n    raise Exception()\r\nexcept Exception:\r\n    console = rich.console.Console(record=True)\r\n    console.print_exception(show_locals=True)\r\n    html = console.export_html(inline_styles=True)\r\n    with open(\"test.html\", \"w\") as html_file:\r\n        html_file.write(html)\r\n```\r\n\r\nYou will get an `test.html` output file. Open it in Chrome.\r\n\r\nI'm on macOS, and it shows up like this:\r\n\r\n![image](https://github.com/Textualize/rich/assets/26592486/4b124132-b7a9-4156-bfd9-8912c65f2764)\r\n\r\n\r\nNotice the lines are not aligned properly on the right side. Here is why:\r\n\r\n![image](https://github.com/Textualize/rich/assets/26592486/8d6e13e6-2124-46e2-972d-1d4a31256615)\r\n\r\nAs you can see, Chrome's user agent stylesheet causes the `<code>` element to reset the `font-family` on the `<pre>` element back to `monospace`. All we need is to have Rich add a `font-family: inherit;` on the `<code>` element and everything is fine:\r\n\r\n![image](https://github.com/Textualize/rich/assets/26592486/ed1c2e6e-7d89-4d39-8301-cc92679458d9)\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\nMac with Chrome\r\n\r\n```\r\n\u276f python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=148 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 87                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=148, height=87),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=148,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=87,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=148, height=87)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 148                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-256color',      \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': 'vscode',      \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': None,       \u2502\r\n\u2502     'JUPYTER_LINES': None,         \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Darwin\"\r\n\r\n\u276f python -m pip freeze | grep rich\r\nrich==13.4.2\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2023-08-25T15:51:49Z"}
{"repo": "Textualize/rich", "pull_number": 3067, "instance_id": "Textualize__rich-3067", "issue_numbers": ["3057"], "base_commit": "1ad6f73a4d1d3b40ac3f879feccfaad66412bd1d", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 61d5cc8d7..eb07a4107 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,11 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## [Unreleased]\n+\n+### Fixed\n+\n+- Fix tilde character (`~`) not included in link regex when printing to console https://github.com/Textualize/rich/issues/3057\n \n ## [13.5.0] - 2023-07-29\n \ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 43165b0ee..40ad4666f 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -51,6 +51,7 @@ The following people have contributed to the development of Rich:\n - [Cl\u00e9ment Robert](https://github.com/neutrinoceros)\n - [Brian Rutledge](https://github.com/bhrutledge)\n - [Tushar Sadhwani](https://github.com/tusharsadhwani)\n+- [Luca Salvarani](https://github.com/LukeSavefrogs)\n - [Paul Sanders](https://github.com/sanders41)\n - [Tim Savage](https://github.com/timsavage)\n - [Anthony Shaw](https://github.com/tonybaloney)\ndiff --git a/rich/highlighter.py b/rich/highlighter.py\nindex c2646794a..27714b25b 100644\n--- a/rich/highlighter.py\n+++ b/rich/highlighter.py\n@@ -98,7 +98,7 @@ class ReprHighlighter(RegexHighlighter):\n             r\"(?P<number>(?<!\\w)\\-?[0-9]+\\.?[0-9]*(e[-+]?\\d+?)?\\b|0x[0-9a-fA-F]*)\",\n             r\"(?P<path>\\B(/[-\\w._+]+)*\\/)(?P<filename>[-\\w._+]*)?\",\n             r\"(?<![\\\\\\w])(?P<str>b?'''.*?(?<!\\\\)'''|b?'.*?(?<!\\\\)'|b?\\\"\\\"\\\".*?(?<!\\\\)\\\"\\\"\\\"|b?\\\".*?(?<!\\\\)\\\")\",\n-            r\"(?P<url>(file|https|http|ws|wss)://[-0-9a-zA-Z$_+!`(),.?/;:&=%#]*)\",\n+            r\"(?P<url>(file|https|http|ws|wss)://[-0-9a-zA-Z$_+!`(),.?/;:&=%#~]*)\",\n         ),\n     ]\n \n", "test_patch": "diff --git a/tests/test_highlighter.py b/tests/test_highlighter.py\nindex 804efb369..30851cf79 100644\n--- a/tests/test_highlighter.py\n+++ b/tests/test_highlighter.py\n@@ -133,6 +133,16 @@ def test_wrong_type():\n     (\" https://example.org \", [Span(1, 20, \"repr.url\")]),\n     (\" http://example.org \", [Span(1, 19, \"repr.url\")]),\n     (\" http://example.org/index.html \", [Span(1, 30, \"repr.url\")]),\n+    (\" http://example.org/index.html#anchor \", [Span(1, 37, \"repr.url\")]),\n+    (\n+        \" http://example.org/index.html?param1=value1 \",\n+        [\n+            Span(31, 37, \"repr.attrib_name\"),\n+            Span(38, 44, \"repr.attrib_value\"),\n+            Span(1, 44, \"repr.url\"),\n+        ],\n+    ),\n+    (\" http://example.org/~folder \", [Span(1, 27, \"repr.url\")]),\n     (\"No place like 127.0.0.1\", [Span(14, 23, \"repr.ipv4\")]),\n     (\"''\", [Span(0, 2, \"repr.str\")]),\n     (\"'hello'\", [Span(0, 7, \"repr.str\")]),\n", "problem_statement": "[BUG] Tilde not included in link regex\nThe following doesn't highlight pas the `~`\r\n```\r\n>>> from rich import print\r\n>>> print(\"http://127.0.0.1/~foo\")\r\nhttp://127.0.0.1/~foo\r\n```\r\n\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2023-07-30T00:15:14Z"}
{"repo": "Textualize/rich", "pull_number": 3006, "instance_id": "Textualize__rich-3006", "issue_numbers": ["2875", "2875"], "base_commit": "0c8bb032ad3b54a32fdb8a43f5ab457c8cd6dcb1", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex bbbfecf89..60267c5ee 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -15,6 +15,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fix for escaping strings with a trailing backslash https://github.com/Textualize/rich/issues/2987\n - Fixed exception in Markdown with partial table https://github.com/Textualize/rich/issues/3053 \n - Fixed the HTML export template so that the `<html>` tag comes before the `<head>` tag https://github.com/Textualize/rich/issues/3021\n+- Fixed issue with custom classes overwriting `__eq__` https://github.com/Textualize/rich/issues/2875\n \n ### Added\n \ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex fe88b7893..43165b0ee 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -13,6 +13,7 @@ The following people have contributed to the development of Rich:\n - [Ed Davis](https://github.com/davised)\n - [Pete Davison](https://github.com/pd93)\n - [James Estevez](https://github.com/jstvz)\n+- [Aryaz Eghbali](https://github.com/AryazE)\n - [Oleksis Fraga](https://github.com/oleksis)\n - [Andy Gimblett](https://github.com/gimbo)\n - [Micha\u0142 G\u00f3rny](https://github.com/mgorny)\ndiff --git a/rich/repr.py b/rich/repr.py\nindex 9dd65cdec..95331006e 100644\n--- a/rich/repr.py\n+++ b/rich/repr.py\n@@ -76,7 +76,7 @@ def auto_rich_repr(self: Type[T]) -> Result:\n                         param.POSITIONAL_OR_KEYWORD,\n                         param.KEYWORD_ONLY,\n                     ):\n-                        if param.default == param.empty:\n+                        if param.default is param.empty:\n                             yield getattr(self, param.name)\n                         else:\n                             yield param.name, getattr(self, param.name), param.default\n", "test_patch": "diff --git a/tests/test_repr.py b/tests/test_repr.py\nindex faabb90f0..3d3e74c8b 100644\n--- a/tests/test_repr.py\n+++ b/tests/test_repr.py\n@@ -6,6 +6,8 @@\n import rich.repr\n from rich.console import Console\n \n+from inspect import Parameter\n+\n skip_py37 = pytest.mark.skipif(\n     sys.version_info.minor == 7 and sys.version_info.major == 3,\n     reason=\"rendered differently on py3.7\",\n@@ -61,6 +63,38 @@ def __rich_repr__(self):\n     __rich_repr__.angular = True\n \n \n+class StupidClass:\n+    def __init__(self, a):\n+        self.a = a\n+\n+    def __eq__(self, other) -> bool:\n+        if other is Parameter.empty:\n+            return True\n+        try:\n+            return self.a == other.a\n+        except Exception:\n+            return False\n+\n+    def __ne__(self, other: object) -> bool:\n+        return not self.__eq__(other)\n+\n+\n+class NotStupid:\n+    pass\n+\n+\n+@rich.repr.auto\n+class Bird:\n+    def __init__(\n+        self, name, eats, fly=True, another=StupidClass(2), extinct=NotStupid()\n+    ):\n+        self.name = name\n+        self.eats = eats\n+        self.fly = fly\n+        self.another = another\n+        self.extinct = extinct\n+\n+\n def test_rich_repr() -> None:\n     assert (repr(Foo(\"hello\"))) == \"Foo('hello', 'hello', egg=1)\"\n     assert (repr(Foo(\"hello\", bar=3))) == \"Foo('hello', 'hello', bar=3, egg=1)\"\n@@ -90,6 +124,12 @@ def test_rich_angular() -> None:\n \n def test_rich_repr_auto() -> None:\n     assert repr(Egg(\"hello\", egg=2)) == \"Egg('hello', egg=2)\"\n+    stupid_class = StupidClass(9)\n+    not_stupid = NotStupid()\n+    assert (\n+        repr(Bird(\"penguin\", [\"fish\"], another=stupid_class, extinct=not_stupid))\n+        == f\"Bird('penguin', ['fish'], another={repr(stupid_class)}, extinct={repr(not_stupid)})\"\n+    )\n \n \n def test_rich_repr_auto_angular() -> None:\n", "problem_statement": "[BUG] Class of default value may change behavior of repr auto generation\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nThanks for developing rich! I noticed that when automatically generating `__rich_repr__`, parameters are compared to inspects `Parameter.empty` via `==`. For various reasons I use a class which overwrites equality when comparing to `Parameter.empty` and therefore breaks the automatically generated representation.\r\n\r\nHere is a minimal working example based on the examples provided in the docs:\r\n```python\r\nimport rich\r\nfrom rich.pretty import pprint\r\nfrom inspect import Parameter\r\n\r\nclass StupidClass:\r\n    def __init__(self, a):\r\n        self.a = a\r\n\r\n    def __eq__(self, other) -> bool:\r\n        if other is Parameter.empty:\r\n            return True\r\n        try:\r\n            return self.a == other.a\r\n        except Exception:\r\n            return False\r\n    \r\n    def __ne__(self, other: object) -> bool:\r\n        return not self.__eq__(other)\r\n\r\nclass NotStupid:\r\n    pass\r\n\r\n@rich.repr.auto\r\nclass Bird:\r\n    def __init__(self, name, eats, fly=True, another=StupidClass(2), extinct=NotStupid()):\r\n        self.name = name\r\n        self.eats = eats\r\n        self.fly = fly\r\n        self.another = another\r\n        self.extinct = extinct\r\n\r\npprint(Bird(\"penguin\", [\"fish\"], another=StupidClass(9), extinct=NotStupid()))\r\n```\r\nOutput:\r\n```\r\nBird('penguin', ['fish'], <__main__.StupidClass object at 0x7f8201c35610>, extinct=<__main__.NotStupid object at 0x7f82005ae4f0>)\r\n```\r\n\r\nExpected Output:\r\n```\r\nBird('penguin', ['fish'], another=<__main__.StupidClass object at 0x7fbcc1e44610>, extinct=<__main__.NotStupid object at 0x7fbcc07bd4f0>)\r\n```\r\n\r\n**Possible Fix**\r\n\r\nrepr.py\r\n```diff\r\ndef auto_rich_repr(self: Type[T]) -> Result:\r\n            \"\"\"Auto generate __rich_rep__ from signature of __init__\"\"\"\r\n            try:\r\n                signature = inspect.signature(self.__init__)\r\n                for name, param in signature.parameters.items():\r\n                    if param.kind == param.POSITIONAL_ONLY:\r\n                        yield getattr(self, name)\r\n                    elif param.kind in (\r\n                        param.POSITIONAL_OR_KEYWORD,\r\n                        param.KEYWORD_ONLY,\r\n                    ):\r\n-                        if param.default == param.empty:\r\n+                        if param.default is param.empty:\r\n                            yield getattr(self, param.name)\r\n                        else:\r\n                            yield param.name, getattr(self, param.name), param.default\r\n            except Exception as error:\r\n                raise ReprError(\r\n                    f\"Failed to auto generate __rich_repr__; {error}\"\r\n                ) from None\r\n```\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? Ubuntu\r\n What terminal software are you using? Xfce Terminal Emulator\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\npython -m rich diagnose\r\n                                                                                   Rich features                                                                                    \r\n                                                                                                                                                                                    \r\n    Colors    \u2713 4-bit color                 \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 8-bit color                 \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 Truecolor (16.7 million)    \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 Dumb terminals              \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 Automatic color conversion  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n                                                                                                                                                                                    \r\n    Styles    All ansi styles: bold, dim, italic, underline, strikethrough, reverse, and even blink.                                                                                \r\n                                                                                                                                                                                    \r\n     Text     Word wrap text. Justify left, center, right or full.                                                                                                                  \r\n                                                                                                                                                                                    \r\n              Lorem ipsum dolor sit amet, consectetur  Lorem ipsum dolor sit amet, consectetur   Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor  sit  amet,  consectetur \r\n              adipiscing elit. Quisque in metus sed     adipiscing elit. Quisque in metus sed      adipiscing elit. Quisque in metus sed adipiscing  elit.  Quisque  in  metus  sed \r\n              sapien ultricies pretium a at justo.       sapien ultricies pretium a at justo.       sapien ultricies pretium a at justo. sapien  ultricies  pretium  a  at   justo. \r\n              Maecenas luctus velit et auctor maximus. Maecenas luctus velit et auctor maximus. Maecenas luctus velit et auctor maximus. Maecenas luctus velit et auctor maximus.   \r\n                                                                                                                                                                                    \r\n    Asian     \ud83c\udde8\ud83c\uddf3  \u8be5\u5e93\u652f\u6301\u4e2d\u6587\uff0c\u65e5\u6587\u548c\u97e9\u6587\u6587\u672c\uff01                                                                                                                                    \r\n   language   \ud83c\uddef\ud83c\uddf5  \u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4e2d\u56fd\u8a9e\u3001\u65e5\u672c\u8a9e\u3001\u97d3\u56fd\u8a9e\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059                                                                                                  \r\n   support    \ud83c\uddf0\ud83c\uddf7  \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc911\uad6d\uc5b4, \uc77c\ubcf8\uc5b4 \ubc0f \ud55c\uad6d\uc5b4 \ud14d\uc2a4\ud2b8\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4                                                                                                      \r\n                                                                                                                                                                                    \r\n    Markup    Rich supports a simple bbcode-like markup for color, style, and emoji! \ud83d\udc4d \ud83c\udf4e \ud83d\udc1c \ud83d\udc3b \ud83e\udd56 \ud83d\ude8c                                                                              \r\n                                                                                                                                                                                    \r\n    Tables     Date           Title                                 Production Budget       Box Office                                                                              \r\n              \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                                                             \r\n               Dec 20, 2019   Star Wars: The Rise of Skywalker           $275,000,000     $375,126,118                                                                              \r\n               May 25, 2018   Solo: A Star Wars Story                    $275,000,000     $393,151,347                                                                              \r\n               Dec 15, 2017   Star Wars Ep. VIII: The Last Jedi          $262,000,000   $1,332,539,889                                                                              \r\n               May 19, 1999   Star Wars Ep. I: The phantom Menace        $115,000,000   $1,027,044,677                                                                              \r\n                                                                                                                                                                                    \r\n    Syntax       1 def iter_last(values: Iterable[T]) -> Iterable[Tuple[bool, T]]:                {                                                                                 \r\n highlighting    2 \u2502   \"\"\"Iterate and generate a tuple with a flag for last value.\"\"\"             \u2502   'foo': [3.1427, ('Paul Atreides', 'Vladimir Harkonnen', 'Thufir Hawat')],     \r\n      &          3 \u2502   iter_values = iter(values)                                                 \u2502   'atomic': (False, True, None)                                                 \r\n    pretty       4 \u2502   try:                                                                       }                                                                                 \r\n   printing      5 \u2502   \u2502   previous_value = next(iter_values)                                                                                                                       \r\n                 6 \u2502   except StopIteration:                                                                                                                                        \r\n                 7 \u2502   \u2502   return                                                                                                                                                   \r\n                 8 \u2502   for value in iter_values:                                                                                                                                    \r\n                 9 \u2502   \u2502   yield False, previous_value                                                                                                                              \r\n                10 \u2502   \u2502   previous_value = value                                                                                                                                   \r\n                11 \u2502   yield True, previous_value                                                                                                                                   \r\n                                                                                                                                                                                    \r\n   Markdown   # Markdown                                                                          \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \r\n                                                                                                  \u2503                                   Markdown                                    \u2503 \r\n              Supports much of the *markdown* __syntax__!                                         \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b \r\n                                                                                                                                                                                    \r\n              - Headers                                                                           Supports much of the markdown syntax!                                             \r\n              - Basic formatting: **bold**, *italic*, `code`                                                                                                                        \r\n              - Block quotes                                                                       \u2022 Headers                                                                        \r\n              - Lists, and more...                                                                 \u2022 Basic formatting: bold, italic, code                                           \r\n                                                                                                   \u2022 Block quotes                                                                   \r\n                                                                                                   \u2022 Lists, and more...                                                             \r\n                                                                                                                                                                                    \r\n    +more!    Progress bars, columns, styled logging handler, tracebacks, etc...                                                                                                    \r\n                                                                                                                                                                                    \r\nrendered in 123.0ms (cold cache)\r\nrendered in 50.0ms (warm cache)\r\n                                            \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Thanks for trying out Rich! \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2502  We hope you enjoy using Rich!               Textualize https://github.com/textualize    \u2502                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2502  Rich is maintained with \u2764 by Textualize.io     Twitter https://twitter.com/willmcgugan  \u2502                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2502  - Will McGugan                                                                          \u2502                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \r\n\r\n\r\npip freeze | grep rich\r\nrich==13.3.2\r\n```\r\n</details>\r\n\n[BUG] Class of default value may change behavior of repr auto generation\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nThanks for developing rich! I noticed that when automatically generating `__rich_repr__`, parameters are compared to inspects `Parameter.empty` via `==`. For various reasons I use a class which overwrites equality when comparing to `Parameter.empty` and therefore breaks the automatically generated representation.\r\n\r\nHere is a minimal working example based on the examples provided in the docs:\r\n```python\r\nimport rich\r\nfrom rich.pretty import pprint\r\nfrom inspect import Parameter\r\n\r\nclass StupidClass:\r\n    def __init__(self, a):\r\n        self.a = a\r\n\r\n    def __eq__(self, other) -> bool:\r\n        if other is Parameter.empty:\r\n            return True\r\n        try:\r\n            return self.a == other.a\r\n        except Exception:\r\n            return False\r\n    \r\n    def __ne__(self, other: object) -> bool:\r\n        return not self.__eq__(other)\r\n\r\nclass NotStupid:\r\n    pass\r\n\r\n@rich.repr.auto\r\nclass Bird:\r\n    def __init__(self, name, eats, fly=True, another=StupidClass(2), extinct=NotStupid()):\r\n        self.name = name\r\n        self.eats = eats\r\n        self.fly = fly\r\n        self.another = another\r\n        self.extinct = extinct\r\n\r\npprint(Bird(\"penguin\", [\"fish\"], another=StupidClass(9), extinct=NotStupid()))\r\n```\r\nOutput:\r\n```\r\nBird('penguin', ['fish'], <__main__.StupidClass object at 0x7f8201c35610>, extinct=<__main__.NotStupid object at 0x7f82005ae4f0>)\r\n```\r\n\r\nExpected Output:\r\n```\r\nBird('penguin', ['fish'], another=<__main__.StupidClass object at 0x7fbcc1e44610>, extinct=<__main__.NotStupid object at 0x7fbcc07bd4f0>)\r\n```\r\n\r\n**Possible Fix**\r\n\r\nrepr.py\r\n```diff\r\ndef auto_rich_repr(self: Type[T]) -> Result:\r\n            \"\"\"Auto generate __rich_rep__ from signature of __init__\"\"\"\r\n            try:\r\n                signature = inspect.signature(self.__init__)\r\n                for name, param in signature.parameters.items():\r\n                    if param.kind == param.POSITIONAL_ONLY:\r\n                        yield getattr(self, name)\r\n                    elif param.kind in (\r\n                        param.POSITIONAL_OR_KEYWORD,\r\n                        param.KEYWORD_ONLY,\r\n                    ):\r\n-                        if param.default == param.empty:\r\n+                        if param.default is param.empty:\r\n                            yield getattr(self, param.name)\r\n                        else:\r\n                            yield param.name, getattr(self, param.name), param.default\r\n            except Exception as error:\r\n                raise ReprError(\r\n                    f\"Failed to auto generate __rich_repr__; {error}\"\r\n                ) from None\r\n```\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? Ubuntu\r\n What terminal software are you using? Xfce Terminal Emulator\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\npython -m rich diagnose\r\n                                                                                   Rich features                                                                                    \r\n                                                                                                                                                                                    \r\n    Colors    \u2713 4-bit color                 \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 8-bit color                 \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 Truecolor (16.7 million)    \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 Dumb terminals              \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n              \u2713 Automatic color conversion  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \r\n                                                                                                                                                                                    \r\n    Styles    All ansi styles: bold, dim, italic, underline, strikethrough, reverse, and even blink.                                                                                \r\n                                                                                                                                                                                    \r\n     Text     Word wrap text. Justify left, center, right or full.                                                                                                                  \r\n                                                                                                                                                                                    \r\n              Lorem ipsum dolor sit amet, consectetur  Lorem ipsum dolor sit amet, consectetur   Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor  sit  amet,  consectetur \r\n              adipiscing elit. Quisque in metus sed     adipiscing elit. Quisque in metus sed      adipiscing elit. Quisque in metus sed adipiscing  elit.  Quisque  in  metus  sed \r\n              sapien ultricies pretium a at justo.       sapien ultricies pretium a at justo.       sapien ultricies pretium a at justo. sapien  ultricies  pretium  a  at   justo. \r\n              Maecenas luctus velit et auctor maximus. Maecenas luctus velit et auctor maximus. Maecenas luctus velit et auctor maximus. Maecenas luctus velit et auctor maximus.   \r\n                                                                                                                                                                                    \r\n    Asian     \ud83c\udde8\ud83c\uddf3  \u8be5\u5e93\u652f\u6301\u4e2d\u6587\uff0c\u65e5\u6587\u548c\u97e9\u6587\u6587\u672c\uff01                                                                                                                                    \r\n   language   \ud83c\uddef\ud83c\uddf5  \u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4e2d\u56fd\u8a9e\u3001\u65e5\u672c\u8a9e\u3001\u97d3\u56fd\u8a9e\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059                                                                                                  \r\n   support    \ud83c\uddf0\ud83c\uddf7  \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc911\uad6d\uc5b4, \uc77c\ubcf8\uc5b4 \ubc0f \ud55c\uad6d\uc5b4 \ud14d\uc2a4\ud2b8\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4                                                                                                      \r\n                                                                                                                                                                                    \r\n    Markup    Rich supports a simple bbcode-like markup for color, style, and emoji! \ud83d\udc4d \ud83c\udf4e \ud83d\udc1c \ud83d\udc3b \ud83e\udd56 \ud83d\ude8c                                                                              \r\n                                                                                                                                                                                    \r\n    Tables     Date           Title                                 Production Budget       Box Office                                                                              \r\n              \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                                                             \r\n               Dec 20, 2019   Star Wars: The Rise of Skywalker           $275,000,000     $375,126,118                                                                              \r\n               May 25, 2018   Solo: A Star Wars Story                    $275,000,000     $393,151,347                                                                              \r\n               Dec 15, 2017   Star Wars Ep. VIII: The Last Jedi          $262,000,000   $1,332,539,889                                                                              \r\n               May 19, 1999   Star Wars Ep. I: The phantom Menace        $115,000,000   $1,027,044,677                                                                              \r\n                                                                                                                                                                                    \r\n    Syntax       1 def iter_last(values: Iterable[T]) -> Iterable[Tuple[bool, T]]:                {                                                                                 \r\n highlighting    2 \u2502   \"\"\"Iterate and generate a tuple with a flag for last value.\"\"\"             \u2502   'foo': [3.1427, ('Paul Atreides', 'Vladimir Harkonnen', 'Thufir Hawat')],     \r\n      &          3 \u2502   iter_values = iter(values)                                                 \u2502   'atomic': (False, True, None)                                                 \r\n    pretty       4 \u2502   try:                                                                       }                                                                                 \r\n   printing      5 \u2502   \u2502   previous_value = next(iter_values)                                                                                                                       \r\n                 6 \u2502   except StopIteration:                                                                                                                                        \r\n                 7 \u2502   \u2502   return                                                                                                                                                   \r\n                 8 \u2502   for value in iter_values:                                                                                                                                    \r\n                 9 \u2502   \u2502   yield False, previous_value                                                                                                                              \r\n                10 \u2502   \u2502   previous_value = value                                                                                                                                   \r\n                11 \u2502   yield True, previous_value                                                                                                                                   \r\n                                                                                                                                                                                    \r\n   Markdown   # Markdown                                                                          \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \r\n                                                                                                  \u2503                                   Markdown                                    \u2503 \r\n              Supports much of the *markdown* __syntax__!                                         \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251b \r\n                                                                                                                                                                                    \r\n              - Headers                                                                           Supports much of the markdown syntax!                                             \r\n              - Basic formatting: **bold**, *italic*, `code`                                                                                                                        \r\n              - Block quotes                                                                       \u2022 Headers                                                                        \r\n              - Lists, and more...                                                                 \u2022 Basic formatting: bold, italic, code                                           \r\n                                                                                                   \u2022 Block quotes                                                                   \r\n                                                                                                   \u2022 Lists, and more...                                                             \r\n                                                                                                                                                                                    \r\n    +more!    Progress bars, columns, styled logging handler, tracebacks, etc...                                                                                                    \r\n                                                                                                                                                                                    \r\nrendered in 123.0ms (cold cache)\r\nrendered in 50.0ms (warm cache)\r\n                                            \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Thanks for trying out Rich! \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2502  We hope you enjoy using Rich!               Textualize https://github.com/textualize    \u2502                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2502  Rich is maintained with \u2764 by Textualize.io     Twitter https://twitter.com/willmcgugan  \u2502                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2502  - Will McGugan                                                                          \u2502                                            \r\n                                            \u2502                                                                                          \u2502                                            \r\n                                            \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \r\n\r\n\r\npip freeze | grep rich\r\nrich==13.3.2\r\n```\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)\nThank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2023-06-22T09:43:33Z"}
{"repo": "Textualize/rich", "pull_number": 2943, "instance_id": "Textualize__rich-2943", "issue_numbers": ["2942"], "base_commit": "610fd75c433c3dfcd9c296e8b91363979127b9fa", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex e47aa39a1..6911c40c5 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -15,6 +15,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fix pretty repr for `collections.deque` https://github.com/Textualize/rich/pull/2864\n - Thread used in progress.track will exit if an exception occurs in a generator https://github.com/Textualize/rich/pull/3402\n - Progress track thread is now a daemon thread https://github.com/Textualize/rich/pull/3402\n+- Fixed cached hash preservation upon clearing meta and links https://github.com/Textualize/rich/issues/2942\n \n ### Changed\n \ndiff --git a/rich/style.py b/rich/style.py\nindex 313c88949..262fd6eca 100644\n--- a/rich/style.py\n+++ b/rich/style.py\n@@ -663,7 +663,7 @@ def clear_meta_and_links(self) -> \"Style\":\n         style._set_attributes = self._set_attributes\n         style._link = None\n         style._link_id = \"\"\n-        style._hash = self._hash\n+        style._hash = None\n         style._null = False\n         style._meta = None\n         return style\n", "test_patch": "diff --git a/tests/test_style.py b/tests/test_style.py\nindex b5c01729e..84a65a677 100644\n--- a/tests/test_style.py\n+++ b/tests/test_style.py\n@@ -251,3 +251,17 @@ def test_clear_meta_and_links():\n     assert clear_style.bgcolor == Color.parse(\"black\")\n     assert clear_style.bold\n     assert not clear_style.italic\n+\n+\n+def test_clear_meta_and_links_clears_hash():\n+    \"\"\"Regression test for https://github.com/Textualize/rich/issues/2942.\"\"\"\n+\n+    style = Style.parse(\"bold red on black link https://example.org\") + Style.on(\n+        click=\"CLICK\"\n+    )\n+    hash(style)  # Force hash caching.\n+\n+    assert style._hash is not None\n+\n+    clear_style = style.clear_meta_and_links()\n+    assert clear_style._hash is None\n", "problem_statement": "[BUG] Style.clear_meta_and_links should reset hash\nThe hash of a `Style` instance depends on `_meta` and `_link`:\r\n\r\nhttps://github.com/Textualize/rich/blob/6d30ad0f30028210124c149811cbbe2b183711f9/rich/style.py#L432-L445\r\n\r\nSo, when the link and meta are cleared with the method `Style.clear_meta_and_links`, the cached hash should be cleared:\r\n\r\nhttps://github.com/Textualize/rich/blob/6d30ad0f30028210124c149811cbbe2b183711f9/rich/style.py#L664-L668\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2023-04-28T10:47:45Z"}
{"repo": "Textualize/rich", "pull_number": 2864, "instance_id": "Textualize__rich-2864", "issue_numbers": ["2863"], "base_commit": "2eb5cbfd46b41617a4b3a906955bcda17d88fb75", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 63d6f5e54..962916dc4 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -6,6 +6,12 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n \n+## Unreleased\n+\n+### Fixed\n+\n+- Fix pretty repr for `collections.deque` https://github.com/Textualize/rich/pull/2864\n+\n ## [13.3.2] - 2023-02-04\n \n ### Fixed\n@@ -41,7 +47,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fixed failing tests due to Pygments dependency https://github.com/Textualize/rich/issues/2757\n - Relaxed ipywidgets https://github.com/Textualize/rich/issues/2767\n \n-### Added \n+### Added\n \n - Added `encoding` parameter in `Theme.read`\n \ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex fd12885ba..d81711e70 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -15,6 +15,7 @@\n     Any,\n     Callable,\n     DefaultDict,\n+    Deque,\n     Dict,\n     Iterable,\n     List,\n@@ -352,6 +353,12 @@ def _get_braces_for_defaultdict(_object: DefaultDict[Any, Any]) -> Tuple[str, st\n     )\n \n \n+def _get_braces_for_deque(_object: Deque[Any]) -> Tuple[str, str, str]:\n+    if _object.maxlen is None:\n+        return (\"deque([\", \"])\", \"deque()\")\n+    return (\"deque([\", f\"], maxlen={_object.maxlen})\", f\"deque(maxlen={_object.maxlen})\")\n+\n+\n def _get_braces_for_array(_object: \"array[Any]\") -> Tuple[str, str, str]:\n     return (f\"array({_object.typecode!r}, [\", \"])\", f\"array({_object.typecode!r})\")\n \n@@ -361,7 +368,7 @@ def _get_braces_for_array(_object: \"array[Any]\") -> Tuple[str, str, str]:\n     array: _get_braces_for_array,\n     defaultdict: _get_braces_for_defaultdict,\n     Counter: lambda _object: (\"Counter({\", \"})\", \"Counter()\"),\n-    deque: lambda _object: (\"deque([\", \"])\", \"deque()\"),\n+    deque: _get_braces_for_deque,\n     dict: lambda _object: (\"{\", \"}\", \"{}\"),\n     UserDict: lambda _object: (\"{\", \"}\", \"{}\"),\n     frozenset: lambda _object: (\"frozenset({\", \"})\", \"frozenset()\"),\n", "test_patch": "diff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex c3f7967bf..0edc60b2e 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -2,7 +2,7 @@\n import io\n import sys\n from array import array\n-from collections import UserDict, defaultdict\n+from collections import UserDict, defaultdict, deque\n from dataclasses import dataclass, field\n from typing import Any, List, NamedTuple\n \n@@ -488,6 +488,33 @@ def test_defaultdict():\n     assert result == \"defaultdict(<class 'int'>, {'foo': 2})\"\n \n \n+def test_deque():\n+    test_deque = deque([1, 2, 3])\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([1, 2, 3])\"\n+    test_deque = deque([1, 2, 3], maxlen=None)\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([1, 2, 3])\"\n+    test_deque = deque([1, 2, 3], maxlen=5)\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([1, 2, 3], maxlen=5)\"\n+    test_deque = deque([1, 2, 3], maxlen=0)\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([], maxlen=0)\"\n+    test_deque = deque([])\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([])\"\n+    test_deque = deque([], maxlen=None)\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([])\"\n+    test_deque = deque([], maxlen=5)\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([], maxlen=5)\"\n+    test_deque = deque([], maxlen=0)\n+    result = pretty_repr(test_deque)\n+    assert result == \"deque([], maxlen=0)\"\n+\n+\n def test_array():\n     test_array = array(\"I\", [1, 2, 3])\n     result = pretty_repr(test_array)\n", "problem_statement": "[BUG] `rich.pretty` is not showing `maxlen` for `collections.deque`\n- [X] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [X] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nEdit this with a clear and concise description of what the bug.\r\n\r\nProvide a minimal code example that demonstrates the issue if you can. If the issue is visual in nature, consider posting a screenshot.\r\n\r\nI add `rich.pretty` in my `ipython` startup script and overwrite `builtins.print` with `rich.print`. It work as expected when I print a large collection object. However, it not works well with `collections.deque`. `rich.print` and `builtins.print` are showing non-whitespace differences.\r\n\r\n```python\r\nIn [1]: import rich\r\n   ...: import rich.pretty\r\n   ...: from rich import print\r\n   ...: \r\n   ...: rich.pretty.install(indent_guides=True)\r\n\r\nIn [2]: print\r\nOut[2]: <function rich.print(*objects: Any, sep: str = ' ', end: str = '\\n', file: Optional[IO[str]] = None, flush: bool = False) -> None>\r\n\r\nIn [3]: from collections import deque\r\n\r\nIn [4]: import builtins\r\n\r\nIn [5]: d = deque([1, 2, 3])\r\n\r\nIn [6]: print(d)\r\ndeque([1, 2, 3])\r\n\r\nIn [7]: builtins.print(d)\r\ndeque([1, 2, 3])\r\n\r\nIn [8]: d\r\nOut[8]: deque([1, 2, 3])\r\n\r\nIn [9]: repr(d)\r\nOut[9]: 'deque([1, 2, 3])'\r\n\r\nIn [10]: d = deque([1, 2, 3], maxlen=5)\r\n\r\nIn [11]: print(d)\r\ndeque([1, 2, 3])\r\n\r\nIn [12]: builtins.print(d)\r\ndeque([1, 2, 3], maxlen=5)\r\n\r\nIn [13]: d\r\nOut[13]: deque([1, 2, 3])\r\n\r\nIn [14]: repr(d)\r\nOut[14]: 'deque([1, 2, 3], maxlen=5)'\r\n```\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\npython -m rich.diagnose\r\npip freeze | grep rich\r\n```\r\n\r\n```text\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=221 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 67                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=221, height=67),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=221,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=67,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=221, height=67)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 221                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-256color',      \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': 'vscode',      \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': None,       \u2502\r\n\u2502     'JUPYTER_LINES': None,         \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n\r\nrich==13.3.1\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)", "created_at": "2023-03-07T10:09:32Z"}
{"repo": "Textualize/rich", "pull_number": 2858, "instance_id": "Textualize__rich-2858", "issue_numbers": ["2825"], "base_commit": "2eb5cbfd46b41617a4b3a906955bcda17d88fb75", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 63d6f5e54..2640defcd 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -6,6 +6,12 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n \n+## Unreleased\n+\n+### Fixed\n+\n+- `RichHandler` errors and warnings will now use different colors (red and yellow) https://github.com/Textualize/rich/issues/2825\n+\n ## [13.3.2] - 2023-02-04\n \n ### Fixed\ndiff --git a/rich/default_styles.py b/rich/default_styles.py\nindex ad72fff58..031b94a13 100644\n--- a/rich/default_styles.py\n+++ b/rich/default_styles.py\n@@ -54,7 +54,7 @@\n     \"logging.level.notset\": Style(dim=True),\n     \"logging.level.debug\": Style(color=\"green\"),\n     \"logging.level.info\": Style(color=\"blue\"),\n-    \"logging.level.warning\": Style(color=\"red\"),\n+    \"logging.level.warning\": Style(color=\"yellow\"),\n     \"logging.level.error\": Style(color=\"red\", bold=True),\n     \"logging.level.critical\": Style(color=\"red\", bold=True, reverse=True),\n     \"log.level\": Style.null(),\n", "test_patch": "", "problem_statement": "[REQUEST] Tweak default colors for RichHandler\nHello, first of all, thank you for rich! I use it in pretty much all my projects.\r\n\r\nI have a _very minor_ suggestion regarding the _default_ colors for logging levels.\r\nI know we can customize them using [themes](https://rich.readthedocs.io/en/latest/style.html#style-themes) (and I already do!).\r\nI use mostly info/warning/error levels for logging, and depending on the terminal used, _warnings and errors_ render almost identically.\r\n\r\nWhen googling \"Python colored logs\", the top solutions (in my case) use yellow-ish for warnings and red for errors.\r\nGranted, many of the top results use `coloredlogs`, but in any case I see:\r\n\r\n* [stack overflow top answer](https://stackoverflow.com/questions/384076/how-can-i-color-python-logging-output)\r\n* [PyPI coloredlogs](https://pypi.org/project/coloredlogs/)\r\n* [a blog post](https://alexandra-zaharia.github.io/posts/make-your-own-custom-color-formatter-with-python-logging/)\r\n* [another blog post](https://betterstack.com/community/questions/how-to-color-python-logging-output/)\r\n* [PyPI colorlog](https://pypi.org/project/colorlog/)\r\n\r\nSo I was wondering if you would be willing to tweak the default `'logging.level.warning'` to something closer to yellow, to be more in line with this, and give a bit more distinction to warnings and errors.\r\nAnyway, I am perfectly happy with customization through themes!\r\n\n", "hints_text": "We found the following entry in the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) which you may find helpful:\n\n\n- [How do I log a renderable?](https://github.com/textualize/rich/blob/master/FAQ.md#how-do-i-log-a-renderable)\n\nFeel free to close this issue if you found an answer in the FAQ. Otherwise, please give us a little time to review.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)\nSure. I would accept a PR for that...", "created_at": "2023-03-06T09:51:35Z"}
{"repo": "Textualize/rich", "pull_number": 2806, "instance_id": "Textualize__rich-2806", "issue_numbers": ["2803"], "base_commit": "b89d0362e8ebcb18902f0f0a206879f1829b5c0b", "patch": "diff --git a/rich/pretty.py b/rich/pretty.py\nindex 83c6c1e67..366837ba7 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -55,13 +55,6 @@\n     )\n \n \n-JUPYTER_CLASSES_TO_NOT_RENDER = {\n-    # Matplotlib \"Artists\" manage their own rendering in a Jupyter notebook, and we should not try to render them too.\n-    # \"Typically, all [Matplotlib] visible elements in a figure are subclasses of Artist.\"\n-    \"matplotlib.artist.Artist\",\n-}\n-\n-\n def _is_attr_object(obj: Any) -> bool:\n     \"\"\"Check if an object was created with attrs module.\"\"\"\n     return _has_attrs and _attr_module.has(type(obj))\n@@ -122,69 +115,40 @@ def _ipy_display_hook(\n     max_string: Optional[int] = None,\n     max_depth: Optional[int] = None,\n     expand_all: bool = False,\n-) -> None:\n+) -> Union[str, None]:\n     # needed here to prevent circular import:\n-    from ._inspect import is_object_one_of_types\n     from .console import ConsoleRenderable\n \n     # always skip rich generated jupyter renderables or None values\n     if _safe_isinstance(value, JupyterRenderable) or value is None:\n-        return\n+        return None\n \n     console = console or get_console()\n-    if console.is_jupyter:\n-        # Delegate rendering to IPython if the object (and IPython) supports it\n-        #  https://ipython.readthedocs.io/en/stable/config/integrating.html#rich-display\n-        ipython_repr_methods = [\n-            \"_repr_html_\",\n-            \"_repr_markdown_\",\n-            \"_repr_json_\",\n-            \"_repr_latex_\",\n-            \"_repr_jpeg_\",\n-            \"_repr_png_\",\n-            \"_repr_svg_\",\n-            \"_repr_mimebundle_\",\n-        ]\n-        for repr_method in ipython_repr_methods:\n-            method = getattr(value, repr_method, None)\n-            if inspect.ismethod(method):\n-                # Calling the method ourselves isn't ideal. The interface for the `_repr_*_` methods\n-                #  specifies that if they return None, then they should not be rendered\n-                #  by the notebook.\n-                try:\n-                    repr_result = method()\n-                except Exception:\n-                    continue  # If the method raises, treat it as if it doesn't exist, try any others\n-                if repr_result is not None:\n-                    return  # Delegate rendering to IPython\n-\n-        # When in a Jupyter notebook let's avoid the display of some specific classes,\n-        # as they result in the rendering of useless and noisy lines such as `<Figure size 432x288 with 1 Axes>`.\n-        # What does this do?\n-        # --> if the class has \"matplotlib.artist.Artist\" in its hierarchy for example, we don't render it.\n-        if is_object_one_of_types(value, JUPYTER_CLASSES_TO_NOT_RENDER):\n-            return\n-\n-    # certain renderables should start on a new line\n-    if _safe_isinstance(value, ConsoleRenderable):\n-        console.line()\n-\n-    console.print(\n-        value\n-        if _safe_isinstance(value, RichRenderable)\n-        else Pretty(\n-            value,\n-            overflow=overflow,\n-            indent_guides=indent_guides,\n-            max_length=max_length,\n-            max_string=max_string,\n-            max_depth=max_depth,\n-            expand_all=expand_all,\n-            margin=12,\n-        ),\n-        crop=crop,\n-        new_line_start=True,\n-    )\n+\n+    with console.capture() as capture:\n+        # certain renderables should start on a new line\n+        if _safe_isinstance(value, ConsoleRenderable):\n+            console.line()\n+        console.print(\n+            value\n+            if _safe_isinstance(value, RichRenderable)\n+            else Pretty(\n+                value,\n+                overflow=overflow,\n+                indent_guides=indent_guides,\n+                max_length=max_length,\n+                max_string=max_string,\n+                max_depth=max_depth,\n+                expand_all=expand_all,\n+                margin=12,\n+            ),\n+            crop=crop,\n+            new_line_start=True,\n+            end=\"\",\n+        )\n+    # strip trailing newline, not usually part of a text repr\n+    # I'm not sure if this should be prevented at a lower level\n+    return capture.get().rstrip(\"\\n\")\n \n \n def _safe_isinstance(\n", "test_patch": "diff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex 53256379b..c10f9467f 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -5,7 +5,6 @@\n from collections import UserDict, defaultdict\n from dataclasses import dataclass, field\n from typing import Any, List, NamedTuple\n-from unittest.mock import patch\n \n import attr\n import pytest\n@@ -78,16 +77,17 @@ def test_ipy_display_hook__multiple_special_reprs():\n     console = Console(file=io.StringIO(), force_jupyter=True)\n \n     class Thing:\n+        def __repr__(self):\n+            return \"A Thing\"\n+\n         def _repr_latex_(self):\n             return None\n \n         def _repr_html_(self):\n             return \"hello\"\n \n-    console.begin_capture()\n-    _ipy_display_hook(Thing(), console=console)\n-\n-    assert console.end_capture() == \"\"\n+    result = _ipy_display_hook(Thing(), console=console)\n+    assert result == \"A Thing\"\n \n \n def test_ipy_display_hook__no_special_repr_methods():\n@@ -97,11 +97,9 @@ class Thing:\n         def __repr__(self) -> str:\n             return \"hello\"\n \n-    console.begin_capture()\n-    _ipy_display_hook(Thing(), console=console)\n-\n-    # No IPython special repr methods, so printed by Rich\n-    assert console.end_capture() == \"hello\\n\"\n+    result = _ipy_display_hook(Thing(), console=console)\n+    # should be repr as-is\n+    assert result == \"hello\"\n \n \n def test_ipy_display_hook__special_repr_raises_exception():\n@@ -121,33 +119,18 @@ def _repr_latex_(self):\n         def _repr_html_(self):\n             return \"hello\"\n \n-    console.begin_capture()\n-    _ipy_display_hook(Thing(), console=console)\n+        def __repr__(self):\n+            return \"therepr\"\n \n-    assert console.end_capture() == \"\"\n+    result = _ipy_display_hook(Thing(), console=console)\n+    assert result == \"therepr\"\n \n \n def test_ipy_display_hook__console_renderables_on_newline():\n     console = Console(file=io.StringIO(), force_jupyter=True)\n     console.begin_capture()\n-    _ipy_display_hook(Text(\"hello\"), console=console)\n-    assert console.end_capture() == \"\\nhello\\n\"\n-\n-\n-def test_ipy_display_hook__classes_to_not_render():\n-    console = Console(file=io.StringIO(), force_jupyter=True)\n-    console.begin_capture()\n-\n-    class Thing:\n-        def __repr__(self) -> str:\n-            return \"hello\"\n-\n-    class_fully_qualified_name = f\"{__name__}.{Thing.__qualname__}\"\n-    with patch(\n-        \"rich.pretty.JUPYTER_CLASSES_TO_NOT_RENDER\", {class_fully_qualified_name}\n-    ):\n-        _ipy_display_hook(Thing(), console=console)\n-    assert console.end_capture() == \"\"\n+    result = _ipy_display_hook(Text(\"hello\"), console=console)\n+    assert result == \"\\nhello\"\n \n \n def test_pretty():\n", "problem_statement": "duplicated plots in jupyter\nHow can we avoid having duplicated plots on jupyter?\r\n\r\nWhen I run\r\n\r\n```\r\nimport gdsfactory as gf\r\ngf.components.bend_circular()\r\n```\r\n\r\nI get one plot in jupyter, thanks to  defining `def _repr_html_(self)`\r\n\r\nHowever when I run \r\n```\r\nfrom rich import pretty\r\n\r\npretty.install()\r\ngf.components.bend_circular()\r\n```\r\n\r\nI get two plots of the same component.\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)\nWhat version of Jupyter?\nI have seen it on 3.5.2  and also on  3.6.1\r\n\r\nAlso I can see it on the docs of the package where we modify the `_repr_html_(self)`\r\nhttps://gdsfactory.github.io/gdsfactory/notebooks/03_cells_autoname_and_cache.html#\r\n\r\n```\r\nA high level console interface.                                            \u2502\r\n\u2502                                                                            \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=115 ColorSystem.TRUECOLOR>                              \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                            \u2502\r\n\u2502     color_system = 'truecolor'                                             \u2502\r\n\u2502         encoding = 'utf-8'                                                 \u2502\r\n\u2502             file = <ipykernel.iostream.OutStream object at 0x7efcfe5e6050> \u2502\r\n\u2502           height = 100                                                     \u2502\r\n\u2502    is_alt_screen = False                                                   \u2502\r\n\u2502 is_dumb_terminal = False                                                   \u2502\r\n\u2502   is_interactive = False                                                   \u2502\r\n\u2502       is_jupyter = True                                                    \u2502\r\n\u2502      is_terminal = False                                                   \u2502\r\n\u2502   legacy_windows = False                                                   \u2502\r\n\u2502         no_color = False                                                   \u2502\r\n\u2502          options = ConsoleOptions(                                         \u2502\r\n\u2502                        size=ConsoleDimensions(width=115, height=100),      \u2502\r\n\u2502                        legacy_windows=False,                               \u2502\r\n\u2502                        min_width=1,                                        \u2502\r\n\u2502                        max_width=115,                                      \u2502\r\n\u2502                        is_terminal=False,                                  \u2502\r\n\u2502                        encoding='utf-8',                                   \u2502\r\n\u2502                        max_height=100,                                     \u2502\r\n\u2502                        justify=None,                                       \u2502\r\n\u2502                        overflow=None,                                      \u2502\r\n\u2502                        no_wrap=False,                                      \u2502\r\n\u2502                        highlight=None,                                     \u2502\r\n\u2502                        markup=None,                                        \u2502\r\n\u2502                        height=None                                         \u2502\r\n\u2502                    )                                                       \u2502\r\n\u2502            quiet = False                                                   \u2502\r\n\u2502           record = False                                                   \u2502\r\n\u2502         safe_box = True                                                    \u2502\r\n\u2502             size = ConsoleDimensions(width=115, height=100)                \u2502\r\n\u2502        soft_wrap = False                                                   \u2502\r\n\u2502           stderr = False                                                   \u2502\r\n\u2502            style = None                                                    \u2502\r\n\u2502         tab_size = 8                                                       \u2502\r\n\u2502            width = 115                                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-color',         \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': '1',               \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': 'tmux',        \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': None,       \u2502\r\n\u2502     'JUPYTER_LINES': None,         \u2502\r\n\u2502     'JPY_PARENT_PID': '715767',    \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n```\r\n\r\n\nJupyter lab, Jupyter notebook, VScode ?\njupyter-lab as well as VSCode\nI think this is a bug in the `gdsfactory` library; they use side-effects in `_repr_html_` rather than returning HTML. As such, rich probably invokes subsequent display methods, which leads to double plotting. \nSpecifically https://github.com/gdsfactory/gdsfactory/blob/b1d857446e1918b6f3db5b1cce3ba4de165652a5/gdsfactory/component.py#L1253 which leads to https://github.com/gdsfactory/gdsfactory/blob/b1d857446e1918b6f3db5b1cce3ba4de165652a5/gdsfactory/component.py#L1271.\r\n\r\nIf multiple reprs are needed then `__repr_mimebundle__` may be a better approach? \nIf they want to keep the side-effect pattern, [`_ipython_display_()`](https://ipython.readthedocs.io/en/stable/config/integrating.html#MyObject._ipython_display_) is the method for that. That would be the shortest path to a solution, I think.\r\n\r\nAs @blois mentioned, the direct cause is the side effects in `_repr_html_`. But since the `_ipy_display_hook` _calls_ all possible IPython hooks, IPython's own display formatter also calls the same hook, triggering the side effect a second time.\r\n\r\nIf `_repr_html_` were fixed to follow the spec and _return_ the html representation (note: plotting matplotlib figures does _not_ usually produce HTML, it produces a png or jpeg output), the duplication would be solved, but the whole plot would still be rendered twice. One would just be discarded.\r\n\r\nI think rich's IPython hook as implemented now doesn't _quite_ fit the design of IPython's display formatters as it's implemented today. There are two classes:\r\n\r\n1. the [DisplayFormatter](https://ipython.readthedocs.io/en/stable/api/generated/IPython.core.formatters.html#IPython.core.formatters.DisplayFormatter), which is the object responsible for selecting and dispatching renderers for individual formatters (available as `get_ipython().display_formatter`), and\r\n2. the individual subclasses of [BaseFormatter](https://ipython.readthedocs.io/en/stable/api/generated/IPython.core.formatters.html#IPython.core.formatters.BaseFormatter), which are registered by mime-type as `ip.display_formatter.formatters` and should _return_ representations without side effects.\r\n\r\nCurrently, `_ipy_display_hook` registers itself as `text/plain` but actually relies on side effects to display text. I'm assuming this is why other formats are  considered - if rich and the HTMLFormatter both produce output, you'll see it twice. But this isn't how plain text reprs are expected to behave. Rich is reimplementing logic in DisplayFormatter and the frontend (output format _selection_) at the level of a single formatter (text/plain), which (in IPython's opinion) should not concern itself with what other formats are computed.\r\n\r\nIPython and Jupyter generally expect _multiple_ representations of outputs, and `text/plain` is ~always present as a fallback. I think the right fix is for rich's `_ipy_display_hook` to remove its checks for whether it should run (which don't work in general because formatter functions can also be registered without special method names using `formatter.for_type`) and compute and _return_ its text representation unconditionally, [as is done in IPython's default pretty printer](https://github.com/ipython/ipython/blob/9663a9adc4c87490f1dc59c8b6f32cdfd0c5094a/IPython/core/formatters.py#L694-L708). It's up to the DisplayFormatter to pick which representations to _compute_, and up to the frontend to pick which representation to display, and multiple frontends or nbconvert exports may pick different formats to support or prefer.", "created_at": "2023-02-13T13:51:04Z"}
{"repo": "Textualize/rich", "pull_number": 2804, "instance_id": "Textualize__rich-2804", "issue_numbers": ["2740"], "base_commit": "155bd04b12580aee94b2bc04c46a3856065273a3", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5d527500d..db52baa25 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,7 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+\n ## [13.3.2] - Unreleased\n \n ### Fixed\n@@ -13,10 +14,12 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fix syntax error when building with nuitka https://github.com/Textualize/rich/pull/2635\n - Fixed pretty printing of empty dataclass https://github.com/Textualize/rich/issues/2819\n - Fixes superfluous spaces in html output https://github.com/Textualize/rich/issues/2832\n+- Fixed duplicate output in Jupyter https://github.com/Textualize/rich/pulls/2804\n \n ### Added\n \n - Added Polish README\n+\n ## [13.3.1] - 2023-01-28\n \n ### Fixed\ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex f8c87edf2..310463ba4 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -43,6 +43,7 @@ The following people have contributed to the development of Rich:\n - [Kyle Pollina](https://github.com/kylepollina)\n - [Sebasti\u00e1n Ram\u00edrez](https://github.com/tiangolo)\n - [Felipe Guedes](https://github.com/guedesfelipe)\n+- [Min RK](https://github.com/minrk)\n - [Cl\u00e9ment Robert](https://github.com/neutrinoceros)\n - [Brian Rutledge](https://github.com/bhrutledge)\n - [Tushar Sadhwani](https://github.com/tusharsadhwani)\ndiff --git a/rich/console.py b/rich/console.py\nindex a3aaa83b5..3cad3632c 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -711,11 +711,6 @@ def __init__(\n         self._force_terminal = None\n         if force_terminal is not None:\n             self._force_terminal = force_terminal\n-        else:\n-            # If FORCE_COLOR env var has any value at all, we force terminal.\n-            force_color = self._environ.get(\"FORCE_COLOR\")\n-            if force_color is not None:\n-                self._force_terminal = True\n \n         self._file = file\n         self.quiet = quiet\n@@ -949,6 +944,15 @@ def is_terminal(self) -> bool:\n             # Return False for Idle which claims to be a tty but can't handle ansi codes\n             return False\n \n+        if self.is_jupyter:\n+            # return False for Jupyter, which may have FORCE_COLOR set\n+            return False\n+\n+        # If FORCE_COLOR env var has any value at all, we assume a terminal.\n+        force_color = self._environ.get(\"FORCE_COLOR\")\n+        if force_color is not None:\n+            self._force_terminal = True\n+\n         isatty: Optional[Callable[[], bool]] = getattr(self.file, \"isatty\", None)\n         try:\n             return False if isatty is None else isatty()\n", "test_patch": "diff --git a/tests/test_console.py b/tests/test_console.py\nindex 227752158..3bcddefd0 100644\n--- a/tests/test_console.py\n+++ b/tests/test_console.py\n@@ -971,3 +971,11 @@ def test_force_color(env_value):\n     # means is_terminal returns True.\n     console = Console(file=io.StringIO(), _environ={\"FORCE_COLOR\": env_value})\n     assert console.is_terminal\n+\n+\n+def test_force_color_jupyter():\n+    # FORCE_COLOR above doesn't happen in a Jupyter kernel\n+    console = Console(\n+        file=io.StringIO(), _environ={\"FORCE_COLOR\": \"1\"}, force_jupyter=True\n+    )\n+    assert not console.is_terminal\n", "problem_statement": "[BUG] Double rendering of notebook output with `rich>=12.6.0`\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\nIt appears the double rendering issue referenced in #1737 has returned starting in version 12.6.0.\r\n\r\nWith a poetry environment given by:\r\n\r\n```toml\r\n[tool.poetry]\r\nname = \"rich-bug-repro\"\r\nversion = \"0.0.1\"\r\ndescription = \"...\"\r\nauthors = [\"John Doe\"]\r\n\r\n[tool.poetry.dependencies]\r\npython = \"^3.9\"\r\njupyter = \"^1.0.0\"\r\nrich = {version = \"x.x.x\", extras=[\"jupyter\"]}  # fill out with desired version\r\n```\r\n\r\na simple reproducing example is (from a jupyter notebook)\r\n\r\n```python\r\nfrom rich.progress import track\r\nimport time\r\n\r\nfor i in track(range(100)):\r\n    time.sleep(0.01)\r\n```\r\n\r\nwhen `version` is set to any of `12.6.0,13.0.0,13.0.1` in the `pyproject.toml` above, the output of this example looks like\r\n\r\n![image](https://user-images.githubusercontent.com/14932242/211386667-5eec044c-778a-4c1e-87d0-156fab83e7cb.png)\r\n\r\nWhen using `<12.6.0`, you get the expected\r\n![image](https://user-images.githubusercontent.com/14932242/211387105-cf666de3-716c-4040-8d2a-2faf1de70a65.png)\r\n\r\nNote that this is strictly a jupyter problem: for any of these versions, running e.g.\r\n```console\r\npython -c 'from rich.progress import track;import time;[time.sleep(0.01) for _ in track(range(100))]'\r\n```\r\nresults in just a single progress bar being printed, as expected.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\nLinux, both natively and in WSL2 on Windows.\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\npython -m rich.diagnose\r\npip freeze | grep rich\r\n```\r\n\r\nIf you're using Rich in a Jupyter Notebook, run the following snippet in a cell\r\nand paste the output in your bug report.\r\n\r\n```python\r\nfrom rich.diagnose import report\r\nreport()\r\n```\r\n```console\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                            \u2502\r\n\u2502                                                                            \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=115 ColorSystem.TRUECOLOR>                              \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                            \u2502\r\n\u2502     color_system = 'truecolor'                                             \u2502\r\n\u2502         encoding = 'utf-8'                                                 \u2502\r\n\u2502             file = <ipykernel.iostream.OutStream object at 0x7f3f783203d0> \u2502\r\n\u2502           height = 100                                                     \u2502\r\n\u2502    is_alt_screen = False                                                   \u2502\r\n\u2502 is_dumb_terminal = False                                                   \u2502\r\n\u2502   is_interactive = True                                                    \u2502\r\n\u2502       is_jupyter = True                                                    \u2502\r\n\u2502      is_terminal = True                                                    \u2502\r\n\u2502   legacy_windows = False                                                   \u2502\r\n\u2502         no_color = False                                                   \u2502\r\n\u2502          options = ConsoleOptions(                                         \u2502\r\n\u2502                        size=ConsoleDimensions(width=115, height=100),      \u2502\r\n\u2502                        legacy_windows=False,                               \u2502\r\n\u2502                        min_width=1,                                        \u2502\r\n\u2502                        max_width=115,                                      \u2502\r\n\u2502                        is_terminal=True,                                   \u2502\r\n\u2502                        encoding='utf-8',                                   \u2502\r\n\u2502                        max_height=100,                                     \u2502\r\n\u2502                        justify=None,                                       \u2502\r\n\u2502                        overflow=None,                                      \u2502\r\n\u2502                        no_wrap=False,                                      \u2502\r\n\u2502                        highlight=None,                                     \u2502\r\n\u2502                        markup=None,                                        \u2502\r\n\u2502                        height=None                                         \u2502\r\n\u2502                    )                                                       \u2502\r\n\u2502            quiet = False                                                   \u2502\r\n\u2502           record = False                                                   \u2502\r\n\u2502         safe_box = True                                                    \u2502\r\n\u2502             size = ConsoleDimensions(width=115, height=100)                \u2502\r\n\u2502        soft_wrap = False                                                   \u2502\r\n\u2502           stderr = False                                                   \u2502\r\n\u2502            style = None                                                    \u2502\r\n\u2502         tab_size = 8                                                       \u2502\r\n\u2502            width = 115                                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-color',         \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': '1',               \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': None,       \u2502\r\n\u2502     'JUPYTER_LINES': None,         \u2502\r\n\u2502     'JPY_PARENT_PID': '2054',      \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n```\r\n</details>\r\n\n", "hints_text": "What software are you using to run the Notebook? Jupyter notebook, Jupyter lab, VSCode ? \nI had the same problem, was using Jupyter lab.\nOk, just checked again, and the problem exists with both jupyter-lab and notebook. Don't use VSCode, so don't know about that. In my case, both running on Linux, in a (newly created) conda-environment, if that makes any difference.", "created_at": "2023-02-12T23:04:29Z"}
{"repo": "Textualize/rich", "pull_number": 2799, "instance_id": "Textualize__rich-2799", "issue_numbers": ["2688"], "base_commit": "fa09487eae9aca468a1ddbb9c89ba3d750bb88bd", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 1897c96c1..019a81ee2 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -16,6 +16,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Use `Console(stderr=True)` in `rich.traceback.install` to support io redirection.\n - Fixes superfluous spaces in html output https://github.com/Textualize/rich/issues/2832\n - Fixed duplicate output in Jupyter https://github.com/Textualize/rich/pulls/2804\n+- Filter ANSI character-encoding-change codes in `Text.from_ansi` parser\n - Fixes traceback failing when a frame filename is unreadable https://github.com/Textualize/rich/issues/2821\n \n ### Added\ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 51b79b2a9..6db567753 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -64,3 +64,4 @@ The following people have contributed to the development of Rich:\n - [Zhe Huang](https://github.com/onlyacat)\n - [Ke Sun](https://github.com/ksun212)\n - [Qiming Xu](https://github.com/xqm32)\n+- [James Addison](https://github.com/jayaddison)\ndiff --git a/rich/ansi.py b/rich/ansi.py\nindex 92ef51941..66365e653 100644\n--- a/rich/ansi.py\n+++ b/rich/ansi.py\n@@ -43,6 +43,9 @@ def _ansi_tokenize(ansi_text: str) -> Iterable[_AnsiToken]:\n         if start > position:\n             yield _AnsiToken(ansi_text[position:start])\n         if sgr:\n+            if sgr == \"(\":\n+                position = end + 1\n+                continue\n             if sgr.endswith(\"m\"):\n                 yield _AnsiToken(\"\", sgr[1:-1], osc)\n         else:\n", "test_patch": "diff --git a/tests/test_ansi.py b/tests/test_ansi.py\nindex 1a21765c2..ae87cde17 100644\n--- a/tests/test_ansi.py\n+++ b/tests/test_ansi.py\n@@ -1,3 +1,5 @@\n+import pytest\n+\n from rich.ansi import AnsiDecoder\n from rich.console import Console\n from rich.style import Style\n@@ -45,3 +47,24 @@ def test_decode_example():\n     print(repr(result))\n     expected = \"\\x1b[1mC:\\\\Users\\\\stefa\\\\AppData\\\\Local\\\\Temp\\\\tmp3ydingba:\\x1b[0m In function '\\x1b[1mmain\\x1b[0m':\\n\\x1b[1mC:\\\\Users\\\\stefa\\\\AppData\\\\Local\\\\Temp\\\\tmp3ydingba:3:5:\\x1b[0m \\x1b[1;35mwarning: \\x1b[0munused variable '\\x1b[1ma\\x1b[0m' \\n[\\x1b[1;35m-Wunused-variable\\x1b[0m]\\n    3 | int \\x1b[1;35ma\\x1b[0m=1;\\n      |     \\x1b[1;35m^\\x1b[0m\\n\"\n     assert result == expected\n+\n+\n+@pytest.mark.parametrize(\n+    \"ansi_bytes, expected_text\",\n+    [\n+        # https://github.com/Textualize/rich/issues/2688\n+        (\n+            b\"\\x1b[31mFound 4 errors in 2 files (checked 18 source files)\\x1b(B\\x1b[m\\n\",\n+            \"Found 4 errors in 2 files (checked 18 source files)\",\n+        ),\n+        # https://mail.python.org/pipermail/python-list/2007-December/424756.html\n+        (b\"Hallo\", \"Hallo\"),\n+        (b\"\\x1b(BHallo\", \"Hallo\"),\n+        (b\"\\x1b(JHallo\", \"Hallo\"),\n+        (b\"\\x1b(BHal\\x1b(Jlo\", \"Hallo\"),\n+    ],\n+)\n+def test_decode_issue_2688(ansi_bytes, expected_text):\n+    text = Text.from_ansi(ansi_bytes.decode())\n+\n+    assert str(text) == expected_text\n", "problem_statement": "[BUG] ANSI sequences parsed incorrectly: \\x1b(B\\x1b[m\n- [x] I've checked [docs](https://rich.readthedocs.io/en/latest/introduction.html) and [closed issues](https://github.com/Textualize/rich/issues?q=is%3Aissue+is%3Aclosed) for possible solutions.\r\n- [x] I can't find my issue in the [FAQ](https://github.com/Textualize/rich/blob/master/FAQ.md).\r\n\r\n**Describe the bug**\r\n\r\nSome ANSI sequences (which I didn't know about) are not correctly parsed.\r\nHere is a text example with such ANSI sequences:\r\n\r\n```\r\nsrc/failprint/capture.py:57: \\x1b[1m\\x1b[31merror:\\x1b(B\\x1b[m Property \\x1b(B\\x1b[m\\x1b[1m\"buffer\"\\x1b(B\\x1b[m defined in \\x1b(B\\x1b[m\\x1b[1m\"TextIOWrapper\"\\x1b(B\\x1b[m is read-only  \\x1b(B\\x1b[m\\x1b[33m[misc]\\x1b(B\\x1b[m\r\nsrc/failprint/capture.py:57: \\x1b[1m\\x1b[31merror:\\x1b(B\\x1b[m Incompatible types in assignment (expression has type \\x1b(B\\x1b[m\\x1b[1m\"_BytesBuffer\"\\x1b(B\\x1b[m, variable has type \\x1b(B\\x1b[m\\x1b[1m\"BinaryIO\"\\x1b(B\\x1b[m)  \\x1b(B\\x1b[m\\x1b[33m[assignment]\\x1b(B\\x1b[m\r\nsrc/failprint/capture.py:77: \\x1b[1m\\x1b[31merror:\\x1b(B\\x1b[m Argument 1 to \\x1b(B\\x1b[m\\x1b[1m\"StringIO\"\\x1b(B\\x1b[m has incompatible type \\x1b(B\\x1b[m\\x1b[1m\"StringIO\"\\x1b(B\\x1b[m; expected \\x1b(B\\x1b[m\\x1b[1m\"Optional[str]\"\\x1b(B\\x1b[m  \\x1b(B\\x1b[m\\x1b[33m[arg-type]\\x1b(B\\x1b[m\r\nsrc/failprint/runners.py:221: \\x1b[1m\\x1b[31merror:\\x1b(B\\x1b[m Incompatible return value type (got \\x1b(B\\x1b[m\\x1b[1m\"Union[str, int, None]\"\\x1b(B\\x1b[m, expected \\x1b(B\\x1b[m\\x1b[1m\"int\"\\x1b(B\\x1b[m)  \\x1b(B\\x1b[m\\x1b[33m[return-value]\\x1b(B\\x1b[m\r\n\\x1b[1m\\x1b[31mFound 4 errors in 2 files (checked 18 source files)\\x1b(B\\x1b[m\r\n```\r\n\r\nThis is the (ANSI colored) output of mypy.\r\nOther libraries like `ansimarkup` are able to print it.\r\n\r\n```python\r\nfrom ansimarkup import ansiprint\r\nansiprint('\\x1b[31mFound 4 errors in 2 files (checked 18 source files)\\x1b(B\\x1b[m\\n')\r\n```\r\n\r\n```python\r\nfrom rich.text import Text\r\nfrom rich import print as richprint\r\nrichprint(Text.from_ansi('\\x1b[31mFound 4 errors in 2 files (checked 18 source files)\\x1b(B\\x1b[m\\n'))\r\n```\r\n\r\n![richansi](https://user-images.githubusercontent.com/3999221/206017227-0d275ae4-667b-4fb3-a82f-96ef255b543d.png)\r\n\r\nNote the trailing `B` in the above screenshot.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\npython -m rich.diagnose\r\npip freeze | grep rich\r\n```\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=191 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 19                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=191, height=19),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=191,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=19,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=191, height=19)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 191                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-256color',      \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': 'vscode',      \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': None,       \u2502\r\n\u2502     'JUPYTER_LINES': None,         \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\nrich==12.6.0\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://github.com/textualize/rich/blob/master/FAQ.md) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)\n@pawamoy hi - I'm not a maintainer/contributor to `rich` so far, just a curious learner.\r\n\r\nI haven't known much about ANSI sequences in the past either, although I was _vaguely_ aware of them.  So far I'm thinking that the `\\x1(` prefix before the `B` corresponds to the [\"nF escape sequences\"](https://en.wikipedia.org/wiki/ANSI_escape_code#nF_Escape_sequences) grouping, as described on wikipedia.  Does that match your assessment too?  If possible it'd be nice to confirm this from some other places!\r\n\r\n(and to explain the comment: I'm trying to figure out what the expected behaviour should be in this case -- and then we can write a test case, and if necessary fix any incorrect behaviour of the code)\nHere is the [code](https://github.com/Textualize/rich/blob/master/rich/ansi.py) in question. It is somewhat limited in the ansi codes it processes. It would be nice to handle what makes sense, but it should also strip out unfamiliar codes.\n@jayaddison thanks for the investigation!\r\nOn my end I verified that these codes really come from mypy, and they do; looking at their [FancyFormatter](https://github.com/python/mypy/blob/04d44c12cfbb3a469a96253d4656d16c21be41b9/mypy/util.py#L530), I ran this in a Python REPL:\r\n\r\n```pycon\r\n>>> import sys\r\n>>> from mypy.util import FancyFormatter\r\n>>> ff = FancyFormatter(sys.stdout, sys.stderr, hide_error_codes=False)\r\n>>> ff.NORMAL\r\n'\\x1b(B\\x1b[m'\r\n```\r\n\r\nSince Rich seems to render the right colors/style, it seems fine to me if it also strips these unfamiliar codes.\nNice, thanks @pawamoy - great to know where the sequence is being emitted from. :+1: \r\n\r\nIt looks like the [component of the regex](https://github.com/Textualize/rich/blob/8bcb7011cfb01462fcd08c7298e756c5e4486617/rich/ansi.py#L13) that matches the `(` is the first item in the character class `[(@-Z\\\\-_]` (`0x28, 0x40-to-0x51, 0x5c, 0x2d, 0x5f`).\nI believe I am having a similar problem when trying to read the output of the Tree() module. Running the script through the python console results in everything formatted correctly. However, running through powershell (I am doing everything through pycharm) results in the same formatting issues as above, which is also rednered properly with ansiprint\r\n\r\n```\r\nfrom rich import get_console\r\nfrom rich.console import Console\r\nfrom rich.markup import escape\r\nfrom rich.tree import Tree\r\nfrom rich import print as rich_print\r\nfrom pathlib import Path\r\nfrom ansimarkup import ansiprint\r\n\r\nimport logging\r\nfrom logging import FileHandler\r\n\r\nDEBUG = True\r\n\r\npath_to_log = r\"C:\\Users\\User\\test\\log.log\"\r\n\r\nFORMAT = \"%(message)s\"\r\nlogging.basicConfig(\r\n    level=\"NOTSET\", format=FORMAT, datefmt=\"[%X]\", handlers=[FileHandler(path_to_log, encoding='utf-8')],\r\n)\r\n\r\nlog = logging.getLogger(\"rich\")\r\n\r\npath = Path(r\"C:\\Users\\User\\test\")  # path to arbitrary folder\r\n\r\ntree = Tree(label=\"Test\")\r\nstyle = \"dim\" if path.name.startswith(\"__\") else \"\"\r\ntree.add(\r\n    f\"[bold magenta]:open_file_folder: [link file://{path}]{escape(path.name)}\",\r\n    style=style,\r\n    guide_style=style,\r\n)\r\n\r\nconsole = get_console()\r\nwith console.capture() as capture:\r\n    console.print(tree, markup=True)\r\n\r\nif DEBUG:\r\n    breakpoint()\r\n    rich_print(capture.get())\r\n    ansiprint(capture.get())\r\n\r\nlog.info(capture.get())\r\n```\r\nTo run this just need to point path_to_log and path_ to a log file output and path to arbitary folder, respectively. \r\n\r\nRunning this through powershell with `python -m test_tree' results in the log-file displaying the tree formatting incorrectly (it displays correctly if using 'Run' through pycharm / python console.\r\n\r\n![image](https://user-images.githubusercontent.com/55797454/208241455-11cafc1a-31e9-4ca9-befd-dce32be5989b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/55797454/208241473-4e1716fc-71f8-4703-94c9-c8c147a8e2b5.png)\r\n\r\nPlatform:\r\n<details>\r\n```\r\n(datashuttle_conda) C:\\fMRIData\\git-repo\\datashuttle\\datashuttle\\utils>python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=266 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 16                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=266, height=16),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=266,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=16,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=266, height=16)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 266                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                         \u2502\r\n\u2502                                                     \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=True, truecolor=True) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                     \u2502\r\n\u2502 truecolor = True                                    \u2502\r\n\u2502        vt = True                                    \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {'TERM': None, 'COLORTERM': None, 'CLICOLOR': None, 'NO_COLOR': None, 'TERM_PROGRAM': None, 'COLUMNS': None, 'LINES': None, 'JUPYTER_COLUMNS': None, 'JUPYTER_LINES': None, 'JPY_PARENT_PID': None, 'VSCODE_VERBOSE_LOGGING': None} \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Windows\"\r\n```\r\n</details>\r\n\r\n\r\n\r\n\r\n", "created_at": "2023-02-11T19:21:16Z"}
{"repo": "Textualize/rich", "pull_number": 2642, "instance_id": "Textualize__rich-2642", "issue_numbers": ["2641"], "base_commit": "5f4e93efb159af99ed51f1fbfd8b793bb36448d9", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 25eb9a908..1e391a37f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -7,6 +7,10 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ## [13.0.0] - Unreleased\n \n+### Fixed\n+\n+- Reversed `pre` and `code` tags in base HTML format https://github.com/Textualize/rich/pull/2642\n+\n ### Changed\n \n - Bumped minimum Python version to 3.7 https://github.com/Textualize/rich/pull/2567\ndiff --git a/rich/_export_format.py b/rich/_export_format.py\nindex b79c13069..ea4020904 100644\n--- a/rich/_export_format.py\n+++ b/rich/_export_format.py\n@@ -12,9 +12,9 @@\n </head>\n <html>\n <body>\n-    <code>\n-        <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">{code}</pre>\n-    </code>\n+    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n+        <code>{code}</code>\n+    </pre>\n </body>\n </html>\n \"\"\"\n", "test_patch": "diff --git a/tests/test_console.py b/tests/test_console.py\nindex e1aaaefd3..8c72e8da0 100644\n--- a/tests/test_console.py\n+++ b/tests/test_console.py\n@@ -528,7 +528,7 @@ def test_export_html():\n     console = Console(record=True, width=100)\n     console.print(\"[b]foo <script> 'test' [link=https://example.org]Click[/link]\")\n     html = console.export_html()\n-    expected = '<!DOCTYPE html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n.r1 {font-weight: bold}\\n.r2 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold}\\n.r3 {color: #008000; text-decoration-color: #008000; font-weight: bold}\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<html>\\n<body>\\n    <code>\\n        <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\"><span class=\"r1\">foo &lt;</span><span class=\"r2\">script</span><span class=\"r1\">&gt; </span><span class=\"r3\">&#x27;test&#x27;</span><span class=\"r1\"> </span><a class=\"r1\" href=\"https://example.org\">Click</a>\\n</pre>\\n    </code>\\n</body>\\n</html>\\n'\n+    expected = '<!DOCTYPE html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n.r1 {font-weight: bold}\\n.r2 {color: #ff00ff; text-decoration-color: #ff00ff; font-weight: bold}\\n.r3 {color: #008000; text-decoration-color: #008000; font-weight: bold}\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<html>\\n<body>\\n    <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\">\\n        <code><span class=\"r1\">foo &lt;</span><span class=\"r2\">script</span><span class=\"r1\">&gt; </span><span class=\"r3\">&#x27;test&#x27;</span><span class=\"r1\"> </span><a class=\"r1\" href=\"https://example.org\">Click</a>\\n</code>\\n    </pre>\\n</body>\\n</html>\\n'\n     assert html == expected\n \n \n@@ -536,7 +536,7 @@ def test_export_html_inline():\n     console = Console(record=True, width=100)\n     console.print(\"[b]foo [link=https://example.org]Click[/link]\")\n     html = console.export_html(inline_styles=True)\n-    expected = '<!DOCTYPE html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<html>\\n<body>\\n    <code>\\n        <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\"><span style=\"font-weight: bold\">foo </span><span style=\"font-weight: bold\"><a href=\"https://example.org\">Click</a></span>\\n</pre>\\n    </code>\\n</body>\\n</html>\\n'\n+    expected = '<!DOCTYPE html>\\n<head>\\n<meta charset=\"UTF-8\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<html>\\n<body>\\n    <pre style=\"font-family:Menlo,\\'DejaVu Sans Mono\\',consolas,\\'Courier New\\',monospace\">\\n        <code><span style=\"font-weight: bold\">foo </span><span style=\"font-weight: bold\"><a href=\"https://example.org\">Click</a></span>\\n</code>\\n    </pre>\\n</body>\\n</html>\\n'\n     assert html == expected\n \n \n@@ -589,7 +589,7 @@ def test_save_text():\n \n \n def test_save_html():\n-    expected = \"<!DOCTYPE html>\\n<head>\\n<meta charset=\\\"UTF-8\\\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<html>\\n<body>\\n    <code>\\n        <pre style=\\\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">foo\\n</pre>\\n    </code>\\n</body>\\n</html>\\n\"\n+    expected = \"<!DOCTYPE html>\\n<head>\\n<meta charset=\\\"UTF-8\\\">\\n<style>\\n\\nbody {\\n    color: #000000;\\n    background-color: #ffffff;\\n}\\n</style>\\n</head>\\n<html>\\n<body>\\n    <pre style=\\\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">\\n        <code>foo\\n</code>\\n    </pre>\\n</body>\\n</html>\\n\"\n     console = Console(record=True, width=100)\n     console.print(\"foo\")\n     with tempfile.TemporaryDirectory() as path:\n", "problem_statement": "[BUG] export_html leaks style into the page\n**Describe the bug**\r\n\r\nFollowing discussion https://github.com/Textualize/rich/discussions/2640\r\nInjecting HTML generated with Rich's `Console.export_html()` method seems to leak some style into the page.\r\n\r\n![htmlstyleleak](https://user-images.githubusercontent.com/3999221/201484491-b8d6711a-92d7-4f08-baeb-473cdeaa9902.png)\r\n\r\nThe page is built with MkDocs + Material for MkDocs. The dark theme is activated.\r\nThe light theme is less impacted, I just see extra \"bars\" (like an empty code line) in-between block elements:\r\n\r\n![lighttheme](https://user-images.githubusercontent.com/3999221/201484624-0b437e8e-bef5-405f-8329-ecb96d6da35b.png)\r\n\r\nCode used to generate the HTML:\r\n\r\n```python\r\nimport os\r\n\r\nfrom rich.console import Console\r\n\r\nreport = \"\"\"$ griffe check griffe -ssrc -b0.24.0 -a0.23.0\r\n[bold]src/griffe/loader.py[/]:156: GriffeLoader.resolve_aliases([blue]only_exported[/]): [yellow]Parameter kind was changed[/]: positional or keyword -> keyword-only\r\netc.\r\n\"\"\"\r\n\r\nwith open(os.devnull, \"w\") as devnull:\r\n    console = Console(record=True, width=150, file=devnull)\r\n    console.print(report, markup=True, highlight=False)\r\nprint(console.export_html(inline_styles=True))\r\n```\r\n\r\nBoth `inline_styles=True` and `inline_styles=False` give the same result.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nLinux\r\n\r\n```console\r\n$ python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=239 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 58                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=239, height=58),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=239,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=58,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=239, height=58)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 239                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-256color',      \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': None,       \u2502\r\n\u2502     'JUPYTER_LINES': None,         \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n```\r\n\r\n```console\r\n% pdm list --freeze | grep rich\r\nrich==12.6.0\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "The \"extra bars\" I mentioned:\r\n\r\n```html\r\n<p>\r\n\r\n<meta charset=\"UTF-8\">\r\n<style>\r\n.r1 {font-weight: bold}\r\n.r2 {color: #000080; text-decoration-color: #000080}\r\n.r3 {color: #808000; text-decoration-color: #808000}\r\nbody {\r\n    color: #000000;\r\n    background-color: #ffffff;\r\n}\r\n</style>\r\n\r\n\r\n\r\n    <code>\r\n        </code></p>\r\n```\r\n\r\nKinda weird? Not sure what is injecting this :thinking: \nThe `export_html` method generates a page, i.e. an entire document with head and body. Which is not something you can drop in to a template.\r\n\r\nYou can set `code_format` to a string template, in order to create an HTML fragment. Have an look at `_export_format.py` for the original template, which you can modify\r\n\r\n\nAaaaaaah OK, that makes sense. I'll do what you suggest, thanks!\nDid I solve your problem? \n\nWhy not buy the devs a [coffee](https://ko-fi.com/textualize) to say thanks?\n@willmcgugan the extra paragraphs are here because in the base format `pre` is wrapped in `code` while it should be the opposite.\r\n\r\nCode in `_export_format.py`:\r\n\r\n```\r\n    <code>\r\n        <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">{code}</pre>\r\n    </code>\r\n```\r\n\r\nShould be:\r\n\r\n```\r\n    <pre style=\"font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\r\n        <code>{code}</code>\r\n    </pre>\r\n```\r\n\r\nAt least it fixed the issue on my side.\nAh. Care to PR for that?", "created_at": "2022-11-12T17:52:59Z"}
{"repo": "Textualize/rich", "pull_number": 2513, "instance_id": "Textualize__rich-2513", "issue_numbers": ["2400"], "base_commit": "8dbfc8d0f485ba739820af3cf336896f8c9561be", "patch": "diff --git a/.github/workflows/codespell.yml b/.github/workflows/codespell.yml\nindex c21f7a642..624f5b888 100644\n--- a/.github/workflows/codespell.yml\n+++ b/.github/workflows/codespell.yml\n@@ -7,4 +7,4 @@ jobs:\n       - uses: actions/checkout@v3\n       - run: python3 -m pip install codespell\n       - run: codespell --ignore-words-list=\"ba,fo,hel,revered,womens\"\n-          --skip=\"./README.*.md,*.svg,./benchmarks/snippets.py\"\n+          --skip=\"./README.*.md,*.svg,./benchmarks/snippets.py,./tests,./tools\"\ndiff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 3b723ded1..4d355b82b 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -16,6 +16,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ### Fixed\n \n+- Handle stdout/stderr being null https://github.com/Textualize/rich/pull/2513\n - Fix NO_COLOR support on legacy Windows https://github.com/Textualize/rich/pull/2458\n \n ## [12.5.2] - 2022-07-18\ndiff --git a/rich/_null_file.py b/rich/_null_file.py\nnew file mode 100644\nindex 000000000..49038bfcb\n--- /dev/null\n+++ b/rich/_null_file.py\n@@ -0,0 +1,83 @@\n+from types import TracebackType\n+from typing import IO, Iterable, Iterator, List, Optional, Type\n+\n+\n+class NullFile(IO[str]):\n+\n+    # TODO: \"mode\", \"name\" and \"closed\" are only required for Python 3.6.\n+\n+    @property\n+    def mode(self) -> str:\n+        return \"\"\n+\n+    @property\n+    def name(self) -> str:\n+        return \"NullFile\"\n+\n+    def closed(self) -> bool:\n+        return False\n+\n+    def close(self) -> None:\n+        pass\n+\n+    def isatty(self) -> bool:\n+        return False\n+\n+    def read(self, __n: int = 1) -> str:\n+        return \"\"\n+\n+    def readable(self) -> bool:\n+        return False\n+\n+    def readline(self, __limit: int = 1) -> str:\n+        return \"\"\n+\n+    def readlines(self, __hint: int = 1) -> List[str]:\n+        return []\n+\n+    def seek(self, __offset: int, __whence: int = 1) -> int:\n+        return 0\n+\n+    def seekable(self) -> bool:\n+        return False\n+\n+    def tell(self) -> int:\n+        return 0\n+\n+    def truncate(self, __size: Optional[int] = 1) -> int:\n+        return 0\n+\n+    def writable(self) -> bool:\n+        return False\n+\n+    def writelines(self, __lines: Iterable[str]) -> None:\n+        pass\n+\n+    def __next__(self) -> str:\n+        return \"\"\n+\n+    def __iter__(self) -> Iterator[str]:\n+        return iter([\"\"])\n+\n+    def __enter__(self) -> IO[str]:\n+        pass\n+\n+    def __exit__(\n+        self,\n+        __t: Optional[Type[BaseException]],\n+        __value: Optional[BaseException],\n+        __traceback: Optional[TracebackType],\n+    ) -> None:\n+        pass\n+\n+    def write(self, text: str) -> int:\n+        return 0\n+\n+    def flush(self) -> None:\n+        pass\n+\n+    def fileno(self) -> int:\n+        return -1\n+\n+\n+NULL_FILE = NullFile()\ndiff --git a/rich/color.py b/rich/color.py\nindex 9031ae378..ef2e895d7 100644\n--- a/rich/color.py\n+++ b/rich/color.py\n@@ -313,7 +313,7 @@ class Color(NamedTuple):\n     \"\"\"A triplet of color components, if an RGB color.\"\"\"\n \n     def __rich__(self) -> \"Text\":\n-        \"\"\"Dispays the actual color if Rich printed.\"\"\"\n+        \"\"\"Displays the actual color if Rich printed.\"\"\"\n         from .style import Style\n         from .text import Text\n \ndiff --git a/rich/console.py b/rich/console.py\nindex 4a3ebb559..585221e06 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -34,6 +34,8 @@\n     cast,\n )\n \n+from rich._null_file import NULL_FILE\n+\n if sys.version_info >= (3, 8):\n     from typing import Literal, Protocol, runtime_checkable\n else:\n@@ -698,10 +700,14 @@ def __init__(\n \n         self._color_system: Optional[ColorSystem]\n \n+        self._force_terminal = None\n         if force_terminal is not None:\n             self._force_terminal = force_terminal\n         else:\n-            self._force_terminal = self._environ.get(\"FORCE_COLOR\") is not None\n+            # If FORCE_COLOR env var has any value at all, we force terminal.\n+            force_color = self._environ.get(\"FORCE_COLOR\")\n+            if force_color is not None:\n+                self._force_terminal = True\n \n         self._file = file\n         self.quiet = quiet\n@@ -751,6 +757,8 @@ def file(self) -> IO[str]:\n         \"\"\"Get the file object to write to.\"\"\"\n         file = self._file or (sys.stderr if self.stderr else sys.stdout)\n         file = getattr(file, \"rich_proxied_file\", file)\n+        if file is None:\n+            file = NULL_FILE\n         return file\n \n     @file.setter\ndiff --git a/rich/logging.py b/rich/logging.py\nindex ff93531a7..96859934e 100644\n--- a/rich/logging.py\n+++ b/rich/logging.py\n@@ -3,10 +3,12 @@\n from logging import Handler, LogRecord\n from pathlib import Path\n from types import ModuleType\n-from typing import ClassVar, List, Optional, Iterable, Type, Union\n+from typing import ClassVar, Iterable, List, Optional, Type, Union\n+\n+from rich._null_file import NullFile\n \n from . import get_console\n-from ._log_render import LogRender, FormatTimeCallable\n+from ._log_render import FormatTimeCallable, LogRender\n from .console import Console, ConsoleRenderable\n from .highlighter import Highlighter, ReprHighlighter\n from .text import Text\n@@ -158,10 +160,16 @@ def emit(self, record: LogRecord) -> None:\n         log_renderable = self.render(\n             record=record, traceback=traceback, message_renderable=message_renderable\n         )\n-        try:\n-            self.console.print(log_renderable)\n-        except Exception:\n+        if isinstance(self.console.file, NullFile):\n+            # Handles pythonw, where stdout/stderr are null, and we return NullFile\n+            # instance from Console.file. In this case, we still want to make a log record\n+            # even though we won't be writing anything to a file.\n             self.handleError(record)\n+        else:\n+            try:\n+                self.console.print(log_renderable)\n+            except Exception:\n+                self.handleError(record)\n \n     def render_message(self, record: LogRecord, message: str) -> \"ConsoleRenderable\":\n         \"\"\"Render message text in to Text.\n", "test_patch": "diff --git a/tests/test_cells.py b/tests/test_cells.py\nindex d64317f3b..a780214a8 100644\n--- a/tests/test_cells.py\n+++ b/tests/test_cells.py\n@@ -1,6 +1,11 @@\n from rich import cells\n \n \n+def test_cell_len_long_string():\n+    # Long strings don't use cached cell length implementation\n+    assert cells.cell_len(\"abc\" * 200) == 3 * 200\n+\n+\n def test_set_cell_size():\n     assert cells.set_cell_size(\"foo\", 0) == \"\"\n     assert cells.set_cell_size(\"f\", 0) == \"\"\ndiff --git a/tests/test_console.py b/tests/test_console.py\nindex 07692f198..fa6765357 100644\n--- a/tests/test_console.py\n+++ b/tests/test_console.py\n@@ -9,6 +9,7 @@\n import pytest\n \n from rich import errors\n+from rich._null_file import NullFile\n from rich.color import ColorSystem\n from rich.console import (\n     CaptureError,\n@@ -238,6 +239,15 @@ def test_print_json_indent_none():\n     assert result == expected\n \n \n+def test_console_null_file(monkeypatch):\n+    # When stdout and stderr are null, Console.file should be replaced with NullFile\n+    monkeypatch.setattr(\"sys.stdout\", None)\n+    monkeypatch.setattr(\"sys.stderr\", None)\n+\n+    console = Console()\n+    assert isinstance(console.file, NullFile)\n+\n+\n def test_log():\n     console = Console(\n         file=io.StringIO(),\n@@ -859,6 +869,7 @@ def test_detect_color_system():\n \n def test_reset_height():\n     \"\"\"Test height is reset when rendering complex renderables.\"\"\"\n+\n     # https://github.com/Textualize/rich/issues/2042\n     class Panels:\n         def __rich_console__(self, console, options):\n@@ -897,9 +908,31 @@ def test_render_lines_height_minus_vertical_pad_is_negative():\n     console.render_lines(Padding(\"hello\", pad=(1, 0)), options=options)\n \n \n-@mock.patch.dict(os.environ, {\"FORCE_COLOR\": \"anything\"})\n-def test_force_color():\n+def test_recording_no_stdout_and_no_stderr_files(monkeypatch):\n+    # Rich should work even if there's no file available to write to.\n+    # For example, pythonw nullifies output streams.\n+    # Built-in print silently no-ops in pythonw.\n+    # Related: https://github.com/Textualize/rich/issues/2400\n+    monkeypatch.setattr(\"sys.stdout\", None)\n+    monkeypatch.setattr(\"sys.stderr\", None)\n+    console = Console(record=True)\n+    console.print(\"hello world\")\n+    text = console.export_text()\n+    assert text == \"hello world\\n\"\n+\n+\n+def test_capturing_no_stdout_and_no_stderr_files(monkeypatch):\n+    monkeypatch.setattr(\"sys.stdout\", None)\n+    monkeypatch.setattr(\"sys.stderr\", None)\n+    console = Console()\n+    with console.capture() as capture:\n+        console.print(\"hello world\")\n+    assert capture.get() == \"hello world\\n\"\n+\n+\n+@pytest.mark.parametrize(\"env_value\", [\"\", \"something\", \"0\"])\n+def test_force_color(env_value):\n     # Even though we use a non-tty file, the presence of FORCE_COLOR env var\n     # means is_terminal returns True.\n-    console = Console(file=io.StringIO())\n+    console = Console(file=io.StringIO(), _environ={\"FORCE_COLOR\": env_value})\n     assert console.is_terminal\ndiff --git a/tests/test_null_file.py b/tests/test_null_file.py\nnew file mode 100644\nindex 000000000..5f11e4f91\n--- /dev/null\n+++ b/tests/test_null_file.py\n@@ -0,0 +1,26 @@\n+from rich._null_file import NullFile\n+\n+\n+def test_null_file():\n+    file = NullFile()\n+    with file:\n+        assert file.write(\"abc\") == 0\n+        assert file.mode == \"\"\n+        assert file.name == \"NullFile\"\n+        assert not file.closed()\n+        assert file.close() is None\n+        assert not file.isatty()\n+        assert file.read() == \"\"\n+        assert not file.readable()\n+        assert file.readline() == \"\"\n+        assert file.readlines() == []\n+        assert file.seek(0, 0) == 0\n+        assert not file.seekable()\n+        assert file.tell() == 0\n+        assert file.truncate() == 0\n+        assert file.writable() == False\n+        assert file.writelines([\"\"]) is None\n+        assert next(file) == \"\"\n+        assert next(iter(file)) == \"\"\n+        assert file.fileno() == -1\n+        assert file.flush() is None\ndiff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex f57066d04..33f621134 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -56,7 +56,7 @@ def test_install_max_depth():\n     dh = sys.displayhook\n     install(console, max_depth=1)\n     sys.displayhook({\"foo\": {\"bar\": True}})\n-    assert console.file.getvalue() == \"{'foo': ...}\\n\"\n+    assert console.file.getvalue() == \"{'foo': {...}}\\n\"\n     assert sys.displayhook is not dh\n \n \n", "problem_statement": "[BUG] `AttributeError` using `Console.capture` when run with `pythonw`\n**Describe the bug**\r\n\r\nThis code, when run using `pythonw`:\r\n\r\n```py\r\ntable = Table(box=DOUBLE_EDGE)\r\nprinter = Console(force_terminal=False)\r\nwith printer.capture() as capture:\r\n    printer.print(table)\r\n```\r\n\r\nfails with this stack trace:\r\n\r\n```text\r\nTraceback (most recent call last):\r\n  File \"<MY CODE>\", line ...\r\n    with printer.capture() as capture:\r\n  File \"rich\\console.py\", line 336, in __exit__\r\n    self._result = self._console.end_capture()\r\n  File \"rich\\console.py\", line 852, in end_capture\r\n    self._exit_buffer()\r\n  File \"rich\\console.py\", line 796, in _exit_buffer\r\n    self._check_buffer()\r\n  File \"rich\\console.py\", line 1979, in _check_buffer\r\n    self.file.fileno() in _STD_STREAMS_OUTPUT\r\nAttributeError: 'NoneType' object has no attribute 'fileno'\r\n```\r\n\r\nMy guess is that `pythonw` causes `Console` to get some attributes that are usually not null, but in this case, are.\r\n\r\nI can probably immediately work around this by instantiating the `Console` like so:\r\n\r\n```py\r\ntable = Table(box=DOUBLE_EDGE)\r\ncapture = StringIO()\r\nprinter = Console(file=capture)\r\nprinter.print(table)\r\n```\r\n\r\nbut Rich could probably cater for the `Console` instance having no `STDOUT` in some cases (such as above).\r\n\r\n**Platform**\r\n\r\n* Windows 10\r\n* Python v3.10.0\r\n\r\nI've avoided including details generated by `python -m rich.diagnose` because more diagnostic information would be provided using `pythonw ...`\u2014but of course, since it disables `STDOUT`, there's no obvious way to grab that info for you. \ud83e\udd23\n", "hints_text": "I don't have a Windows box handy. What happens if you run a script with pythonw that does `print(\"hello world\")` ?\nHi Will.  There is no output.  I somewhat expected this as I believe `pythonw` nullifies its `STDOUT` handle.\nAnd is that the behaviour you would expect from Rich? To silently ignore the error?\r\n\r\nCould you paste the full traceback?\nTo frame my expected behaviour in a slightly alternative manner:\r\n\r\n* When I instantiate a `Console` purely for the purpose of `capture`-ing its output to a variable, I would expect Rich not to fail when `STDOUT` is redirected to null (which is what `pythonw` appears to do)\u2014particularly since I would expect `STDOUT` not to be getting used as part of that capturing operation.\r\n\r\nDirectly answering your question though: yes, I believe there should be no error.\r\n\r\nThe traceback [above](https://github.com/Textualize/rich/issues/2400#issue-1307011506) is complete except for my calling code, which is no different from the example given.\nI see. So the error occurs regardless of if you are printing to stdout or not.\r\n\r\nYou didn't include the full traceback btw. The error message would help.\nYes, the error is occurring despite no intent to print to `STDOUT`.\r\n\r\nSorry, you're absolutely right: I did fail to paste the actual error message.  I've edited that in to the earlier message now, but here's the entire thing from my logging anyway for good measure, in case any of the other bits do actually help:\r\n\r\n```text\r\n2022-07-17 15:35:48,860 ERROR    [ClientWorkerThread/ductus.client.gui.eventloopthread.ThreadedEventLoop] exception in asyncio event loop\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\kate\\AppData\\Local\\Programs\\Ductus\\ductus\\client\\gui\\eventloopthread.py\", line 54, in __thread_main\r\n    asyncio.run(self.__run_coro_cancellable(), debug=True)\r\n  File \"C:\\Program Files\\Python310\\lib\\asyncio\\runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"C:\\Program Files\\Python310\\lib\\asyncio\\base_events.py\", line 641, in run_until_complete\r\n    return future.result()\r\n  File \"C:\\Users\\kate\\AppData\\Local\\Programs\\Ductus\\ductus\\client\\gui\\eventloopthread.py\", line 76, in __run_coro_cancellable\r\n    await await_task\r\n  File \"C:\\Users\\kate\\AppData\\Local\\Programs\\Ductus\\ductus\\client\\gui\\worker.py\", line 85, in __loop_tasks\r\n    await asyncio.gather(\r\n  File \"C:\\Users\\kate\\AppData\\Local\\Programs\\Ductus\\ductus\\client\\gui\\worker.py\", line 128, in __watch_for_auth_requests\r\n    await self.client.google_auth()\r\n  File \"C:\\Users\\kate\\AppData\\Local\\Programs\\Ductus\\ductus\\client\\client.py\", line 119, in google_auth\r\n    creds = await asyncio.to_thread(google_auth_flow)\r\n  File \"C:\\Program Files\\Python310\\lib\\asyncio\\threads.py\", line 25, in to_thread\r\n    return await loop.run_in_executor(None, func_call)\r\n  File \"C:\\Program Files\\Python310\\lib\\concurrent\\futures\\thread.py\", line 52, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"C:\\Users\\kate\\AppData\\Local\\Programs\\Ductus\\ductus\\client\\googleauth.py\", line 43, in google_auth_flow\r\n    success_message=_browser_finish_message(),\r\n  File \"C:\\Users\\kate\\AppData\\Local\\Programs\\Ductus\\ductus\\client\\googleauth.py\", line 75, in _browser_finish_message\r\n    with printer.capture() as capture:\r\n  File \"...\\rich\\console.py\", line 336, in __exit__\r\n    self._result = self._console.end_capture()\r\n  File \"...\\rich\\console.py\", line 852, in end_capture\r\n    self._exit_buffer()\r\n  File \"...\\rich\\console.py\", line 796, in _exit_buffer\r\n    self._check_buffer()\r\n  File \"...\\rich\\console.py\", line 1979, in _check_buffer\r\n    self.file.fileno() in _STD_STREAMS_OUTPUT\r\nAttributeError: 'NoneType' object has no attribute 'fileno'\r\n```\r\n\r\nIn particular, `Console` is treating its `file` attribute as if it will never be None.  When run under `pythonw` however, that's exactly what it's defaulting to.  Even so though, in my example, there's no obvious reason for `self.file` to be getting called.", "created_at": "2022-09-07T14:35:52Z"}
{"repo": "Textualize/rich", "pull_number": 2491, "instance_id": "Textualize__rich-2491", "issue_numbers": ["2486"], "base_commit": "0f693f5c3d5f4f600751d244d1b95570106064bf", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex c80cbc222..3b723ded1 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -12,6 +12,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n - Parse ANSI escape sequences in pretty repr https://github.com/Textualize/rich/pull/2470\n - Add support for `FORCE_COLOR` env var https://github.com/Textualize/rich/pull/2449\n+- Allow a `max_depth` argument to be passed to the `install()` hook https://github.com/Textualize/rich/issues/2486\n \n ### Fixed\n \ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 766654b9f..611259897 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -27,6 +27,7 @@ The following people have contributed to the development of Rich:\n - [Will McGugan](https://github.com/willmcgugan)\n - [Paul McGuire](https://github.com/ptmcg)\n - [Antony Milne](https://github.com/AntonyMilneQB)\n+- [Michael Milton](https://github.com/multimeric)\n - [Nathan Page](https://github.com/nathanrpage97)\n - [Avi Perl](https://github.com/avi-perl)\n - [Laurent Peuch](https://github.com/psycojoker)\ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex 002508f7a..eb639600b 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -120,6 +120,7 @@ def _ipy_display_hook(\n     indent_guides: bool = False,\n     max_length: Optional[int] = None,\n     max_string: Optional[int] = None,\n+    max_depth: Optional[int] = None,\n     expand_all: bool = False,\n ) -> None:\n     # needed here to prevent circular import:\n@@ -177,6 +178,7 @@ def _ipy_display_hook(\n             indent_guides=indent_guides,\n             max_length=max_length,\n             max_string=max_string,\n+            max_depth=max_depth,\n             expand_all=expand_all,\n             margin=12,\n         ),\n@@ -202,6 +204,7 @@ def install(\n     indent_guides: bool = False,\n     max_length: Optional[int] = None,\n     max_string: Optional[int] = None,\n+    max_depth: Optional[int] = None,\n     expand_all: bool = False,\n ) -> None:\n     \"\"\"Install automatic pretty printing in the Python REPL.\n@@ -214,6 +217,7 @@ def install(\n         max_length (int, optional): Maximum length of containers before abbreviating, or None for no abbreviation.\n             Defaults to None.\n         max_string (int, optional): Maximum length of string before truncating, or None to disable. Defaults to None.\n+        max_depth (int, optional): Maximum depth of nested data structures, or None for no maximum. Defaults to None.\n         expand_all (bool, optional): Expand all containers. Defaults to False.\n         max_frames (int): Maximum number of frames to show in a traceback, 0 for no maximum. Defaults to 100.\n     \"\"\"\n@@ -236,6 +240,7 @@ def display_hook(value: Any) -> None:\n                     indent_guides=indent_guides,\n                     max_length=max_length,\n                     max_string=max_string,\n+                    max_depth=max_depth,\n                     expand_all=expand_all,\n                 ),\n                 crop=crop,\n@@ -258,6 +263,7 @@ def __call__(self, value: Any) -> Any:\n                         indent_guides=indent_guides,\n                         max_length=max_length,\n                         max_string=max_string,\n+                        max_depth=max_depth,\n                         expand_all=expand_all,\n                     )\n                 else:\n", "test_patch": "diff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex 9346b3908..083e002ce 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -51,6 +51,15 @@ def test_install():\n     assert sys.displayhook is not dh\n \n \n+def test_install_max_depth():\n+    console = Console(file=io.StringIO())\n+    dh = sys.displayhook\n+    install(console, max_depth=1)\n+    sys.displayhook({\"foo\": {\"bar\": True}})\n+    assert console.file.getvalue() == \"{'foo': ...}\\n\"\n+    assert sys.displayhook is not dh\n+\n+\n def test_ipy_display_hook__repr_html():\n     console = Console(file=io.StringIO(), force_jupyter=True)\n \n", "problem_statement": "[REQUEST] Add `max_depth` as a parameter to `install()`\n**How would you improve Rich?**\r\n\r\nCurrently `rich.pretty.install()` accepts most of the parameters allowed by `rich.pretty.pprint()`, but it doesn't have `max_depth`. I would add this parameter to `install()`.\r\n\r\n**What problem does it solve for you?**\r\n\r\nI would like to use the rich install hook, but also to customize the pretty printing behaviour, specifically the `max_depth` argument to simplify the result presentation. It isn't trivial to implement this in user code, because the `install()` function is actually quite complex, and difficult to modify.\r\n\n", "hints_text": "Actually, is there a chance we could just forward all the kwargs from `install` to the `Pretty` constructor or `_ipy_display_hook`? It seems like it would be more maintainable that way.", "created_at": "2022-08-25T15:54:50Z"}
{"repo": "Textualize/rich", "pull_number": 2489, "instance_id": "Textualize__rich-2489", "issue_numbers": ["2485"], "base_commit": "0f693f5c3d5f4f600751d244d1b95570106064bf", "patch": "diff --git a/rich/pretty.py b/rich/pretty.py\nindex 002508f7a..6b45b5b35 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -676,7 +676,10 @@ def iter_rich_args(rich_args: Any) -> Iterable[Union[Any, Tuple[str, Any]]]:\n                 append = children.append\n \n                 if reached_max_depth:\n-                    node = Node(value_repr=f\"...\")\n+                    if angular:\n+                        node = Node(value_repr=f\"<{class_name}...>\")\n+                    else:\n+                        node = Node(value_repr=f\"{class_name}(...)\")\n                 else:\n                     if angular:\n                         node = Node(\n@@ -718,7 +721,7 @@ def iter_rich_args(rich_args: Any) -> Iterable[Union[Any, Tuple[str, Any]]]:\n             attr_fields = _get_attr_fields(obj)\n             if attr_fields:\n                 if reached_max_depth:\n-                    node = Node(value_repr=f\"...\")\n+                    node = Node(value_repr=f\"{obj.__class__.__name__}(...)\")\n                 else:\n                     node = Node(\n                         open_brace=f\"{obj.__class__.__name__}(\",\n@@ -774,7 +777,7 @@ def iter_attrs() -> Iterable[\n             children = []\n             append = children.append\n             if reached_max_depth:\n-                node = Node(value_repr=f\"...\")\n+                node = Node(value_repr=f\"{obj.__class__.__name__}(...)\")\n             else:\n                 node = Node(\n                     open_brace=f\"{obj.__class__.__name__}(\",\n@@ -794,18 +797,21 @@ def iter_attrs() -> Iterable[\n \n                 pop_visited(obj_id)\n         elif _is_namedtuple(obj) and _has_default_namedtuple_repr(obj):\n+            class_name = obj.__class__.__name__\n             if reached_max_depth:\n-                node = Node(value_repr=\"...\")\n+                # If we've reached the max depth, we still show the class name, but not its contents\n+                node = Node(\n+                    value_repr=f\"{class_name}(...)\",\n+                )\n             else:\n                 children = []\n-                class_name = obj.__class__.__name__\n+                append = children.append\n                 node = Node(\n                     open_brace=f\"{class_name}(\",\n                     close_brace=\")\",\n                     children=children,\n                     empty=f\"{class_name}()\",\n                 )\n-                append = children.append\n                 for last, (key, value) in loop_last(obj._asdict().items()):\n                     child_node = _traverse(value, depth=depth + 1)\n                     child_node.key_repr = key\n@@ -827,7 +833,7 @@ def iter_attrs() -> Iterable[\n             open_brace, close_brace, empty = _BRACES[obj_type](obj)\n \n             if reached_max_depth:\n-                node = Node(value_repr=f\"...\", last=root)\n+                node = Node(value_repr=f\"{open_brace}...{close_brace}\")\n             elif obj_type.__repr__ != type(obj).__repr__:\n                 node = Node(value_repr=to_repr(obj), last=root)\n             elif obj:\n", "test_patch": "diff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex 9346b3908..0551d2484 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -256,7 +256,7 @@ class LooksLikeANamedTupleButIsnt(tuple):\n def test_pretty_namedtuple_max_depth():\n     instance = {\"unit\": StockKeepingUnit(\"a\", \"b\", 1.0, \"c\", [\"d\", \"e\"])}\n     result = pretty_repr(instance, max_depth=1)\n-    assert result == \"{'unit': ...}\"\n+    assert result == \"{'unit': StockKeepingUnit(...)}\"\n \n \n def test_small_width():\n@@ -318,13 +318,13 @@ def test_max_depth():\n     d = {}\n     d[\"foo\"] = {\"fob\": {\"a\": [1, 2, 3], \"b\": {\"z\": \"x\", \"y\": [\"a\", \"b\", \"c\"]}}}\n \n-    assert pretty_repr(d, max_depth=0) == \"...\"\n-    assert pretty_repr(d, max_depth=1) == \"{'foo': ...}\"\n-    assert pretty_repr(d, max_depth=2) == \"{'foo': {'fob': ...}}\"\n-    assert pretty_repr(d, max_depth=3) == \"{'foo': {'fob': {'a': ..., 'b': ...}}}\"\n+    assert pretty_repr(d, max_depth=0) == \"{...}\"\n+    assert pretty_repr(d, max_depth=1) == \"{'foo': {...}}\"\n+    assert pretty_repr(d, max_depth=2) == \"{'foo': {'fob': {...}}}\"\n+    assert pretty_repr(d, max_depth=3) == \"{'foo': {'fob': {'a': [...], 'b': {...}}}}\"\n     assert (\n         pretty_repr(d, max_width=100, max_depth=4)\n-        == \"{'foo': {'fob': {'a': [1, 2, 3], 'b': {'z': 'x', 'y': ...}}}}\"\n+        == \"{'foo': {'fob': {'a': [1, 2, 3], 'b': {'z': 'x', 'y': [...]}}}}\"\n     )\n     assert (\n         pretty_repr(d, max_width=100, max_depth=5)\n@@ -353,7 +353,7 @@ def __rich_repr__(self):\n \n     assert (\n         pretty_repr(Foo(foo=Bar(bar=Foo(foo=[]))), max_depth=2)\n-        == \"Foo(foo=Bar(bar=...))\"\n+        == \"Foo(foo=Bar(bar=Foo(...)))\"\n     )\n \n \n@@ -368,7 +368,7 @@ class Bar:\n \n     assert (\n         pretty_repr(Foo(foo=Bar(bar=Foo(foo=[]))), max_depth=2)\n-        == \"Foo(foo=Bar(bar=...))\"\n+        == \"Foo(foo=Bar(bar=Foo(...)))\"\n     )\n \n \n@@ -383,7 +383,7 @@ class Bar:\n \n     assert (\n         pretty_repr(Foo(foo=Bar(bar=Foo(foo=[]))), max_depth=2)\n-        == \"Foo(foo=Bar(bar=...))\"\n+        == \"Foo(foo=Bar(bar=Foo(...)))\"\n     )\n \n \n", "problem_statement": "[REQUEST] Allow delimiters when using `pprint(..., max_depth=...)`\n**How would you improve Rich?**\r\n\r\nCurrently, when pretty printing a nested object, we can set the max depth to simplify the object display:\r\n```python\r\n>>> from rich.pretty import pprint\r\n>>> pprint({\"a\": {\"b\": {\"c\": \"d\"}}, \"e\": [\"f\", \"g\"]}, max_depth=1)\r\n{'a': ..., 'e': ...}\r\n```\r\n\r\nHowever, by using ellipsis like this, we obscure the information about the data type of \"a\". In contrast, Python's built-in `pprint` module adds delimiters around the ellipsis, to differentiate between a list and a dict:\r\n```python\r\n>>> import pprint\r\n>>> pprint.pprint({\"a\": {\"b\": {\"c\": \"d\"}}, \"e\": [\"f\", \"g\"]}, depth=1)\r\n{'a': {...}, 'e': [...]}\r\n```\r\n\r\nNotice how, with only 4 extra characters, we have significantly more information about the eluded structure.\r\n\r\nI would like to propose that we add a new argument to `pprint()` such as `max_depth_delims: bool`, which when True, would enable the behaviour above.\r\n\r\n**What problem does it solve for you?**\r\n\r\nWhen I use `max_depth` in tutorial or example, it's because I don't want unnecessary detail taking up a large amount of screen real estate. However I still want my users to understand that there *is* additional detail available, and to give them a hint as to what kind of data is nested further in the tree, and how to access it. Adding these delimiters nicely enable this compromise.\n", "hints_text": "That seems like a good idea. I probably wouldn't bother with the boolean and just make it the default.\nThat would certainly make it easier. I'm happy to implement this, by the way.\nPR would be welcome!", "created_at": "2022-08-25T05:43:12Z"}
{"repo": "Textualize/rich", "pull_number": 2424, "instance_id": "Textualize__rich-2424", "issue_numbers": ["2422"], "base_commit": "2ee992b17ef5ff3c34f89545b0d57ad4690a64fc", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 90cd313d6..bc3c00a4a 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -16,6 +16,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n ### Fixed\n \n - Fixed missing typing extensions dependency on 3.9 https://github.com/Textualize/rich/issues/2386\n+- Fixed Databricks Notebook is not detected as Jupyter environment. https://github.com/Textualize/rich/issues/2422\n \n ## [12.5.0] - 2022-07-11\n \ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 83125eab7..2298a7654 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -14,6 +14,7 @@ The following people have contributed to the development of Rich:\n - [Oleksis Fraga](https://github.com/oleksis)\n - [Andy Gimblett](https://github.com/gimbo)\n - [Micha\u0142 G\u00f3rny](https://github.com/mgorny)\n+- [Nok Lam Chan](https://github.com/noklam)\n - [Leron Gray](https://github.com/daddycocoaman)\n - [Kenneth Hoste](https://github.com/boegel)\n - [Lanqing Huang](https://github.com/lqhuang)\ndiff --git a/rich/console.py b/rich/console.py\nindex 8c6049a49..3227f170d 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -516,7 +516,11 @@ def _is_jupyter() -> bool:  # pragma: no cover\n         return False\n     ipython = get_ipython()  # type: ignore[name-defined]\n     shell = ipython.__class__.__name__\n-    if \"google.colab\" in str(ipython.__class__) or shell == \"ZMQInteractiveShell\":\n+    if (\n+        \"google.colab\" in str(ipython.__class__)\n+        or os.getenv(\"DATABRICKS_RUNTIME_VERSION\")\n+        or shell == \"ZMQInteractiveShell\"\n+    ):\n         return True  # Jupyter notebook or qtconsole\n     elif shell == \"TerminalInteractiveShell\":\n         return False  # Terminal running IPython\n", "test_patch": "", "problem_statement": "[BUG] Databricks is not identified as Jupyter\nYou may find a solution to your problem in the [docs](https://rich.readthedocs.io/en/latest/introduction.html) or [issues](https://github.com/willmcgugan/rich/issues).\r\n\r\n**Describe the bug**\r\n\r\nDatabricks is not considered as \"Jupyter\", therefore `JUPYTER_LINES` and `JUPYTER_COLUMNS` has no effect on the console log\r\n\r\nProvide a minimal code example that demonstrates the issue if you can. If the issue is visual in nature, consider posting a screenshot.\r\n\r\nDatabricks has a Ipython type `InteractiveShell` which is neither `Ipython` or `ZMQInteractiveShell`\r\n\r\n![image](https://user-images.githubusercontent.com/18221871/181251880-531dbfc5-0f35-44ba-a1c2-c07e0a075cc7.png)\r\n\r\n\r\n```python\r\ndef _is_jupyter() -> bool:  # pragma: no cover\r\n    \"\"\"Check if we're running in a Jupyter notebook.\"\"\"\r\n    try:\r\n        get_ipython  # type: ignore[name-defined]\r\n    except NameError:\r\n        return False\r\n    ipython = get_ipython()  # type: ignore[name-defined]\r\n    shell = ipython.__class__.__name__\r\n    if \"google.colab\" in str(ipython.__class__) or shell == \"ZMQInteractiveShell\":\r\n        return True  # Jupyter notebook or qtconsole\r\n    elif shell == \"TerminalInteractiveShell\":\r\n        return False  # Terminal running IPython\r\n    else:\r\n        return False  # Other type (?)\r\n```\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\npython -m rich.diagnose\r\npip freeze | grep rich\r\n```\r\n\r\nIf you're using Rich in a Jupyter Notebook, run the following snippet in a cell\r\nand paste the output in your bug report.\r\n\r\n```python\r\nfrom rich.diagnose import report\r\nreport()\r\n```\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                             \u2502\r\n\u2502                                                                             \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=80 None>                                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                             \u2502\r\n\u2502     color_system = None                                                     \u2502\r\n\u2502         encoding = 'utf-8'                                                  \u2502\r\n\u2502             file = <PythonShellImpl.ConsoleBuffer object at 0x7f462b809970> \u2502\r\n\u2502           height = 25                                                       \u2502\r\n\u2502    is_alt_screen = False                                                    \u2502\r\n\u2502 is_dumb_terminal = False                                                    \u2502\r\n\u2502   is_interactive = False                                                    \u2502\r\n\u2502       is_jupyter = False                                                    \u2502\r\n\u2502      is_terminal = False                                                    \u2502\r\n\u2502   legacy_windows = False                                                    \u2502\r\n\u2502         no_color = False                                                    \u2502\r\n\u2502          options = ConsoleOptions(                                          \u2502\r\n\u2502                        size=ConsoleDimensions(width=80, height=25),         \u2502\r\n\u2502                        legacy_windows=False,                                \u2502\r\n\u2502                        min_width=1,                                         \u2502\r\n\u2502                        max_width=80,                                        \u2502\r\n\u2502                        is_terminal=False,                                   \u2502\r\n\u2502                        encoding='utf-8',                                    \u2502\r\n\u2502                        max_height=25,                                       \u2502\r\n\u2502                        justify=None,                                        \u2502\r\n\u2502                        overflow=None,                                       \u2502\r\n\u2502                        no_wrap=False,                                       \u2502\r\n\u2502                        highlight=None,                                      \u2502\r\n\u2502                        markup=None,                                         \u2502\r\n\u2502                        height=None                                          \u2502\r\n\u2502                    )                                                        \u2502\r\n\u2502            quiet = False                                                    \u2502\r\n\u2502           record = False                                                    \u2502\r\n\u2502         safe_box = True                                                     \u2502\r\n\u2502             size = ConsoleDimensions(width=80, height=25)                   \u2502\r\n\u2502        soft_wrap = False                                                    \u2502\r\n\u2502           stderr = False                                                    \u2502\r\n\u2502            style = None                                                     \u2502\r\n\u2502         tab_size = 8                                                        \u2502\r\n\u2502            width = 80                                                       \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'unknown',             \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JUPYTER_COLUMNS': '200',      \u2502\r\n\u2502     'JUPYTER_LINES': '50',         \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "There is no future proof way of detecting Jupyter that I know of. I'd accept a PR for whatever fudge is required to detect Databricks...\nI've dumped the environment variables that are present in a Databricks notebook [here](https://github.com/kedro-org/kedro/issues/1729#issuecomment-1196722837)\r\n\r\nPotentially checking for both this var name and value would be the most reliable apporach:\r\n\r\n```\r\nDATABRICKS_ROOT_VIRTUALENV_ENV = \"/databricks/python3\"\r\n```\nI'll make a PR if this is ok, try to detect `DATABRICKS_ROOT_VIRTUALENV_ENV`.", "created_at": "2022-07-27T15:18:19Z"}
{"repo": "Textualize/rich", "pull_number": 2366, "instance_id": "Textualize__rich-2366", "issue_numbers": ["1918", "2337"], "base_commit": "c17bf910219ce680cdd8749a4c0d52ee75779507", "patch": "diff --git a/rich/_inspect.py b/rich/_inspect.py\nindex 13b92f5c9..30446ceb3 100644\n--- a/rich/_inspect.py\n+++ b/rich/_inspect.py\n@@ -2,7 +2,7 @@\n \n import inspect\n from inspect import cleandoc, getdoc, getfile, isclass, ismodule, signature\n-from typing import Any, Iterable, Optional, Tuple\n+from typing import Any, Collection, Iterable, Optional, Tuple, Type, Union\n \n from .console import Group, RenderableType\n from .control import escape_control_codes\n@@ -233,3 +233,38 @@ def _get_formatted_doc(self, object_: Any) -> Optional[str]:\n         if not self.help:\n             docs = _first_paragraph(docs)\n         return escape_control_codes(docs)\n+\n+\n+def get_object_types_mro(obj: Union[object, Type[Any]]) -> Tuple[type, ...]:\n+    \"\"\"Returns the MRO of an object's class, or of the object itself if it's a class.\"\"\"\n+    if not hasattr(obj, \"__mro__\"):\n+        # N.B. we cannot use `if type(obj) is type` here because it doesn't work with\n+        # some types of classes, such as the ones that use abc.ABCMeta.\n+        obj = type(obj)\n+    return getattr(obj, \"__mro__\", ())\n+\n+\n+def get_object_types_mro_as_strings(obj: object) -> Collection[str]:\n+    \"\"\"\n+    Returns the MRO of an object's class as full qualified names, or of the object itself if it's a class.\n+\n+    Examples:\n+        `object_types_mro_as_strings(JSONDecoder)` will return `['json.decoder.JSONDecoder', 'builtins.object']`\n+    \"\"\"\n+    return [\n+        f'{getattr(type_, \"__module__\", \"\")}.{getattr(type_, \"__qualname__\", \"\")}'\n+        for type_ in get_object_types_mro(obj)\n+    ]\n+\n+\n+def is_object_one_of_types(\n+    obj: object, fully_qualified_types_names: Collection[str]\n+) -> bool:\n+    \"\"\"\n+    Returns `True` if the given object's class (or the object itself, if it's a class) has one of the\n+    fully qualified names in its MRO.\n+    \"\"\"\n+    for type_name in get_object_types_mro_as_strings(obj):\n+        if type_name in fully_qualified_types_names:\n+            return True\n+    return False\ndiff --git a/rich/jupyter.py b/rich/jupyter.py\nindex 7608bd017..24135a9f7 100644\n--- a/rich/jupyter.py\n+++ b/rich/jupyter.py\n@@ -1,4 +1,4 @@\n-from typing import Any, Dict, Iterable, List, TYPE_CHECKING, Sequence\n+from typing import TYPE_CHECKING, Any, Dict, Iterable, List, Sequence\n \n if TYPE_CHECKING:\n     from rich.console import ConsoleRenderable\ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex 1c6b16716..ae8b150f0 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -55,6 +55,13 @@\n     )\n \n \n+JUPYTER_CLASSES_TO_NOT_RENDER = {\n+    # Matplotlib \"Artists\" manage their own rendering in a Jupyter notebook, and we should not try to render them too.\n+    # \"Typically, all [Matplotlib] visible elements in a figure are subclasses of Artist.\"\n+    \"matplotlib.artist.Artist\",\n+}\n+\n+\n def _is_attr_object(obj: Any) -> bool:\n     \"\"\"Check if an object was created with attrs module.\"\"\"\n     return _has_attrs and _attr_module.has(type(obj))\n@@ -115,7 +122,9 @@ def _ipy_display_hook(\n     max_string: Optional[int] = None,\n     expand_all: bool = False,\n ) -> None:\n-    from .console import ConsoleRenderable  # needed here to prevent circular import\n+    # needed here to prevent circular import:\n+    from ._inspect import is_object_one_of_types\n+    from .console import ConsoleRenderable\n \n     # always skip rich generated jupyter renderables or None values\n     if _safe_isinstance(value, JupyterRenderable) or value is None:\n@@ -148,6 +157,13 @@ def _ipy_display_hook(\n                 if repr_result is not None:\n                     return  # Delegate rendering to IPython\n \n+        # When in a Jupyter notebook let's avoid the display of some specific classes,\n+        # as they result in the rendering of useless and noisy lines such as `<Figure size 432x288 with 1 Axes>`.\n+        # What does this do?\n+        # --> if the class has \"matplotlib.artist.Artist\" in its hierarchy for example, we don't render it.\n+        if is_object_one_of_types(value, JUPYTER_CLASSES_TO_NOT_RENDER):\n+            return\n+\n     # certain renderables should start on a new line\n     if _safe_isinstance(value, ConsoleRenderable):\n         console.line()\n", "test_patch": "diff --git a/tests/test_inspect.py b/tests/test_inspect.py\nindex 4e537f9cf..53f2f932b 100644\n--- a/tests/test_inspect.py\n+++ b/tests/test_inspect.py\n@@ -1,10 +1,16 @@\n import io\n import sys\n from types import ModuleType\n+from typing import Sequence, Type\n \n import pytest\n \n from rich import inspect\n+from rich._inspect import (\n+    get_object_types_mro,\n+    get_object_types_mro_as_strings,\n+    is_object_one_of_types,\n+)\n from rich.console import Console\n \n skip_py36 = pytest.mark.skipif(\n@@ -74,6 +80,10 @@ def __dir__(self):\n         return [\"__init__\", \"broken\", \"method\"]\n \n \n+class FooSubclass(Foo):\n+    pass\n+\n+\n @skip_py36\n def test_render():\n     console = Console(width=100, file=io.StringIO(), legacy_windows=False)\n@@ -350,3 +360,62 @@ class Thing:\n         expected_replacement\n     )\n     assert render(Something, methods=True) == expected\n+\n+\n+@pytest.mark.parametrize(\n+    \"obj,expected_result\",\n+    (\n+        [object, (object,)],\n+        [object(), (object,)],\n+        [\"hi\", (str, object)],\n+        [str, (str, object)],\n+        [Foo(1), (Foo, object)],\n+        [Foo, (Foo, object)],\n+        [FooSubclass(1), (FooSubclass, Foo, object)],\n+        [FooSubclass, (FooSubclass, Foo, object)],\n+    ),\n+)\n+def test_object_types_mro(obj: object, expected_result: Sequence[Type]):\n+    assert get_object_types_mro(obj) == expected_result\n+\n+\n+@pytest.mark.parametrize(\n+    \"obj,expected_result\",\n+    (\n+        # fmt: off\n+        [\"hi\", [\"builtins.str\", \"builtins.object\"]],\n+        [str, [\"builtins.str\", \"builtins.object\"]],\n+        [Foo(1), [f\"{__name__}.Foo\", \"builtins.object\"]],\n+        [Foo, [f\"{__name__}.Foo\", \"builtins.object\"]],\n+        [FooSubclass(1), [f\"{__name__}.FooSubclass\", f\"{__name__}.Foo\", \"builtins.object\"]],\n+        [FooSubclass, [f\"{__name__}.FooSubclass\", f\"{__name__}.Foo\", \"builtins.object\"]],\n+        # fmt: on\n+    ),\n+)\n+def test_object_types_mro_as_strings(obj: object, expected_result: Sequence[str]):\n+    assert get_object_types_mro_as_strings(obj) == expected_result\n+\n+\n+@pytest.mark.parametrize(\n+    \"obj,types,expected_result\",\n+    (\n+        # fmt: off\n+        [\"hi\", [\"builtins.str\"], True],\n+        [str, [\"builtins.str\"], True],\n+        [\"hi\", [\"builtins.str\", \"foo\"], True],\n+        [str, [\"builtins.str\", \"foo\"], True],\n+        [Foo(1), [f\"{__name__}.Foo\"], True],\n+        [Foo, [f\"{__name__}.Foo\"], True],\n+        [Foo(1), [\"builtins.str\", f\"{__name__}.Foo\"], True],\n+        [Foo, [\"builtins.int\", f\"{__name__}.Foo\"], True],\n+        [Foo(1), [f\"{__name__}.FooSubclass\"], False],\n+        [Foo, [f\"{__name__}.FooSubclass\"], False],\n+        [Foo(1), [f\"{__name__}.FooSubclass\", f\"{__name__}.Foo\"], True],\n+        [Foo, [f\"{__name__}.Foo\", f\"{__name__}.FooSubclass\"], True],\n+        # fmt: on\n+    ),\n+)\n+def test_object_is_one_of_types(\n+    obj: object, types: Sequence[str], expected_result: bool\n+):\n+    assert is_object_one_of_types(obj, types) is expected_result\ndiff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex d45b0c22d..da361e958 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -5,6 +5,7 @@\n from collections import UserDict, defaultdict\n from dataclasses import dataclass, field\n from typing import List, NamedTuple\n+from unittest.mock import patch\n \n import attr\n import pytest\n@@ -125,6 +126,22 @@ def test_ipy_display_hook__console_renderables_on_newline():\n     assert console.end_capture() == \"\\nhello\\n\"\n \n \n+def test_ipy_display_hook__classes_to_not_render():\n+    console = Console(file=io.StringIO(), force_jupyter=True)\n+    console.begin_capture()\n+\n+    class Thing:\n+        def __repr__(self) -> str:\n+            return \"hello\"\n+\n+    class_fully_qualified_name = f\"{__name__}.{Thing.__qualname__}\"\n+    with patch(\n+        \"rich.pretty.JUPYTER_CLASSES_TO_NOT_RENDER\", {class_fully_qualified_name}\n+    ):\n+        _ipy_display_hook(Thing(), console=console)\n+    assert console.end_capture() == \"\"\n+\n+\n def test_pretty():\n     test = {\n         \"foo\": [1, 2, 3, (4, 5, {6}, 7, 8, {9}), {}],\n", "problem_statement": "Fixed force_terminal on Jupyter\n## Type of changes\r\n\r\n- [x] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nPlease describe your changes here. If this fixes a bug, please link to the issue, if possible.\r\n\r\nFixes behavior after running `rich.pretty.install()` Jupyter Lab:\r\n\r\n- Do not show `<Figure size 432x288 with 1 Axes>` on Matplotlib figures\r\n- With `force_terminal=True`. and `force_jupyter=None` (or `True`), pandas dataframe must still be rendered once (i.e., the html repr).\r\n\r\nScreenshot below (from this [notebook](https://gist.github.com/verdimrc/221f602a90b6c0733cb29c8d665ad674)) compares the four behaviors: (1) vanilla Python, (2 and 3) rich, and (4) this PR.\r\n\r\n![screenshot](https://user-images.githubusercontent.com/2340781/154830727-6ac50554-4cfa-4281-83cb-02ad3f6e52db.png)\r\n\r\n\nInvestigate this PR\nI think there is some fundamental misunderstanding in this PR. We should try and understand what the user is expected, and what if anything Rich could be doing better.\r\n\r\nhttps://github.com/Textualize/rich/pull/1918\n", "hints_text": "Why would you `force_terminal` in Jupyter lab?\r\n\r\nPlease don't ask me to run something in Jupyter when you can paste a screenshot.\nThank you for taking a look. Added a screenshot to the PR description, with markers on the behaviors that this PR tries to fix.\n> Why would you force_terminal in Jupyter lab?\r\n\n# [Codecov](https://codecov.io/gh/Textualize/rich/pull/1918?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report\n> Merging [#1918](https://codecov.io/gh/Textualize/rich/pull/1918?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (9cf8499) into [master](https://codecov.io/gh/Textualize/rich/commit/e839bfb3593b0de1dca4221c32a8098e72639893?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (e839bfb) will **decrease** coverage by `0.02%`.\n> The diff coverage is `98.49%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/Textualize/rich/pull/1918/graphs/tree.svg?width=650&height=150&src=pr&token=gpwvEeKjff&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)](https://codecov.io/gh/Textualize/rich/pull/1918?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1918      +/-   ##\n==========================================\n- Coverage   99.82%   99.80%   -0.03%     \n==========================================\n  Files          71       71              \n  Lines        6943     7057     +114     \n==========================================\n+ Hits         6931     7043     +112     \n- Misses         12       14       +2     \n```\n\n| Flag | Coverage \u0394 | |\n|---|---|---|\n| unittests | `99.80% <98.49%> (-0.03%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/Textualize/rich/pull/1918?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage \u0394 | |\n|---|---|---|\n| [rich/default\\_styles.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9kZWZhdWx0X3N0eWxlcy5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n| [rich/markdown.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9tYXJrZG93bi5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n| [rich/pretty.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9wcmV0dHkucHk=) | `99.43% <97.61%> (-0.57%)` | :arrow_down: |\n| [rich/syntax.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9zeW50YXgucHk=) | `99.27% <97.72%> (-0.34%)` | :arrow_down: |\n| [rich/\\_\\_main\\_\\_.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9fX21haW5fXy5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [rich/\\_inspect.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9faW5zcGVjdC5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [rich/color.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9jb2xvci5weQ==) | `100.00% <100.00%> (\u00f8)` | |\n| [rich/console.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9jb25zb2xlLnB5) | `100.00% <100.00%> (\u00f8)` | |\n| [rich/progress.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9wcm9ncmVzcy5weQ==) | `98.43% <100.00%> (+0.31%)` | :arrow_up: |\n| [rich/segment.py](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cmljaC9zZWdtZW50LnB5) | `99.34% <100.00%> (+0.05%)` | :arrow_up: |\n| ... and [9 more](https://codecov.io/gh/Textualize/rich/pull/1918/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/Textualize/rich/pull/1918?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)\n> `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/Textualize/rich/pull/1918?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Last update [880693d...9cf8499](https://codecov.io/gh/Textualize/rich/pull/1918?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).\n\nI'm going to need an answer to my question, and some code I can cut and paste (or a notebook).\nHi, I thought the quoted question was posted accidentally, my apology.\r\n\r\nThe motivation to let Jupyter display cell outputs as colored ASCII rather than HTML are:\r\n\r\n1. to use the same font as the code cells. Otherwise, HTML output will be displayed with a noticeably different font.\r\n2. to automatically wrap long ASCII texts (which is how Jupyter behaves without rich). Otherwise, long HTML output will need horizontal scrolling, which makes rich notebook to behave differently than stock Jupyter.\r\n\r\nBelow are the Python fragments to demonstrate the effect of this PR. You'll need to `pip install pandas` to run this example in Jupyter.\r\n\r\nThis fragment shows the effect on Jupyter \"display_data\".\r\n\r\n```python\r\nimport pandas as pd\r\nimport rich\r\nimport rich.pretty\r\n\r\n# Stuffs to display\r\nd = {\"A\" * 200, \"B\" * 200}\r\ndf = pd.DataFrame({\"a\": range(3), \"b\": range(3)})\r\n\r\n# Render \"display_data\" as colored text.\r\nrich.reconfigure(force_terminal=True)\r\nrich.pretty.install()\r\ndisplay(d, df, df[\"a\"])\r\n\r\n# Jupyter may surpress certain \"display_data\". For example, the semicolon makes Jupyter hide the\r\n# \"<AxesSubplot:...>\" message.\r\ndf.plot();\r\n```\r\n\r\nHere's the side-by-side comparison:\r\n\r\n![patched](https://user-images.githubusercontent.com/2340781/166721697-321e3003-828c-4be1-8f92-d0a95b00013e.png)\r\n\r\nOne thing to also note is this PR changes only the ipython display hook, and makes no attempt to change the Console behavior. In the next example, the Jupyter \"stream_output\" still defaults to HTML, and will have to be specifically instructed for colored ASCII. \r\n\r\n```python\r\n# By default, render \"stream_output\" (e.g., stdout) as HTML.\r\nrich.get_console().out(\"a\", d)\r\n\r\n# However, \"stream_output\" can be force rendered as colored text.\r\nrich.console.Console(force_terminal=True, force_jupyter=False).out(\"a\", d)\r\n```\n", "created_at": "2022-06-28T11:30:51Z"}
{"repo": "Textualize/rich", "pull_number": 2341, "instance_id": "Textualize__rich-2341", "issue_numbers": ["2329"], "base_commit": "64991335a67926d76f0bc3ed182741e930af59cd", "patch": "diff --git a/pyproject.toml b/pyproject.toml\nindex f2edc90aa..4eccd5ed4 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -64,3 +64,6 @@ ignore_missing_imports = true\n \n [tool.pytest.ini_options]\n testpaths = [\"tests\"]\n+\n+[tool.isort]\n+profile = \"black\"\ndiff --git a/rich/syntax.py b/rich/syntax.py\nindex cb34855ac..0f75b8f52 100644\n--- a/rich/syntax.py\n+++ b/rich/syntax.py\n@@ -1,8 +1,22 @@\n import os.path\n import platform\n+import re\n+import sys\n import textwrap\n from abc import ABC, abstractmethod\n-from typing import Any, Dict, Iterable, List, Optional, Set, Tuple, Type, Union\n+from typing import (\n+    Any,\n+    Dict,\n+    Iterable,\n+    List,\n+    NamedTuple,\n+    Optional,\n+    Sequence,\n+    Set,\n+    Tuple,\n+    Type,\n+    Union,\n+)\n \n from pygments.lexer import Lexer\n from pygments.lexers import get_lexer_by_name, guess_lexer_for_filename\n@@ -31,9 +45,14 @@\n from .jupyter import JupyterMixin\n from .measure import Measurement\n from .segment import Segment, Segments\n-from .style import Style\n+from .style import Style, StyleType\n from .text import Text\n \n+if sys.version_info < (3, 10):\n+    from typing_extensions import TypeAlias\n+else:\n+    from typing import TypeAlias\n+\n TokenType = Tuple[str, ...]\n \n WINDOWS = platform.system() == \"Windows\"\n@@ -193,6 +212,21 @@ def get_background_style(self) -> Style:\n         return self._background_style\n \n \n+SyntaxPosition: TypeAlias = Tuple[int, int]\n+\n+\n+class _SyntaxHighlightRange(NamedTuple):\n+    \"\"\"\n+    A range to highlight in a Syntax object.\n+    `start` and `end` are 2-integers tuples, where the first integer is the line number\n+    (starting from 1) and the second integer is the column index (starting from 0).\n+    \"\"\"\n+\n+    style: StyleType\n+    start: SyntaxPosition\n+    end: SyntaxPosition\n+\n+\n class Syntax(JupyterMixin):\n     \"\"\"Construct a Syntax object to render syntax highlighted code.\n \n@@ -265,6 +299,7 @@ def __init__(\n         self.padding = padding\n \n         self._theme = self.get_theme(theme)\n+        self._stylized_ranges: List[_SyntaxHighlightRange] = []\n \n     @classmethod\n     def from_path(\n@@ -448,7 +483,7 @@ def highlight(\n \n                 def line_tokenize() -> Iterable[Tuple[Any, str]]:\n                     \"\"\"Split tokens to one per line.\"\"\"\n-                    assert lexer\n+                    assert lexer  # required to make MyPy happy - we know lexer is not None at this point\n \n                     for token_type, token in lexer.get_tokens(code):\n                         while token:\n@@ -484,8 +519,26 @@ def tokens_to_spans() -> Iterable[Tuple[str, Optional[Style]]]:\n                 )\n             if self.background_color is not None:\n                 text.stylize(f\"on {self.background_color}\")\n+\n+        if self._stylized_ranges:\n+            self._apply_stylized_ranges(text)\n+\n         return text\n \n+    def stylize_range(\n+        self, style: StyleType, start: SyntaxPosition, end: SyntaxPosition\n+    ) -> None:\n+        \"\"\"\n+        Adds a custom style on a part of the code, that will be applied to the syntax display when it's rendered.\n+        Line numbers are 1-based, while column indexes are 0-based.\n+\n+        Args:\n+            style (StyleType): The style to apply.\n+            start (Tuple[int, int]): The start of the range, in the form `[line number, column index]`.\n+            end (Tuple[int, int]): The end of the range, in the form `[line number, column index]`.\n+        \"\"\"\n+        self._stylized_ranges.append(_SyntaxHighlightRange(style, start, end))\n+\n     def _get_line_numbers_color(self, blend: float = 0.3) -> Color:\n         background_style = self._theme.get_background_style() + self.background_style\n         background_color = background_style.bgcolor\n@@ -574,11 +627,8 @@ def _get_syntax(\n             else self.code_width\n         )\n \n-        ends_on_nl = self.code.endswith(\"\\n\")\n-        code = self.code if ends_on_nl else self.code + \"\\n\"\n-        code = textwrap.dedent(code) if self.dedent else code\n-        code = code.expandtabs(self.tab_size)\n-        text = self.highlight(code, self.line_range)\n+        ends_on_nl, processed_code = self._process_code(self.code)\n+        text = self.highlight(processed_code, self.line_range)\n \n         if not self.line_numbers and not self.word_wrap and not self.line_range:\n             if not ends_on_nl:\n@@ -690,6 +740,83 @@ def _get_syntax(\n                     yield from wrapped_line\n                     yield new_line\n \n+    def _apply_stylized_ranges(self, text: Text) -> None:\n+        \"\"\"\n+        Apply stylized ranges to a text instance,\n+        using the given code to determine the right portion to apply the style to.\n+\n+        Args:\n+            text (Text): Text instance to apply the style to.\n+        \"\"\"\n+        code = text.plain\n+        newlines_offsets = [\n+            # Let's add outer boundaries at each side of the list:\n+            0,\n+            # N.B. using \"\\n\" here is much faster than using metacharacters such as \"^\" or \"\\Z\":\n+            *[\n+                match.start() + 1\n+                for match in re.finditer(\"\\n\", code, flags=re.MULTILINE)\n+            ],\n+            len(code) + 1,\n+        ]\n+\n+        for stylized_range in self._stylized_ranges:\n+            start = _get_code_index_for_syntax_position(\n+                newlines_offsets, stylized_range.start\n+            )\n+            end = _get_code_index_for_syntax_position(\n+                newlines_offsets, stylized_range.end\n+            )\n+            if start is not None and end is not None:\n+                text.stylize(stylized_range.style, start, end)\n+\n+    def _process_code(self, code: str) -> Tuple[bool, str]:\n+        \"\"\"\n+        Applies various processing to a raw code string\n+        (normalises it so it always ends with a line return, dedents it if necessary, etc.)\n+\n+        Args:\n+            code (str): The raw code string to process\n+\n+        Returns:\n+            Tuple[bool, str]: the boolean indicates whether the raw code ends with a line return,\n+                while the string is the processed code.\n+        \"\"\"\n+        ends_on_nl = code.endswith(\"\\n\")\n+        processed_code = code if ends_on_nl else code + \"\\n\"\n+        processed_code = (\n+            textwrap.dedent(processed_code) if self.dedent else processed_code\n+        )\n+        processed_code = processed_code.expandtabs(self.tab_size)\n+        return ends_on_nl, processed_code\n+\n+\n+def _get_code_index_for_syntax_position(\n+    newlines_offsets: Sequence[int], position: SyntaxPosition\n+) -> Optional[int]:\n+    \"\"\"\n+    Returns the index of the code string for the given positions.\n+\n+    Args:\n+        newlines_offsets (Sequence[int]): The offset of each newline character found in the code snippet.\n+        position (SyntaxPosition): The position to search for.\n+\n+    Returns:\n+        Optional[int]: The index of the code string for this position, or `None`\n+            if the given position's line number is out of range (if it's the column that is out of range\n+            we silently clamp its value so that it reaches the end of the line)\n+    \"\"\"\n+    lines_count = len(newlines_offsets)\n+\n+    line_number, column_index = position\n+    if line_number > lines_count or len(newlines_offsets) < (line_number + 1):\n+        return None  # `line_number` is out of range\n+    line_index = line_number - 1\n+    line_length = newlines_offsets[line_index + 1] - newlines_offsets[line_index] - 1\n+    # If `column_index` is out of range: let's silently clamp it:\n+    column_index = min(line_length, column_index)\n+    return newlines_offsets[line_index] + column_index\n+\n \n if __name__ == \"__main__\":  # pragma: no cover\n \n", "test_patch": "diff --git a/tests/test_syntax.py b/tests/test_syntax.py\nindex a88ce0a33..c85d3f366 100644\n--- a/tests/test_syntax.py\n+++ b/tests/test_syntax.py\n@@ -1,4 +1,3 @@\n-# coding=utf-8\n import io\n import os\n import sys\n@@ -9,7 +8,14 @@\n \n from rich.panel import Panel\n from rich.style import Style\n-from rich.syntax import ANSISyntaxTheme, Color, Console, PygmentsSyntaxTheme, Syntax\n+from rich.syntax import (\n+    ANSISyntaxTheme,\n+    Color,\n+    Console,\n+    PygmentsSyntaxTheme,\n+    Syntax,\n+    _SyntaxHighlightRange,\n+)\n \n from .render import render\n \n@@ -234,6 +240,61 @@ def test_option_no_wrap():\n     assert rendered_syntax == expected\n \n \n+def test_syntax_highlight_ranges():\n+    syntax = Syntax(\n+        CODE,\n+        lexer=\"python\",\n+        line_numbers=True,\n+        word_wrap=False,\n+    )\n+    stylized_ranges = [\n+        _SyntaxHighlightRange(\n+            # overline the 2nd char of the 1st line:\n+            start=(1, 1),\n+            end=(1, 2),\n+            style=Style(overline=True),\n+        ),\n+        _SyntaxHighlightRange(\n+            start=(1, len(\"def loop_\")),\n+            end=(1, len(\"def loop_first_last\")),\n+            style=Style(underline=True),\n+        ),\n+        _SyntaxHighlightRange(\n+            start=(1, len(\"def loop_first\")),\n+            end=(3, len(\"    iter_values = iter\")),\n+            style=Style(bold=True),\n+        ),\n+        _SyntaxHighlightRange(\n+            start=(9, len(\"    for \")),\n+            end=(9, len(\"    for value in\")),\n+            style=Style(strike=True),\n+        ),\n+        _SyntaxHighlightRange(\n+            start=(6, len(\"    except \")),\n+            end=(6, len(\"    except StopIteration\")),\n+            style=Style(reverse=True),\n+        ),\n+        _SyntaxHighlightRange(\n+            start=(10, len(\"       yield first,\")),\n+            # `column_index` is out of range: should be clamped to the line length:\n+            end=(10, 300),\n+            style=Style(bold=True),\n+        ),\n+        # For this one the end `line_number` is out of range, so it should have no impact:\n+        _SyntaxHighlightRange(\n+            start=(1, 1),\n+            end=(30, 2),\n+            style=Style(bold=True),\n+        ),\n+    ]\n+    for range_ in stylized_ranges:\n+        syntax.stylize_range(range_.style, range_.start, range_.end)\n+    rendered_syntax = render(syntax, True)\n+    print(repr(rendered_syntax))\n+    expected = '\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 1 \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34md\\x1b[0m\\x1b[53;38;2;102;217;239;48;2;39;40;34me\\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mf\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mloop_\\x1b[0m\\x1b[4;38;2;166;226;46;48;2;39;40;34mfirst\\x1b[0m\\x1b[1;4;38;2;166;226;46;48;2;39;40;34m_last\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;249;38;114;48;2;39;40;34m-\\x1b[0m\\x1b[1;38;2;249;38;114;48;2;39;40;34m>\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mTuple\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mbool\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mbool\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 2 \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[1;38;2;230;219;116;48;2;39;40;34m\"\"\"Iterate and generate a tuple with a flag for first and last value.\"\"\"\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 3 \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 4 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 5 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 6 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[7;38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 7 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 8 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 9 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[9;38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[9;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[9;38;2;249;38;114;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m10 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[1;38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m11 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m12 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\n\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m13 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\n'\n+    assert rendered_syntax == expected\n+\n+\n def test_ansi_theme():\n     style = Style(color=\"red\")\n     theme = ANSISyntaxTheme({(\"foo\", \"bar\"): style})\n", "problem_statement": "Add stylised range support to Syntax\nIn order to support https://github.com/Textualize/rich/issues/2286 we will need to be able to add arbitrary ranges to Syntax.\r\n\r\nA new API method to apply a style from (LINE A, COLUMN A) to (LINE B, COLUMN B).\n", "hints_text": "", "created_at": "2022-06-15T13:28:35Z"}
{"repo": "Textualize/rich", "pull_number": 2339, "instance_id": "Textualize__rich-2339", "issue_numbers": ["2333"], "base_commit": "695256ce5316482f15818962ba8f692a460f923f", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 4549ab1b8..88e045948 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -9,6 +9,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ### Fixed\n \n+- Fix Rich clobbering cursor style on Windows https://github.com/Textualize/rich/pull/2339\n - Fix text wrapping edge case https://github.com/Textualize/rich/pull/2296\n - Allow exceptions that are raised while a Live is rendered to be displayed and/or processed https://github.com/Textualize/rich/pull/2305\n - Fix crashes that can happen with `inspect` when docstrings contain some special control codes https://github.com/Textualize/rich/pull/2294\ndiff --git a/rich/_win32_console.py b/rich/_win32_console.py\nindex f642279c5..e969d8164 100644\n--- a/rich/_win32_console.py\n+++ b/rich/_win32_console.py\n@@ -263,6 +263,30 @@ def SetConsoleCursorPosition(\n     return bool(_SetConsoleCursorPosition(std_handle, coords))\n \n \n+_GetConsoleCursorInfo = windll.kernel32.GetConsoleCursorInfo\n+_GetConsoleCursorInfo.argtypes = [\n+    wintypes.HANDLE,\n+    ctypes.POINTER(CONSOLE_CURSOR_INFO),\n+]\n+_GetConsoleCursorInfo.restype = wintypes.BOOL\n+\n+\n+def GetConsoleCursorInfo(\n+    std_handle: wintypes.HANDLE, cursor_info: CONSOLE_CURSOR_INFO\n+) -> bool:\n+    \"\"\"Get the cursor info - used to get cursor visibility and width\n+\n+    Args:\n+        std_handle (wintypes.HANDLE): A handle to the console input buffer or the console screen buffer.\n+        cursor_info (CONSOLE_CURSOR_INFO): CONSOLE_CURSOR_INFO ctype struct that receives information\n+            about the console's cursor.\n+\n+    Returns:\n+          bool: True if the function succeeds, otherwise False.\n+    \"\"\"\n+    return bool(_GetConsoleCursorInfo(std_handle, byref(cursor_info)))\n+\n+\n _SetConsoleCursorInfo = windll.kernel32.SetConsoleCursorInfo\n _SetConsoleCursorInfo.argtypes = [\n     wintypes.HANDLE,\n@@ -523,12 +547,14 @@ def move_cursor_backward(self) -> None:\n \n     def hide_cursor(self) -> None:\n         \"\"\"Hide the cursor\"\"\"\n-        invisible_cursor = CONSOLE_CURSOR_INFO(dwSize=100, bVisible=0)\n+        current_cursor_size = self._get_cursor_size()\n+        invisible_cursor = CONSOLE_CURSOR_INFO(dwSize=current_cursor_size, bVisible=0)\n         SetConsoleCursorInfo(self._handle, cursor_info=invisible_cursor)\n \n     def show_cursor(self) -> None:\n         \"\"\"Show the cursor\"\"\"\n-        visible_cursor = CONSOLE_CURSOR_INFO(dwSize=100, bVisible=1)\n+        current_cursor_size = self._get_cursor_size()\n+        visible_cursor = CONSOLE_CURSOR_INFO(dwSize=current_cursor_size, bVisible=1)\n         SetConsoleCursorInfo(self._handle, cursor_info=visible_cursor)\n \n     def set_title(self, title: str) -> None:\n@@ -540,6 +566,12 @@ def set_title(self, title: str) -> None:\n         assert len(title) < 255, \"Console title must be less than 255 characters\"\n         SetConsoleTitle(title)\n \n+    def _get_cursor_size(self) -> int:\n+        \"\"\"Get the percentage of the character cell that is filled by the cursor\"\"\"\n+        cursor_info = CONSOLE_CURSOR_INFO()\n+        GetConsoleCursorInfo(self._handle, cursor_info=cursor_info)\n+        return int(cursor_info.dwSize)\n+\n \n if __name__ == \"__main__\":\n     handle = GetStdHandle()\n", "test_patch": "diff --git a/tests/test_win32_console.py b/tests/test_win32_console.py\nindex 33d4fe48b..a550cb32c 100644\n--- a/tests/test_win32_console.py\n+++ b/tests/test_win32_console.py\n@@ -17,6 +17,7 @@\n     SCREEN_WIDTH = 20\n     SCREEN_HEIGHT = 30\n     DEFAULT_STYLE_ATTRIBUTE = 16\n+    CURSOR_SIZE = 25\n \n     @dataclasses.dataclass\n     class StubScreenBufferInfo:\n@@ -37,26 +38,35 @@ def win32_handle():\n         with mock.patch.object(_win32_console, \"GetStdHandle\", return_value=handle):\n             yield handle\n \n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_cursor_position(_):\n+    @pytest.fixture\n+    def win32_console_getters():\n+        def stub_console_cursor_info(std_handle, cursor_info):\n+            cursor_info.dwSize = CURSOR_SIZE\n+            cursor_info.bVisible = True\n+\n+        with mock.patch.object(\n+            _win32_console,\n+            \"GetConsoleScreenBufferInfo\",\n+            return_value=StubScreenBufferInfo,\n+        ) as GetConsoleScreenBufferInfo, mock.patch.object(\n+            _win32_console, \"GetConsoleCursorInfo\", side_effect=stub_console_cursor_info\n+        ) as GetConsoleCursorInfo:\n+            yield {\n+                \"GetConsoleScreenBufferInfo\": GetConsoleScreenBufferInfo,\n+                \"GetConsoleCursorInfo\": GetConsoleCursorInfo,\n+            }\n+\n+    def test_cursor_position(win32_console_getters):\n         term = LegacyWindowsTerm(sys.stdout)\n         assert term.cursor_position == WindowsCoordinates(row=CURSOR_Y, col=CURSOR_X)\n \n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_screen_size(_):\n+    def test_screen_size(win32_console_getters):\n         term = LegacyWindowsTerm(sys.stdout)\n         assert term.screen_size == WindowsCoordinates(\n             row=SCREEN_HEIGHT, col=SCREEN_WIDTH\n         )\n \n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_write_text(_, win32_handle, capsys):\n+    def test_write_text(win32_console_getters, win32_handle, capsys):\n         text = \"Hello, world!\"\n         term = LegacyWindowsTerm(sys.stdout)\n \n@@ -66,10 +76,12 @@ def test_write_text(_, win32_handle, capsys):\n         assert captured.out == text\n \n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_write_styled(_, SetConsoleTextAttribute, win32_handle, capsys):\n+    def test_write_styled(\n+        SetConsoleTextAttribute,\n+        win32_console_getters,\n+        win32_handle,\n+        capsys,\n+    ):\n         style = Style.parse(\"black on red\")\n         text = \"Hello, world!\"\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -91,10 +103,9 @@ def test_write_styled(_, SetConsoleTextAttribute, win32_handle, capsys):\n         assert second_kwargs[\"attributes\"] == DEFAULT_STYLE_ATTRIBUTE\n \n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_write_styled_bold(_, SetConsoleTextAttribute, win32_handle):\n+    def test_write_styled_bold(\n+        SetConsoleTextAttribute, win32_console_getters, win32_handle\n+    ):\n         style = Style.parse(\"bold black on red\")\n         text = \"Hello, world!\"\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -109,10 +120,9 @@ def test_write_styled_bold(_, SetConsoleTextAttribute, win32_handle):\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_write_styled_reverse(_, SetConsoleTextAttribute, win32_handle):\n+    def test_write_styled_reverse(\n+        SetConsoleTextAttribute, win32_console_getters, win32_handle\n+    ):\n         style = Style.parse(\"reverse red on blue\")\n         text = \"Hello, world!\"\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -127,10 +137,9 @@ def test_write_styled_reverse(_, SetConsoleTextAttribute, win32_handle):\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_write_styled_reverse(_, SetConsoleTextAttribute, win32_handle):\n+    def test_write_styled_reverse(\n+        SetConsoleTextAttribute, win32_console_getters, win32_handle\n+    ):\n         style = Style.parse(\"dim bright_red on blue\")\n         text = \"Hello, world!\"\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -145,10 +154,9 @@ def test_write_styled_reverse(_, SetConsoleTextAttribute, win32_handle):\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_write_styled_no_foreground_color(_, SetConsoleTextAttribute, win32_handle):\n+    def test_write_styled_no_foreground_color(\n+        SetConsoleTextAttribute, win32_console_getters, win32_handle\n+    ):\n         style = Style.parse(\"on blue\")\n         text = \"Hello, world!\"\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -163,10 +171,9 @@ def test_write_styled_no_foreground_color(_, SetConsoleTextAttribute, win32_hand\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_write_styled_no_background_color(_, SetConsoleTextAttribute, win32_handle):\n+    def test_write_styled_no_background_color(\n+        SetConsoleTextAttribute, win32_console_getters, win32_handle\n+    ):\n         style = Style.parse(\"blue\")\n         text = \"Hello, world!\"\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -184,11 +191,11 @@ def test_write_styled_no_background_color(_, SetConsoleTextAttribute, win32_hand\n \n     @patch.object(_win32_console, \"FillConsoleOutputCharacter\", return_value=None)\n     @patch.object(_win32_console, \"FillConsoleOutputAttribute\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n     def test_erase_line(\n-        _, FillConsoleOutputAttribute, FillConsoleOutputCharacter, win32_handle\n+        FillConsoleOutputAttribute,\n+        FillConsoleOutputCharacter,\n+        win32_console_getters,\n+        win32_handle,\n     ):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.erase_line()\n@@ -202,11 +209,11 @@ def test_erase_line(\n \n     @patch.object(_win32_console, \"FillConsoleOutputCharacter\", return_value=None)\n     @patch.object(_win32_console, \"FillConsoleOutputAttribute\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n     def test_erase_end_of_line(\n-        _, FillConsoleOutputAttribute, FillConsoleOutputCharacter, win32_handle\n+        FillConsoleOutputAttribute,\n+        FillConsoleOutputCharacter,\n+        win32_console_getters,\n+        win32_handle,\n     ):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.erase_end_of_line()\n@@ -223,11 +230,11 @@ def test_erase_end_of_line(\n \n     @patch.object(_win32_console, \"FillConsoleOutputCharacter\", return_value=None)\n     @patch.object(_win32_console, \"FillConsoleOutputAttribute\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n     def test_erase_start_of_line(\n-        _, FillConsoleOutputAttribute, FillConsoleOutputCharacter, win32_handle\n+        FillConsoleOutputAttribute,\n+        FillConsoleOutputCharacter,\n+        win32_console_getters,\n+        win32_handle,\n     ):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.erase_start_of_line()\n@@ -242,10 +249,9 @@ def test_erase_start_of_line(\n         )\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_move_cursor_to(_, SetConsoleCursorPosition, win32_handle):\n+    def test_move_cursor_to(\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n+    ):\n         coords = WindowsCoordinates(row=4, col=5)\n         term = LegacyWindowsTerm(sys.stdout)\n \n@@ -254,11 +260,8 @@ def test_move_cursor_to(_, SetConsoleCursorPosition, win32_handle):\n         SetConsoleCursorPosition.assert_called_once_with(win32_handle, coords=coords)\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n     def test_move_cursor_to_out_of_bounds_row(\n-        _, SetConsoleCursorPosition, win32_handle\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n     ):\n         coords = WindowsCoordinates(row=-1, col=4)\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -268,11 +271,8 @@ def test_move_cursor_to_out_of_bounds_row(\n         assert not SetConsoleCursorPosition.called\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n     def test_move_cursor_to_out_of_bounds_col(\n-        _, SetConsoleCursorPosition, win32_handle\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n     ):\n         coords = WindowsCoordinates(row=10, col=-4)\n         term = LegacyWindowsTerm(sys.stdout)\n@@ -282,10 +282,9 @@ def test_move_cursor_to_out_of_bounds_col(\n         assert not SetConsoleCursorPosition.called\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_move_cursor_up(_, SetConsoleCursorPosition, win32_handle):\n+    def test_move_cursor_up(\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n+    ):\n         term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_up()\n@@ -295,10 +294,9 @@ def test_move_cursor_up(_, SetConsoleCursorPosition, win32_handle):\n         )\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_move_cursor_down(_, SetConsoleCursorPosition, win32_handle):\n+    def test_move_cursor_down(\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n+    ):\n         term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_down()\n@@ -308,10 +306,9 @@ def test_move_cursor_down(_, SetConsoleCursorPosition, win32_handle):\n         )\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_move_cursor_forward(_, SetConsoleCursorPosition, win32_handle):\n+    def test_move_cursor_forward(\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n+    ):\n         term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_forward()\n@@ -321,27 +318,26 @@ def test_move_cursor_forward(_, SetConsoleCursorPosition, win32_handle):\n         )\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    def test_move_cursor_forward_newline_wrap(SetConsoleCursorPosition, win32_handle):\n+    def test_move_cursor_forward_newline_wrap(\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n+    ):\n         cursor_at_end_of_line = StubScreenBufferInfo(\n             dwCursorPosition=COORD(SCREEN_WIDTH - 1, CURSOR_Y)\n         )\n-        with patch.object(\n-            _win32_console,\n-            \"GetConsoleScreenBufferInfo\",\n-            return_value=cursor_at_end_of_line,\n-        ):\n-            term = LegacyWindowsTerm(sys.stdout)\n-            term.move_cursor_forward()\n+        win32_console_getters[\n+            \"GetConsoleScreenBufferInfo\"\n+        ].return_value = cursor_at_end_of_line\n+        term = LegacyWindowsTerm(sys.stdout)\n+        term.move_cursor_forward()\n \n         SetConsoleCursorPosition.assert_called_once_with(\n             win32_handle, coords=WindowsCoordinates(row=CURSOR_Y + 1, col=0)\n         )\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_move_cursor_to_column(_, SetConsoleCursorPosition, win32_handle):\n+    def test_move_cursor_to_column(\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n+    ):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.move_cursor_to_column(5)\n         SetConsoleCursorPosition.assert_called_once_with(\n@@ -349,10 +345,9 @@ def test_move_cursor_to_column(_, SetConsoleCursorPosition, win32_handle):\n         )\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_move_cursor_backward(_, SetConsoleCursorPosition, win32_handle):\n+    def test_move_cursor_backward(\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n+    ):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.move_cursor_backward()\n         SetConsoleCursorPosition.assert_called_once_with(\n@@ -361,28 +356,23 @@ def test_move_cursor_backward(_, SetConsoleCursorPosition, win32_handle):\n \n     @patch.object(_win32_console, \"SetConsoleCursorPosition\", return_value=None)\n     def test_move_cursor_backward_prev_line_wrap(\n-        SetConsoleCursorPosition, win32_handle\n+        SetConsoleCursorPosition, win32_console_getters, win32_handle\n     ):\n         cursor_at_start_of_line = StubScreenBufferInfo(\n             dwCursorPosition=COORD(0, CURSOR_Y)\n         )\n-        with patch.object(\n-            _win32_console,\n-            \"GetConsoleScreenBufferInfo\",\n-            return_value=cursor_at_start_of_line,\n-        ):\n-            term = LegacyWindowsTerm(sys.stdout)\n-            term.move_cursor_backward()\n+        win32_console_getters[\n+            \"GetConsoleScreenBufferInfo\"\n+        ].return_value = cursor_at_start_of_line\n+        term = LegacyWindowsTerm(sys.stdout)\n+        term.move_cursor_backward()\n         SetConsoleCursorPosition.assert_called_once_with(\n             win32_handle,\n             coords=WindowsCoordinates(row=CURSOR_Y - 1, col=SCREEN_WIDTH - 1),\n         )\n \n     @patch.object(_win32_console, \"SetConsoleCursorInfo\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_hide_cursor(_, SetConsoleCursorInfo, win32_handle):\n+    def test_hide_cursor(SetConsoleCursorInfo, win32_console_getters, win32_handle):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.hide_cursor()\n \n@@ -392,13 +382,10 @@ def test_hide_cursor(_, SetConsoleCursorInfo, win32_handle):\n \n         args, kwargs = call_args[0]\n         assert kwargs[\"cursor_info\"].bVisible == 0\n-        assert kwargs[\"cursor_info\"].dwSize == 100\n+        assert kwargs[\"cursor_info\"].dwSize == CURSOR_SIZE\n \n     @patch.object(_win32_console, \"SetConsoleCursorInfo\", return_value=None)\n-    @patch.object(\n-        _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n-    )\n-    def test_show_cursor(_, SetConsoleCursorInfo, win32_handle):\n+    def test_show_cursor(SetConsoleCursorInfo, win32_console_getters, win32_handle):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.show_cursor()\n \n@@ -408,17 +395,17 @@ def test_show_cursor(_, SetConsoleCursorInfo, win32_handle):\n \n         args, kwargs = call_args[0]\n         assert kwargs[\"cursor_info\"].bVisible == 1\n-        assert kwargs[\"cursor_info\"].dwSize == 100\n+        assert kwargs[\"cursor_info\"].dwSize == CURSOR_SIZE\n \n     @patch.object(_win32_console, \"SetConsoleTitle\", return_value=None)\n-    def test_set_title(SetConsoleTitle):\n+    def test_set_title(SetConsoleTitle, win32_console_getters):\n         term = LegacyWindowsTerm(sys.stdout)\n         term.set_title(\"title\")\n \n         SetConsoleTitle.assert_called_once_with(\"title\")\n \n     @patch.object(_win32_console, \"SetConsoleTitle\", return_value=None)\n-    def test_set_title_too_long(_):\n+    def test_set_title_too_long(_, win32_console_getters):\n         term = LegacyWindowsTerm(sys.stdout)\n \n         with pytest.raises(AssertionError):\n", "problem_statement": "[BUG] Console.show_cursor() (and displaying Rich progress bars) clobbers cursor style on Windows\n**Describe the bug**\r\n\r\nFor some context, I originally discovered this with the Rich progress bars in Twine, that whenever one would display, the cursor style would be clobbered to a block cursor, and reported as pypa/twine#902 . However, I subsequently reproduced it in `pip` as and was directed to report it to Rich, and indeed, I can reproduce it with a minimal Rich snippit.\r\n\r\nOn Windows (tested both 8.1 and 10 on multiple machines) running `rich.console.Console.show_cursor()` clobbers the current cursor style (underbar in the stock Windows terminals, bar in ConEmu) and forces the cursor to display as a block, even if the cursor is already visible, with no way I've found to get it back other than completely closing and restarting the terminal. This also happens whenever I run pip and Twine and Rich progress bars are displayed, unless I specifically disable them through their respective CLIs, which I have to always remember to do, or I have to restart my terminal tab to get my normal cursor back, potentially losing tens of thousands of lines of scrollback and command history.\r\n\r\nI've reproduced the same behavior in all environments on my machine I was able to test, as well as the other clean-installed Windows machines I tested (with no obvious common configuration):\r\n\r\n* cmd.exe shell running in the default Command Prompt terminal\r\n* Powershell running in the default Powershell terminal\r\n* cmd.exe running in ConEmu\r\n* Git Bash running in ConEmu\r\n\r\n(In Git Bash running in its bundled MinTTY, I could not confirm if the behavior can be reproduced since Rich treats it as a not a terminal and the function terminates without doing anything, given `is_terminal` is `False` there and `show_cursor(False)` does nothing.)\r\n\r\nFurthermore, I've reproduced the above running the latest version of Rich, 12.4.4, in fresh clean environments with only Rich, pip, Twine and their deps installed, both from PyPI with pip, and from conda-forge with conda.\r\n\r\nI've tried numerous methods to restore it once this happens, including modifying my terminal emulator settings, various ANSI escape sequences, the `reset` command in my shell, starting a new `bash` session within an existing one and sshing into another machine, including a Linux box, but nothing works save closing and restarting the terminal.\r\n\r\n_However,_ if I `ssh` into a Linux host (prior to triggering the bug) from either ConEmu + Git Bash or MinTTY + Git Bash and run `show_cursor()` there, the cursor both hides and shows correctly, retaining whatever shape I configured in my terminal emulator (and I tested with lines, blocks and underbars). (To note, this works even from MinTTY running Git Bash, despite it not being considered a terminal when running bash on Windows.) The cursor hiding/showing persists (correctly, I assume) even when I exist the remote session, but if I do trigger the bug on Windows, so does the block cursor within and without the ssh session (and `show_cursor()` does not restore the previous one, since the block cursor is set as the current cursor). Therefore, it would seem there is something specific to Windows that is triggering this issue, given I'm running the same shell and same terminal emulator and everything works fine.\r\n\r\nMinimal reproducer:\r\n\r\n```shell\r\npython -c \"import rich.console; rich.console.Console().show_cursor()\"\r\n# Cursor now a block\r\n```\r\n\r\n**Platform**\r\n\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\n### Reproduced issue\r\n\r\nAll running Python 3.9.13 x64\r\n\r\n* {1*) Windows 8.1 Pro x64 + ConEmu 210912 stable + Git Bash 4.4.23(1)-release (x86_64-pc-msys)\r\n* Windows 8.1 Pro x64 + ConEmu 210912 stable + cmd.exe\r\n* Windows 8.1 Pro x64 + Command Prompt + cmd.exe\r\n* Windows 8.1 Pro x64 + Windows Powershell + powershell\r\n* Windows 10 Enterprise x64 + Command Prompt + cmd.exe\r\n\r\n<details>\r\n\r\n<summary>Windows + ConEmu + Git Bash platform details</summary>\r\n\r\n`python -m rich` and `python -m rich.diagnose` display colors and other characters correctly, as far as I can tell.\r\n\r\n```console\r\n$ python -m pip list | grep rich\r\nrich               12.4.4\r\n\r\n$ python -m rich.diagnose\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 <console width=117 ColorSystem.WINDOWS>                                      \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'windows'                                                     \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 57                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = True                                                          \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=117, height=57),             \u2502\r\n\u2502                        legacy_windows=True,                                      \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=117,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=57,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=117, height=57)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 117                                                           \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u2510\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'cygwin',              \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\nplatform=\"Windows\"\r\n```\r\n\r\n</details>\r\n\r\n### Could not confirm either way (not considered a terminal)\r\n\r\n* (2*) Windows 8.1 Pro x64 + MinTTY 3.1.0 (x86_64-pc-msys) + Git Bash 4.4.23(1)-release (x86_64-pc-msys) + Python 3.9.13\r\n\r\n<details>\r\n\r\n<summary>Windows + MinTTY + Git Bash platform details</summary>\r\n\r\n`python -m rich` and `python -m rich.diagnose` do not display any colors, many of the characters are mojibake/missing, and only work at all without an error when running in UTF-8 mode\r\n\r\n```console\r\n$ python -m pip list | grep rich\r\nrich               12.4.4\r\n\r\n$ python -m rich.diagnose\r\n+---------------------- <class 'rich.console.Console'> -----------------------+\r\n| A high level console interface.                                             |\r\n|                                                                             |\r\n| +-------------------------------------------------------------------------+ |\r\n| | <console width=79 None>                                                 | |\r\n| +-------------------------------------------------------------------------+ |\r\n|                                                                             |\r\n|     color_system = None                                                     |\r\n|         encoding = 'cp1252'                                                 |\r\n|             file = <_io.TextIOWrapper name='<stdout>' mode='w'              |\r\n|                    encoding='cp1252'>                                       |\r\n|           height = 25                                                       |\r\n|    is_alt_screen = False                                                    |\r\n| is_dumb_terminal = False                                                    |\r\n|   is_interactive = False                                                    |\r\n|       is_jupyter = False                                                    |\r\n|      is_terminal = False                                                    |\r\n|   legacy_windows = True                                                     |\r\n|         no_color = False                                                    |\r\n|          options = ConsoleOptions(                                          |\r\n|                        size=ConsoleDimensions(width=79, height=25),         |\r\n|                        legacy_windows=True,                                 |\r\n|                        min_width=1,                                         |\r\n|                        max_width=79,                                        |\r\n|                        is_terminal=False,                                   |\r\n|                        encoding='cp1252',                                   |\r\n|                        max_height=25,                                       |\r\n|                        justify=None,                                        |\r\n|                        overflow=None,                                       |\r\n|                        no_wrap=False,                                       |\r\n|                        highlight=None,                                      |\r\n|                        markup=None,                                         |\r\n|                        height=None                                          |\r\n|                    )                                                        |\r\n|            quiet = False                                                    |\r\n|           record = False                                                    |\r\n|         safe_box = True                                                     |\r\n|             size = ConsoleDimensions(width=79, height=25)                   |\r\n|        soft_wrap = False                                                    |\r\n|           stderr = False                                                    |\r\n|            style = None                                                     |\r\n|         tab_size = 8                                                        |\r\n|            width = 79                                                       |\r\n+-----------------------------------------------------------------------------+\r\n+--- <class 'rich._windows.WindowsConsoleFeatures'> ----+\r\n| Windows features available.                           |\r\n|                                                       |\r\n| +---------------------------------------------------+ |\r\n| | WindowsConsoleFeatures(vt=False, truecolor=False) | |\r\n| +---------------------------------------------------+ |\r\n|                                                       |\r\n| truecolor = False                                     |\r\n|        vt = False                                     |\r\n+-------------------------------------------------------+\r\n+------ Environment Variables -------+\r\n| {                                  |\r\n|     'TERM': 'xterm',               |\r\n|     'COLORTERM': None,             |\r\n|     'CLICOLOR': None,              |\r\n|     'NO_COLOR': None,              |\r\n|     'TERM_PROGRAM': None,          |\r\n|     'COLUMNS': None,               |\r\n|     'LINES': None,                 |\r\n|     'JPY_PARENT_PID': None,        |\r\n|     'VSCODE_VERBOSE_LOGGING': None |\r\n| }                                  |\r\n+------------------------------------+\r\nplatform=\"Windows\"\r\n\r\n$ python -X utf8 -m rich.diagnose\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 A high level console interface.                                             \u2502\r\n\u2502                                                                             \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 <console width=79 None>                                                 \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502                                                                             \u2502\r\n\u2502     color_system = None                                                     \u2502\r\n\u2502         encoding = 'utf-8'                                                  \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'              \u2502\r\n\u2502                    encoding='utf-8'>                                        \u2502\r\n\u2502           height = 25                                                       \u2502\r\n\u2502    is_alt_screen = False                                                    \u2502\r\n\u2502 is_dumb_terminal = False                                                    \u2502\r\n\u2502   is_interactive = False                                                    \u2502\r\n\u2502       is_jupyter = False                                                    \u2502\r\n\u2502      is_terminal = False                                                    \u2502\r\n\u2502   legacy_windows = True                                                     \u2502\r\n\u2502         no_color = False                                                    \u2502\r\n\u2502          options = ConsoleOptions(                                          \u2502\r\n\u2502                        size=ConsoleDimensions(width=79, height=25),         \u2502\r\n\u2502                        legacy_windows=True,                                 \u2502\r\n\u2502                        min_width=1,                                         \u2502\r\n\u2502                        max_width=79,                                        \u2502\r\n\u2502                        is_terminal=False,                                   \u2502\r\n\u2502                        encoding='utf-8',                                    \u2502\r\n\u2502                        max_height=25,                                       \u2502\r\n\u2502                        justify=None,                                        \u2502\r\n\u2502                        overflow=None,                                       \u2502\r\n\u2502                        no_wrap=False,                                       \u2502\r\n\u2502                        highlight=None,                                      \u2502\r\n\u2502                        markup=None,                                         \u2502\r\n\u2502                        height=None                                          \u2502\r\n\u2502                    )                                                        \u2502\r\n\u2502            quiet = False                                                    \u2502\r\n\u2502           record = False                                                    \u2502\r\n\u2502         safe_box = True                                                     \u2502\r\n\u2502             size = ConsoleDimensions(width=79, height=25)                   \u2502\r\n\u2502        soft_wrap = False                                                    \u2502\r\n\u2502           stderr = False                                                    \u2502\r\n\u2502            style = None                                                     \u2502\r\n\u2502         tab_size = 8                                                        \u2502\r\n\u2502            width = 79                                                       \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u2510\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm',               \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\nplatform=\"Windows\"\r\n```\r\n\r\n</details>\r\n\r\n### Confirmed working correctly:\r\n\r\n*  Ubuntu 20.04.4 LTS via SSH + ConEmu 210912 stable + GNU bash 5.0.17(1)-release (x86_64-pc-linux-gnu) + Python 3.8.10 + ssh from (1*) and (2*)\r\n\r\n<details>\r\n\r\n<summary>Ubuntu via (1*) platform details</summary>\r\n\r\n`python -m rich` and `python -m rich.diagnose` display colors and other characters correctly, as far as I can tell.\r\n\r\n```console\r\n$ python -m pip list | grep rich\r\nrich               12.4.4\r\n\r\n$ python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=118 ColorSystem.STANDARD>                                     \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'standard'                                                    \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 57                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=118, height=57),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=118,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=57,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=118, height=57)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 118                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'cygwin',              \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n```\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n\r\n<summary>Ubuntu via (2*) platform details</summary>\r\n\r\n`python -m rich` and `python -m rich.diagnose` display colors and other characters correctly, as far as I can tell.\r\n\r\n```console\r\n$ python -m pip list | grep rich\r\nrich               12.4.4\r\n\r\n$ python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                              \u2502\r\n\u2502                                                                              \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=80 ColorSystem.STANDARD>                                  \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                              \u2502\r\n\u2502     color_system = 'standard'                                                \u2502\r\n\u2502         encoding = 'utf-8'                                                   \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'               \u2502\r\n\u2502                    encoding='utf-8'>                                         \u2502\r\n\u2502           height = 24                                                        \u2502\r\n\u2502    is_alt_screen = False                                                     \u2502\r\n\u2502 is_dumb_terminal = False                                                     \u2502\r\n\u2502   is_interactive = True                                                      \u2502\r\n\u2502       is_jupyter = False                                                     \u2502\r\n\u2502      is_terminal = True                                                      \u2502\r\n\u2502   legacy_windows = False                                                     \u2502\r\n\u2502         no_color = False                                                     \u2502\r\n\u2502          options = ConsoleOptions(                                           \u2502\r\n\u2502                        size=ConsoleDimensions(width=80, height=24),          \u2502\r\n\u2502                        legacy_windows=False,                                 \u2502\r\n\u2502                        min_width=1,                                          \u2502\r\n\u2502                        max_width=80,                                         \u2502\r\n\u2502                        is_terminal=True,                                     \u2502\r\n\u2502                        encoding='utf-8',                                     \u2502\r\n\u2502                        max_height=24,                                        \u2502\r\n\u2502                        justify=None,                                         \u2502\r\n\u2502                        overflow=None,                                        \u2502\r\n\u2502                        no_wrap=False,                                        \u2502\r\n\u2502                        highlight=None,                                       \u2502\r\n\u2502                        markup=None,                                          \u2502\r\n\u2502                        height=None                                           \u2502\r\n\u2502                    )                                                         \u2502\r\n\u2502            quiet = False                                                     \u2502\r\n\u2502           record = False                                                     \u2502\r\n\u2502         safe_box = True                                                      \u2502\r\n\u2502             size = ConsoleDimensions(width=80, height=24)                    \u2502\r\n\u2502        soft_wrap = False                                                     \u2502\r\n\u2502           stderr = False                                                     \u2502\r\n\u2502            style = None                                                      \u2502\r\n\u2502         tab_size = 8                                                         \u2502\r\n\u2502            width = 80                                                        \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm',               \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "I see the issue.  We're calling `SetConsoleCursorInfo` to hide the cursor. But this function also sets the cursor size. \r\n\r\n```python\r\n         visible_cursor = CONSOLE_CURSOR_INFO(dwSize=100, bVisible=1)\r\n        SetConsoleCursorInfo(self._handle, cursor_info=visible_cursor)\r\n```\r\n\r\nI assume what we need to do is to get the cursor info first, so that we don't clobber the `dwSize` field.", "created_at": "2022-06-14T15:42:39Z"}
{"repo": "Textualize/rich", "pull_number": 2330, "instance_id": "Textualize__rich-2330", "issue_numbers": ["2312"], "base_commit": "e8a9466b94612babc8a437a613614debc1adbea1", "patch": "diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex e241d3553..7ba94a10a 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -14,7 +14,6 @@ repos:\n       - id: check-yaml\n       - id: end-of-file-fixer\n       - id: mixed-line-ending\n-      - id: trailing-whitespace\n       - id: check-vcs-permalinks\n       - id: check-shebang-scripts-are-executable\n   - repo: https://github.com/pre-commit/pygrep-hooks\n@@ -31,7 +30,7 @@ repos:\n       - id: pycln\n         args: [--all]\n   - repo: https://github.com/psf/black\n-    rev: 22.1.0\n+    rev: 22.3.0\n     hooks:\n       - id: black\n         exclude: ^benchmarks/\ndiff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 2f57a84df..70652e146 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -12,6 +12,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fix text wrapping edge case https://github.com/Textualize/rich/pull/2296\n - Allow exceptions that are raised while a Live is rendered to be displayed and/or processed https://github.com/Textualize/rich/pull/2305\n - Fix crashes that can happen with `inspect` when docstrings contain some special control codes https://github.com/Textualize/rich/pull/2294\n+- Fix edges used in first row of tables when `show_header=False` https://github.com/Textualize/rich/pull/2330\n \n ## [12.4.4] - 2022-05-24\n \ndiff --git a/poetry.lock b/poetry.lock\nindex 30edc19b1..e3b7d8d7d 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -878,7 +878,7 @@ python-versions = \">=3.6\"\n \n [[package]]\n name = \"pyzmq\"\n-version = \"22.3.0\"\n+version = \"23.1.0\"\n description = \"Python bindings for 0MQ\"\n category = \"main\"\n optional = true\n@@ -978,7 +978,7 @@ test = [\"pytest\", \"mock\"]\n \n [[package]]\n name = \"typed-ast\"\n-version = \"1.5.3\"\n+version = \"1.5.4\"\n description = \"a fork of Python 2 and 3 ast modules with type comment support\"\n category = \"dev\"\n optional = false\n@@ -1349,28 +1349,12 @@ jupyterlab-widgets = [\n     {file = \"jupyterlab_widgets-1.1.0.tar.gz\", hash = \"sha256:d5f41bc1713795385f718d44dcba47e1e1473c6289f28a95aa6b2c0782ee372a\"},\n ]\n markupsafe = [\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d8446c54dc28c01e5a2dbac5a25f071f6653e6e40f3a8818e8b45d790fe6ef53\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:36bc903cbb393720fad60fc28c10de6acf10dc6cc883f3e24ee4012371399a38\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2d7d807855b419fc2ed3e631034685db6079889a1f01d5d9dac950f764da3dad\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:add36cb2dbb8b736611303cd3bfcee00afd96471b09cda130da3581cbdc56a6d\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:168cd0a3642de83558a5153c8bd34f175a9a6e7f6dc6384b9655d2697312a646\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:4dc8f9fb58f7364b63fd9f85013b780ef83c11857ae79f2feda41e270468dd9b\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:20dca64a3ef2d6e4d5d615a3fd418ad3bde77a47ec8a23d984a12b5b4c74491a\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:cdfba22ea2f0029c9261a4bd07e830a8da012291fbe44dc794e488b6c9bb353a\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-win32.whl\", hash = \"sha256:99df47edb6bda1249d3e80fdabb1dab8c08ef3975f69aed437cb69d0a5de1e28\"},\n-    {file = \"MarkupSafe-2.0.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:e0f138900af21926a02425cf736db95be9f4af72ba1bb21453432a07f6082134\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:f9081981fe268bd86831e5c75f7de206ef275defcb82bc70740ae6dc507aee51\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:0955295dd5eec6cb6cc2fe1698f4c6d84af2e92de33fbcac4111913cd100a6ff\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:0446679737af14f45767963a1a9ef7620189912317d095f2d9ffa183a4d25d2b\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:f826e31d18b516f653fe296d967d700fddad5901ae07c622bb3705955e1faa94\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:fa130dd50c57d53368c9d59395cb5526eda596d3ffe36666cd81a44d56e48872\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:905fec760bd2fa1388bb5b489ee8ee5f7291d692638ea5f67982d968366bef9f\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf5d821ffabf0ef3533c39c518f3357b171a1651c1ff6827325e4489b0e46c3c\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:0d4b31cc67ab36e3392bbf3862cfbadac3db12bdd8b02a2731f509ed5b829724\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:baa1a4e8f868845af802979fcdbf0bb11f94f1cb7ced4c4b8a351bb60d108145\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:deb993cacb280823246a026e3b2d81c493c53de6acfd5e6bfe31ab3402bb37dd\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:63f3268ba69ace99cab4e3e3b5840b03340efed0948ab8f78d2fd87ee5442a4f\"},\n-    {file = \"MarkupSafe-2.0.1-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:8d206346619592c6200148b01a2142798c989edcb9c896f9ac9722a99d4e77e6\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-win32.whl\", hash = \"sha256:6c4ca60fa24e85fe25b912b01e62cb969d69a23a5d5867682dd3e80b5b02581d\"},\n     {file = \"MarkupSafe-2.0.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:b2f4bf27480f5e5e8ce285a8c8fd176c0b03e93dcc6646477d4630e83440c6a9\"},\n     {file = \"MarkupSafe-2.0.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:0717a7390a68be14b8c793ba258e075c6f4ca819f15edfc2a3a027c823718567\"},\n@@ -1379,27 +1363,14 @@ markupsafe = [\n     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:d7f9850398e85aba693bb640262d3611788b1f29a79f0c93c565694658f4071f\"},\n     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:6a7fae0dd14cf60ad5ff42baa2e95727c3d81ded453457771d02b7d2b3f9c0c2\"},\n     {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:b7f2d075102dc8c794cbde1947378051c4e5180d52d276987b8d28a3bd58c17d\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e9936f0b261d4df76ad22f8fee3ae83b60d7c3e871292cd42f40b81b70afae85\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:2a7d351cbd8cfeb19ca00de495e224dea7e7d919659c2841bbb7f420ad03e2d6\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:60bf42e36abfaf9aff1f50f52644b336d4f0a3fd6d8a60ca0d054ac9f713a864\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:d6c7ebd4e944c85e2c3421e612a7057a2f48d478d79e61800d81468a8d842207\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:f0567c4dc99f264f49fe27da5f735f414c4e7e7dd850cfd8e69f0862d7c74ea9\"},\n-    {file = \"MarkupSafe-2.0.1-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:89c687013cb1cd489a0f0ac24febe8c7a666e6e221b783e53ac50ebf68e45d86\"},\n     {file = \"MarkupSafe-2.0.1-cp37-cp37m-win32.whl\", hash = \"sha256:a30e67a65b53ea0a5e62fe23682cfe22712e01f453b95233b25502f7c61cb415\"},\n     {file = \"MarkupSafe-2.0.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:611d1ad9a4288cf3e3c16014564df047fe08410e628f89805e475368bd304914\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:5bb28c636d87e840583ee3adeb78172efc47c8b26127267f54a9c0ec251d41a9\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:be98f628055368795d818ebf93da628541e10b75b41c559fdf36d104c5787066\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:1d609f577dc6e1aa17d746f8bd3c31aa4d258f4070d61b2aa5c4166c1539de35\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:7d91275b0245b1da4d4cfa07e0faedd5b0812efc15b702576d103293e252af1b\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:01a9b8ea66f1658938f65b93a85ebe8bc016e6769611be228d797c9d998dd298\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:47ab1e7b91c098ab893b828deafa1203de86d0bc6ab587b160f78fe6c4011f75\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:97383d78eb34da7e1fa37dd273c20ad4320929af65d156e35a5e2d89566d9dfb\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6fcf051089389abe060c9cd7caa212c707e58153afa2c649f00346ce6d260f1b\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:5855f8438a7d1d458206a2466bf82b0f104a3724bf96a1c781ab731e4201731a\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:3dd007d54ee88b46be476e293f48c85048603f5f516008bee124ddd891398ed6\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:aca6377c0cb8a8253e493c6b451565ac77e98c2951c45f913e0b52facdcff83f\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:04635854b943835a6ea959e948d19dcd311762c5c0c6e1f0e16ee57022669194\"},\n-    {file = \"MarkupSafe-2.0.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:6300b8454aa6930a24b9618fbb54b5a68135092bc666f7b06901f897fa5c2fee\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-win32.whl\", hash = \"sha256:023cb26ec21ece8dc3907c0e8320058b2e0cb3c55cf9564da612bc325bed5e64\"},\n     {file = \"MarkupSafe-2.0.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:984d76483eb32f1bcb536dc27e4ad56bba4baa70be32fa87152832cdd9db0833\"},\n     {file = \"MarkupSafe-2.0.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:2ef54abee730b502252bcdf31b10dacb0a416229b72c18b19e24a4509f273d26\"},\n@@ -1409,12 +1380,6 @@ markupsafe = [\n     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2010_i686.whl\", hash = \"sha256:4efca8f86c54b22348a5467704e3fec767b2db12fc39c6d963168ab1d3fc9135\"},\n     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:ab3ef638ace319fa26553db0624c4699e31a28bb2a835c5faca8f8acf6a5a902\"},\n     {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:f8ba0e8349a38d3001fae7eadded3f6606f0da5d748ee53cc1dab1d6527b9509\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c47adbc92fc1bb2b3274c4b3a43ae0e4573d9fbff4f54cd484555edbf030baf1\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:37205cac2a79194e3750b0af2a5720d95f786a55ce7df90c3af697bfa100eaac\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:1f2ade76b9903f39aa442b4aadd2177decb66525062db244b35d71d0ee8599b6\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:4296f2b1ce8c86a6aea78613c34bb1a672ea0e3de9c6ba08a960efe0b0a09047\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:9f02365d4e99430a12647f09b6cc8bab61a6564363f313126f775eb4f6ef798e\"},\n-    {file = \"MarkupSafe-2.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:5b6d930f030f8ed98e3e6c98ffa0652bdb82601e7a016ec2ab5d7ff23baa78d1\"},\n     {file = \"MarkupSafe-2.0.1-cp39-cp39-win32.whl\", hash = \"sha256:10f82115e21dc0dfec9ab5c0223652f7197feb168c940f3ef61563fc2d6beb74\"},\n     {file = \"MarkupSafe-2.0.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:693ce3f9e70a6cf7d2fb9e6c9d8b204b6b39897a2c4a1aa65728d5ac97dcc1d8\"},\n     {file = \"MarkupSafe-2.0.1.tar.gz\", hash = \"sha256:594c67807fb16238b30c44bdf74f36c02cdf22d1c8cda91ef8a0ed8dabf5620a\"},\n@@ -1634,53 +1599,63 @@ pyyaml = [\n     {file = \"PyYAML-6.0.tar.gz\", hash = \"sha256:68fb519c14306fec9720a2a5b45bc9f0c8d1b9c72adf45c37baedfcd949c35a2\"},\n ]\n pyzmq = [\n-    {file = \"pyzmq-22.3.0-cp310-cp310-macosx_10_15_universal2.whl\", hash = \"sha256:6b217b8f9dfb6628f74b94bdaf9f7408708cb02167d644edca33f38746ca12dd\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:2841997a0d85b998cbafecb4183caf51fd19c4357075dfd33eb7efea57e4c149\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:f89468059ebc519a7acde1ee50b779019535db8dcf9b8c162ef669257fef7a93\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:ea12133df25e3a6918718fbb9a510c6ee5d3fdd5a346320421aac3882f4feeea\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:76c532fd68b93998aab92356be280deec5de8f8fe59cd28763d2cc8a58747b7f\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:f907c7359ce8bf7f7e63c82f75ad0223384105f5126f313400b7e8004d9b33c3\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:902319cfe23366595d3fa769b5b751e6ee6750a0a64c5d9f757d624b2ac3519e\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-win32.whl\", hash = \"sha256:67db33bea0a29d03e6eeec55a8190e033318cee3cbc732ba8fd939617cbf762d\"},\n-    {file = \"pyzmq-22.3.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:7661fc1d5cb73481cf710a1418a4e1e301ed7d5d924f91c67ba84b2a1b89defd\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:79244b9e97948eaf38695f4b8e6fc63b14b78cc37f403c6642ba555517ac1268\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ab888624ed68930442a3f3b0b921ad7439c51ba122dbc8c386e6487a658e4a4e\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:18cd854b423fce44951c3a4d3e686bac8f1243d954f579e120a1714096637cc0\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:de8df0684398bd74ad160afdc2a118ca28384ac6f5e234eb0508858d8d2d9364\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:62bcade20813796c426409a3e7423862d50ff0639f5a2a95be4b85b09a618666\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:ea5a79e808baef98c48c884effce05c31a0698c1057de8fc1c688891043c1ce1\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-win32.whl\", hash = \"sha256:3c1895c95be92600233e476fe283f042e71cf8f0b938aabf21b7aafa62a8dac9\"},\n-    {file = \"pyzmq-22.3.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:851977788b9caa8ed011f5f643d3ee8653af02c5fc723fa350db5125abf2be7b\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:b4ebed0977f92320f6686c96e9e8dd29eed199eb8d066936bac991afc37cbb70\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:42abddebe2c6a35180ca549fadc7228d23c1e1f76167c5ebc8a936b5804ea2df\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:c1e41b32d6f7f9c26bc731a8b529ff592f31fc8b6ef2be9fa74abd05c8a342d7\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:be4e0f229cf3a71f9ecd633566bd6f80d9fa6afaaff5489492be63fe459ef98c\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:08c4e315a76ef26eb833511ebf3fa87d182152adf43dedee8d79f998a2162a0b\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:badb868fff14cfd0e200eaa845887b1011146a7d26d579aaa7f966c203736b92\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-win32.whl\", hash = \"sha256:7c58f598d9fcc52772b89a92d72bf8829c12d09746a6d2c724c5b30076c1f11d\"},\n-    {file = \"pyzmq-22.3.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:2b97502c16a5ec611cd52410bdfaab264997c627a46b0f98d3f666227fd1ea2d\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:d728b08448e5ac3e4d886b165385a262883c34b84a7fe1166277fe675e1c197a\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:480b9931bfb08bf8b094edd4836271d4d6b44150da051547d8c7113bf947a8b0\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:7dc09198e4073e6015d9a8ea093fc348d4e59de49382476940c3dd9ae156fba8\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ca6cd58f62a2751728016d40082008d3b3412a7f28ddfb4a2f0d3c130f69e74\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:468bd59a588e276961a918a3060948ae68f6ff5a7fa10bb2f9160c18fe341067\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:c88fa7410e9fc471e0858638f403739ee869924dd8e4ae26748496466e27ac59\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-win32.whl\", hash = \"sha256:c0f84360dcca3481e8674393bdf931f9f10470988f87311b19d23cda869bb6b7\"},\n-    {file = \"pyzmq-22.3.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:f762442bab706fd874064ca218b33a1d8e40d4938e96c24dafd9b12e28017f45\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-macosx_10_15_universal2.whl\", hash = \"sha256:954e73c9cd4d6ae319f1c936ad159072b6d356a92dcbbabfd6e6204b9a79d356\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:f43b4a2e6218371dd4f41e547bd919ceeb6ebf4abf31a7a0669cd11cd91ea973\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:acebba1a23fb9d72b42471c3771b6f2f18dcd46df77482612054bd45c07dfa36\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:cf98fd7a6c8aaa08dbc699ffae33fd71175696d78028281bc7b832b26f00ca57\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d072f7dfbdb184f0786d63bda26e8a0882041b1e393fbe98940395f7fab4c5e2\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:53f4fd13976789ffafedd4d46f954c7bb01146121812b72b4ddca286034df966\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:d1b5d457acbadcf8b27561deeaa386b0217f47626b29672fa7bd31deb6e91e1b\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-win32.whl\", hash = \"sha256:e6a02cf7271ee94674a44f4e62aa061d2d049001c844657740e156596298b70b\"},\n-    {file = \"pyzmq-22.3.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:d3dcb5548ead4f1123851a5ced467791f6986d68c656bc63bfff1bf9e36671e2\"},\n-    {file = \"pyzmq-22.3.0-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:3a4c9886d61d386b2b493377d980f502186cd71d501fffdba52bd2a0880cef4f\"},\n-    {file = \"pyzmq-22.3.0-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:80e043a89c6cadefd3a0712f8a1322038e819ebe9dbac7eca3bce1721bcb63bf\"},\n-    {file = \"pyzmq-22.3.0-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:1621e7a2af72cced1f6ec8ca8ca91d0f76ac236ab2e8828ac8fe909512d566cb\"},\n-    {file = \"pyzmq-22.3.0-pp37-pypy37_pp73-win_amd64.whl\", hash = \"sha256:d6157793719de168b199194f6b6173f0ccd3bf3499e6870fac17086072e39115\"},\n-    {file = \"pyzmq-22.3.0.tar.gz\", hash = \"sha256:8eddc033e716f8c91c6a2112f0a8ebc5e00532b4a6ae1eb0ccc48e027f9c671c\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-macosx_10_15_universal2.whl\", hash = \"sha256:6d346e551fa64b89d57a4ac74b9bc66703413f02f50093e089e861999ec5cccc\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:9c7fb691fb07ec7ab99fd173bb0e7e0248d31bf83d484a87b917a342f63812c9\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:cd82cca9c489e441574804dbda2dd8e114cf3be7935b03de11dade2c9478aea6\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:28f9164fb2658b7b414fa0894c75b1a9c61375774cdc1bdb7298beb042a2cd87\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:53b2c1326c2e484d450932d2be739f064b7cb572faabec38386098a28516a529\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:425ba851a6f9892bde1da2024d82e2fe6796bd77e3391fb96665c50fe9d4c6a5\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:38f778a74e3889392e949326cfd0e9b2eb37dcbb2980d98fad2c51703d523db2\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:ddf4ad1d651e6c9234945061e1a31fe27a4be0dea21c498b87b186fadf8f5919\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:2b08774057ae7ce8a2eb4e7d54db05358234440706ce43a85814500c5d7bd22e\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-win32.whl\", hash = \"sha256:67ec63ae3c9c1fa2e077fcb42e77035e2121a04f987464bdf9945a28535d30ad\"},\n+    {file = \"pyzmq-23.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:f4c7d370badc60ac94a554bc571a46d03e39d8aacfba8006b334512e184aed59\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:f6c9d30888503f2f5f87d6d41f016301352dd98da4a861bd10663c3a2d99d3b5\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:16b832adb5d8716f46051da5533c480250bf126984ce86804db6137a3a7f931b\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:da72a384a1d7e87490ca71182f3ab469ed21d847adc16b70c34faac5a3b12801\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:6ab4b6108e69f63c917cd7ef7217c5727955b1ac90600e44a13ed5312019a014\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:7626e8384275a7dea6f3d1f749fb5e00299042e9c895fc3dbe24cb154909c242\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:cbc1184349ca6e5112898aa7fc3efa1b1bbae24ab1edc774cfd09cbfd3b091d7\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-win32.whl\", hash = \"sha256:d977df6f7c4109ed1d96ffb6795f6af77114be606ae4556efbfc9cac725db65d\"},\n+    {file = \"pyzmq-23.1.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:2951c29b8649f3672af9dca8ff61d86310d3664d9629788b1c66422fb13b1239\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:bd2a13a0f8367e50347cbac87ae230ae1953935443240238f956bf10668bead6\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6bd7f18bd4cf51ea8d7e54825902cf36f9d2f35cc51ef618373988d5398b8dd0\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:fab8a7877275060f7b303e1f91c218069a2814a616b6a5ee2d8a3737deb15915\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:894be7d17228e7328cc188096c0162697211ec91761f6812fff12790cbe11c66\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:bba54f97578943f48f621b4a7afb8eb022370da26a88b88ccc9fee9f3ef7ce45\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:eb0ae5dfda83bbce660179d7b41c1c38fd833a54d2e6d9b258c644f3b75ef94d\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-win32.whl\", hash = \"sha256:523ba7fd4d8fe75ad09c1e574a648892b75a97d0cfc8005727681053ac19555b\"},\n+    {file = \"pyzmq-23.1.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:6cd53e861bccc0bdc4620f68fb4a91d5bcfe9f4213cf8e200fa498044d33a6dc\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:81623c67cb71b93b5f7e06c9107f3781738ae86866db830c950223d87af2a235\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:83f1c76068faf62c32a36dd62dc4db642c2027bbbd960f8f6345b59e9d4dc472\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:312e56799410c34797417a4060a8bd37d4db1f06d1ec0c54f7c8fd81e0d90376\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6ff8708fabc9f9bc2949f457d39b4088c9656c4c9ac15fbbbbaafce8f6d07833\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:8c3abf7eab5b76ae162c4fbb16d514a947fc57fd995b64e5ea8ef8ba3b888a69\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:4fbcd657cda75574fd1315a4c44bd322bc2e219039fb09f146bbe6f8aef039e9\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-win32.whl\", hash = \"sha256:540d7146c3cdc9bbffab039ea067f494eba24d1abe5bd33eb9f963c01e3305d4\"},\n+    {file = \"pyzmq-23.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:8679bb1dd723ecbea03b1f96c98972815775fd8ec756c440a14f289c436c472e\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-macosx_10_15_universal2.whl\", hash = \"sha256:cfee22e072a382b92ee0709dbb8203dabd52d54258051e770d9d2a81b162530b\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:68e22c5d3be451e87d47f956b397a7823bfbde2176341bc902fba30f96831d7e\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:97d6c676dc97d593625d9fc48154f2ffeabb619a1e6fe8d2a5b53f97e3e9bdee\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:b3bc3cf200aab74f3d758586ac50295214eda496ac6a6636e0c881c5958d9123\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:48bbc2db041ab28eeee4a3e8ada0ed336640946dd5a8e53dbd3805f9dbdcf0dc\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:67a049bcf967a39993858beed873ed3405536019820922d4efacfe35ab3da51a\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:3955dd5bbbe02f454655296ee36a66c334c7102a29b8458223d168c0380edfd5\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-win32.whl\", hash = \"sha256:8a0f240bf43c29be1bd82d77e602a61c798e9de02e5f8bb7bb414cb814f43236\"},\n+    {file = \"pyzmq-23.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:7e7346b2b33dcd4a2171dd8a9870ae283eec8f6231dcbcf237a0f41e74751a50\"},\n+    {file = \"pyzmq-23.1.0-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:99dd85f0ca1db8d17a01a25c2bbb7784d25a2d39497c6beddbe96bff74194e04\"},\n+    {file = \"pyzmq-23.1.0-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:563d4281c4dbdf647d93114420151d33f895afc4c46b7115a67a0aa5347e6624\"},\n+    {file = \"pyzmq-23.1.0-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:154de02b15422af28b53d29a02de72121ba503634955017255573fc1f995143d\"},\n+    {file = \"pyzmq-23.1.0-pp37-pypy37_pp73-win_amd64.whl\", hash = \"sha256:8757c62f7960cd26122f7aaaf86eda1e016fa85734c3777b8054dd334d7dea4d\"},\n+    {file = \"pyzmq-23.1.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:f6c378b435a26fda8996579c0e324b108d2ca0d01b4661503a75634e5155559f\"},\n+    {file = \"pyzmq-23.1.0-pp38-pypy38_pp73-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:2e2ac40f7a91c740ec68d6db07ae19ea9259c959333c68bee56ab2c799a67d66\"},\n+    {file = \"pyzmq-23.1.0-pp38-pypy38_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:ce8ba5ed8b0a7a203922d61cff45ee6001a41a9359f04f00d055a4e988755569\"},\n+    {file = \"pyzmq-23.1.0-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:93332c6972e4c91522c4810e907f3aea067424338071161b39cacded022559df\"},\n+    {file = \"pyzmq-23.1.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:fc32e7d7f98cac3d8d5153ed2cb583158ae3d446a6efb8e28ccb1c54a09f4169\"},\n+    {file = \"pyzmq-23.1.0-pp39-pypy39_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:86fb683cb9a9c0bb7476988b7957393ecdd22777d87d804442c66e62c99197f9\"},\n+    {file = \"pyzmq-23.1.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:057176dd3f5ccf5aad4abd662d76b6a39bbf799baaf2f39cd4fdaf2eab326e43\"},\n+    {file = \"pyzmq-23.1.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:05ec90a8da618f2398f9d1aa20b18a9ef332992c6ac23e8c866099faad6ef0d6\"},\n+    {file = \"pyzmq-23.1.0.tar.gz\", hash = \"sha256:1df26aa854bdd3a8341bf199064dd6aa6e240f2eaa3c9fa8d217e5d8b868c73e\"},\n ]\n send2trash = [\n     {file = \"Send2Trash-1.8.0-py3-none-any.whl\", hash = \"sha256:f20eaadfdb517eaca5ce077640cb261c7d2698385a6a0f072a4a5447fd49fa08\"},\n@@ -1754,30 +1729,30 @@ traitlets = [\n     {file = \"traitlets-4.3.3.tar.gz\", hash = \"sha256:d023ee369ddd2763310e4c3eae1ff649689440d4ae59d7485eb4cfbbe3e359f7\"},\n ]\n typed-ast = [\n-    {file = \"typed_ast-1.5.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:9ad3b48cf2b487be140072fb86feff36801487d4abb7382bb1929aaac80638ea\"},\n-    {file = \"typed_ast-1.5.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:542cd732351ba8235f20faa0fc7398946fe1a57f2cdb289e5497e1e7f48cfedb\"},\n-    {file = \"typed_ast-1.5.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5dc2c11ae59003d4a26dda637222d9ae924387f96acae9492df663843aefad55\"},\n-    {file = \"typed_ast-1.5.3-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:fd5df1313915dbd70eaaa88c19030b441742e8b05e6103c631c83b75e0435ccc\"},\n-    {file = \"typed_ast-1.5.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:e34f9b9e61333ecb0f7d79c21c28aa5cd63bec15cb7e1310d7d3da6ce886bc9b\"},\n-    {file = \"typed_ast-1.5.3-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:f818c5b81966d4728fec14caa338e30a70dfc3da577984d38f97816c4b3071ec\"},\n-    {file = \"typed_ast-1.5.3-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3042bfc9ca118712c9809201f55355479cfcdc17449f9f8db5e744e9625c6805\"},\n-    {file = \"typed_ast-1.5.3-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:4fff9fdcce59dc61ec1b317bdb319f8f4e6b69ebbe61193ae0a60c5f9333dc49\"},\n-    {file = \"typed_ast-1.5.3-cp36-cp36m-win_amd64.whl\", hash = \"sha256:8e0b8528838ffd426fea8d18bde4c73bcb4167218998cc8b9ee0a0f2bfe678a6\"},\n-    {file = \"typed_ast-1.5.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:8ef1d96ad05a291f5c36895d86d1375c0ee70595b90f6bb5f5fdbee749b146db\"},\n-    {file = \"typed_ast-1.5.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ed44e81517364cb5ba367e4f68fca01fba42a7a4690d40c07886586ac267d9b9\"},\n-    {file = \"typed_ast-1.5.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:f60d9de0d087454c91b3999a296d0c4558c1666771e3460621875021bf899af9\"},\n-    {file = \"typed_ast-1.5.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9e237e74fd321a55c90eee9bc5d44be976979ad38a29bbd734148295c1ce7617\"},\n-    {file = \"typed_ast-1.5.3-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:ee852185964744987609b40aee1d2eb81502ae63ee8eef614558f96a56c1902d\"},\n-    {file = \"typed_ast-1.5.3-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:27e46cdd01d6c3a0dd8f728b6a938a6751f7bd324817501c15fb056307f918c6\"},\n-    {file = \"typed_ast-1.5.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d64dabc6336ddc10373922a146fa2256043b3b43e61f28961caec2a5207c56d5\"},\n-    {file = \"typed_ast-1.5.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:8cdf91b0c466a6c43f36c1964772918a2c04cfa83df8001ff32a89e357f8eb06\"},\n-    {file = \"typed_ast-1.5.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:9cc9e1457e1feb06b075c8ef8aeb046a28ec351b1958b42c7c31c989c841403a\"},\n-    {file = \"typed_ast-1.5.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:e20d196815eeffb3d76b75223e8ffed124e65ee62097e4e73afb5fec6b993e7a\"},\n-    {file = \"typed_ast-1.5.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:37e5349d1d5de2f4763d534ccb26809d1c24b180a477659a12c4bde9dd677d74\"},\n-    {file = \"typed_ast-1.5.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c9f1a27592fac87daa4e3f16538713d705599b0a27dfe25518b80b6b017f0a6d\"},\n-    {file = \"typed_ast-1.5.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:8831479695eadc8b5ffed06fdfb3e424adc37962a75925668deeb503f446c0a3\"},\n-    {file = \"typed_ast-1.5.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:20d5118e494478ef2d3a2702d964dae830aedd7b4d3b626d003eea526be18718\"},\n-    {file = \"typed_ast-1.5.3.tar.gz\", hash = \"sha256:27f25232e2dd0edfe1f019d6bfaaf11e86e657d9bdb7b0956db95f560cceb2b3\"},\n+    {file = \"typed_ast-1.5.4-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:669dd0c4167f6f2cd9f57041e03c3c2ebf9063d0757dc89f79ba1daa2bfca9d4\"},\n+    {file = \"typed_ast-1.5.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:211260621ab1cd7324e0798d6be953d00b74e0428382991adfddb352252f1d62\"},\n+    {file = \"typed_ast-1.5.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:267e3f78697a6c00c689c03db4876dd1efdfea2f251a5ad6555e82a26847b4ac\"},\n+    {file = \"typed_ast-1.5.4-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:c542eeda69212fa10a7ada75e668876fdec5f856cd3d06829e6aa64ad17c8dfe\"},\n+    {file = \"typed_ast-1.5.4-cp310-cp310-win_amd64.whl\", hash = \"sha256:a9916d2bb8865f973824fb47436fa45e1ebf2efd920f2b9f99342cb7fab93f72\"},\n+    {file = \"typed_ast-1.5.4-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:79b1e0869db7c830ba6a981d58711c88b6677506e648496b1f64ac7d15633aec\"},\n+    {file = \"typed_ast-1.5.4-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a94d55d142c9265f4ea46fab70977a1944ecae359ae867397757d836ea5a3f47\"},\n+    {file = \"typed_ast-1.5.4-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:183afdf0ec5b1b211724dfef3d2cad2d767cbefac291f24d69b00546c1837fb6\"},\n+    {file = \"typed_ast-1.5.4-cp36-cp36m-win_amd64.whl\", hash = \"sha256:639c5f0b21776605dd6c9dbe592d5228f021404dafd377e2b7ac046b0349b1a1\"},\n+    {file = \"typed_ast-1.5.4-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:cf4afcfac006ece570e32d6fa90ab74a17245b83dfd6655a6f68568098345ff6\"},\n+    {file = \"typed_ast-1.5.4-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ed855bbe3eb3715fca349c80174cfcfd699c2f9de574d40527b8429acae23a66\"},\n+    {file = \"typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:6778e1b2f81dfc7bc58e4b259363b83d2e509a65198e85d5700dfae4c6c8ff1c\"},\n+    {file = \"typed_ast-1.5.4-cp37-cp37m-win_amd64.whl\", hash = \"sha256:0261195c2062caf107831e92a76764c81227dae162c4f75192c0d489faf751a2\"},\n+    {file = \"typed_ast-1.5.4-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2efae9db7a8c05ad5547d522e7dbe62c83d838d3906a3716d1478b6c1d61388d\"},\n+    {file = \"typed_ast-1.5.4-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:7d5d014b7daa8b0bf2eaef684295acae12b036d79f54178b92a2b6a56f92278f\"},\n+    {file = \"typed_ast-1.5.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:370788a63915e82fd6f212865a596a0fefcbb7d408bbbb13dea723d971ed8bdc\"},\n+    {file = \"typed_ast-1.5.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:4e964b4ff86550a7a7d56345c7864b18f403f5bd7380edf44a3c1fb4ee7ac6c6\"},\n+    {file = \"typed_ast-1.5.4-cp38-cp38-win_amd64.whl\", hash = \"sha256:683407d92dc953c8a7347119596f0b0e6c55eb98ebebd9b23437501b28dcbb8e\"},\n+    {file = \"typed_ast-1.5.4-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:4879da6c9b73443f97e731b617184a596ac1235fe91f98d279a7af36c796da35\"},\n+    {file = \"typed_ast-1.5.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3e123d878ba170397916557d31c8f589951e353cc95fb7f24f6bb69adc1a8a97\"},\n+    {file = \"typed_ast-1.5.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ebd9d7f80ccf7a82ac5f88c521115cc55d84e35bf8b446fcd7836eb6b98929a3\"},\n+    {file = \"typed_ast-1.5.4-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:98f80dee3c03455e92796b58b98ff6ca0b2a6f652120c263efdba4d6c5e58f72\"},\n+    {file = \"typed_ast-1.5.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:0fdbcf2fef0ca421a3f5912555804296f0b0960f0418c440f5d6d3abb549f3e1\"},\n+    {file = \"typed_ast-1.5.4.tar.gz\", hash = \"sha256:39e21ceb7388e4bb37f4c679d72707ed46c2fbf2a5609b8b8ebc4b067d977df2\"},\n ]\n types-dataclasses = [\n     {file = \"types-dataclasses-0.6.5.tar.gz\", hash = \"sha256:c3226d0a93289f53aac7b55ced17fb18473e278247abdb8d85a8956f5fb4faa6\"},\ndiff --git a/rich/box.py b/rich/box.py\nindex d37c6c81c..b153db8de 100644\n--- a/rich/box.py\n+++ b/rich/box.py\n@@ -88,6 +88,16 @@ def substitute(self, options: \"ConsoleOptions\", safe: bool = True) -> \"Box\":\n             box = ASCII\n         return box\n \n+    def get_plain_headed_box(self) -> \"Box\":\n+        \"\"\"If this box uses special characters for the borders of the header, then\n+        return the equivalent box that does not.\n+\n+        Returns:\n+            Box: The most similar Box that doesn't use header-specific box characters.\n+                If the current Box already satisfies this criterion, then it's returned.\n+        \"\"\"\n+        return PLAIN_HEADED_SUBSTITUTIONS.get(self, self)\n+\n     def get_top(self, widths: Iterable[int]) -> str:\n         \"\"\"Get the top of a simple box.\n \n@@ -429,6 +439,15 @@ def get_bottom(self, widths: Iterable[int]) -> str:\n     HEAVY_HEAD: SQUARE,\n }\n \n+# Map headed boxes to their headerless equivalents\n+PLAIN_HEADED_SUBSTITUTIONS = {\n+    HEAVY_HEAD: SQUARE,\n+    SQUARE_DOUBLE_HEAD: SQUARE,\n+    MINIMAL_DOUBLE_HEAD: MINIMAL,\n+    MINIMAL_HEAVY_HEAD: MINIMAL,\n+    ASCII_DOUBLE_HEAD: ASCII2,\n+}\n+\n \n if __name__ == \"__main__\":  # pragma: no cover\n \ndiff --git a/rich/table.py b/rich/table.py\nindex 15a0c0e07..9d067ba56 100644\n--- a/rich/table.py\n+++ b/rich/table.py\n@@ -752,8 +752,8 @@ def _render(\n             if self.box\n             else None\n         )\n+        _box = _box.get_plain_headed_box() if _box and not self.show_header else _box\n \n-        # _box = self.box\n         new_line = Segment.line()\n \n         columns = self.columns\n", "test_patch": "diff --git a/tests/test_table.py b/tests/test_table.py\nindex 040f9614a..e376e1672 100644\n--- a/tests/test_table.py\n+++ b/tests/test_table.py\n@@ -181,6 +181,34 @@ def make_table(vertical_align):\n     assert result == expected\n \n \n+@pytest.mark.parametrize(\n+    \"box,result\",\n+    [\n+        (None, \" 1  2 \\n 3  4 \\n\"),\n+        (box.HEAVY_HEAD, \"\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\\n\u2502 1 \u2502 2 \u2502\\n\u2502 3 \u2502 4 \u2502\\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\\n\"),\n+        (box.SQUARE_DOUBLE_HEAD, \"\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\\n\u2502 1 \u2502 2 \u2502\\n\u2502 3 \u2502 4 \u2502\\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\\n\"),\n+        (box.MINIMAL_DOUBLE_HEAD, \"    \u2577    \\n  1 \u2502 2  \\n  3 \u2502 4  \\n    \u2575    \\n\"),\n+        (box.MINIMAL_HEAVY_HEAD, \"    \u2577    \\n  1 \u2502 2  \\n  3 \u2502 4  \\n    \u2575    \\n\"),\n+        (box.ASCII_DOUBLE_HEAD, \"+---+---+\\n| 1 | 2 |\\n| 3 | 4 |\\n+---+---+\\n\"),\n+    ],\n+)\n+def test_table_show_header_false_substitution(box, result):\n+    \"\"\"When the box style is one with a custom header edge, it should be substituted for\n+    the equivalent box that does not have a custom header when show_header=False\"\"\"\n+    table = Table(show_header=False, box=box)\n+    table.add_column()\n+    table.add_column()\n+\n+    table.add_row(\"1\", \"2\")\n+    table.add_row(\"3\", \"4\")\n+\n+    console = Console(record=True)\n+    console.print(table)\n+    output = console.export_text()\n+\n+    assert output == result\n+\n+\n if __name__ == \"__main__\":\n     render = render_tables()\n     print(render)\n", "problem_statement": "[BUG] If `show_header=False` the next row will have the header border style\n![img](https://i.kek.sh/KBeQ0CkeCOj.png)\n", "hints_text": "Thanks for the report, I've reproduced this myself\nThis is an artefact of how Rich stores box information. A solution is to set `box=box.SQUARE` when you want a header.\nI was thinking we could have Rich default to box=None, then in the constructor do something like:\r\n\r\n```python\r\nif box is None:\r\n    if show_header:\r\n        self.box = box.HEAVY_HEAD\r\n    else:\r\n        self.box = box.SQUARE\r\nelse:\r\n    self.box = box\r\n```\r\n\r\nIt seems that would give the user what they would expect in this case, yet still allow for the same level of customisation when required.\nThere may be other box constants that don't look quite right with no header. I'd prefer something codified in to box itself so there is isn't this special case.", "created_at": "2022-06-07T11:19:27Z"}
{"repo": "Textualize/rich", "pull_number": 2305, "instance_id": "Textualize__rich-2305", "issue_numbers": ["2291"], "base_commit": "aa7926c1431eebfb2ccaab9f3b63a4ac6cd8dfe6", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 52db0457b..bc33feab4 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## [Unreleased]\n+\n+### Fixed\n+\n+- Allow exceptions that are raised while a Live is rendered to be displayed and/or processed https://github.com/Textualize/rich/pull/2305\n+\n ## [12.4.4] - 2022-05-24\n \n ### Changed\ndiff --git a/rich/live.py b/rich/live.py\nindex 6db5b605f..e635fe5c9 100644\n--- a/rich/live.py\n+++ b/rich/live.py\n@@ -118,7 +118,15 @@ def start(self, refresh: bool = False) -> None:\n             self._enable_redirect_io()\n             self.console.push_render_hook(self)\n             if refresh:\n-                self.refresh()\n+                try:\n+                    self.refresh()\n+                except Exception:\n+                    # If refresh fails, we want to stop the redirection of sys.stderr,\n+                    # so the error stacktrace is properly displayed in the terminal.\n+                    # (or, if the code that calls Rich captures the exception and wants to display something,\n+                    # let this be displayed in the terminal).\n+                    self.stop()\n+                    raise\n             if self.auto_refresh:\n                 self._refresh_thread = _RefreshThread(self, self.refresh_per_second)\n                 self._refresh_thread.start()\n", "test_patch": "", "problem_statement": "[BUG] Invalid markup in a ProgressBar causes the entire Python script to exit abnormally.\n**Describe the bug**\r\n\r\n**NOTE: I found some more details on this. The issue isn't that an exception isn't raised, it's that you can't ever see any console output from that exception. Alternate screen issue?** See EDIT below. Original bug report follows.\r\n\r\nIf you try to create a ProgressBar object, and within your fields you have some invalid markup (example: a closing [/color] tag without a corresponding opening tag), starting the progress bar with `start()` will *cause the entire Python interpreter to exit with return code 1*. \r\n\r\nNo error message is printed. Wrapping the code in a try/except block does not trap the error, the entire script still exits.\r\n\r\nThe following is a minimal working example illustrating the bug.\r\n\r\n    from rich.progress import (\r\n        BarColumn,\r\n        Progress,\r\n        TaskID,\r\n        TextColumn,\r\n        TimeRemainingColumn,\r\n    )\r\n\r\n    import time\r\n\r\n    def test():\r\n\r\n        print(\"I will now make Rich fail horribly...\")\r\n\r\n        pbar = Progress(\r\n            \"[green]Status\",\r\n            TimeRemainingColumn(),\r\n            \"Running[/red]\" # THIS LINE HAS INVALID MARKUP. IT WILL CAUSE THE SCRIPT TO CRASH WITH NO ERROR.\r\n        )\r\n\r\n        task_id = pbar.add_task(\"test\",start=False, total=10)\r\n\r\n        # PROGRAM EXECUTION ABORTS HERE WITH NO ERROR MESSAGES.\r\n        # Python interpreter returns code 1.\r\n        pbar.start()\r\n\r\n        print(\"We should make it here, but we don't.\")\r\n\r\n        for _ in range(10):\r\n            time.sleep()\r\n            pbar.update(task_id, advance=1)\r\n\r\n        pbar.stop()\r\n\r\n    if __name__ == \"__main__\":\r\n\r\n        # Even wrapping the test in a try/catch block does not prevent Python from exiting!\r\n        try:\r\n            test()\r\n        except Exception as e:\r\n            print(f\"I caught an exception! {e}\") # This is NOT called, NO exception is raised.\r\n\r\n        print(\"I made it through the test!\") # This is also NEVER reached. The script EXITS when pbar.start() is called.\r\n\r\nExample run (Not much to see...):\r\n\r\n    dev@devbox:~$ python3 richbug.py\r\n    dev@devbox:~$ echo $?\r\n    1\r\n    dev@devbox:~$\r\n\r\nNote that I have not tested this further to determine if it happens in other areas of Rich, but I know for sure it happens with ProgressBar.\r\n\r\n**What should happen?**\r\n\r\nIf there's invalid markup, a normal exception should get thrown somewhere. \r\n\r\nEven if for some reason the app needs to fully exit, printing an error message would still be useful. I spent over an hour tracking down what I thought was a bug or a forgotten exit() call in my own code before realizing the exact line where things failed was `pbar.start()`.\r\n\r\nI have a *suspicion* that this might have to do with the alternate screen - perhaps an exception is printed but it's done on the alternate screen so you never see it? I haven't spent much time looking at Rich's code, but I'd imagine perhaps wrapping code in try blocks with code to exit the alternate screen followed by re-raising the exception might work?\r\n\r\nOne more point: after the code exits, the cursor is missing - I have to use `reset` to bring it back. Again, suggests that we're switching into the alternate screen, crashing and then not getting back out to print errors.\r\n\r\n**EDIT: I discovered this is indeed the case. If I add the line `open(\"exception.txt\",\"w\").write(str(e))` to the except block, the exception does get printed and indeed does include the correct markup error. So therefore this bug should perhaps be named \"App does not exit alternate screen before crashing\"?**\r\n\r\n**Platform**\r\n\r\n```\r\ndev@devbox:~$ python -m rich.diagnose\r\n\r\n    \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n    \u2502 A high level console interface.                                                  \u2502\r\n    \u2502                                                                                  \u2502\r\n    \u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n    \u2502 \u2502 <console width=148 ColorSystem.STANDARD>                                     \u2502 \u2502\r\n    \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n    \u2502                                                                                  \u2502\r\n    \u2502     color_system = 'standard'                                                    \u2502\r\n    \u2502         encoding = 'utf-8'                                                       \u2502\r\n    \u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n    \u2502           height = 30                                                            \u2502\r\n    \u2502    is_alt_screen = False                                                         \u2502\r\n    \u2502 is_dumb_terminal = False                                                         \u2502\r\n    \u2502   is_interactive = True                                                          \u2502\r\n    \u2502       is_jupyter = False                                                         \u2502\r\n    \u2502      is_terminal = True                                                          \u2502\r\n    \u2502   legacy_windows = False                                                         \u2502\r\n    \u2502         no_color = False                                                         \u2502\r\n    \u2502          options = ConsoleOptions(                                               \u2502\r\n    \u2502                        size=ConsoleDimensions(width=148, height=30),             \u2502\r\n    \u2502                        legacy_windows=False,                                     \u2502\r\n    \u2502                        min_width=1,                                              \u2502\r\n    \u2502                        max_width=148,                                            \u2502\r\n    \u2502                        is_terminal=True,                                         \u2502\r\n    \u2502                        encoding='utf-8',                                         \u2502\r\n    \u2502                        max_height=30,                                            \u2502\r\n    \u2502                        justify=None,                                             \u2502\r\n    \u2502                        overflow=None,                                            \u2502\r\n    \u2502                        no_wrap=False,                                            \u2502\r\n    \u2502                        highlight=None,                                           \u2502\r\n    \u2502                        markup=None,                                              \u2502\r\n    \u2502                        height=None                                               \u2502\r\n    \u2502                    )                                                             \u2502\r\n    \u2502            quiet = False                                                         \u2502\r\n    \u2502           record = False                                                         \u2502\r\n    \u2502         safe_box = True                                                          \u2502\r\n    \u2502             size = ConsoleDimensions(width=148, height=30)                       \u2502\r\n    \u2502        soft_wrap = False                                                         \u2502\r\n    \u2502           stderr = False                                                         \u2502\r\n    \u2502            style = None                                                          \u2502\r\n    \u2502         tab_size = 8                                                             \u2502\r\n    \u2502            width = 148                                                           \u2502\r\n    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n    \u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n    \u2502 Windows features available.                           \u2502\r\n    \u2502                                                       \u2502\r\n    \u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n    \u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n    \u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n    \u2502                                                       \u2502\r\n    \u2502 truecolor = False                                     \u2502\r\n    \u2502        vt = False                                     \u2502\r\n    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n    \u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n    \u2502 {                                  \u2502\r\n    \u2502     'TERM': 'screen',              \u2502\r\n    \u2502     'COLORTERM': None,             \u2502\r\n    \u2502     'CLICOLOR': None,              \u2502\r\n    \u2502     'NO_COLOR': None,              \u2502\r\n    \u2502     'TERM_PROGRAM': None,          \u2502\r\n    \u2502     'COLUMNS': None,               \u2502\r\n    \u2502     'LINES': None,                 \u2502\r\n    \u2502     'JPY_PARENT_PID': None,        \u2502\r\n    \u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n    \u2502 }                                  \u2502\r\n    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n    platform=\"Linux\"\r\n\r\ndev@devbox:~$ pip freeze | grep rich\r\nrich==12.4.4\r\n```\r\n\r\nThe above was run while SSH'ed into the devbox from Windows terminal. Same issue will occur no matter what client is being used though. Happens no matter how I run the code, whether it be on a local terminal, via SSH, etc. \r\n\r\nDevbox is running Ubuntu Linux 22.04.\r\n\n", "hints_text": "", "created_at": "2022-05-27T11:03:19Z"}
{"repo": "Textualize/rich", "pull_number": 2296, "instance_id": "Textualize__rich-2296", "issue_numbers": ["2273"], "base_commit": "c187270eeffa1a0d26283c1c92072a8f141e8fe5", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex f8083da2c..2f57a84df 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -9,6 +9,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ### Fixed\n \n+- Fix text wrapping edge case https://github.com/Textualize/rich/pull/2296\n - Allow exceptions that are raised while a Live is rendered to be displayed and/or processed https://github.com/Textualize/rich/pull/2305\n - Fix crashes that can happen with `inspect` when docstrings contain some special control codes https://github.com/Textualize/rich/pull/2294\n \ndiff --git a/rich/_wrap.py b/rich/_wrap.py\nindex b537757a5..c45f193f7 100644\n--- a/rich/_wrap.py\n+++ b/rich/_wrap.py\n@@ -1,8 +1,8 @@\n import re\n from typing import Iterable, List, Tuple\n \n-from .cells import cell_len, chop_cells\n from ._loop import loop_last\n+from .cells import cell_len, chop_cells\n \n re_word = re.compile(r\"\\s*\\S+\\s*\")\n \n@@ -27,14 +27,15 @@ def divide_line(text: str, width: int, fold: bool = True) -> List[int]:\n         if line_position + word_length > width:\n             if word_length > width:\n                 if fold:\n-                    for last, line in loop_last(\n-                        chop_cells(word, width, position=line_position)\n-                    ):\n+                    chopped_words = chop_cells(word, max_size=width, position=0)\n+                    for last, line in loop_last(chopped_words):\n+                        if start:\n+                            append(start)\n+\n                         if last:\n                             line_position = _cell_len(line)\n                         else:\n                             start += len(line)\n-                            append(start)\n                 else:\n                     if start:\n                         append(start)\ndiff --git a/rich/cells.py b/rich/cells.py\nindex d7adf5a04..834c37103 100644\n--- a/rich/cells.py\n+++ b/rich/cells.py\n@@ -109,7 +109,8 @@ def set_cell_size(text: str, total: int) -> str:\n # TODO: This is inefficient\n # TODO: This might not work with CWJ type characters\n def chop_cells(text: str, max_size: int, position: int = 0) -> List[str]:\n-    \"\"\"Break text in to equal (cell) length strings.\"\"\"\n+    \"\"\"Break text in to equal (cell) length strings, returning the characters in reverse\n+    order\"\"\"\n     _get_character_cell_size = get_character_cell_size\n     characters = [\n         (character, _get_character_cell_size(character)) for character in text\n", "test_patch": "diff --git a/tests/test_text.py b/tests/test_text.py\nindex 4f02fd41e..685bdcdda 100644\n--- a/tests/test_text.py\n+++ b/tests/test_text.py\n@@ -65,11 +65,11 @@ def test_eq():\n \n \n def test_contain():\n-    test = Text(\"foobar\")\n-    assert \"foo\" in test\n-    assert \"foo \" not in test\n-    assert Text(\"bar\") in test\n-    assert None not in test\n+    text = Text(\"foobar\")\n+    assert \"foo\" in text\n+    assert \"foo \" not in text\n+    assert Text(\"bar\") in text\n+    assert None not in text\n \n \n def test_plain_property():\n@@ -80,14 +80,14 @@ def test_plain_property():\n \n \n def test_plain_property_setter():\n-    test = Text(\"foo\")\n-    test.plain = \"bar\"\n-    assert str(test) == \"bar\"\n-    test = Text()\n-    test.append(\"Hello, World\", \"bold\")\n-    test.plain = \"Hello\"\n-    assert str(test) == \"Hello\"\n-    assert test._spans == [Span(0, 5, \"bold\")]\n+    text = Text(\"foo\")\n+    text.plain = \"bar\"\n+    assert str(text) == \"bar\"\n+    text = Text()\n+    text.append(\"Hello, World\", \"bold\")\n+    text.plain = \"Hello\"\n+    assert str(text) == \"Hello\"\n+    assert text._spans == [Span(0, 5, \"bold\")]\n \n \n def test_from_markup():\n@@ -115,66 +115,66 @@ def test_from_ansi():\n \n \n def test_copy():\n-    test = Text()\n-    test.append(\"Hello\", \"bold\")\n-    test.append(\" \")\n-    test.append(\"World\", \"italic\")\n-    test_copy = test.copy()\n-    assert test == test_copy\n-    assert test is not test_copy\n+    text = Text()\n+    text.append(\"Hello\", \"bold\")\n+    text.append(\" \")\n+    text.append(\"World\", \"italic\")\n+    test_copy = text.copy()\n+    assert text == test_copy\n+    assert text is not test_copy\n \n \n def test_rstrip():\n-    test = Text(\"Hello, World!    \")\n-    test.rstrip()\n-    assert str(test) == \"Hello, World!\"\n+    text = Text(\"Hello, World!    \")\n+    text.rstrip()\n+    assert str(text) == \"Hello, World!\"\n \n \n def test_rstrip_end():\n-    test = Text(\"Hello, World!    \")\n-    test.rstrip_end(14)\n-    assert str(test) == \"Hello, World! \"\n+    text = Text(\"Hello, World!    \")\n+    text.rstrip_end(14)\n+    assert str(text) == \"Hello, World! \"\n \n \n def test_stylize():\n-    test = Text(\"Hello, World!\")\n-    test.stylize(\"bold\", 7, 11)\n-    assert test._spans == [Span(7, 11, \"bold\")]\n-    test.stylize(\"bold\", 20, 25)\n-    assert test._spans == [Span(7, 11, \"bold\")]\n+    text = Text(\"Hello, World!\")\n+    text.stylize(\"bold\", 7, 11)\n+    assert text._spans == [Span(7, 11, \"bold\")]\n+    text.stylize(\"bold\", 20, 25)\n+    assert text._spans == [Span(7, 11, \"bold\")]\n \n \n def test_stylize_negative_index():\n-    test = Text(\"Hello, World!\")\n-    test.stylize(\"bold\", -6, -1)\n-    assert test._spans == [Span(7, 12, \"bold\")]\n+    text = Text(\"Hello, World!\")\n+    text.stylize(\"bold\", -6, -1)\n+    assert text._spans == [Span(7, 12, \"bold\")]\n \n \n def test_highlight_regex():\n-    test = Text(\"peek-a-boo\")\n+    text = Text(\"peek-a-boo\")\n \n-    count = test.highlight_regex(r\"NEVER_MATCH\", \"red\")\n+    count = text.highlight_regex(r\"NEVER_MATCH\", \"red\")\n     assert count == 0\n-    assert len(test._spans) == 0\n+    assert len(text._spans) == 0\n \n     # text: peek-a-boo\n     # indx: 0123456789\n-    count = test.highlight_regex(r\"[a|e|o]+\", \"red\")\n+    count = text.highlight_regex(r\"[a|e|o]+\", \"red\")\n     assert count == 3\n-    assert sorted(test._spans) == [\n+    assert sorted(text._spans) == [\n         Span(1, 3, \"red\"),\n         Span(5, 6, \"red\"),\n         Span(8, 10, \"red\"),\n     ]\n \n-    test = Text(\"Ada Lovelace, Alan Turing\")\n-    count = test.highlight_regex(\n+    text = Text(\"Ada Lovelace, Alan Turing\")\n+    count = text.highlight_regex(\n         r\"(?P<yellow>[A-Za-z]+)[ ]+(?P<red>[A-Za-z]+)(?P<NEVER_MATCH>NEVER_MATCH)*\"\n     )\n \n     # The number of matched name should be 2\n     assert count == 2\n-    assert sorted(test._spans) == [\n+    assert sorted(text._spans) == [\n         Span(0, 3, \"yellow\"),  # Ada\n         Span(4, 12, \"red\"),  # Lovelace\n         Span(14, 18, \"yellow\"),  # Alan\n@@ -183,7 +183,7 @@ def test_highlight_regex():\n \n \n def test_highlight_regex_callable():\n-    test = Text(\"Vulnerability CVE-2018-6543 detected\")\n+    text = Text(\"Vulnerability CVE-2018-6543 detected\")\n     re_cve = r\"CVE-\\d{4}-\\d+\"\n \n     def get_style(text: str) -> Style:\n@@ -191,141 +191,141 @@ def get_style(text: str) -> Style:\n             f\"bold yellow link https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword={text}\"\n         )\n \n-    count = test.highlight_regex(re_cve, get_style)\n+    count = text.highlight_regex(re_cve, get_style)\n     assert count == 1\n-    assert len(test._spans) == 1\n-    assert test._spans[0].start == 14\n-    assert test._spans[0].end == 27\n+    assert len(text._spans) == 1\n+    assert text._spans[0].start == 14\n+    assert text._spans[0].end == 27\n     assert (\n-        test._spans[0].style.link\n+        text._spans[0].style.link\n         == \"https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=CVE-2018-6543\"\n     )\n \n \n def test_highlight_words():\n-    test = Text(\"Do NOT! touch anything!\")\n+    text = Text(\"Do NOT! touch anything!\")\n     words = [\"NOT\", \"!\"]\n-    count = test.highlight_words(words, \"red\")\n+    count = text.highlight_words(words, \"red\")\n     assert count == 3\n-    assert sorted(test._spans) == [\n+    assert sorted(text._spans) == [\n         Span(3, 6, \"red\"),  # NOT\n         Span(6, 7, \"red\"),  # !\n         Span(22, 23, \"red\"),  # !\n     ]\n \n     # regex escape test\n-    test = Text(\"[o|u]aeiou\")\n+    text = Text(\"[o|u]aeiou\")\n     words = [\"[a|e|i]\", \"[o|u]\"]\n-    count = test.highlight_words(words, \"red\")\n+    count = text.highlight_words(words, \"red\")\n     assert count == 1\n-    assert test._spans == [Span(0, 5, \"red\")]\n+    assert text._spans == [Span(0, 5, \"red\")]\n \n     # case sensitive\n-    test = Text(\"AB Ab aB ab\")\n+    text = Text(\"AB Ab aB ab\")\n     words = [\"AB\"]\n \n-    count = test.highlight_words(words, \"red\")\n+    count = text.highlight_words(words, \"red\")\n     assert count == 1\n-    assert test._spans == [Span(0, 2, \"red\")]\n+    assert text._spans == [Span(0, 2, \"red\")]\n \n-    test = Text(\"AB Ab aB ab\")\n-    count = test.highlight_words(words, \"red\", case_sensitive=False)\n+    text = Text(\"AB Ab aB ab\")\n+    count = text.highlight_words(words, \"red\", case_sensitive=False)\n     assert count == 4\n \n \n def test_set_length():\n-    test = Text(\"Hello\")\n-    test.set_length(5)\n-    assert test == Text(\"Hello\")\n+    text = Text(\"Hello\")\n+    text.set_length(5)\n+    assert text == Text(\"Hello\")\n \n-    test = Text(\"Hello\")\n-    test.set_length(10)\n-    assert test == Text(\"Hello     \")\n+    text = Text(\"Hello\")\n+    text.set_length(10)\n+    assert text == Text(\"Hello     \")\n \n-    test = Text(\"Hello World\")\n-    test.stylize(\"bold\", 0, 5)\n-    test.stylize(\"italic\", 7, 9)\n+    text = Text(\"Hello World\")\n+    text.stylize(\"bold\", 0, 5)\n+    text.stylize(\"italic\", 7, 9)\n \n-    test.set_length(3)\n+    text.set_length(3)\n     expected = Text()\n     expected.append(\"Hel\", \"bold\")\n-    assert test == expected\n+    assert text == expected\n \n \n def test_console_width():\n     console = Console()\n-    test = Text(\"Hello World!\\nfoobarbaz\")\n-    assert test.__rich_measure__(console, 80) == Measurement(9, 12)\n+    text = Text(\"Hello World!\\nfoobarbaz\")\n+    assert text.__rich_measure__(console, 80) == Measurement(9, 12)\n     assert Text(\" \" * 4).__rich_measure__(console, 80) == Measurement(4, 4)\n     assert Text(\" \\n  \\n   \").__rich_measure__(console, 80) == Measurement(3, 3)\n \n \n def test_join():\n-    test = Text(\"bar\").join([Text(\"foo\", \"red\"), Text(\"baz\", \"blue\")])\n-    assert str(test) == \"foobarbaz\"\n-    assert test._spans == [Span(0, 3, \"red\"), Span(6, 9, \"blue\")]\n+    text = Text(\"bar\").join([Text(\"foo\", \"red\"), Text(\"baz\", \"blue\")])\n+    assert str(text) == \"foobarbaz\"\n+    assert text._spans == [Span(0, 3, \"red\"), Span(6, 9, \"blue\")]\n \n \n def test_trim_spans():\n-    test = Text(\"Hello\")\n-    test._spans[:] = [Span(0, 3, \"red\"), Span(3, 6, \"green\"), Span(6, 9, \"blue\")]\n-    test._trim_spans()\n-    assert test._spans == [Span(0, 3, \"red\"), Span(3, 5, \"green\")]\n+    text = Text(\"Hello\")\n+    text._spans[:] = [Span(0, 3, \"red\"), Span(3, 6, \"green\"), Span(6, 9, \"blue\")]\n+    text._trim_spans()\n+    assert text._spans == [Span(0, 3, \"red\"), Span(3, 5, \"green\")]\n \n \n def test_pad_left():\n-    test = Text(\"foo\")\n-    test.pad_left(3, \"X\")\n-    assert str(test) == \"XXXfoo\"\n+    text = Text(\"foo\")\n+    text.pad_left(3, \"X\")\n+    assert str(text) == \"XXXfoo\"\n \n \n def test_pad_right():\n-    test = Text(\"foo\")\n-    test.pad_right(3, \"X\")\n-    assert str(test) == \"fooXXX\"\n+    text = Text(\"foo\")\n+    text.pad_right(3, \"X\")\n+    assert str(text) == \"fooXXX\"\n \n \n def test_append():\n-    test = Text(\"foo\")\n-    test.append(\"bar\")\n-    assert str(test) == \"foobar\"\n-    test.append(Text(\"baz\", \"bold\"))\n-    assert str(test) == \"foobarbaz\"\n-    assert test._spans == [Span(6, 9, \"bold\")]\n+    text = Text(\"foo\")\n+    text.append(\"bar\")\n+    assert str(text) == \"foobar\"\n+    text.append(Text(\"baz\", \"bold\"))\n+    assert str(text) == \"foobarbaz\"\n+    assert text._spans == [Span(6, 9, \"bold\")]\n \n     with pytest.raises(ValueError):\n-        test.append(Text(\"foo\"), \"bar\")\n+        text.append(Text(\"foo\"), \"bar\")\n \n     with pytest.raises(TypeError):\n-        test.append(1)\n+        text.append(1)\n \n \n def test_append_text():\n-    test = Text(\"foo\")\n-    test.append_text(Text(\"bar\", style=\"bold\"))\n-    assert str(test) == \"foobar\"\n-    assert test._spans == [Span(3, 6, \"bold\")]\n+    text = Text(\"foo\")\n+    text.append_text(Text(\"bar\", style=\"bold\"))\n+    assert str(text) == \"foobar\"\n+    assert text._spans == [Span(3, 6, \"bold\")]\n \n \n def test_end():\n     console = Console(width=20, file=StringIO())\n-    test = Group(Text.from_markup(\"foo\", end=\" \"), Text.from_markup(\"bar\"))\n-    console.print(test)\n+    text = Group(Text.from_markup(\"foo\", end=\" \"), Text.from_markup(\"bar\"))\n+    console.print(text)\n     assert console.file.getvalue() == \"foo bar\\n\"\n \n \n def test_split():\n-    test = Text()\n-    test.append(\"foo\", \"red\")\n-    test.append(\"\\n\")\n-    test.append(\"bar\", \"green\")\n-    test.append(\"\\n\")\n+    text = Text()\n+    text.append(\"foo\", \"red\")\n+    text.append(\"\\n\")\n+    text.append(\"bar\", \"green\")\n+    text.append(\"\\n\")\n \n     line1 = Text()\n     line1.append(\"foo\", \"red\")\n     line2 = Text()\n     line2.append(\"bar\", \"green\")\n-    split = test.split(\"\\n\")\n+    split = text.split(\"\\n\")\n     assert len(split) == 2\n     assert split[0] == line1\n     assert split[1] == line2\n@@ -334,8 +334,8 @@ def test_split():\n \n \n def test_split_spans():\n-    test = Text.from_markup(\"[red]Hello\\n[b]World\")\n-    lines = test.split(\"\\n\")\n+    text = Text.from_markup(\"[red]Hello\\n[b]World\")\n+    lines = text.split(\"\\n\")\n     assert lines[0].plain == \"Hello\"\n     assert lines[1].plain == \"World\"\n     assert lines[0].spans == [Span(0, 5, \"red\")]\n@@ -386,16 +386,16 @@ def test_divide():\n \n \n def test_right_crop():\n-    test = Text()\n-    test.append(\"foobar\", \"red\")\n-    test.right_crop(3)\n-    assert str(test) == \"foo\"\n-    assert test._spans == [Span(0, 3, \"red\")]\n+    text = Text()\n+    text.append(\"foobar\", \"red\")\n+    text.right_crop(3)\n+    assert str(text) == \"foo\"\n+    assert text._spans == [Span(0, 3, \"red\")]\n \n \n def test_wrap_3():\n-    test = Text(\"foo bar baz\")\n-    lines = test.wrap(Console(), 3)\n+    text = Text(\"foo bar baz\")\n+    lines = text.wrap(Console(), 3)\n     print(repr(lines))\n     assert len(lines) == 3\n     assert lines[0] == Text(\"foo\")\n@@ -404,17 +404,46 @@ def test_wrap_3():\n \n \n def test_wrap_4():\n-    test = Text(\"foo bar baz\", justify=\"left\")\n-    lines = test.wrap(Console(), 4)\n+    text = Text(\"foo bar baz\", justify=\"left\")\n+    lines = text.wrap(Console(), 4)\n     assert len(lines) == 3\n     assert lines[0] == Text(\"foo \")\n     assert lines[1] == Text(\"bar \")\n     assert lines[2] == Text(\"baz \")\n \n \n+def test_wrap_wrapped_word_length_greater_than_available_width():\n+    text = Text(\"1234 12345678\")\n+    lines = text.wrap(Console(), 7)\n+    assert lines._lines == [\n+        Text(\"1234 \"),\n+        Text(\"1234567\"),\n+        Text(\"8\"),\n+    ]\n+\n+\n+def test_wrap_cjk():\n+    text = Text(\"\u308f\u3055\u3073\")\n+    lines = text.wrap(Console(), 4)\n+    assert lines._lines == [\n+        Text(\"\u308f\u3055\"),\n+        Text(\"\u3073\"),\n+    ]\n+\n+\n+def test_wrap_cjk_width_mid_character():\n+    text = Text(\"\u308f\u3055\u3073\")\n+    lines = text.wrap(Console(), 3)\n+    assert lines._lines == [\n+        Text(\"\u308f\"),\n+        Text(\"\u3055\"),\n+        Text(\"\u3073\"),\n+    ]\n+\n+\n def test_wrap_long():\n-    test = Text(\"abracadabra\", justify=\"left\")\n-    lines = test.wrap(Console(), 4)\n+    text = Text(\"abracadabra\", justify=\"left\")\n+    lines = text.wrap(Console(), 4)\n     assert len(lines) == 3\n     assert lines[0] == Text(\"abra\")\n     assert lines[1] == Text(\"cada\")\n@@ -422,8 +451,8 @@ def test_wrap_long():\n \n \n def test_wrap_overflow():\n-    test = Text(\"Some more words\")\n-    lines = test.wrap(Console(), 4, overflow=\"ellipsis\")\n+    text = Text(\"Some more words\")\n+    lines = text.wrap(Console(), 4, overflow=\"ellipsis\")\n     assert (len(lines)) == 3\n     assert lines[0] == Text(\"Some\")\n     assert lines[1] == Text(\"more\")\n@@ -431,28 +460,52 @@ def test_wrap_overflow():\n \n \n def test_wrap_overflow_long():\n-    test = Text(\"bigword\" * 10)\n-    lines = test.wrap(Console(), 4, overflow=\"ellipsis\")\n+    text = Text(\"bigword\" * 10)\n+    lines = text.wrap(Console(), 4, overflow=\"ellipsis\")\n     assert len(lines) == 1\n     assert lines[0] == Text(\"big\u2026\")\n \n \n def test_wrap_long_words():\n-    test = Text(\"X 123456789\", justify=\"left\")\n-    lines = test.wrap(Console(), 4)\n+    text = Text(\"XX 12345678912\")\n+    lines = text.wrap(Console(), 4)\n+\n+    assert lines._lines == [\n+        Text(\"XX \"),\n+        Text(\"1234\"),\n+        Text(\"5678\"),\n+        Text(\"912\"),\n+    ]\n \n-    assert len(lines) == 3\n-    assert lines[0] == Text(\"X 12\")\n-    assert lines[1] == Text(\"3456\")\n-    assert lines[2] == Text(\"789 \")\n+\n+def test_wrap_long_words_2():\n+    # https://github.com/Textualize/rich/issues/2273\n+    text = Text(\"Hello, World...123\")\n+    lines = text.wrap(Console(), 10)\n+    assert lines._lines == [\n+        Text(\"Hello, \"),\n+        Text(\"World...12\"),\n+        Text(\"3\"),\n+    ]\n+\n+\n+def test_wrap_long_words_justify_left():\n+    text = Text(\"X 123456789\", justify=\"left\")\n+    lines = text.wrap(Console(), 4)\n+\n+    assert len(lines) == 4\n+    assert lines[0] == Text(\"X   \")\n+    assert lines[1] == Text(\"1234\")\n+    assert lines[2] == Text(\"5678\")\n+    assert lines[3] == Text(\"9   \")\n \n \n def test_no_wrap_no_crop():\n-    test = Text(\"Hello World!\" * 3)\n+    text = Text(\"Hello World!\" * 3)\n \n     console = Console(width=20, file=StringIO())\n-    console.print(test, no_wrap=True)\n-    console.print(test, no_wrap=True, crop=False, overflow=\"ignore\")\n+    console.print(text, no_wrap=True)\n+    console.print(text, no_wrap=True, crop=False, overflow=\"ignore\")\n \n     print(repr(console.file.getvalue()))\n     assert (\n@@ -462,15 +515,15 @@ def test_no_wrap_no_crop():\n \n \n def test_fit():\n-    test = Text(\"Hello\\nWorld\")\n-    lines = test.fit(3)\n+    text = Text(\"Hello\\nWorld\")\n+    lines = text.fit(3)\n     assert str(lines[0]) == \"Hel\"\n     assert str(lines[1]) == \"Wor\"\n \n \n def test_wrap_tabs():\n-    test = Text(\"foo\\tbar\", justify=\"left\")\n-    lines = test.wrap(Console(), 4)\n+    text = Text(\"foo\\tbar\", justify=\"left\")\n+    lines = text.wrap(Console(), 4)\n     assert len(lines) == 2\n     assert str(lines[0]) == \"foo \"\n     assert str(lines[1]) == \"bar \"\n@@ -478,10 +531,10 @@ def test_wrap_tabs():\n \n def test_render():\n     console = Console(width=15, record=True)\n-    test = Text.from_markup(\n+    text = Text.from_markup(\n         \"[u][b]Where[/b] there is a [i]Will[/i], there is a Way.[/u]\"\n     )\n-    console.print(test)\n+    console.print(text)\n     output = console.export_text(styles=True)\n     expected = \"\\x1b[1;4mWhere\\x1b[0m\\x1b[4m there is \\x1b[0m\\n\\x1b[4ma \\x1b[0m\\x1b[3;4mWill\\x1b[0m\\x1b[4m, there \\x1b[0m\\n\\x1b[4mis a Way.\\x1b[0m\\n\"\n     assert output == expected\n@@ -524,21 +577,21 @@ def test_print_sep_end(print_text, result):\n \n \n def test_tabs_to_spaces():\n-    test = Text(\"\\tHello\\tWorld\", tab_size=8)\n-    test.expand_tabs()\n-    assert test.plain == \"        Hello   World\"\n+    text = Text(\"\\tHello\\tWorld\", tab_size=8)\n+    text.expand_tabs()\n+    assert text.plain == \"        Hello   World\"\n \n-    test = Text(\"\\tHello\\tWorld\", tab_size=4)\n-    test.expand_tabs()\n-    assert test.plain == \"    Hello   World\"\n+    text = Text(\"\\tHello\\tWorld\", tab_size=4)\n+    text.expand_tabs()\n+    assert text.plain == \"    Hello   World\"\n \n-    test = Text(\".\\t..\\t...\\t....\\t\", tab_size=4)\n-    test.expand_tabs()\n-    assert test.plain == \".   ..  ... ....    \"\n+    text = Text(\".\\t..\\t...\\t....\\t\", tab_size=4)\n+    text.expand_tabs()\n+    assert text.plain == \".   ..  ... ....    \"\n \n-    test = Text(\"No Tabs\")\n-    test.expand_tabs()\n-    assert test.plain == \"No Tabs\"\n+    text = Text(\"No Tabs\")\n+    text.expand_tabs()\n+    assert text.plain == \"No Tabs\"\n \n \n def test_markup_switch():\n@@ -629,47 +682,47 @@ def test_truncate_ellipsis_pad(input, count, expected):\n \n \n def test_pad():\n-    test = Text(\"foo\")\n-    test.pad(2)\n-    assert test.plain == \"  foo  \"\n+    text = Text(\"foo\")\n+    text.pad(2)\n+    assert text.plain == \"  foo  \"\n \n \n def test_align_left():\n-    test = Text(\"foo\")\n-    test.align(\"left\", 10)\n-    assert test.plain == \"foo       \"\n+    text = Text(\"foo\")\n+    text.align(\"left\", 10)\n+    assert text.plain == \"foo       \"\n \n \n def test_align_right():\n-    test = Text(\"foo\")\n-    test.align(\"right\", 10)\n-    assert test.plain == \"       foo\"\n+    text = Text(\"foo\")\n+    text.align(\"right\", 10)\n+    assert text.plain == \"       foo\"\n \n \n def test_align_center():\n-    test = Text(\"foo\")\n-    test.align(\"center\", 10)\n-    assert test.plain == \"   foo    \"\n+    text = Text(\"foo\")\n+    text.align(\"center\", 10)\n+    assert text.plain == \"   foo    \"\n \n \n def test_detect_indentation():\n-    test = \"\"\"\\\n+    text = \"\"\"\\\n foo\n     bar\n     \"\"\"\n-    assert Text(test).detect_indentation() == 4\n-    test = \"\"\"\\\n+    assert Text(text).detect_indentation() == 4\n+    text = \"\"\"\\\n foo\n     bar\n       baz\n     \"\"\"\n-    assert Text(test).detect_indentation() == 2\n+    assert Text(text).detect_indentation() == 2\n     assert Text(\"\").detect_indentation() == 1\n     assert Text(\" \").detect_indentation() == 1\n \n \n def test_indentation_guides():\n-    test = Text(\n+    text = Text(\n         \"\"\"\\\n for a in range(10):\n     print(a)\n@@ -683,7 +736,7 @@ def test_indentation_guides():\n \n \"\"\"\n     )\n-    result = test.with_indent_guides()\n+    result = text.with_indent_guides()\n     print(result.plain)\n     print(repr(result.plain))\n     expected = \"for a in range(10):\\n\u2502   print(a)\\n\\nfoo = [\\n\u2502   1,\\n\u2502   {\\n\u2502   \u2502   2\\n\u2502   }\\n]\\n\\n\"\n@@ -691,7 +744,6 @@ def test_indentation_guides():\n \n \n def test_slice():\n-\n     text = Text.from_markup(\"[red]foo [bold]bar[/red] baz[/bold]\")\n     assert text[0] == Text(\"f\", spans=[Span(0, 1, \"red\")])\n     assert text[4] == Text(\"b\", spans=[Span(0, 1, \"red\"), Span(0, 1, \"bold\")])\n", "problem_statement": "[BUG] Text wrapping edge case\nDiscovered a possible edge case with text wrapping, probably connected to when a \"word\" is greater than the available width.\r\n\r\nConsider the following:\r\n\r\n```python\r\nconsole.print(\"Hello, World...123 \", width=10)\r\n```\r\n\r\nThis produces:\r\n\r\n```\r\nHello, Wor\r\nld...123\r\n```\r\n\r\nI think this occurs because \"World...123\" doesn't fit in to 10 characters, so folds on to the next line.\r\n\r\nI would expect there to be an additional new line after the Hello, like this:\r\n\r\n```\r\nHello,\r\nWorld...12\r\n3\r\n```\n", "hints_text": "", "created_at": "2022-05-25T11:46:33Z"}
{"repo": "Textualize/rich", "pull_number": 2294, "instance_id": "Textualize__rich-2294", "issue_numbers": ["2284"], "base_commit": "5ccf4ed37686b69aa1412272cfdf60fc10ad9f5d", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex bc33feab4..f8083da2c 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -10,6 +10,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n ### Fixed\n \n - Allow exceptions that are raised while a Live is rendered to be displayed and/or processed https://github.com/Textualize/rich/pull/2305\n+- Fix crashes that can happen with `inspect` when docstrings contain some special control codes https://github.com/Textualize/rich/pull/2294\n \n ## [12.4.4] - 2022-05-24\n \ndiff --git a/pyproject.toml b/pyproject.toml\nindex 1b16acf9b..f2edc90aa 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -61,3 +61,6 @@ enable_error_code = [\"ignore-without-code\", \"redundant-expr\", \"truthy-bool\"]\n [[tool.mypy.overrides]]\n module = [\"pygments.*\", \"IPython.*\", \"commonmark.*\", \"ipywidgets.*\"]\n ignore_missing_imports = true\n+\n+[tool.pytest.ini_options]\n+testpaths = [\"tests\"]\ndiff --git a/rich/_inspect.py b/rich/_inspect.py\nindex 01713e576..af4403407 100644\n--- a/rich/_inspect.py\n+++ b/rich/_inspect.py\n@@ -5,6 +5,7 @@\n from typing import Any, Iterable, Optional, Tuple\n \n from .console import Group, RenderableType\n+from .control import escape_control_codes\n from .highlighter import ReprHighlighter\n from .jupyter import JupyterMixin\n from .panel import Panel\n@@ -19,12 +20,6 @@ def _first_paragraph(doc: str) -> str:\n     return paragraph\n \n \n-def _reformat_doc(doc: str) -> str:\n-    \"\"\"Reformat docstring.\"\"\"\n-    doc = cleandoc(doc).strip()\n-    return doc\n-\n-\n class Inspect(JupyterMixin):\n     \"\"\"A renderable to inspect any Python Object.\n \n@@ -161,11 +156,9 @@ def safe_getattr(attr_name: str) -> Tuple[Any, Any]:\n                 yield \"\"\n \n         if self.docs:\n-            _doc = getdoc(obj)\n+            _doc = self._get_formatted_doc(obj)\n             if _doc is not None:\n-                if not self.help:\n-                    _doc = _first_paragraph(_doc)\n-                doc_text = Text(_reformat_doc(_doc), style=\"inspect.help\")\n+                doc_text = Text(_doc, style=\"inspect.help\")\n                 doc_text = highlighter(doc_text)\n                 yield doc_text\n                 yield \"\"\n@@ -200,13 +193,10 @@ def safe_getattr(attr_name: str) -> Tuple[Any, Any]:\n                     add_row(key_text, Pretty(value, highlighter=highlighter))\n                 else:\n                     if self.docs:\n-                        docs = getdoc(value)\n+                        docs = self._get_formatted_doc(value)\n                         if docs is not None:\n-                            _doc = _reformat_doc(str(docs))\n-                            if not self.help:\n-                                _doc = _first_paragraph(_doc)\n-                            _signature_text.append(\"\\n\" if \"\\n\" in _doc else \" \")\n-                            doc = highlighter(_doc)\n+                            _signature_text.append(\"\\n\" if \"\\n\" in docs else \" \")\n+                            doc = highlighter(docs)\n                             doc.stylize(\"inspect.doc\")\n                             _signature_text.append(doc)\n \n@@ -220,3 +210,24 @@ def safe_getattr(attr_name: str) -> Tuple[Any, Any]:\n                 f\"[b cyan]{not_shown_count}[/][i] attribute(s) not shown.[/i] \"\n                 f\"Run [b][magenta]inspect[/]([not b]inspect[/])[/b] for options.\"\n             )\n+\n+    def _get_formatted_doc(self, object_: Any) -> Optional[str]:\n+        \"\"\"\n+        Extract the docstring of an object, process it and returns it.\n+        The processing consists in cleaning up the doctring's indentation,\n+        taking only its 1st paragraph if `self.help` is not True,\n+        and escape its control codes.\n+\n+        Args:\n+            object_ (Any): the object to get the docstring from.\n+\n+        Returns:\n+            Optional[str]: the processed docstring, or None if no docstring was found.\n+        \"\"\"\n+        docs = getdoc(object_)\n+        if docs is None:\n+            return None\n+        docs = cleandoc(docs).strip()\n+        if not self.help:\n+            docs = _first_paragraph(docs)\n+        return escape_control_codes(docs)\ndiff --git a/rich/control.py b/rich/control.py\nindex 747311fce..a8a912553 100644\n--- a/rich/control.py\n+++ b/rich/control.py\n@@ -1,19 +1,35 @@\n+import sys\n import time\n from typing import TYPE_CHECKING, Callable, Dict, Iterable, List, Union\n \n+if sys.version_info >= (3, 8):\n+    from typing import Final\n+else:\n+    from typing_extensions import Final  # pragma: no cover\n+\n from .segment import ControlCode, ControlType, Segment\n \n if TYPE_CHECKING:\n     from .console import Console, ConsoleOptions, RenderResult\n \n-STRIP_CONTROL_CODES = [\n+STRIP_CONTROL_CODES: Final = [\n+    7,  # Bell\n     8,  # Backspace\n     11,  # Vertical tab\n     12,  # Form feed\n     13,  # Carriage return\n ]\n-_CONTROL_TRANSLATE = {_codepoint: None for _codepoint in STRIP_CONTROL_CODES}\n+_CONTROL_STRIP_TRANSLATE: Final = {\n+    _codepoint: None for _codepoint in STRIP_CONTROL_CODES\n+}\n \n+CONTROL_ESCAPE: Final = {\n+    7: \"\\\\a\",\n+    8: \"\\\\b\",\n+    11: \"\\\\v\",\n+    12: \"\\\\f\",\n+    13: \"\\\\r\",\n+}\n \n CONTROL_CODES_FORMAT: Dict[int, Callable[..., str]] = {\n     ControlType.BELL: lambda: \"\\x07\",\n@@ -169,7 +185,7 @@ def __rich_console__(\n \n \n def strip_control_codes(\n-    text: str, _translate_table: Dict[int, None] = _CONTROL_TRANSLATE\n+    text: str, _translate_table: Dict[int, None] = _CONTROL_STRIP_TRANSLATE\n ) -> str:\n     \"\"\"Remove control codes from text.\n \n@@ -182,6 +198,22 @@ def strip_control_codes(\n     return text.translate(_translate_table)\n \n \n+def escape_control_codes(\n+    text: str,\n+    _translate_table: Dict[int, str] = CONTROL_ESCAPE,\n+) -> str:\n+    \"\"\"Replace control codes with their \"escaped\" equivalent in the given text.\n+    (e.g. \"\\b\" becomes \"\\\\b\")\n+\n+    Args:\n+        text (str): A string possibly containing control codes.\n+\n+    Returns:\n+        str: String with control codes replaced with their escaped version.\n+    \"\"\"\n+    return text.translate(_translate_table)\n+\n+\n if __name__ == \"__main__\":  # pragma: no cover\n     from rich.console import Console\n \ndiff --git a/rich/text.py b/rich/text.py\nindex f6b349d6a..1471fac2d 100644\n--- a/rich/text.py\n+++ b/rich/text.py\n@@ -2,7 +2,6 @@\n from functools import partial, reduce\n from math import gcd\n from operator import itemgetter\n-from rich.emoji import EmojiVariant\n from typing import (\n     TYPE_CHECKING,\n     Any,\n@@ -141,7 +140,8 @@ def __init__(\n         tab_size: Optional[int] = 8,\n         spans: Optional[List[Span]] = None,\n     ) -> None:\n-        self._text = [strip_control_codes(text)]\n+        sanitized_text = strip_control_codes(text)\n+        self._text = [sanitized_text]\n         self.style = style\n         self.justify: Optional[\"JustifyMethod\"] = justify\n         self.overflow: Optional[\"OverflowMethod\"] = overflow\n@@ -149,7 +149,7 @@ def __init__(\n         self.end = end\n         self.tab_size = tab_size\n         self._spans: List[Span] = spans or []\n-        self._length: int = len(text)\n+        self._length: int = len(sanitized_text)\n \n     def __len__(self) -> int:\n         return self._length\n@@ -394,9 +394,10 @@ def plain(self) -> str:\n     def plain(self, new_text: str) -> None:\n         \"\"\"Set the text to a new value.\"\"\"\n         if new_text != self.plain:\n-            self._text[:] = [new_text]\n+            sanitized_text = strip_control_codes(new_text)\n+            self._text[:] = [sanitized_text]\n             old_length = self._length\n-            self._length = len(new_text)\n+            self._length = len(sanitized_text)\n             if old_length > self._length:\n                 self._trim_spans()\n \n@@ -906,10 +907,10 @@ def append(\n \n         if len(text):\n             if isinstance(text, str):\n-                text = strip_control_codes(text)\n-                self._text.append(text)\n+                sanitized_text = strip_control_codes(text)\n+                self._text.append(sanitized_text)\n                 offset = len(self)\n-                text_length = len(text)\n+                text_length = len(sanitized_text)\n                 if style is not None:\n                     self._spans.append(Span(offset, offset + text_length, style))\n                 self._length += text_length\n", "test_patch": "diff --git a/tests/test_control.py b/tests/test_control.py\nindex 987206d82..d2704e980 100644\n--- a/tests/test_control.py\n+++ b/tests/test_control.py\n@@ -1,4 +1,4 @@\n-from rich.control import Control, strip_control_codes\n+from rich.control import Control, escape_control_codes, strip_control_codes\n from rich.segment import ControlType, Segment\n \n \n@@ -13,6 +13,12 @@ def test_strip_control_codes():\n     assert strip_control_codes(\"Fear is the mind killer\") == \"Fear is the mind killer\"\n \n \n+def test_escape_control_codes():\n+    assert escape_control_codes(\"\") == \"\"\n+    assert escape_control_codes(\"foo\\rbar\") == \"foo\\\\rbar\"\n+    assert escape_control_codes(\"Fear is the mind killer\") == \"Fear is the mind killer\"\n+\n+\n def test_control_move_to():\n     control = Control.move_to(5, 10)\n     print(control.segment)\ndiff --git a/tests/test_inspect.py b/tests/test_inspect.py\nindex b4c1d2a70..d2e2d86c9 100644\n--- a/tests/test_inspect.py\n+++ b/tests/test_inspect.py\n@@ -299,3 +299,41 @@ class Thing:\n         \"\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n\"\n     )\n     assert render(module, methods=True) == expected\n+\n+\n+@pytest.mark.parametrize(\n+    \"special_character,expected_replacement\",\n+    (\n+        (\"\\a\", \"\\\\a\"),\n+        (\"\\b\", \"\\\\b\"),\n+        (\"\\f\", \"\\\\f\"),\n+        (\"\\r\", \"\\\\r\"),\n+        (\"\\v\", \"\\\\v\"),\n+    ),\n+)\n+def test_can_handle_special_characters_in_docstrings(\n+    special_character: str, expected_replacement: str\n+):\n+    class Something:\n+        class Thing:\n+            pass\n+\n+    Something.Thing.__doc__ = f\"\"\"\n+    Multiline docstring\n+    with {special_character} should be handled\n+    \"\"\"\n+\n+    expected = \"\"\"\\\n+\u256d\u2500 <class 'tests.test_inspect.test_can_handle_sp\u2500\u256e\n+\u2502 class test_can_handle_special_characters_in_do \u2502\n+\u2502 cstrings.<locals>.Something():                 \u2502\n+\u2502                                                \u2502\n+\u2502 Thing = class Thing():                         \u2502\n+\u2502         Multiline docstring                    \u2502\n+\u2502         with %s should be handled              \u2502\n+\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n+\"\"\" % (\n+        expected_replacement\n+    )\n+\n+    assert render(Something, methods=True) == expected\n", "problem_statement": "IndexError: list index out of range when using inspect(pyparsing, all=True)\nOS: macOS Monterey 12.4\r\nCPU: Intel\r\nPython version:\r\n\r\n`Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:43:32) [Clang 12.0.1 ]`\r\n\r\n`rich` and `pyparsing` version: 12.2.0 and 3.0.8\r\n\r\n```\r\n\u276f conda list rich\r\n# packages in environment at /usr/local/Caskroom/miniconda/base:\r\n#\r\n# Name                    Version                   Build  Channel\r\nrich                      12.2.0             pyhd8ed1ab_0    conda-forge\r\n\u276f conda list pyparsing\r\n# packages in environment at /usr/local/Caskroom/miniconda/base:\r\n#\r\n# Name                    Version                   Build  Channel\r\npyparsing                 3.0.8              pyhd8ed1ab_0    conda-forge\r\n```\r\n\r\nTraceback:\r\n\r\n```\r\n$ python3 -c \"import pyparsing; from rich import inspect; inspect(pyparsing, all=True)\" # similar error when using `methods=True`\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n    import pyparsing; from rich import inspect; inspect(pyparsing, all=True)\r\n                                                \u2502       \u2514 <module 'pyparsing' from '/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/pyparsing/__init__.py'>\r\n                                                \u2514 <function inspect at 0x10849e5f0>\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/__init__.py\", line 168, in inspect\r\n    _console.print(_inspect)\r\n    \u2502              \u2514 <rich._inspect.Inspect object at 0x1084b5b70>\r\n    \u2514 <console width=160 None>\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1752, in print\r\n    extend(render(renderable, render_options))\r\n    \u2502      \u2502      \u2502           \u2514 ConsoleOptions(size=ConsoleDimensions(width=160, height=48), legacy_windows=False, min_width=1, max_width=160, is_terminal=False...\r\n    \u2502      \u2502      \u2514 <rich.panel.Panel object at 0x1087b9ed0>\r\n    \u2502      \u2514 <bound method Console.render of <console width=160 None>>\r\n    \u2514 <built-in method extend of list object at 0x1087d9340>\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1390, in render\r\n    for render_output in iter_render:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/panel.py\", line 175, in __rich_console__\r\n    lines = console.render_lines(renderable, child_options, style=style)\r\n            \u2502                    \u2502           \u2502                    \u2514 Style()\r\n            \u2502                    \u2502           \u2514 ConsoleOptions(size=ConsoleDimensions(width=160, height=48), legacy_windows=False, min_width=158, max_width=158, is_terminal=Fal...\r\n            \u2502                    \u2514 Padding(<rich.console.Group object at 0x1087ba320>, (0,1,0,1))\r\n            \u2514 <console width=160 None>\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1425, in render_lines\r\n    lines = list(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/segment.py\", line 288, in split_and_crop_lines\r\n    for segment in segments:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1390, in render\r\n    for render_output in iter_render:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/padding.py\", line 97, in __rich_console__\r\n    lines = console.render_lines(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1425, in render_lines\r\n    lines = list(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/segment.py\", line 288, in split_and_crop_lines\r\n    for segment in segments:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1394, in render\r\n    yield from self.render(render_output, _options)\r\n               \u2502           \u2502              \u2514 ConsoleOptions(size=ConsoleDimensions(width=160, height=48), legacy_windows=False, min_width=156, max_width=156, is_terminal=Fal...\r\n               \u2502           \u2514 <rich.table.Table object at 0x1087ba2f0>\r\n               \u2514 <console width=160 None>\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1390, in render\r\n    for render_output in iter_render:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/table.py\", line 505, in __rich_console__\r\n    yield from self._render(console, render_options, widths)\r\n               \u2502            \u2502        \u2502               \u2514 [31, 125]\r\n               \u2502            \u2502        \u2514 ConsoleOptions(size=ConsoleDimensions(width=160, height=48), legacy_windows=False, min_width=156, max_width=156, is_terminal=Fal...\r\n               \u2502            \u2514 <console width=160 None>\r\n               \u2514 <rich.table.Table object at 0x1087ba2f0>\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/table.py\", line 818, in _render\r\n    lines = console.render_lines(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1425, in render_lines\r\n    lines = list(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/segment.py\", line 288, in split_and_crop_lines\r\n    for segment in segments:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1390, in render\r\n    for render_output in iter_render:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/padding.py\", line 97, in __rich_console__\r\n    lines = console.render_lines(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1425, in render_lines\r\n    lines = list(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/segment.py\", line 288, in split_and_crop_lines\r\n    for segment in segments:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/console.py\", line 1390, in render\r\n    for render_output in iter_render:\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/text.py\", line 632, in __rich_console__\r\n    lines = self.wrap(\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/text.py\", line 1155, in wrap\r\n    for line in self.split(allow_blank=True):\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/text.py\", line 1021, in split\r\n    line for line in self.divide(flatten_spans()) if line.plain != separator\r\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.10/site-packages/rich/text.py\", line 1091, in divide\r\n    line_start, line_end = line_ranges[end_line_no]\r\n    \u2502           \u2502          \u2502           \u2514 13\r\n    \u2502           \u2502          \u2514 [(0, 252), (252, 253), (253, 318), (318, 319), (319, 388), (388, 389), (389, 447), (447, 448), (448, 508), (508, 509), (509, 577...\r\n    \u2502           \u2514 588\r\n    \u2514 578\r\nIndexError: list index out of range\r\n```\n", "hints_text": "", "created_at": "2022-05-25T09:59:53Z"}
{"repo": "Textualize/rich", "pull_number": 2247, "instance_id": "Textualize__rich-2247", "issue_numbers": ["2240"], "base_commit": "5a999f49f9e1617ab6d31381a4c862caa0a75873", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex e14a3690c..eb65a5316 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -12,6 +12,10 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Change SVG export to create a simpler SVG\n - Fix render_lines crash when render height was negative https://github.com/Textualize/rich/pull/2246\n \n+### Added\n+\n+- Add `padding` to Syntax constructor https://github.com/Textualize/rich/pull/2247\n+\n ## [12.3.0] - 2022-04-26\n \n ### Added\ndiff --git a/rich/syntax.py b/rich/syntax.py\nindex 6a337e407..cb34855ac 100644\n--- a/rich/syntax.py\n+++ b/rich/syntax.py\n@@ -23,13 +23,14 @@\n from pygments.util import ClassNotFound\n \n from rich.containers import Lines\n+from rich.padding import Padding, PaddingDimensions\n \n from ._loop import loop_first\n from .color import Color, blend_rgb\n from .console import Console, ConsoleOptions, JustifyMethod, RenderResult\n from .jupyter import JupyterMixin\n from .measure import Measurement\n-from .segment import Segment\n+from .segment import Segment, Segments\n from .style import Style\n from .text import Text\n \n@@ -100,6 +101,7 @@\n }\n \n RICH_SYNTAX_THEMES = {\"ansi_light\": ANSI_LIGHT, \"ansi_dark\": ANSI_DARK}\n+NUMBERS_COLUMN_DEFAULT_PADDING = 2\n \n \n class SyntaxTheme(ABC):\n@@ -209,6 +211,7 @@ class Syntax(JupyterMixin):\n         word_wrap (bool, optional): Enable word wrapping.\n         background_color (str, optional): Optional background color, or None to use theme color. Defaults to None.\n         indent_guides (bool, optional): Show indent guides. Defaults to False.\n+        padding (PaddingDimensions): Padding to apply around the syntax. Defaults to 0 (no padding).\n     \"\"\"\n \n     _pygments_style_class: Type[PygmentsStyle]\n@@ -242,6 +245,7 @@ def __init__(\n         word_wrap: bool = False,\n         background_color: Optional[str] = None,\n         indent_guides: bool = False,\n+        padding: PaddingDimensions = 0,\n     ) -> None:\n         self.code = code\n         self._lexer = lexer\n@@ -258,6 +262,7 @@ def __init__(\n             Style(bgcolor=background_color) if background_color else Style()\n         )\n         self.indent_guides = indent_guides\n+        self.padding = padding\n \n         self._theme = self.get_theme(theme)\n \n@@ -278,6 +283,7 @@ def from_path(\n         word_wrap: bool = False,\n         background_color: Optional[str] = None,\n         indent_guides: bool = False,\n+        padding: PaddingDimensions = 0,\n     ) -> \"Syntax\":\n         \"\"\"Construct a Syntax object from a file.\n \n@@ -296,6 +302,7 @@ def from_path(\n             word_wrap (bool, optional): Enable word wrapping of code.\n             background_color (str, optional): Optional background color, or None to use theme color. Defaults to None.\n             indent_guides (bool, optional): Show indent guides. Defaults to False.\n+            padding (PaddingDimensions): Padding to apply around the syntax. Defaults to 0 (no padding).\n \n         Returns:\n             [Syntax]: A Syntax object that may be printed to the console\n@@ -320,6 +327,7 @@ def from_path(\n             word_wrap=word_wrap,\n             background_color=background_color,\n             indent_guides=indent_guides,\n+            padding=padding,\n         )\n \n     @classmethod\n@@ -498,7 +506,10 @@ def _numbers_column_width(self) -> int:\n         \"\"\"Get the number of characters used to render the numbers column.\"\"\"\n         column_width = 0\n         if self.line_numbers:\n-            column_width = len(str(self.start_line + self.code.count(\"\\n\"))) + 2\n+            column_width = (\n+                len(str(self.start_line + self.code.count(\"\\n\")))\n+                + NUMBERS_COLUMN_DEFAULT_PADDING\n+            )\n         return column_width\n \n     def _get_number_styles(self, console: Console) -> Tuple[Style, Style, Style]:\n@@ -527,15 +538,31 @@ def _get_number_styles(self, console: Console) -> Tuple[Style, Style, Style]:\n     def __rich_measure__(\n         self, console: \"Console\", options: \"ConsoleOptions\"\n     ) -> \"Measurement\":\n+        _, right, _, left = Padding.unpack(self.padding)\n         if self.code_width is not None:\n-            width = self.code_width + self._numbers_column_width\n+            width = self.code_width + self._numbers_column_width + right + left\n             return Measurement(self._numbers_column_width, width)\n         return Measurement(self._numbers_column_width, options.max_width)\n \n     def __rich_console__(\n         self, console: Console, options: ConsoleOptions\n     ) -> RenderResult:\n+        segments = Segments(self._get_syntax(console, options))\n+        if self.padding:\n+            yield Padding(\n+                segments, style=self._theme.get_background_style(), pad=self.padding\n+            )\n+        else:\n+            yield segments\n \n+    def _get_syntax(\n+        self,\n+        console: Console,\n+        options: ConsoleOptions,\n+    ) -> Iterable[Segment]:\n+        \"\"\"\n+        Get the Segments for the Syntax object, excluding any vertical/horizontal padding\n+        \"\"\"\n         transparent_background = self._get_base_style().transparent_background\n         code_width = (\n             (\n@@ -553,12 +580,6 @@ def __rich_console__(\n         code = code.expandtabs(self.tab_size)\n         text = self.highlight(code, self.line_range)\n \n-        (\n-            background_style,\n-            number_style,\n-            highlight_number_style,\n-        ) = self._get_number_styles(console)\n-\n         if not self.line_numbers and not self.word_wrap and not self.line_range:\n             if not ends_on_nl:\n                 text.remove_suffix(\"\\n\")\n@@ -615,11 +636,16 @@ def __rich_console__(\n \n         highlight_line = self.highlight_lines.__contains__\n         _Segment = Segment\n-        padding = _Segment(\" \" * numbers_column_width + \" \", background_style)\n         new_line = _Segment(\"\\n\")\n \n         line_pointer = \"> \" if options.legacy_windows else \"\u2771 \"\n \n+        (\n+            background_style,\n+            number_style,\n+            highlight_number_style,\n+        ) = self._get_number_styles(console)\n+\n         for line_no, line in enumerate(lines, self.start_line + line_offset):\n             if self.word_wrap:\n                 wrapped_lines = console.render_lines(\n@@ -628,7 +654,6 @@ def __rich_console__(\n                     style=background_style,\n                     pad=not transparent_background,\n                 )\n-\n             else:\n                 segments = list(line.render(console, end=\"\"))\n                 if options.no_wrap:\n@@ -642,7 +667,11 @@ def __rich_console__(\n                             pad=not transparent_background,\n                         )\n                     ]\n+\n             if self.line_numbers:\n+                wrapped_line_left_pad = _Segment(\n+                    \" \" * numbers_column_width + \" \", background_style\n+                )\n                 for first, wrapped_line in loop_first(wrapped_lines):\n                     if first:\n                         line_column = str(line_no).rjust(numbers_column_width - 2) + \" \"\n@@ -653,7 +682,7 @@ def __rich_console__(\n                             yield _Segment(\"  \", highlight_number_style)\n                             yield _Segment(line_column, number_style)\n                     else:\n-                        yield padding\n+                        yield wrapped_line_left_pad\n                     yield from wrapped_line\n                     yield new_line\n             else:\n@@ -739,6 +768,16 @@ def __rich_console__(\n         dest=\"lexer_name\",\n         help=\"Lexer name\",\n     )\n+    parser.add_argument(\n+        \"-p\", \"--padding\", type=int, default=0, dest=\"padding\", help=\"Padding\"\n+    )\n+    parser.add_argument(\n+        \"--highlight-line\",\n+        type=int,\n+        default=None,\n+        dest=\"highlight_line\",\n+        help=\"The line number (not index!) to highlight\",\n+    )\n     args = parser.parse_args()\n \n     from rich.console import Console\n@@ -755,6 +794,8 @@ def __rich_console__(\n             theme=args.theme,\n             background_color=args.background_color,\n             indent_guides=args.indent_guides,\n+            padding=args.padding,\n+            highlight_lines={args.highlight_line},\n         )\n     else:\n         syntax = Syntax.from_path(\n@@ -765,5 +806,7 @@ def __rich_console__(\n             theme=args.theme,\n             background_color=args.background_color,\n             indent_guides=args.indent_guides,\n+            padding=args.padding,\n+            highlight_lines={args.highlight_line},\n         )\n     console.print(syntax, soft_wrap=args.soft_wrap)\n", "test_patch": "diff --git a/tests/test_syntax.py b/tests/test_syntax.py\nindex e5d904f36..a88ce0a33 100644\n--- a/tests/test_syntax.py\n+++ b/tests/test_syntax.py\n@@ -1,5 +1,5 @@\n # coding=utf-8\n-\n+import io\n import os\n import sys\n import tempfile\n@@ -303,6 +303,22 @@ def test_syntax_guess_lexer():\n     assert Syntax.guess_lexer(\"banana.html\", \"{{something|filter:3}}\") == \"html+django\"\n \n \n+def test_syntax_padding():\n+    syntax = Syntax(\"x = 1\", lexer=\"python\", padding=(1, 3))\n+    console = Console(\n+        width=20,\n+        file=io.StringIO(),\n+        color_system=\"truecolor\",\n+        legacy_windows=False,\n+        record=True,\n+    )\n+    console.print(syntax)\n+    output = console.export_text()\n+    assert (\n+        output == \"                    \\n   x = 1            \\n                    \\n\"\n+    )\n+\n+\n if __name__ == \"__main__\":\n     syntax = Panel.fit(\n         Syntax(\n", "problem_statement": "Add padding to Syntax\nWe often want to add padding around Syntax. This can be done with `Padding` but it would be better if Syntax itself supported padding so we could use the theme colors.\r\n\r\nThe Syntax object should grow a `padding` argument on the constructor.\n", "hints_text": "", "created_at": "2022-05-03T11:45:29Z"}
{"repo": "Textualize/rich", "pull_number": 2226, "instance_id": "Textualize__rich-2226", "issue_numbers": ["2207"], "base_commit": "49840e3b82821d0d57e7e20992eb8e1d9af74a7d", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5001a075c..e4691104b 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -11,6 +11,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n - Ability to change terminal window title https://github.com/Textualize/rich/pull/2200\n - Added show_speed parameter to progress.track which will show the speed when the total is not known\n+- Python blocks can now opt out from being rendered in tracebacks's frames, by setting a `_rich_traceback_omit = True` in their local scope https://github.com/Textualize/rich/issues/2207\n \n ### Fixed\n \ndiff --git a/rich/traceback.py b/rich/traceback.py\nindex 5feefb93b..55acaf070 100644\n--- a/rich/traceback.py\n+++ b/rich/traceback.py\n@@ -367,6 +367,8 @@ def safe_str(_object: Any) -> str:\n                 if filename and not filename.startswith(\"<\"):\n                     if not os.path.isabs(filename):\n                         filename = os.path.join(_IMPORT_CWD, filename)\n+                if frame_summary.f_locals.get(\"_rich_traceback_omit\", False):\n+                    continue\n                 frame = Frame(\n                     filename=filename or \"?\",\n                     lineno=line_no,\n@@ -383,7 +385,7 @@ def safe_str(_object: Any) -> str:\n                     else None,\n                 )\n                 append(frame)\n-                if \"_rich_traceback_guard\" in frame_summary.f_locals:\n+                if frame_summary.f_locals.get(\"_rich_traceback_guard\", False):\n                     del stack.frames[:]\n \n             cause = getattr(exc_value, \"__cause__\", None)\n", "test_patch": "diff --git a/tests/test_traceback.py b/tests/test_traceback.py\nindex c4994c87b..2830e26aa 100644\n--- a/tests/test_traceback.py\n+++ b/tests/test_traceback.py\n@@ -1,6 +1,7 @@\n import io\n import re\n import sys\n+from typing import List\n \n import pytest\n \n@@ -307,6 +308,42 @@ def test_suppress():\n         assert \"foo\" in traceback.suppress[1]\n \n \n+@pytest.mark.parametrize(\n+    \"rich_traceback_omit_for_level2,expected_frames_length,expected_frame_names\",\n+    (\n+        # fmt: off\n+        [True, 3, [\"test_rich_traceback_omit_optional_local_flag\", \"level1\", \"level3\"]],\n+        [False, 4, [\"test_rich_traceback_omit_optional_local_flag\", \"level1\", \"level2\", \"level3\"]],\n+        # fmt: on\n+    ),\n+)\n+def test_rich_traceback_omit_optional_local_flag(\n+    rich_traceback_omit_for_level2: bool,\n+    expected_frames_length: int,\n+    expected_frame_names: List[str],\n+):\n+    def level1():\n+        return level2()\n+\n+    def level2():\n+        # true-ish values are enough to trigger the opt-out:\n+        _rich_traceback_omit = 1 if rich_traceback_omit_for_level2 else 0\n+        return level3()\n+\n+    def level3():\n+        return 1 / 0\n+\n+    try:\n+        level1()\n+    except Exception:\n+        exc_type, exc_value, traceback = sys.exc_info()\n+        trace = Traceback.from_exception(exc_type, exc_value, traceback).trace\n+        frames = trace.stacks[0].frames\n+        assert len(frames) == expected_frames_length\n+        frame_names = [f.name for f in frames]\n+        assert frame_names == expected_frame_names\n+\n+\n if __name__ == \"__main__\":  # pragma: no cover\n \n     expected = render(get_exception())\n", "problem_statement": "Hide frame from tracebacks\nSometimes it is useful to completely omit a frame from a traceback. Suggest a local variable with a name like `_rich_traceback_omit`\n", "hints_text": "Not sure I understand correctly, sorry... :sweat_smile: \r\n\r\nDo you mean something like this?\r\n```py\r\n@dataclass\r\nclass Frame:\r\n    filename: str\r\n    lineno: int\r\n    name: str\r\n    line: str = \"\"\r\n    locals: Optional[Dict[str, pretty.Node]] = None\r\n    _rich_traceback_omit: bool = False # <-- new opt-in allowing to exclude that frame\r\n```\r\n...which would be powered behind the scenes by something like the possibility to simply add `_rich_traceback_omit = True` to the locals of any Python object.\r\n...and that we would detect when we create the Frame object, as we have `frame_summary.f_locals` at this point?\nEssentially that. The idea is that Textual can remove things like descriptors from the traceback, so the user doesn't see noise from the library code.\r\n\r\nWe do something similar to omit library code (see `suppress`)", "created_at": "2022-04-26T11:42:44Z"}
{"repo": "Textualize/rich", "pull_number": 2225, "instance_id": "Textualize__rich-2225", "issue_numbers": ["2206"], "base_commit": "a7e8a6b7da653237c4484480011e963b095742fe", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 638ede8d3..5001a075c 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -20,6 +20,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fixed recursion error in Jupyter progress bars https://github.com/Textualize/rich/issues/2047\n - Complex numbers are now identified by the highlighter https://github.com/Textualize/rich/issues/2214\n - Fix crash on IDLE and forced is_terminal detection to False because IDLE can't do escape codes https://github.com/Textualize/rich/issues/2222\n+- Fixed missing blank line in traceback rendering https://github.com/Textualize/rich/issues/2206\n \n ### Changed\n \ndiff --git a/rich/traceback.py b/rich/traceback.py\nindex 8f092c661..5feefb93b 100644\n--- a/rich/traceback.py\n+++ b/rich/traceback.py\n@@ -584,7 +584,7 @@ def render_locals(frame: Frame) -> Iterable[ConsoleRenderable]:\n                 )\n                 excluded = False\n \n-            first = frame_index == 1\n+            first = frame_index == 0\n             frame_filename = frame.filename\n             suppressed = any(frame_filename.startswith(path) for path in self.suppress)\n \n", "test_patch": "diff --git a/tests/test_traceback.py b/tests/test_traceback.py\nindex e6b4de3f1..c4994c87b 100644\n--- a/tests/test_traceback.py\n+++ b/tests/test_traceback.py\n@@ -1,4 +1,5 @@\n import io\n+import re\n import sys\n \n import pytest\n@@ -21,10 +22,17 @@\n def test_handler():\n     console = Console(file=io.StringIO(), width=100, color_system=None)\n     expected_old_handler = sys.excepthook\n+\n+    def level1():\n+        level2()\n+\n+    def level2():\n+        return 1 / 0\n+\n     try:\n         old_handler = install(console=console)\n         try:\n-            1 / 0\n+            level1()\n         except Exception:\n             exc_type, exc_value, traceback = sys.exc_info()\n             sys.excepthook(exc_type, exc_value, traceback)\n@@ -32,6 +40,30 @@ def test_handler():\n             print(repr(rendered_exception))\n             assert \"Traceback\" in rendered_exception\n             assert \"ZeroDivisionError\" in rendered_exception\n+\n+            frame_blank_line_possible_preambles = (\n+                # Start of the stack rendering:\n+                \"\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\",\n+                # Each subsequent frame (starting with the file name) should then be preceded with a blank line:\n+                \"\u2502\" + (\" \" * 98) + \"\u2502\",\n+            )\n+            for frame_start in re.finditer(\n+                \"^\u2502 .+rich/tests/test_traceback\\.py:\",\n+                rendered_exception,\n+                flags=re.MULTILINE,\n+            ):\n+                frame_start_index = frame_start.start()\n+                for preamble in frame_blank_line_possible_preambles:\n+                    preamble_start, preamble_end = (\n+                        frame_start_index - len(preamble) - 1,\n+                        frame_start_index - 1,\n+                    )\n+                    if rendered_exception[preamble_start:preamble_end] == preamble:\n+                        break\n+                else:\n+                    pytest.fail(\n+                        f\"Frame {frame_start[0]} doesn't have the expected preamble\"\n+                    )\n     finally:\n         sys.excepthook = old_handler\n         assert old_handler == expected_old_handler\n", "problem_statement": "Missing whitespace in traceback\nIn tracebacks sometimes there is a missing blank line between traceback frames. Not sure what causes it.\n", "hints_text": "I'm still trying to reproduce the bug, but so far all the tracebacks I can display seem to be correctly formatted - (too) good job Rich! :sweat_smile: \nIt's a weird one, doesn't always occur. It may be related to the number of frames. Try with 2 frames.\nI checked with Darren, and I understand the issue now! Working on it :slightly_smiling_face: ", "created_at": "2022-04-26T10:27:09Z"}
{"repo": "Textualize/rich", "pull_number": 2219, "instance_id": "Textualize__rich-2219", "issue_numbers": ["2214"], "base_commit": "ed6ff7e9e40aded453f70366b5acfb455ba152b1", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 7ce176a50..638ede8d3 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -18,6 +18,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fixed markup escaping issue https://github.com/Textualize/rich/issues/2187\n - Safari - Box appearing around SVG export https://github.com/Textualize/rich/pull/2201\n - Fixed recursion error in Jupyter progress bars https://github.com/Textualize/rich/issues/2047\n+- Complex numbers are now identified by the highlighter https://github.com/Textualize/rich/issues/2214\n - Fix crash on IDLE and forced is_terminal detection to False because IDLE can't do escape codes https://github.com/Textualize/rich/issues/2222\n \n ### Changed\ndiff --git a/rich/default_styles.py b/rich/default_styles.py\nindex d803eec91..1969bb787 100644\n--- a/rich/default_styles.py\n+++ b/rich/default_styles.py\n@@ -78,6 +78,7 @@\n     \"repr.attrib_equal\": Style(bold=True),\n     \"repr.attrib_value\": Style(color=\"magenta\", italic=False),\n     \"repr.number\": Style(color=\"cyan\", bold=True, italic=False),\n+    \"repr.number_complex\": Style(color=\"cyan\", bold=True, italic=False),  # same\n     \"repr.bool_true\": Style(color=\"bright_green\", italic=True),\n     \"repr.bool_false\": Style(color=\"bright_red\", italic=True),\n     \"repr.none\": Style(color=\"magenta\", italic=True),\ndiff --git a/rich/highlighter.py b/rich/highlighter.py\nindex 7bee4167e..193261c4c 100644\n--- a/rich/highlighter.py\n+++ b/rich/highlighter.py\n@@ -94,6 +94,7 @@ class ReprHighlighter(RegexHighlighter):\n             r\"(?P<call>[\\w.]*?)\\(\",\n             r\"\\b(?P<bool_true>True)\\b|\\b(?P<bool_false>False)\\b|\\b(?P<none>None)\\b\",\n             r\"(?P<ellipsis>\\.\\.\\.)\",\n+            r\"(?P<number_complex>(?<!\\w)(?:\\-?[0-9]+\\.?[0-9]*(?:e[-+]?\\d+?)?)(?:[-+](?:[0-9]+\\.?[0-9]*(?:e[-+]?\\d+)?))?j)\",\n             r\"(?P<number>(?<!\\w)\\-?[0-9]+\\.?[0-9]*(e[-+]?\\d+?)?\\b|0x[0-9a-fA-F]*)\",\n             r\"(?P<path>\\B(/[-\\w._+]+)*\\/)(?P<filename>[-\\w._+]*)?\",\n             r\"(?<![\\\\\\w])(?P<str>b?'''.*?(?<!\\\\)'''|b?'.*?(?<!\\\\)'|b?\\\"\\\"\\\".*?(?<!\\\\)\\\"\\\"\\\"|b?\\\".*?(?<!\\\\)\\\")\",\n", "test_patch": "diff --git a/tests/test_highlighter.py b/tests/test_highlighter.py\nindex 930b340e5..0a036b72f 100644\n--- a/tests/test_highlighter.py\n+++ b/tests/test_highlighter.py\n@@ -59,6 +59,40 @@ def test_wrong_type():\n     (\" 1.2 \", [Span(1, 4, \"repr.number\")]),\n     (\" 0xff \", [Span(1, 5, \"repr.number\")]),\n     (\" 1e10 \", [Span(1, 5, \"repr.number\")]),\n+    (\" 1j \", [Span(1, 3, \"repr.number_complex\")]),\n+    (\" 3.14j \", [Span(1, 6, \"repr.number_complex\")]),\n+    (\n+        \" (3.14+2.06j) \",\n+        [\n+            Span(1, 2, \"repr.brace\"),\n+            Span(12, 13, \"repr.brace\"),\n+            Span(2, 12, \"repr.number_complex\"),\n+        ],\n+    ),\n+    (\n+        \" (3+2j) \",\n+        [\n+            Span(1, 2, \"repr.brace\"),\n+            Span(6, 7, \"repr.brace\"),\n+            Span(2, 6, \"repr.number_complex\"),\n+        ],\n+    ),\n+    (\n+        \" (123456.4321-1234.5678j) \",\n+        [\n+            Span(1, 2, \"repr.brace\"),\n+            Span(24, 25, \"repr.brace\"),\n+            Span(2, 24, \"repr.number_complex\"),\n+        ],\n+    ),\n+    (\n+        \" (-123123-2.1312342342423422e+25j) \",\n+        [\n+            Span(1, 2, \"repr.brace\"),\n+            Span(33, 34, \"repr.brace\"),\n+            Span(2, 33, \"repr.number_complex\"),\n+        ],\n+    ),\n     (\" /foo \", [Span(1, 2, \"repr.path\"), Span(2, 5, \"repr.filename\")]),\n     (\" /foo/bar.html \", [Span(1, 6, \"repr.path\"), Span(6, 14, \"repr.filename\")]),\n     (\"01-23-45-67-89-AB\", [Span(0, 17, \"repr.eui48\")]),  # 6x2 hyphen\n", "problem_statement": "[BUG] inconsistent coloring of complex numbers\nNot sure if I should report this as a bug or as a feature request, but there is a very minor issue when printing complex numbers: the decimal part of the imaginary number is uncolored.\r\n\r\ntry for example:\r\n\r\n```python\r\n>>> from rich import pretty\r\n>>> pretty.install()\r\n>>> 3.05 + 2.06j\r\n(3.05+2.06j)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/15832886/164705103-eca06cf1-a1c3-41ed-973c-0a02d70c8249.png)\r\n\r\nI tried this on Linux, rich version 12.2.0. This \"bug\" appears both in the terminal (alacritty in my case) as well as in jupyter notebooks, which makes me believe it is platform independent.\n", "hints_text": "Rich doesn't have any explicit supports for complex numbers. If you're adept with regexes, you could add it to highlighter.py\nThanks will, I'll try that.\n\nHowever, respectfully, complex numbers are natively supported by python so in my opinion they should also be natively supported by the rich pretty printer. Having to specify the same regex over and over in interactive sessions (which many scientific exploratory notebooks are for example) is not really user friendly...\n\nLike I said, it's a very minor issue and I understand that adding this feature might yield unnecessary overhead on your side. If that's the case just disregard it, but I think as rich will become more popular in the scientific community you might get this question again.\nI was actually suggesting that you could contribute this to highlighter.py in the repo, if you could come up with the regex. I'm happy to add it.\nSure! I'll give it a shot \ud83d\ude42", "created_at": "2022-04-25T11:24:27Z"}
{"repo": "Textualize/rich", "pull_number": 2216, "instance_id": "Textualize__rich-2216", "issue_numbers": ["2215"], "base_commit": "4dec7980fe527ea61feb7f039786bed0c4c0449c", "patch": "diff --git a/rich/pretty.py b/rich/pretty.py\nindex d3bac94e8..1c6b16716 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -366,7 +366,7 @@ def _get_braces_for_defaultdict(_object: DefaultDict[Any, Any]) -> Tuple[str, st\n \n \n def _get_braces_for_array(_object: \"array[Any]\") -> Tuple[str, str, str]:\n-    return (f\"array({_object.typecode!r}, [\", \"])\", \"array({_object.typecode!r})\")\n+    return (f\"array({_object.typecode!r}, [\", \"])\", f\"array({_object.typecode!r})\")\n \n \n _BRACES: Dict[type, Callable[[Any], Tuple[str, str, str]]] = {\n", "test_patch": "", "problem_statement": "Missing `f` prefix on f-strings\nSome strings looks like they're meant to be f-strings but are missing the `f` prefix meaning variable interpolation won't happen.\n\nhttps://github.com/Textualize/rich/blob/c979a1b16f27285b03fdb14f5e364ea36d7eba01/rich/pretty.py#L369\n\nI found this issue automatically. I'm a bot. Beep Boop \ud83e\udd8a. See other issues I found in your repo [here](https://codereview.doctor/Textualize/rich)\n", "hints_text": "", "created_at": "2022-04-24T00:15:00Z"}
{"repo": "Textualize/rich", "pull_number": 2201, "instance_id": "Textualize__rich-2201", "issue_numbers": ["2171"], "base_commit": "cb56ec7ebbbb9da1637efded61e3678c1660bcf5", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex e66cb4e19..86b56e44f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -15,6 +15,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n - Fall back to `sys.__stderr__` on POSIX systems when trying to get the terminal size (fix issues when Rich is piped to another process)\n - Fixed markup escaping issue https://github.com/Textualize/rich/issues/2187\n+- Safari - Box appearing around SVG export https://github.com/Textualize/rich/pull/2201\n \n ## [12.2.0] - 2022-04-05\n \ndiff --git a/rich/_export_format.py b/rich/_export_format.py\nindex f9217b2a2..d67fc81a3 100644\n--- a/rich/_export_format.py\n+++ b/rich/_export_format.py\n@@ -69,7 +69,7 @@\n             align-items: center;\n             background-color: {theme_background_color};\n             border-radius: 14px;\n-            outline: 1px solid #484848;\n+            box-shadow: 0 0 0 1px #484848;\n         }}\n         .{classes_prefix}-terminal:after {{\n             position: absolute;\n", "test_patch": "diff --git a/tests/test_console.py b/tests/test_console.py\nindex 3305202bd..b0cdfe5be 100644\n--- a/tests/test_console.py\n+++ b/tests/test_console.py\n@@ -543,7 +543,7 @@ def test_export_html_inline():\n             align-items: center;\n             background-color: #0c0c0c;\n             border-radius: 14px;\n-            outline: 1px solid #484848;\n+            box-shadow: 0 0 0 1px #484848;\n         }\n         .rich-svg-${SVG_HASH}-terminal:after {\n             position: absolute;\n", "problem_statement": "[BUG] SVG gets surrounded in a black box\n**Describe the bug**\r\n\r\nMaking an SVG, ideally a light-mode SVG, creates a black box around the terminal with square edges. Ideally, I think, the corners could be rounded to match the terminal application, otherwise, the box should be removed. Or both + a drop shadow, which would look really nice, I think. This is on the `terminal` div.\r\n\r\n![result](https://user-images.githubusercontent.com/4616906/161826947-223c22a7-b5f9-413d-9b45-06dfca82e7c8.svg)\r\n\r\n(I'm not sure why this only shows the top corner in the GitHub preview, but you still the extra box corner a bit there depending on your GitHub mode. Hey, you can click it and see the whole thing, nice! Thought it does lose some but not all of the styling. Though I'd also really like a way to just display the inner contents too with color inline. Anyway, back to the issue...)\r\n\r\nPNG images to illustrate:\r\n\r\n<img width=\"109\" alt=\"Screen Shot 2022-04-05 at 2 43 45 PM\" src=\"https://user-images.githubusercontent.com/4616906/161827390-eb475297-4a1f-4cb0-aefd-470bedc8eb1a.png\">\r\n\r\n<img width=\"308\" alt=\"Screen Shot 2022-04-05 at 2 43 54 PM\" src=\"https://user-images.githubusercontent.com/4616906/161827398-0d7c6cfa-2509-435e-96d3-461c6cb50dba.png\">\r\n\r\nAhhh, this might be a Safari bug. There's a border radius already, but it's not showing up on the the `terminal` div. Replacing outline with `box-shadow: black 5px 5px 10px;` does look fantastic, though, and that does follow the curved outline even on Safari.\r\n\r\n<img width=\"507\" alt=\"Screen Shot 2022-04-05 at 2 57 47 PM\" src=\"https://user-images.githubusercontent.com/4616906/161830253-68c59e87-bf3d-4e5e-8682-9bd29c175649.png\">\r\n\r\n\r\nThis seems to be a bug on Safari (https://github.com/tailwindlabs/tailwindcss/discussions/7649 and others) that used to be present on other browsers, but now mostly Safari.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nmacOS, Safari.\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```console\r\n$ python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=193 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 75                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=193, height=75),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=193,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=75,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=193, height=75)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 193                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-256color',      \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': 'iTerm.app',   \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Darwin\"\r\n$ pip freeze | grep rich\r\nrich==12.2.0\r\n```\r\n\r\n\r\n</details>\r\n\r\nPS: it was really trivial to add this to my app, and is amazing, love the feature! Don't want to sound negative opening an issue. :D\r\n\n", "hints_text": "Yeah, Safari has a bunch of issues. We think we can work around them.", "created_at": "2022-04-19T16:41:42Z"}
{"repo": "Textualize/rich", "pull_number": 2133, "instance_id": "Textualize__rich-2133", "issue_numbers": ["2018"], "base_commit": "9f43cccfce3b39b8ac637b4e8cdfe2f0946e9c23", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 596bd9977..c99f83a91 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -13,7 +13,8 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ### Fixed\n \n-- Add missing `end` keyword argument to `Text.from_markup`\n+- Add missing `end` keyword argument to `Text.from_markup` https://github.com/Textualize/rich/pull/2095\n+- Fallback to text lexer when no lexer guessed https://github.com/Textualize/rich/pull/2133\n - Fixed issue with decoding ANSI reset https://github.com/Textualize/rich/issues/2112\n \n ## [12.0.1] - 2022-03-22\ndiff --git a/poetry.lock b/poetry.lock\nindex ffcad1b97..457d10126 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -1002,7 +1002,7 @@ python-versions = \">=3.6\"\n \n [[package]]\n name = \"virtualenv\"\n-version = \"20.13.4\"\n+version = \"20.14.0\"\n description = \"Virtual Python Environment builder\"\n category = \"dev\"\n optional = false\n@@ -1786,8 +1786,8 @@ typing-extensions = [\n     {file = \"typing_extensions-4.1.1.tar.gz\", hash = \"sha256:1a9462dcc3347a79b1f1c0271fbe79e844580bb598bafa1ed208b94da3cdcd42\"},\n ]\n virtualenv = [\n-    {file = \"virtualenv-20.13.4-py2.py3-none-any.whl\", hash = \"sha256:c3e01300fb8495bc00ed70741f5271fc95fed067eb7106297be73d30879af60c\"},\n-    {file = \"virtualenv-20.13.4.tar.gz\", hash = \"sha256:ce8901d3bbf3b90393498187f2d56797a8a452fb2d0d7efc6fd837554d6f679c\"},\n+    {file = \"virtualenv-20.14.0-py2.py3-none-any.whl\", hash = \"sha256:1e8588f35e8b42c6ec6841a13c5e88239de1e6e4e4cedfd3916b306dc826ec66\"},\n+    {file = \"virtualenv-20.14.0.tar.gz\", hash = \"sha256:8e5b402037287126e81ccde9432b95a8be5b19d36584f64957060a3488c11ca8\"},\n ]\n wcwidth = [\n     {file = \"wcwidth-0.2.5-py2.py3-none-any.whl\", hash = \"sha256:beb4802a9cebb9144e99086eff703a642a13d6a0052920003a230f3294bbe784\"},\ndiff --git a/rich/traceback.py b/rich/traceback.py\nindex 0d764b7cb..8f092c661 100644\n--- a/rich/traceback.py\n+++ b/rich/traceback.py\n@@ -12,6 +12,7 @@\n from pygments.token import Comment, Keyword, Name, Number, Operator, String\n from pygments.token import Text as TextToken\n from pygments.token import Token\n+from pygments.util import ClassNotFound\n \n from . import pretty\n from ._loop import loop_last\n@@ -521,10 +522,10 @@ def _guess_lexer(cls, filename: str, code: str) -> str:\n             first_line = code[:new_line_index] if new_line_index != -1 else code\n             if first_line.startswith(\"#!\") and \"python\" in first_line.lower():\n                 return \"python\"\n-        lexer_name = (\n-            cls.LEXERS.get(ext) or guess_lexer_for_filename(filename, code).name\n-        )\n-        return lexer_name\n+        try:\n+            return cls.LEXERS.get(ext) or guess_lexer_for_filename(filename, code).name\n+        except ClassNotFound:\n+            return \"text\"\n \n     @group()\n     def _render_stack(self, stack: Stack) -> RenderResult:\n", "test_patch": "diff --git a/tests/test_traceback.py b/tests/test_traceback.py\nindex 31658c5a4..e6b4de3f1 100644\n--- a/tests/test_traceback.py\n+++ b/tests/test_traceback.py\n@@ -237,6 +237,16 @@ def test_guess_lexer():\n     assert Traceback._guess_lexer(\"foo\", \"foo\\nbnar\") == \"text\"\n \n \n+def test_guess_lexer_yaml_j2():\n+    # https://github.com/Textualize/rich/issues/2018\n+    code = \"\"\"\\\n+foobar:\n+    something: {{ raiser() }}\n+    else: {{ 5 + 5 }}\n+    \"\"\"\n+    assert Traceback._guess_lexer(\"test.yaml.j2\", code) == \"text\"\n+\n+\n def test_recursive():\n     def foo(n):\n         return bar(n)\n", "problem_statement": "[BUG] rich.traceback: no lexer for filename X found\n**Describe the bug**\r\n\r\nThe rich.traceback doesn't know how to render tracebacks originating from inside jinja2 templates.\r\nThe issue is twofold: (1) rich doesn't recognize the `.yaml.j2` extension as `jinja2+yaml`,  and (2) the fallback isn't to print the file contents without highlighting but instead to **simply not print it at all**.\r\nAs such this bug likely also affects other languages to compile to python bytecode, such as [dg](http://pyos.github.io/dg/), [Hylang](https://docs.hylang.org/en/stable/) and [hissp/hebigo](https://github.com/gilch/hissp).\r\n\r\nRepro:\r\n\r\ntest.py:\r\n```python\r\nimport jinja2, os\r\nfrom rich.traceback import install\r\ninstall()\r\ndef raiser():\r\n    raise Exception\r\nenv = jinja2.Environment(\r\n    loader = jinja2.FileSystemLoader([os.getcwd(), \"/\"], followlinks=True),\r\n)\r\nenv.globals[\"raiser\"] = raiser    \r\ntemplate = env.get_template(\"test.yaml.j2\")\r\nprint(template.render())\r\n```\r\ntest.yaml.j2:\r\n```jinja2\r\nfoobar:\r\n    something: {{ raiser() }}\r\n    else: {{ 5 + 5 }}\r\n```\r\n\r\nVanilla traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/pbsds/tmp/repro/test.py\", line 13, in <module>\r\n    print(template.render())\r\n  File \"/usr/lib/python3.10/site-packages/jinja2/environment.py\", line 1291, in render\r\n    self.environment.handle_exception()\r\n  File \"/usr/lib/python3.10/site-packages/jinja2/environment.py\", line 925, in handle_exception\r\n    raise rewrite_traceback_stack(source=source)\r\n  File \"/home/pbsds/tmp/repro/test.yaml.j2\", line 2, in top-level template code\r\n    something: {{ raiser() }}\r\n  File \"/home/pbsds/tmp/repro/test.py\", line 4, in raiser\r\n    raise Exception\r\nException\r\n```\r\n\r\nrich.traceback:\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/pbsds/tmp/repro/test.py:15 in <module>                                                     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   12                                                                                             \u2502\r\n\u2502   13 template = env.get_template(\"test.yaml.j2\")                                                 \u2502\r\n\u2502   14                                                                                             \u2502\r\n\u2502 \u2771 15 print(template.render())                                                                    \u2502\r\n\u2502   16                                                                                             \u2502\r\n\u2502 /usr/lib/python3.10/site-packages/jinja2/environment.py:1291 in render                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1288 \u2502   \u2502   try:                                                                              \u2502\r\n\u2502   1289 \u2502   \u2502   \u2502   return concat(self.root_render_func(ctx))  # type: ignore                     \u2502\r\n\u2502   1290 \u2502   \u2502   except Exception:                                                                 \u2502\r\n\u2502 \u2771 1291 \u2502   \u2502   \u2502   self.environment.handle_exception()                                           \u2502\r\n\u2502   1292 \u2502                                                                                         \u2502\r\n\u2502   1293 \u2502   async def render_async(self, *args: t.Any, **kwargs: t.Any) -> str:                   \u2502\r\n\u2502   1294 \u2502   \u2502   \"\"\"This works similar to :meth:`render` but returns a coroutine                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /usr/lib/python3.10/site-packages/jinja2/environment.py:925 in handle_exception                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    922 \u2502   \u2502   \"\"\"                                                                               \u2502\r\n\u2502    923 \u2502   \u2502   from .debug import rewrite_traceback_stack                                        \u2502\r\n\u2502    924 \u2502   \u2502                                                                                     \u2502\r\n\u2502 \u2771  925 \u2502   \u2502   raise rewrite_traceback_stack(source=source)                                      \u2502\r\n\u2502    926 \u2502                                                                                         \u2502\r\n\u2502    927 \u2502   def join_path(self, template: str, parent: str) -> str:                               \u2502\r\n\u2502    928 \u2502   \u2502   \"\"\"Join a template with the parent.  By default all the lookups are               \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/pbsds/tmp/repro/test.yaml.j2:2 in top-level template code                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 no lexer for filename 'test.yaml.j2' found                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/pbsds/tmp/repro/test.py:6 in raiser                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    3 install()                                                                                   \u2502\r\n\u2502    4                                                                                             \u2502\r\n\u2502    5 def raiser():                                                                               \u2502\r\n\u2502 \u2771  6 \u2502   raise Exception                                                                         \u2502\r\n\u2502    7                                                                                             \u2502\r\n\u2502    8 env = jinja2.Environment(                                                                   \u2502\r\n\u2502    9 \u2502   loader = jinja2.FileSystemLoader([os.getcwd(), \"/\"], followlinks=True),                 \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n```\r\n\r\n\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nManjaro GNOME, python 3.10.2, lxterminal\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                              \u2502\r\n\u2502                                                                              \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=80 ColorSystem.TRUECOLOR>                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                              \u2502\r\n\u2502     color_system = 'truecolor'                                               \u2502\r\n\u2502         encoding = 'utf-8'                                                   \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'               \u2502\r\n\u2502                    encoding='utf-8'>                                         \u2502\r\n\u2502           height = 24                                                        \u2502\r\n\u2502    is_alt_screen = False                                                     \u2502\r\n\u2502 is_dumb_terminal = False                                                     \u2502\r\n\u2502   is_interactive = True                                                      \u2502\r\n\u2502       is_jupyter = False                                                     \u2502\r\n\u2502      is_terminal = True                                                      \u2502\r\n\u2502   legacy_windows = False                                                     \u2502\r\n\u2502         no_color = False                                                     \u2502\r\n\u2502          options = ConsoleOptions(                                           \u2502\r\n\u2502                        size=ConsoleDimensions(width=80, height=24),          \u2502\r\n\u2502                        legacy_windows=False,                                 \u2502\r\n\u2502                        min_width=1,                                          \u2502\r\n\u2502                        max_width=80,                                         \u2502\r\n\u2502                        is_terminal=True,                                     \u2502\r\n\u2502                        encoding='utf-8',                                     \u2502\r\n\u2502                        max_height=24,                                        \u2502\r\n\u2502                        justify=None,                                         \u2502\r\n\u2502                        overflow=None,                                        \u2502\r\n\u2502                        no_wrap=False,                                        \u2502\r\n\u2502                        highlight=None,                                       \u2502\r\n\u2502                        markup=None,                                          \u2502\r\n\u2502                        height=None                                           \u2502\r\n\u2502                    )                                                         \u2502\r\n\u2502            quiet = False                                                     \u2502\r\n\u2502           record = False                                                     \u2502\r\n\u2502         safe_box = True                                                      \u2502\r\n\u2502             size = ConsoleDimensions(width=80, height=24)                    \u2502\r\n\u2502        soft_wrap = False                                                     \u2502\r\n\u2502           stderr = False                                                     \u2502\r\n\u2502            style = None                                                      \u2502\r\n\u2502         tab_size = 8                                                         \u2502\r\n\u2502            width = 80                                                        \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nrich==11.0.0\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "", "created_at": "2022-03-30T11:28:30Z"}
{"repo": "Textualize/rich", "pull_number": 2108, "instance_id": "Textualize__rich-2108", "issue_numbers": ["2107"], "base_commit": "cad92aa56c4de35c65abf33276674db6de5a7fa0", "patch": "diff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 140f77f43..3dc31bf80 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -19,6 +19,7 @@ The following people have contributed to the development of Rich:\n - [Josh Karpel](https://github.com/JoshKarpel)\n - [Andrew Kettmann](https://github.com/akettmann)\n - [Hedy Li](https://github.com/hedythedev)\n+- [Luka Mamukashvili](https://github.com/UltraStudioLTD)\n - [Alexander Mancevice](https://github.com/amancevice)\n - [Will McGugan](https://github.com/willmcgugan)\n - [Paul McGuire](https://github.com/ptmcg)\ndiff --git a/rich/__init__.py b/rich/__init__.py\nindex 2b2a29f15..01faa6e6b 100644\n--- a/rich/__init__.py\n+++ b/rich/__init__.py\n@@ -3,6 +3,7 @@\n import os\n from typing import Callable, IO, TYPE_CHECKING, Any, Optional, Union\n \n+from ._extension import load_ipython_extension\n \n __all__ = [\"get_console\", \"reconfigure\", \"print\", \"inspect\"]\n \n", "test_patch": "", "problem_statement": "[BUG] Rich's IPython extension doesn't work\n**Describe the bug**\r\n\r\nWhen trying to use `%load_ext rich` in **IPython** on Terminal it says following:\r\n```\r\n%Python 3.10.3 (main, Mar 17 2022, 04:46:20) [Clang 12.0.8 (https://android.googlesource.com/toolchain/llvm-project c935d99d7\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %load_ext rich\r\nThe rich module is not an IPython extension.\r\n```\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\npython -m rich.diagnose\r\npip freeze | grep rich\r\n```\r\n\r\nIf you're using Rich in a Jupyter Notebook, run the following snippet in a cell\r\nand paste the output in your bug report.\r\n\r\n```python\r\nfrom rich.diagnose import report\r\nreport()\r\n```\r\n\r\n</details>\r\n\r\n```\r\n\u276f python -m rich.diagnose\r\npip freeze | grep rich\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                    \u2502\r\n\u2502                                                                    \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=70 ColorSystem.TRUECOLOR>                       \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                    \u2502\r\n\u2502     color_system = 'truecolor'                                     \u2502\r\n\u2502         encoding = 'utf-8'                                         \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'     \u2502\r\n\u2502                    encoding='utf-8'>                               \u2502\r\n\u2502           height = 45                                              \u2502\r\n\u2502    is_alt_screen = False                                           \u2502\r\n\u2502 is_dumb_terminal = False                                           \u2502\r\n\u2502   is_interactive = True                                            \u2502\r\n\u2502       is_jupyter = False                                           \u2502\r\n\u2502      is_terminal = True                                            \u2502\r\n\u2502   legacy_windows = False                                           \u2502\r\n\u2502         no_color = False                                           \u2502\r\n\u2502          options = ConsoleOptions(                                 \u2502\r\n\u2502                        size=ConsoleDimensions(                     \u2502\r\n\u2502                            width=70,                               \u2502\r\n\u2502                            height=45                               \u2502\r\n\u2502                        ),                                          \u2502\r\n\u2502                        legacy_windows=False,                       \u2502\r\n\u2502                        min_width=1,                                \u2502\r\n\u2502                        max_width=70,                               \u2502\r\n\u2502                        is_terminal=True,                           \u2502\r\n\u2502                        encoding='utf-8',                           \u2502\r\n\u2502                        max_height=45,                              \u2502\r\n\u2502                        justify=None,                               \u2502\r\n\u2502                        overflow=None,                              \u2502\r\n\u2502                        no_wrap=False,                              \u2502\r\n\u2502                        highlight=None,                             \u2502\r\n\u2502                        markup=None,                                \u2502\r\n\u2502                        height=None                                 \u2502\r\n\u2502                    )                                               \u2502\r\n\u2502            quiet = False                                           \u2502\r\n\u2502           record = False                                           \u2502\r\n\u2502         safe_box = True                                            \u2502\r\n\u2502             size = ConsoleDimensions(width=70, height=45)          \u2502\r\n\u2502        soft_wrap = False                                           \u2502\r\n\u2502           stderr = False                                           \u2502\r\n\u2502            style = None                                            \u2502\r\n\u2502         tab_size = 8                                               \u2502\r\n\u2502            width = 70                                              \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-256color',      \u2502\r\n\u2502     'COLORTERM': 'truecolor',      \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\nrich @ file:///storage/emulated/0/Projects/rich\r\n```\r\n\r\n[![asciicast](https://asciinema.org/a/Xd3qDv897tjdEll0csW5XZk0T.svg)](https://asciinema.org/a/Xd3qDv897tjdEll0csW5XZk0T)\n", "hints_text": "", "created_at": "2022-03-25T14:45:40Z"}
{"repo": "Textualize/rich", "pull_number": 2066, "instance_id": "Textualize__rich-2066", "issue_numbers": ["2053"], "base_commit": "65cb9bfb7793cdf00badccbcdf7c3cee5e700caf", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 9f1a7e64f..740d652ff 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -15,7 +15,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n \n ### Fixed\n \n-- Fix capturing stdout on legacy Windows https://github.com/Textualize/rich/pull/2055\n+- Fix capturing stdout on legacy Windows https://github.com/Textualize/rich/pull/2066\n \n ## [12.0.0] - 2022-03-10\n \ndiff --git a/rich/_win32_console.py b/rich/_win32_console.py\nindex 0171f3fa2..f642279c5 100644\n--- a/rich/_win32_console.py\n+++ b/rich/_win32_console.py\n@@ -4,7 +4,7 @@\n \"\"\"\n import ctypes\n import sys\n-from typing import Any, NamedTuple, Type, cast\n+from typing import Any\n \n windll: Any = None\n if sys.platform == \"win32\":\n@@ -14,6 +14,7 @@\n \n import time\n from ctypes import Structure, byref, wintypes\n+from typing import IO, NamedTuple, Type, cast\n \n from rich.color import ColorSystem\n from rich.style import Style\n@@ -333,7 +334,7 @@ class LegacyWindowsTerm:\n         15,  # bright white\n     ]\n \n-    def __init__(self, file: IO[str]) -> None:\n+    def __init__(self, file: \"IO[str]\") -> None:\n         handle = GetStdHandle(STDOUT)\n         self._handle = handle\n         default_text = GetConsoleScreenBufferInfo(handle).wAttributes\ndiff --git a/rich/console.py b/rich/console.py\nindex 12406aefd..b91c84871 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -82,6 +82,15 @@ class NoChange:\n \n NO_CHANGE = NoChange()\n \n+try:\n+    _STDOUT_FILENO = sys.__stdout__.fileno()\n+except Exception:\n+    _STDOUT_FILENO = 1\n+\n+try:\n+    _STDERR_FILENO = sys.__stderr__.fileno()\n+except Exception:\n+    _STDERR_FILENO = 2\n \n CONSOLE_HTML_FORMAT = \"\"\"\\\n <!DOCTYPE html>\n@@ -1909,12 +1918,21 @@ def log(\n                 buffer_extend(line)\n \n     def _check_buffer(self) -> None:\n-        \"\"\"Check if the buffer may be rendered.\"\"\"\n+        \"\"\"Check if the buffer may be rendered. Render it if it can (e.g. Console.quiet is False)\n+        Rendering is supported on Windows, Unix and Jupyter environments. For\n+        legacy Windows consoles, the win32 API is called directly.\n+        This method will also record what it renders if recording is enabled via Console.record.\n+        \"\"\"\n         if self.quiet:\n             del self._buffer[:]\n             return\n         with self._lock:\n             if self._buffer_index == 0:\n+\n+                if self.record:\n+                    with self._record_buffer_lock:\n+                        self._record_buffer.extend(self._buffer[:])\n+\n                 if self.is_jupyter:  # pragma: no cover\n                     from .jupyter import display\n \n@@ -1927,18 +1945,19 @@ def _check_buffer(self) -> None:\n                         except (ValueError, io.UnsupportedOperation):\n                             file_no = -1\n \n-                        legacy_windows_stdout = self.legacy_windows and file_no == 1\n-                        if legacy_windows_stdout:\n+                        stdout_num = _STDOUT_FILENO\n+                        stderr_num = _STDERR_FILENO\n+                        is_std_stream = file_no in (stdout_num, stderr_num)\n+                        legacy_windows_std = self.legacy_windows and is_std_stream\n+                        if legacy_windows_std:\n                             from rich._win32_console import LegacyWindowsTerm\n                             from rich._windows_renderer import legacy_windows_render\n \n-                            with open(file_no, \"w\") as output_file:\n-                                legacy_windows_render(\n-                                    self._buffer[:], LegacyWindowsTerm(output_file)\n-                                )\n-\n-                        output_capture_enabled = bool(self._buffer_index)\n-                        if not legacy_windows_stdout or output_capture_enabled:\n+                            legacy_windows_render(\n+                                self._buffer[:], LegacyWindowsTerm(self.file)\n+                            )\n+                        else:\n+                            # Either a non-std stream on legacy Windows, or modern Windows.\n                             text = self._render_buffer(self._buffer[:])\n                             # https://bugs.python.org/issue37871\n                             write = self.file.write\n@@ -1965,9 +1984,6 @@ def _render_buffer(self, buffer: Iterable[Segment]) -> str:\n         append = output.append\n         color_system = self._color_system\n         legacy_windows = self.legacy_windows\n-        if self.record:\n-            with self._record_buffer_lock:\n-                self._record_buffer.extend(buffer)\n         not_terminal = not self.is_terminal\n         if self.no_color and color_system:\n             buffer = Segment.remove_color(buffer)\n", "test_patch": "", "problem_statement": "[BUG] Rich 12.0.0 fails to write to stdout attached to a pipe on Windows \n### Describe the bug\r\n\r\nSince rich 12.0.0, printing to stdout fails running under a subprocess attached to a pipe on Windows. \r\n\r\nTo reproduce, save the following reproducer and run it first with rich==12.0.0\r\n\r\n```python\r\nimport subprocess\r\nimport sys\r\n\r\ncode = \"\"\"\\\r\nimport sys\r\nfrom rich.console import Console\r\n\r\nconsole = Console(file=sys.stdout)\r\nconsole.print(\"spam\")\r\n\"\"\"\r\nerr_code = code.replace(\"sys.stdout\", \"sys.stderr\")\r\ncmd = [sys.executable, \"-\"]\r\n\r\nprint(\"[capture_output=True via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=True via sys.stderr]\")\r\nproc = subprocess.run(cmd, input=err_code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=False via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=False, encoding=\"utf-8\")\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/63936253/158076766-068ccd07-0ee2-463a-8482-74636297bd44.png)\r\n\r\nThere's a few observations here:\r\n\r\n- With rich==12.0.0 installed, the captured stdout is empty. With an older version it works fine (see orange / blue)\r\n- Standard error is completely unaffected. It's also fine letting the subprocess inherit the streams (see green)\r\n\r\n### Platform\r\n\r\n**Python:** CPython 3.8.5\r\n**OS:** Windows 10 Home 21H2 (build 19044.1526)\r\n**Terminal:** Windows Terminal 1.11.3471.0\r\n\r\n<details>\r\n<summary>rich.diagnose</summary>\r\n\r\n```\r\n(venv) PS R:\\Programming\\diff-shades> python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=148 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 35                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=148, height=35),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=148,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=35,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=148, height=35)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 148                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                         \u2502\r\n\u2502                                                     \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=True, truecolor=True) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                     \u2502\r\n\u2502 truecolor = True                                    \u2502\r\n\u2502        vt = True                                    \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': None,                  \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Windows\"\r\n```\r\n\r\n</details>\r\n\r\n### Additional context\r\n\r\n[This was discovered by GHA Windows CI](https://github.com/ichard26/diff-shades/runs/5528992639?check_suite_focus=true#step:5:235) (the problem is hidden and buried in this test, but this shows it has been reproduced under several environments[^1]). Original investigation into this strange behaviour happened in [the #black-formatter channel on Python Discord](https://discord.com/channels/267624335836053506/846434317021741086/952628086535520367).\r\n\r\nAccording to @jack1142 who helped me investigate it, it's related to the recent move to replace colorama with first-party code that interacts with the Windows APIs:\r\n\r\n> I'm pretty sure it's because it can't use WriteConsole API (the one that's used for legacy console printing) when it's piped because output from WriteConsole is not capturable \r\n\r\nThey then shared this excerpt from Windows console API documentation:\r\n\r\n> WriteConsole fails if it is used with a standard handle that is redirected to a file. If an application processes multilingual output that can be redirected, determine whether the output handle is a console handle (one method is to call the GetConsoleMode function and check whether it succeeds). If the handle is a console handle, call WriteConsole. If the handle is not a console handle, the output is redirected and you should call WriteFile to perform the I/O.\r\nhttps://docs.microsoft.com/en-us/windows/console/writeconsole \r\n\r\n[^1]: if you're curious, it's basically testing whether recording the output (via `Console(record=True)`) and then dumping it as HTML works as expected with the rest of the tool\n", "hints_text": "Thanks. Will take a look.\nDid I solve your problem? \n\nWhy not buy the devs a [coffee](https://ko-fi.com/textualize) to say thanks?\nOK with https://github.com/Textualize/rich/commit/51121fe30273d4b01e0801a7de4a05bd2b9031f6 installed bug.py is working correctly, but there's still three more situations which are crashing or working strangely :slightly_frowning_face: \r\n\r\n### `bug_reprint.py` -- calling console.print again crashes with an OSError\r\n\r\n```python\r\nimport subprocess\r\nimport sys\r\n\r\ncode = \"\"\"\\\r\nfrom rich.console import Console\r\n\r\nconsole = Console(stderr=False)\r\nconsole.print(\"spam\")\r\nconsole.print(\"eggs\")\r\n\"\"\"\r\nerr_code = code.replace(\"stderr=False\", \"stderr=True\")\r\ncmd = [sys.executable, \"-\"]\r\n\r\nprint(\"[capture_output=True via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=True via sys.stderr]\")\r\nproc = subprocess.run(cmd, input=err_code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=False via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=False, encoding=\"utf-8\")\r\n```\r\n\r\n```pwsh\r\n(venv) PS R:\\Programming\\diff-shades> python .\\bug_reprint.py\r\n[capture_output=True via sys.stdout]\r\nproc.stdout='spam\\n' proc.stderr='Traceback (most recent call last):\\n  File \"<stdin>\", line 5, in <module>\\n  File \"R:\\\\Programming\\\\diff-shades\\\\venv\\\\lib\\\\site-packages\\\\rich\\\\console.py\", line 1642, in print\\n    self._buffer.extend(new_segments)\\n  File \"R:\\\\Programming\\\\diff-shades\\\\venv\\\\lib\\\\site-packages\\\\rich\\\\console.py\", line 841, in __exit__\\n    self._exit_buffer()\\n  File \"R:\\\\Programming\\\\diff-shades\\\\venv\\\\lib\\\\site-packages\\\\rich\\\\console.py\", line 799, in _exit_buffer\\n    self._check_buffer()\\n  File \"R:\\\\Programming\\\\diff-shades\\\\venv\\\\lib\\\\site-packages\\\\rich\\\\console.py\", line 1935, in _check_buffer\\n    with open(file_no, \"w\") as output_file:\\nOSError: [WinError 6] The handle is invalid\\n'\r\n[capture_output=True via sys.stderr]\r\nproc.stdout='' proc.stderr='spam\\neggs\\n'\r\n[capture_output=False via sys.stdout]\r\nspam\r\neggs\r\n```\r\n\r\n<details>\r\n<summary>with rich==11.2.0</summary>\r\n\r\n```pwsh\r\n(venv) PS R:\\Programming\\diff-shades> python .\\bug_reprint.py\r\n[capture_output=True via sys.stdout]\r\nproc.stdout='spam\\neggs\\n' proc.stderr=''\r\n[capture_output=True via sys.stderr]\r\nproc.stdout='' proc.stderr='spam\\neggs\\n'\r\n[capture_output=False via sys.stdout]\r\nspam\r\neggs\r\n```\r\n\r\n</details>\r\n\r\n### `bug_reprint_builtin.py` -- calling the builtin print after also crashes with an OSError\r\n\r\n```python3\r\nimport subprocess\r\nimport sys\r\n\r\ncode = \"\"\"\\\r\nfrom rich.console import Console\r\n\r\nconsole = Console(stderr=False)\r\nconsole.print(\"spam\")\r\nprint(\"eggs\")\r\n\"\"\"\r\nerr_code = code.replace(\"stderr=False\", \"stderr=True\")\r\ncmd = [sys.executable, \"-\"]\r\n\r\nprint(\"[capture_output=True via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=True via sys.stderr]\")\r\nproc = subprocess.run(cmd, input=err_code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=False via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=False, encoding=\"utf-8\")\r\n```\r\n\r\n```pwsh\r\n(venv) PS R:\\Programming\\diff-shades> python .\\bug_reprint_builtin.py\r\n[capture_output=True via sys.stdout]\r\nproc.stdout='spam\\n' proc.stderr=\"Exception ignored in: <_io.TextIOWrapper name='<stdout>' mode='w' encoding='cp1252'>\\nOSError: [Errno 9] Bad file descriptor\\n\"\r\n[capture_output=True via sys.stderr]\r\nproc.stdout='eggs\\n' proc.stderr='spam\\n'\r\n[capture_output=False via sys.stdout]\r\nspam\r\neggs\r\n(venv) PS R:\\Programming\\diff-shades>\r\n```\r\n\r\n<details>\r\n<summary>with rich==11.2.0</summary>\r\n\r\n```pwsh\r\n[capture_output=True via sys.stdout]\r\nproc.stdout='spam\\neggs\\n' proc.stderr=''\r\n[capture_output=True via sys.stderr]\r\nproc.stdout='eggs\\n' proc.stderr='spam\\n'\r\n[capture_output=False via sys.stdout]\r\nspam\r\neggs\r\n```\r\n\r\n</details>\r\n\r\n### `bug_record.py` -- and recording the console output still doesn't work\r\n\r\n```python3\r\nimport os\r\nimport subprocess\r\nimport sys\r\n\r\ncode = \"\"\"\\\r\nfrom rich.console import Console\r\n\r\nconsole = Console(stderr=False, record=True)\r\nconsole.print(\"spam\")\r\nwith open(\"log.txt\", \"w\", encoding=\"utf-8\") as f:\r\n    f.write(console.export_text())\r\n\"\"\"\r\nerr_code = code.replace(\"stderr=False\", \"stderr=True\")\r\ncmd = [sys.executable, \"-\"]\r\n\r\nprint(\"[capture_output=True via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\nwith open(\"log.txt\", encoding=\"utf-8\") as f:\r\n    print(f\"recorded: {f.read()}\")\r\n\r\nprint(\"[capture_output=True via sys.stderr]\")\r\nproc = subprocess.run(cmd, input=err_code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\nwith open(\"log.txt\", encoding=\"utf-8\") as f:\r\n    print(f\"recorded: {f.read()}\")\r\n\r\nprint(\"[capture_output=False via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=False, encoding=\"utf-8\")\r\nwith open(\"log.txt\", encoding=\"utf-8\") as f:\r\n    print(f\"recorded: {f.read()}\")\r\n\r\nos.unlink(\"log.txt\")\r\n```\r\n\r\n```pwsh\r\n(venv) PS R:\\Programming\\diff-shades> python .\\bug_record.py\r\n[capture_output=True via sys.stdout]\r\nproc.stdout='spam\\n' proc.stderr=''\r\nrecorded:\r\n[capture_output=True via sys.stderr]\r\nproc.stdout='' proc.stderr='spam\\n'\r\nrecorded: spam\r\n\r\n[capture_output=False via sys.stdout]\r\nspam\r\nrecorded: spam\r\n```\r\n\r\n<details>\r\n<summary>with rich==11.2.0</summary>\r\n\r\n```pwsh\r\n(venv) PS R:\\Programming\\diff-shades> python .\\bug_record.py\r\n[capture_output=True via sys.stdout]\r\nproc.stdout='spam\\n' proc.stderr=''\r\nrecorded: spam\r\n\r\n[capture_output=True via sys.stderr]\r\nproc.stdout='' proc.stderr='spam\\n'\r\nrecorded: spam\r\n\r\n[capture_output=False via sys.stdout]\r\nspam\r\nrecorded: spam\r\n```\r\n\r\n</details>\r\n\r\n\n@ichard26 Thanks for investigating in such detail, and for the examples. It really helps! I'll take a look into these issues shortly \ud83d\udc4d", "created_at": "2022-03-15T11:05:26Z"}
{"repo": "Textualize/rich", "pull_number": 2055, "instance_id": "Textualize__rich-2055", "issue_numbers": ["2053"], "base_commit": "ae12e09065ad33d189bf28bdd4c4ace41f709d93", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 24ffa527d..395a4d30d 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## [12.0.1] - 2022-03-14\n+\n+### Fixed\n+\n+- Fix capturing stdout on legacy Windows https://github.com/Textualize/rich/pull/2055\n+\n ## [12.0.0] - 2022-03-10\n \n ### Added\ndiff --git a/rich/_win32_console.py b/rich/_win32_console.py\nindex c88287564..632408e02 100644\n--- a/rich/_win32_console.py\n+++ b/rich/_win32_console.py\n@@ -302,40 +302,6 @@ def SetConsoleTitle(title: str) -> bool:\n     return bool(_SetConsoleTitle(title))\n \n \n-_WriteConsole = windll.kernel32.WriteConsoleW\n-_WriteConsole.argtypes = [\n-    wintypes.HANDLE,\n-    wintypes.LPWSTR,\n-    wintypes.DWORD,\n-    wintypes.LPDWORD,\n-    wintypes.LPVOID,\n-]\n-_WriteConsole.restype = wintypes.BOOL\n-\n-\n-def WriteConsole(std_handle: wintypes.HANDLE, text: str) -> bool:\n-    \"\"\"Write a string of text to the console, starting at the current cursor position\n-\n-    Args:\n-        std_handle (wintypes.HANDLE): A handle to the console input buffer or the console screen buffer.\n-        text (str): The text to write.\n-\n-    Returns:\n-        bool: True if the function succeeds, otherwise False.\n-    \"\"\"\n-    buffer = wintypes.LPWSTR(text)\n-    num_chars_written = wintypes.LPDWORD()\n-    return bool(\n-        _WriteConsole(\n-            std_handle,\n-            buffer,\n-            wintypes.DWORD(len(text)),\n-            num_chars_written,\n-            wintypes.LPVOID(None),\n-        )\n-    )\n-\n-\n class LegacyWindowsTerm:\n     \"\"\"This class allows interaction with the legacy Windows Console API. It should only be used in the context\n     of environments where virtual terminal processing is not available. However, if it is used in a Windows environment,\n@@ -367,7 +333,7 @@ class LegacyWindowsTerm:\n         15,  # bright white\n     ]\n \n-    def __init__(self) -> None:\n+    def __init__(self, file: IO[str]) -> None:\n         handle = GetStdHandle(STDOUT)\n         self._handle = handle\n         default_text = GetConsoleScreenBufferInfo(handle).wAttributes\n@@ -377,6 +343,10 @@ def __init__(self) -> None:\n         self._default_back = (default_text >> 4) & 7\n         self._default_attrs = self._default_fore | (self._default_back << 4)\n \n+        self._file = file\n+        self.write = file.write\n+        self.flush = file.flush\n+\n     @property\n     def cursor_position(self) -> WindowsCoordinates:\n         \"\"\"Returns the current position of the cursor (0-based)\n@@ -405,7 +375,8 @@ def write_text(self, text: str) -> None:\n         Args:\n             text (str): The text to write to the console\n         \"\"\"\n-        WriteConsole(self._handle, text)\n+        self.write(text)\n+        self.flush()\n \n     def write_styled(self, text: str, style: Style) -> None:\n         \"\"\"Write styled text to the terminal.\n@@ -576,7 +547,7 @@ def set_title(self, title: str) -> None:\n \n     console = Console()\n \n-    term = LegacyWindowsTerm()\n+    term = LegacyWindowsTerm(sys.stdout)\n     term.set_title(\"Win32 Console Examples\")\n \n     style = Style(color=\"black\", bgcolor=\"red\")\ndiff --git a/rich/console.py b/rich/console.py\nindex a9ba4d463..12406aefd 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -1932,7 +1932,10 @@ def _check_buffer(self) -> None:\n                             from rich._win32_console import LegacyWindowsTerm\n                             from rich._windows_renderer import legacy_windows_render\n \n-                            legacy_windows_render(self._buffer[:], LegacyWindowsTerm())\n+                            with open(file_no, \"w\") as output_file:\n+                                legacy_windows_render(\n+                                    self._buffer[:], LegacyWindowsTerm(output_file)\n+                                )\n \n                         output_capture_enabled = bool(self._buffer_index)\n                         if not legacy_windows_stdout or output_capture_enabled:\n", "test_patch": "diff --git a/tests/test_win32_console.py b/tests/test_win32_console.py\nindex 4523600d6..33d4fe48b 100644\n--- a/tests/test_win32_console.py\n+++ b/tests/test_win32_console.py\n@@ -41,47 +41,43 @@ def win32_handle():\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_cursor_position(_):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         assert term.cursor_position == WindowsCoordinates(row=CURSOR_Y, col=CURSOR_X)\n \n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_screen_size(_):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         assert term.screen_size == WindowsCoordinates(\n             row=SCREEN_HEIGHT, col=SCREEN_WIDTH\n         )\n \n-    @patch.object(_win32_console, \"WriteConsole\", return_value=True)\n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n-    def test_write_text(_, WriteConsole, win32_handle):\n+    def test_write_text(_, win32_handle, capsys):\n         text = \"Hello, world!\"\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.write_text(text)\n \n-        WriteConsole.assert_called_once_with(win32_handle, text)\n+        captured = capsys.readouterr()\n+        assert captured.out == text\n \n-    @patch.object(_win32_console, \"WriteConsole\", return_value=True)\n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n-    def test_write_styled(_, SetConsoleTextAttribute, WriteConsole, win32_handle):\n+    def test_write_styled(_, SetConsoleTextAttribute, win32_handle, capsys):\n         style = Style.parse(\"black on red\")\n         text = \"Hello, world!\"\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.write_styled(text, style)\n \n-        # Check that we've called the Console API to write the text\n-        call_args = WriteConsole.call_args_list\n-        assert len(call_args) == 1\n-        args, _ = call_args[0]\n-        assert args == (win32_handle, text)\n+        captured = capsys.readouterr()\n+        assert captured.out == text\n \n         # Ensure we set the text attributes and then reset them after writing styled text\n         call_args = SetConsoleTextAttribute.call_args_list\n@@ -94,15 +90,14 @@ def test_write_styled(_, SetConsoleTextAttribute, WriteConsole, win32_handle):\n         assert second_args == (win32_handle,)\n         assert second_kwargs[\"attributes\"] == DEFAULT_STYLE_ATTRIBUTE\n \n-    @patch.object(_win32_console, \"WriteConsole\", return_value=True)\n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n-    def test_write_styled_bold(_, SetConsoleTextAttribute, __, win32_handle):\n+    def test_write_styled_bold(_, SetConsoleTextAttribute, win32_handle):\n         style = Style.parse(\"bold black on red\")\n         text = \"Hello, world!\"\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.write_styled(text, style)\n \n@@ -113,15 +108,14 @@ def test_write_styled_bold(_, SetConsoleTextAttribute, __, win32_handle):\n         assert first_args == (win32_handle,)\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n-    @patch.object(_win32_console, \"WriteConsole\", return_value=True)\n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n-    def test_write_styled_reverse(_, SetConsoleTextAttribute, __, win32_handle):\n+    def test_write_styled_reverse(_, SetConsoleTextAttribute, win32_handle):\n         style = Style.parse(\"reverse red on blue\")\n         text = \"Hello, world!\"\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.write_styled(text, style)\n \n@@ -132,15 +126,14 @@ def test_write_styled_reverse(_, SetConsoleTextAttribute, __, win32_handle):\n         assert first_args == (win32_handle,)\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n-    @patch.object(_win32_console, \"WriteConsole\", return_value=True)\n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n-    def test_write_styled_reverse(_, SetConsoleTextAttribute, __, win32_handle):\n+    def test_write_styled_reverse(_, SetConsoleTextAttribute, win32_handle):\n         style = Style.parse(\"dim bright_red on blue\")\n         text = \"Hello, world!\"\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.write_styled(text, style)\n \n@@ -151,17 +144,14 @@ def test_write_styled_reverse(_, SetConsoleTextAttribute, __, win32_handle):\n         assert first_args == (win32_handle,)\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n-    @patch.object(_win32_console, \"WriteConsole\", return_value=True)\n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n-    def test_write_styled_no_foreground_color(\n-        _, SetConsoleTextAttribute, __, win32_handle\n-    ):\n+    def test_write_styled_no_foreground_color(_, SetConsoleTextAttribute, win32_handle):\n         style = Style.parse(\"on blue\")\n         text = \"Hello, world!\"\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.write_styled(text, style)\n \n@@ -172,17 +162,14 @@ def test_write_styled_no_foreground_color(\n         assert first_args == (win32_handle,)\n         assert first_kwargs[\"attributes\"].value == expected_attr\n \n-    @patch.object(_win32_console, \"WriteConsole\", return_value=True)\n     @patch.object(_win32_console, \"SetConsoleTextAttribute\")\n     @patch.object(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n-    def test_write_styled_no_background_color(\n-        _, SetConsoleTextAttribute, __, win32_handle\n-    ):\n+    def test_write_styled_no_background_color(_, SetConsoleTextAttribute, win32_handle):\n         style = Style.parse(\"blue\")\n         text = \"Hello, world!\"\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.write_styled(text, style)\n \n@@ -203,7 +190,7 @@ def test_write_styled_no_background_color(\n     def test_erase_line(\n         _, FillConsoleOutputAttribute, FillConsoleOutputCharacter, win32_handle\n     ):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.erase_line()\n         start = WindowsCoordinates(row=CURSOR_Y, col=0)\n         FillConsoleOutputCharacter.assert_called_once_with(\n@@ -221,7 +208,7 @@ def test_erase_line(\n     def test_erase_end_of_line(\n         _, FillConsoleOutputAttribute, FillConsoleOutputCharacter, win32_handle\n     ):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.erase_end_of_line()\n \n         FillConsoleOutputCharacter.assert_called_once_with(\n@@ -242,7 +229,7 @@ def test_erase_end_of_line(\n     def test_erase_start_of_line(\n         _, FillConsoleOutputAttribute, FillConsoleOutputCharacter, win32_handle\n     ):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.erase_start_of_line()\n \n         start = WindowsCoordinates(CURSOR_Y, 0)\n@@ -260,7 +247,7 @@ def test_erase_start_of_line(\n     )\n     def test_move_cursor_to(_, SetConsoleCursorPosition, win32_handle):\n         coords = WindowsCoordinates(row=4, col=5)\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_to(coords)\n \n@@ -274,7 +261,7 @@ def test_move_cursor_to_out_of_bounds_row(\n         _, SetConsoleCursorPosition, win32_handle\n     ):\n         coords = WindowsCoordinates(row=-1, col=4)\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_to(coords)\n \n@@ -288,7 +275,7 @@ def test_move_cursor_to_out_of_bounds_col(\n         _, SetConsoleCursorPosition, win32_handle\n     ):\n         coords = WindowsCoordinates(row=10, col=-4)\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_to(coords)\n \n@@ -299,7 +286,7 @@ def test_move_cursor_to_out_of_bounds_col(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_move_cursor_up(_, SetConsoleCursorPosition, win32_handle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_up()\n \n@@ -312,7 +299,7 @@ def test_move_cursor_up(_, SetConsoleCursorPosition, win32_handle):\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_move_cursor_down(_, SetConsoleCursorPosition, win32_handle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_down()\n \n@@ -325,7 +312,7 @@ def test_move_cursor_down(_, SetConsoleCursorPosition, win32_handle):\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_move_cursor_forward(_, SetConsoleCursorPosition, win32_handle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         term.move_cursor_forward()\n \n@@ -343,7 +330,7 @@ def test_move_cursor_forward_newline_wrap(SetConsoleCursorPosition, win32_handle\n             \"GetConsoleScreenBufferInfo\",\n             return_value=cursor_at_end_of_line,\n         ):\n-            term = LegacyWindowsTerm()\n+            term = LegacyWindowsTerm(sys.stdout)\n             term.move_cursor_forward()\n \n         SetConsoleCursorPosition.assert_called_once_with(\n@@ -355,7 +342,7 @@ def test_move_cursor_forward_newline_wrap(SetConsoleCursorPosition, win32_handle\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_move_cursor_to_column(_, SetConsoleCursorPosition, win32_handle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.move_cursor_to_column(5)\n         SetConsoleCursorPosition.assert_called_once_with(\n             win32_handle, coords=WindowsCoordinates(CURSOR_Y, 5)\n@@ -366,7 +353,7 @@ def test_move_cursor_to_column(_, SetConsoleCursorPosition, win32_handle):\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_move_cursor_backward(_, SetConsoleCursorPosition, win32_handle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.move_cursor_backward()\n         SetConsoleCursorPosition.assert_called_once_with(\n             win32_handle, coords=WindowsCoordinates(row=CURSOR_Y, col=CURSOR_X - 1)\n@@ -384,7 +371,7 @@ def test_move_cursor_backward_prev_line_wrap(\n             \"GetConsoleScreenBufferInfo\",\n             return_value=cursor_at_start_of_line,\n         ):\n-            term = LegacyWindowsTerm()\n+            term = LegacyWindowsTerm(sys.stdout)\n             term.move_cursor_backward()\n         SetConsoleCursorPosition.assert_called_once_with(\n             win32_handle,\n@@ -396,7 +383,7 @@ def test_move_cursor_backward_prev_line_wrap(\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_hide_cursor(_, SetConsoleCursorInfo, win32_handle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.hide_cursor()\n \n         call_args = SetConsoleCursorInfo.call_args_list\n@@ -412,7 +399,7 @@ def test_hide_cursor(_, SetConsoleCursorInfo, win32_handle):\n         _win32_console, \"GetConsoleScreenBufferInfo\", return_value=StubScreenBufferInfo\n     )\n     def test_show_cursor(_, SetConsoleCursorInfo, win32_handle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.show_cursor()\n \n         call_args = SetConsoleCursorInfo.call_args_list\n@@ -425,14 +412,14 @@ def test_show_cursor(_, SetConsoleCursorInfo, win32_handle):\n \n     @patch.object(_win32_console, \"SetConsoleTitle\", return_value=None)\n     def test_set_title(SetConsoleTitle):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n         term.set_title(\"title\")\n \n         SetConsoleTitle.assert_called_once_with(\"title\")\n \n     @patch.object(_win32_console, \"SetConsoleTitle\", return_value=None)\n     def test_set_title_too_long(_):\n-        term = LegacyWindowsTerm()\n+        term = LegacyWindowsTerm(sys.stdout)\n \n         with pytest.raises(AssertionError):\n             term.set_title(\"a\" * 255)\n", "problem_statement": "[BUG] Rich 12.0.0 fails to write to stdout attached to a pipe on Windows \n### Describe the bug\r\n\r\nSince rich 12.0.0, printing to stdout fails running under a subprocess attached to a pipe on Windows. \r\n\r\nTo reproduce, save the following reproducer and run it first with rich==12.0.0\r\n\r\n```python\r\nimport subprocess\r\nimport sys\r\n\r\ncode = \"\"\"\\\r\nimport sys\r\nfrom rich.console import Console\r\n\r\nconsole = Console(file=sys.stdout)\r\nconsole.print(\"spam\")\r\n\"\"\"\r\nerr_code = code.replace(\"sys.stdout\", \"sys.stderr\")\r\ncmd = [sys.executable, \"-\"]\r\n\r\nprint(\"[capture_output=True via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=True via sys.stderr]\")\r\nproc = subprocess.run(cmd, input=err_code, capture_output=True, encoding=\"utf-8\")\r\nprint(f\"{proc.stdout=} {proc.stderr=}\")\r\n\r\nprint(\"[capture_output=False via sys.stdout]\")\r\nproc = subprocess.run(cmd, input=code, capture_output=False, encoding=\"utf-8\")\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/63936253/158076766-068ccd07-0ee2-463a-8482-74636297bd44.png)\r\n\r\nThere's a few observations here:\r\n\r\n- With rich==12.0.0 installed, the captured stdout is empty. With an older version it works fine (see orange / blue)\r\n- Standard error is completely unaffected. It's also fine letting the subprocess inherit the streams (see green)\r\n\r\n### Platform\r\n\r\n**Python:** CPython 3.8.5\r\n**OS:** Windows 10 Home 21H2 (build 19044.1526)\r\n**Terminal:** Windows Terminal 1.11.3471.0\r\n\r\n<details>\r\n<summary>rich.diagnose</summary>\r\n\r\n```\r\n(venv) PS R:\\Programming\\diff-shades> python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=148 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 35                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=148, height=35),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=148,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=35,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=148, height=35)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 148                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                         \u2502\r\n\u2502                                                     \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=True, truecolor=True) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                     \u2502\r\n\u2502 truecolor = True                                    \u2502\r\n\u2502        vt = True                                    \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': None,                  \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Windows\"\r\n```\r\n\r\n</details>\r\n\r\n### Additional context\r\n\r\n[This was discovered by GHA Windows CI](https://github.com/ichard26/diff-shades/runs/5528992639?check_suite_focus=true#step:5:235) (the problem is hidden and buried in this test, but this shows it has been reproduced under several environments[^1]). Original investigation into this strange behaviour happened in [the #black-formatter channel on Python Discord](https://discord.com/channels/267624335836053506/846434317021741086/952628086535520367).\r\n\r\nAccording to @jack1142 who helped me investigate it, it's related to the recent move to replace colorama with first-party code that interacts with the Windows APIs:\r\n\r\n> I'm pretty sure it's because it can't use WriteConsole API (the one that's used for legacy console printing) when it's piped because output from WriteConsole is not capturable \r\n\r\nThey then shared this excerpt from Windows console API documentation:\r\n\r\n> WriteConsole fails if it is used with a standard handle that is redirected to a file. If an application processes multilingual output that can be redirected, determine whether the output handle is a console handle (one method is to call the GetConsoleMode function and check whether it succeeds). If the handle is a console handle, call WriteConsole. If the handle is not a console handle, the output is redirected and you should call WriteFile to perform the I/O.\r\nhttps://docs.microsoft.com/en-us/windows/console/writeconsole \r\n\r\n[^1]: if you're curious, it's basically testing whether recording the output (via `Console(record=True)`) and then dumping it as HTML works as expected with the rest of the tool\n", "hints_text": "Thanks. Will take a look.", "created_at": "2022-03-14T10:27:04Z"}
{"repo": "Textualize/rich", "pull_number": 2038, "instance_id": "Textualize__rich-2038", "issue_numbers": ["2027"], "base_commit": "b9b99ad77068bd51eec321fd01a080cb98a132b7", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 79da255bf..b91cb3a4e 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -26,6 +26,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Collapsed definitions for single-character spinners, to save memory and reduce import time.\n - Fix print_json indent type in __init__.py\n - Fix error when inspecting object defined in REPL https://github.com/Textualize/rich/pull/2037\n+- Fix incorrect highlighting of non-indented JSON https://github.com/Textualize/rich/pull/2038\n \n ### Changed\n \ndiff --git a/rich/console.py b/rich/console.py\nindex e2d7a6d52..1eb2e3eeb 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -2209,3 +2209,5 @@ def save_html(\n         }\n     )\n     console.log(\"foo\")\n+\n+    console.print_json(data={\"name\": \"apple\", \"count\": 1}, indent=None)\ndiff --git a/rich/highlighter.py b/rich/highlighter.py\nindex 69d326021..6e10d56d7 100644\n--- a/rich/highlighter.py\n+++ b/rich/highlighter.py\n@@ -1,7 +1,9 @@\n+import re\n+import string\n from abc import ABC, abstractmethod\n from typing import List, Union\n \n-from .text import Text\n+from .text import Span, Text\n \n \n def _combine_regex(*regexes: str) -> str:\n@@ -104,17 +106,39 @@ class ReprHighlighter(RegexHighlighter):\n class JSONHighlighter(RegexHighlighter):\n     \"\"\"Highlights JSON\"\"\"\n \n+    # Captures the start and end of JSON strings, handling escaped quotes\n+    JSON_STR = r\"(?<![\\\\\\w])(?P<str>b?\\\".*?(?<!\\\\)\\\")\"\n+    JSON_WHITESPACE = {\" \", \"\\n\", \"\\r\", \"\\t\"}\n+\n     base_style = \"json.\"\n     highlights = [\n         _combine_regex(\n             r\"(?P<brace>[\\{\\[\\(\\)\\]\\}])\",\n             r\"\\b(?P<bool_true>true)\\b|\\b(?P<bool_false>false)\\b|\\b(?P<null>null)\\b\",\n             r\"(?P<number>(?<!\\w)\\-?[0-9]+\\.?[0-9]*(e[\\-\\+]?\\d+?)?\\b|0x[0-9a-fA-F]*)\",\n-            r\"(?<![\\\\\\w])(?P<str>b?\\\".*?(?<!\\\\)\\\")\",\n+            JSON_STR,\n         ),\n-        r\"(?<![\\\\\\w])(?P<key>b?\\\".*?(?<!\\\\)\\\")\\:\",\n     ]\n \n+    def highlight(self, text: Text) -> None:\n+        super().highlight(text)\n+\n+        # Additional work to handle highlighting JSON keys\n+        plain = text.plain\n+        append = text.spans.append\n+        whitespace = self.JSON_WHITESPACE\n+        for match in re.finditer(self.JSON_STR, plain):\n+            start, end = match.span()\n+            cursor = end\n+            while cursor < len(plain):\n+                char = plain[cursor]\n+                cursor += 1\n+                if char == \":\":\n+                    append(Span(start, end, \"json.key\"))\n+                elif char in whitespace:\n+                    continue\n+                break\n+\n \n if __name__ == \"__main__\":  # pragma: no cover\n     from .console import Console\n@@ -145,3 +169,6 @@ class JSONHighlighter(RegexHighlighter):\n     console.print(\n         \"127.0.1.1 bar 192.168.1.4 2001:0db8:85a3:0000:0000:8a2e:0370:7334 foo\"\n     )\n+    import json\n+\n+    console.print_json(json.dumps(obj={\"name\": \"apple\", \"count\": 1}), indent=None)\n", "test_patch": "diff --git a/tests/test_console.py b/tests/test_console.py\nindex 0989d8ba1..06fb4a835 100644\n--- a/tests/test_console.py\n+++ b/tests/test_console.py\n@@ -14,8 +14,8 @@\n     Console,\n     ConsoleDimensions,\n     ConsoleOptions,\n-    group,\n     ScreenUpdate,\n+    group,\n )\n from rich.control import Control\n from rich.measure import measure_renderables\n@@ -185,6 +185,15 @@ def test_print_json_ensure_ascii():\n     assert result == expected\n \n \n+def test_print_json_indent_none():\n+    console = Console(file=io.StringIO(), color_system=\"truecolor\")\n+    data = {\"name\": \"apple\", \"count\": 1}\n+    console.print_json(data=data, indent=None)\n+    result = console.file.getvalue()\n+    expected = '\\x1b[1m{\\x1b[0m\\x1b[1;34m\"name\"\\x1b[0m: \\x1b[32m\"apple\"\\x1b[0m, \\x1b[1;34m\"count\"\\x1b[0m: \\x1b[1;36m1\\x1b[0m\\x1b[1m}\\x1b[0m\\n'\n+    assert result == expected\n+\n+\n def test_log():\n     console = Console(\n         file=io.StringIO(),\ndiff --git a/tests/test_highlighter.py b/tests/test_highlighter.py\nindex c5303b5c0..a34334e3d 100644\n--- a/tests/test_highlighter.py\n+++ b/tests/test_highlighter.py\n@@ -1,8 +1,10 @@\n \"\"\"Tests for the highlighter classes.\"\"\"\n-import pytest\n+import json\n from typing import List\n \n-from rich.highlighter import NullHighlighter, ReprHighlighter\n+import pytest\n+\n+from rich.highlighter import JSONHighlighter, NullHighlighter, ReprHighlighter\n from rich.text import Span, Text\n \n \n@@ -92,3 +94,53 @@ def test_highlight_regex(test: str, spans: List[Span]):\n     highlighter.highlight(text)\n     print(text.spans)\n     assert text.spans == spans\n+\n+\n+def test_highlight_json_with_indent():\n+    json_string = json.dumps({\"name\": \"apple\", \"count\": 1}, indent=4)\n+    text = Text(json_string)\n+    highlighter = JSONHighlighter()\n+    highlighter.highlight(text)\n+    assert text.spans == [\n+        Span(0, 1, \"json.brace\"),\n+        Span(6, 12, \"json.str\"),\n+        Span(14, 21, \"json.str\"),\n+        Span(27, 34, \"json.str\"),\n+        Span(36, 37, \"json.number\"),\n+        Span(38, 39, \"json.brace\"),\n+        Span(6, 12, \"json.key\"),\n+        Span(27, 34, \"json.key\"),\n+    ]\n+\n+\n+def test_highlight_json_string_only():\n+    json_string = '\"abc\"'\n+    text = Text(json_string)\n+    highlighter = JSONHighlighter()\n+    highlighter.highlight(text)\n+    assert text.spans == [Span(0, 5, \"json.str\")]\n+\n+\n+def test_highlight_json_empty_string_only():\n+    json_string = '\"\"'\n+    text = Text(json_string)\n+    highlighter = JSONHighlighter()\n+    highlighter.highlight(text)\n+    assert text.spans == [Span(0, 2, \"json.str\")]\n+\n+\n+def test_highlight_json_no_indent():\n+    json_string = json.dumps({\"name\": \"apple\", \"count\": 1}, indent=None)\n+    text = Text(json_string)\n+    highlighter = JSONHighlighter()\n+    highlighter.highlight(text)\n+    assert text.spans == [\n+        Span(0, 1, \"json.brace\"),\n+        Span(1, 7, \"json.str\"),\n+        Span(9, 16, \"json.str\"),\n+        Span(18, 25, \"json.str\"),\n+        Span(27, 28, \"json.number\"),\n+        Span(28, 29, \"json.brace\"),\n+        Span(1, 7, \"json.key\"),\n+        Span(18, 25, \"json.key\"),\n+    ]\n", "problem_statement": "[BUG] `rich.print_json()` produces incorrect syntax highlighting with `indent=None`\n**Describe the bug**\r\n\r\nWhen using the `indent=None` parameter to `rich.print_json()`, it results in incorrect highlighting.\r\n\r\nMinimal example:\r\n```py\r\ndata = {\"items\": [{\"name\": \"apple\", \"count\": 1}]}\r\nrich.print_json(data=data)  # Good\r\nrich.print_json(data=data, indent=None)  # Bad\r\n```\r\n\r\nScreenshot:\r\n![Screenshot of issue](https://user-images.githubusercontent.com/482367/156926758-af8cb1f4-f68c-4d24-980d-04a48704e949.png)\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\n* Environment (SSH): Debian 11, Python 3.10.2\r\n* Terminal: GNOME Terminal 3.38.1, Ubuntu 21.10\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=162 ColorSystem.EIGHT_BIT>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = '256'                                                         \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 39                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=162, height=39),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=162,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=39,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=162, height=39)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 162                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'screen-256color',     \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': None,              \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': None,        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n\r\nrich==11.2.0\r\n```\r\n\r\n</details>\r\n\n", "hints_text": "", "created_at": "2022-03-08T15:27:13Z"}
{"repo": "Textualize/rich", "pull_number": 2037, "instance_id": "Textualize__rich-2037", "issue_numbers": ["2033"], "base_commit": "8e649fea51859e426b2f6300e0a9c88c9c4b6415", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex eb6b62623..dcd9cbdab 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -23,6 +23,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fixed Pretty measure not respecting expand_all https://github.com/Textualize/rich/issues/1998\n - Collapsed definitions for single-character spinners, to save memory and reduce import time.\n - Fix print_json indent type in __init__.py\n+- Fix error when inspecting object defined in REPL https://github.com/Textualize/rich/pull/2037\n \n ### Changed\n \ndiff --git a/rich/_inspect.py b/rich/_inspect.py\nindex b3652bfbd..01713e576 100644\n--- a/rich/_inspect.py\n+++ b/rich/_inspect.py\n@@ -98,7 +98,8 @@ def _get_signature(self, name: str, obj: Any) -> Optional[Text]:\n         source_filename: Optional[str] = None\n         try:\n             source_filename = getfile(obj)\n-        except TypeError:\n+        except (OSError, TypeError):\n+            # OSError is raised if obj has no source file, e.g. when defined in REPL.\n             pass\n \n         callable_name = Text(name, style=\"inspect.callable\")\n", "test_patch": "", "problem_statement": "[BUG] Inspecting a NamedTuple defined int the REPL throws an error\nI suspect this is not exclusive to NamedTuples\r\n\r\n<img width=\"1452\" alt=\"Screenshot 2022-03-07 at 15 08 46\" src=\"https://user-images.githubusercontent.com/554369/157060930-7e517028-f587-4c48-906a-a807108a1687.png\">\r\n\r\n\n", "hints_text": "", "created_at": "2022-03-08T13:23:05Z"}
{"repo": "Textualize/rich", "pull_number": 2031, "instance_id": "Textualize__rich-2031", "issue_numbers": ["2012"], "base_commit": "8e649fea51859e426b2f6300e0a9c88c9c4b6415", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 6a0e3e518..588be1e45 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -1,3 +1,4 @@\n+\n # Changelog\n \n All notable changes to this project will be documented in this file.\n@@ -14,6 +15,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Added ProgressColumn `MofNCompleteColumn` to display raw `completed/total` column (similar to DownloadColumn,\n   but displays values as ints, does not convert to floats or add bit/bytes units).\n   https://github.com/Textualize/rich/pull/1941\n+- Add support for namedtuples to `Pretty` https://github.com/Textualize/rich/pull/2031\n \n ### Fixed\n \ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex 216075afd..57f3e62e2 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -1,4 +1,5 @@\n import builtins\n+import collections\n import dataclasses\n import inspect\n import os\n@@ -30,7 +31,6 @@\n except ImportError:  # pragma: no cover\n     _attr_module = None  # type: ignore\n \n-\n from . import get_console\n from ._loop import loop_last\n from ._pick import pick_bool\n@@ -79,6 +79,29 @@ def _is_dataclass_repr(obj: object) -> bool:\n         return False\n \n \n+_dummy_namedtuple = collections.namedtuple(\"_dummy_namedtuple\", [])\n+\n+\n+def _has_default_namedtuple_repr(obj: object) -> bool:\n+    \"\"\"Check if an instance of namedtuple contains the default repr\n+\n+    Args:\n+        obj (object): A namedtuple\n+\n+    Returns:\n+        bool: True if the default repr is used, False if there's a custom repr.\n+    \"\"\"\n+    obj_file = None\n+    try:\n+        obj_file = inspect.getfile(obj.__repr__)\n+    except (OSError, TypeError):\n+        # OSError handles case where object is defined in __main__ scope, e.g. REPL - no filename available.\n+        # TypeError trapped defensively, in case of object without filename slips through.\n+        pass\n+    default_repr_file = inspect.getfile(_dummy_namedtuple.__repr__)\n+    return obj_file == default_repr_file\n+\n+\n def _ipy_display_hook(\n     value: Any,\n     console: Optional[\"Console\"] = None,\n@@ -383,6 +406,7 @@ class Node:\n     empty: str = \"\"\n     last: bool = False\n     is_tuple: bool = False\n+    is_namedtuple: bool = False\n     children: Optional[List[\"Node\"]] = None\n     key_separator = \": \"\n     separator: str = \", \"\n@@ -397,7 +421,7 @@ def iter_tokens(self) -> Iterable[str]:\n         elif self.children is not None:\n             if self.children:\n                 yield self.open_brace\n-                if self.is_tuple and len(self.children) == 1:\n+                if self.is_tuple and not self.is_namedtuple and len(self.children) == 1:\n                     yield from self.children[0].iter_tokens()\n                     yield \",\"\n                 else:\n@@ -524,6 +548,25 @@ def __str__(self) -> str:\n             )\n \n \n+def _is_namedtuple(obj: Any) -> bool:\n+    \"\"\"Checks if an object is most likely a namedtuple. It is possible\n+    to craft an object that passes this check and isn't a namedtuple, but\n+    there is only a minuscule chance of this happening unintentionally.\n+\n+    Args:\n+        obj (Any): The object to test\n+\n+    Returns:\n+        bool: True if the object is a namedtuple. False otherwise.\n+    \"\"\"\n+    try:\n+        fields = getattr(obj, \"_fields\", None)\n+    except Exception:\n+        # Being very defensive - if we cannot get the attr then its not a namedtuple\n+        return False\n+    return isinstance(obj, tuple) and isinstance(fields, tuple)\n+\n+\n def traverse(\n     _object: Any,\n     max_length: Optional[int] = None,\n@@ -731,7 +774,25 @@ def iter_attrs() -> Iterable[\n                     append(child_node)\n \n                 pop_visited(obj_id)\n-\n+        elif _is_namedtuple(obj) and _has_default_namedtuple_repr(obj):\n+            if reached_max_depth:\n+                node = Node(value_repr=\"...\")\n+            else:\n+                children = []\n+                class_name = obj.__class__.__name__\n+                node = Node(\n+                    open_brace=f\"{class_name}(\",\n+                    close_brace=\")\",\n+                    children=children,\n+                    empty=f\"{class_name}()\",\n+                )\n+                append = children.append\n+                for last, (key, value) in loop_last(obj._asdict().items()):\n+                    child_node = _traverse(value, depth=depth + 1)\n+                    child_node.key_repr = key\n+                    child_node.last = last\n+                    child_node.key_separator = \"=\"\n+                    append(child_node)\n         elif _safe_isinstance(obj, _CONTAINERS):\n             for container_type in _CONTAINERS:\n                 if _safe_isinstance(obj, container_type):\n@@ -780,7 +841,7 @@ def iter_attrs() -> Iterable[\n                         child_node.last = index == last_item_index\n                         append(child_node)\n                 if max_length is not None and num_items > max_length:\n-                    append(Node(value_repr=f\"... +{num_items-max_length}\", last=True))\n+                    append(Node(value_repr=f\"... +{num_items - max_length}\", last=True))\n             else:\n                 node = Node(empty=empty, children=[], last=root)\n \n@@ -788,6 +849,7 @@ def iter_attrs() -> Iterable[\n         else:\n             node = Node(value_repr=to_repr(obj), last=root)\n         node.is_tuple = _safe_isinstance(obj, tuple)\n+        node.is_namedtuple = _is_namedtuple(obj)\n         return node\n \n     node = _traverse(_object, root=True)\n@@ -878,6 +940,15 @@ def __repr__(self) -> str:\n             1 / 0\n             return \"this will fail\"\n \n+    from typing import NamedTuple\n+\n+    class StockKeepingUnit(NamedTuple):\n+        name: str\n+        description: str\n+        price: float\n+        category: str\n+        reviews: List[str]\n+\n     d = defaultdict(int)\n     d[\"foo\"] = 5\n     data = {\n@@ -904,6 +975,13 @@ def __repr__(self) -> str:\n             ]\n         ),\n         \"atomic\": (False, True, None),\n+        \"namedtuple\": StockKeepingUnit(\n+            \"Sparkling British Spring Water\",\n+            \"Carbonated spring water\",\n+            0.9,\n+            \"water\",\n+            [\"its amazing!\", \"its terrible!\"],\n+        ),\n         \"Broken\": BrokenRepr(),\n     }\n     data[\"foo\"].append(data)  # type: ignore\n", "test_patch": "diff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex 02488f464..d45b0c22d 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -1,9 +1,10 @@\n+import collections\n import io\n import sys\n from array import array\n from collections import UserDict, defaultdict\n from dataclasses import dataclass, field\n-from typing import List\n+from typing import List, NamedTuple\n \n import attr\n import pytest\n@@ -169,6 +170,74 @@ def test_pretty_dataclass():\n     assert result == \"ExampleDataclass(foo=1000, bar=..., baz=['foo', 'bar', 'baz'])\"\n \n \n+class StockKeepingUnit(NamedTuple):\n+    name: str\n+    description: str\n+    price: float\n+    category: str\n+    reviews: List[str]\n+\n+\n+def test_pretty_namedtuple():\n+    console = Console(color_system=None)\n+    console.begin_capture()\n+\n+    example_namedtuple = StockKeepingUnit(\n+        \"Sparkling British Spring Water\",\n+        \"Carbonated spring water\",\n+        0.9,\n+        \"water\",\n+        [\"its amazing!\", \"its terrible!\"],\n+    )\n+\n+    result = pretty_repr(example_namedtuple)\n+\n+    print(result)\n+    assert (\n+        result\n+        == \"\"\"StockKeepingUnit(\n+    name='Sparkling British Spring Water',\n+    description='Carbonated spring water',\n+    price=0.9,\n+    category='water',\n+    reviews=['its amazing!', 'its terrible!']\n+)\"\"\"\n+    )\n+\n+\n+def test_pretty_namedtuple_length_one_no_trailing_comma():\n+    instance = collections.namedtuple(\"Thing\", [\"name\"])(name=\"Bob\")\n+    assert pretty_repr(instance) == \"Thing(name='Bob')\"\n+\n+\n+def test_pretty_namedtuple_empty():\n+    instance = collections.namedtuple(\"Thing\", [])()\n+    assert pretty_repr(instance) == \"Thing()\"\n+\n+\n+def test_pretty_namedtuple_custom_repr():\n+    class Thing(NamedTuple):\n+        def __repr__(self):\n+            return \"XX\"\n+\n+    assert pretty_repr(Thing()) == \"XX\"\n+\n+\n+def test_pretty_namedtuple_fields_invalid_type():\n+    class LooksLikeANamedTupleButIsnt(tuple):\n+        _fields = \"blah\"\n+\n+    instance = LooksLikeANamedTupleButIsnt()\n+    result = pretty_repr(instance)\n+    assert result == \"()\"  # Treated as tuple\n+\n+\n+def test_pretty_namedtuple_max_depth():\n+    instance = {\"unit\": StockKeepingUnit(\"a\", \"b\", 1.0, \"c\", [\"d\", \"e\"])}\n+    result = pretty_repr(instance, max_depth=1)\n+    assert result == \"{'unit': ...}\"\n+\n+\n def test_small_width():\n     test = [\"Hello world! 12345\"]\n     result = pretty_repr(test, max_width=10)\n", "problem_statement": "[REQUEST] Add explicit support for NamedTuples\nThe Pretty class doesn't support pretty printing NamedTuples.\r\n\r\nWe should attempt to auto detect named tuples in order to expand these on to multiple lines as appropriate.\r\n\r\nNamedTuples inherit from `tuple` and don't have a common base class. They have a `_fields` attribute which could identify them as a named tuple. \r\n\r\nWe will also need to check if a custom __repr__ has been provided (in the same was as we do dataclasses).\n", "hints_text": "", "created_at": "2022-03-07T11:41:14Z"}
{"repo": "Textualize/rich", "pull_number": 2029, "instance_id": "Textualize__rich-2029", "issue_numbers": ["2028"], "base_commit": "aa4546ac465c36a057c0f77c0c8856497475b3ed", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 6a0e3e518..eb6b62623 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -22,6 +22,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fix syntax lexer guessing.\n - Fixed Pretty measure not respecting expand_all https://github.com/Textualize/rich/issues/1998\n - Collapsed definitions for single-character spinners, to save memory and reduce import time.\n+- Fix print_json indent type in __init__.py\n \n ### Changed\n \ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 8203d0f7a..140f77f43 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -30,6 +30,7 @@ The following people have contributed to the development of Rich:\n - [Cl\u00e9ment Robert](https://github.com/neutrinoceros)\n - [Brian Rutledge](https://github.com/bhrutledge)\n - [Tushar Sadhwani](https://github.com/tusharsadhwani)\n+- [Paul Sanders](https://github.com/sanders41)\n - [Tim Savage](https://github.com/timsavage)\n - [Nicolas Simonds](https://github.com/0xDEC0DE)\n - [Aaron Stephens](https://github.com/aaronst)\ndiff --git a/rich/__init__.py b/rich/__init__.py\nindex ed11f5d7e..01faa6e6b 100644\n--- a/rich/__init__.py\n+++ b/rich/__init__.py\n@@ -1,7 +1,7 @@\n \"\"\"Rich text and beautiful formatting in the terminal.\"\"\"\n \n import os\n-from typing import Callable, IO, TYPE_CHECKING, Any, Optional\n+from typing import Callable, IO, TYPE_CHECKING, Any, Optional, Union\n \n from ._extension import load_ipython_extension\n \n@@ -73,7 +73,7 @@ def print_json(\n     json: Optional[str] = None,\n     *,\n     data: Any = None,\n-    indent: int = 2,\n+    indent: Union[None, int, str] = 2,\n     highlight: bool = True,\n     skip_keys: bool = False,\n     ensure_ascii: bool = True,\n", "test_patch": "", "problem_statement": "[BUG] Incorrect type for print_json indent in __init__.py\n**Describe the bug**\r\n\r\nThe type for `indent` (`indent: int = 2`) in `print_json` from the `__init__.py` file seems to be incorrect. In `console.py` it is typed as `indent: Union[None, int, str] = 2` and `print_json` in the init calls from console.py so it seems like they should have the same type.\n", "hints_text": "", "created_at": "2022-03-07T00:56:32Z"}
{"repo": "Textualize/rich", "pull_number": 1950, "instance_id": "Textualize__rich-1950", "issue_numbers": ["1944"], "base_commit": "83756d624022d88082cf08ad49613d15b86ced21", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex fcf58cd7a..407c9f158 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -10,6 +10,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n ### Fixed\n \n - In Jupyter mode make the link target be set to \"_blank\"\n+- Fix some issues with markup handling around \"[\" characters https://github.com/Textualize/rich/pull/1950\n \n ## [11.2.0] - 2022-02-08\n \ndiff --git a/rich/markup.py b/rich/markup.py\nindex 58903f6bb..a0201dfe2 100644\n--- a/rich/markup.py\n+++ b/rich/markup.py\n@@ -1,21 +1,20 @@\n+import re\n from ast import literal_eval\n from operator import attrgetter\n-import re\n from typing import Callable, Iterable, List, Match, NamedTuple, Optional, Tuple, Union\n \n+from ._emoji_replace import _emoji_replace\n+from .emoji import EmojiVariant\n from .errors import MarkupError\n from .style import Style\n from .text import Span, Text\n-from .emoji import EmojiVariant\n-from ._emoji_replace import _emoji_replace\n-\n \n RE_TAGS = re.compile(\n-    r\"\"\"((\\\\*)\\[([a-z#\\/@].*?)\\])\"\"\",\n+    r\"\"\"((\\\\*)\\[([a-z#/@][^[]*?)])\"\"\",\n     re.VERBOSE,\n )\n \n-RE_HANDLER = re.compile(r\"^([\\w\\.]*?)(\\(.*?\\))?$\")\n+RE_HANDLER = re.compile(r\"^([\\w.]*?)(\\(.*?\\))?$\")\n \n \n class Tag(NamedTuple):\n@@ -146,6 +145,8 @@ def pop_style(style_name: str) -> Tuple[int, Tag]:\n \n     for position, plain_text, tag in _parse(markup):\n         if plain_text is not None:\n+            # Handle open brace escapes, where the brace is not part of a tag.\n+            plain_text = plain_text.replace(\"\\\\[\", \"[\")\n             append(emoji_replace(plain_text) if emoji else plain_text)\n         elif tag is not None:\n             if tag.name.startswith(\"/\"):  # Closing tag\n@@ -233,8 +234,8 @@ def pop_style(style_name: str) -> Tuple[int, Tag]:\n         \":warning-emoji: [bold red blink] DANGER![/]\",\n     ]\n \n-    from rich.table import Table\n     from rich import print\n+    from rich.table import Table\n \n     grid = Table(\"Markup\", \"Result\", padding=(0, 1))\n \n", "test_patch": "diff --git a/tests/test_markup.py b/tests/test_markup.py\nindex 5a0acbbf0..106738bdb 100644\n--- a/tests/test_markup.py\n+++ b/tests/test_markup.py\n@@ -1,7 +1,7 @@\n import pytest\n \n from rich.console import Console\n-from rich.markup import escape, MarkupError, _parse, render, Tag, RE_TAGS\n+from rich.markup import RE_TAGS, MarkupError, Tag, _parse, escape, render\n from rich.text import Span\n \n \n@@ -139,6 +139,11 @@ def test_markup_error():\n         assert render(\"[foo]hello[/bar]\")\n \n \n+def test_markup_escape():\n+    result = str(render(\"[dim white]\\[url=[/]\"))\n+    assert result == \"[url=\"\n+\n+\n def test_escape_escape():\n     # Escaped escapes (i.e. double backslash)should be treated as literal\n     result = render(r\"\\\\[bold]FOO\")\n@@ -165,7 +170,6 @@ def test_escape_escape():\n \n \n def test_events():\n-\n     result = render(\"[@click]Hello[/@click] [@click='view.toggle', 'left']World[/]\")\n     assert str(result) == \"Hello World\"\n \n", "problem_statement": "console markup escaping issue\n### Discussed in https://github.com/Textualize/rich/discussions/1939\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **codenotworking** February  9, 2022</sup>\r\nMy code:\r\n```python\r\nfrom rich import print as rprint\r\n\r\nrprint(\"[dim white]\\[url=[/]\")\r\n```\r\n\r\nI'm trying to print simply `[url=` but I end up getting `[url=[/]`.  What am I doing wrong?</div>\n", "hints_text": "@codenotworking You may have discovered an edge case with the escaping.\r\n\r\nIn the meantime, you could do this:\r\n\r\n```python\r\nrprint(\"[dim white]\\[url=\")\r\n```\r\n\r\nMore generally, you could work with a Text object which will give you more fine control.\n@darrenburns Can you look at why this doesn't work. I would have expected that to render `[url=`\n> In the meantime, you could do this:\r\n> \r\n> ```python\r\n> rprint(\"[dim white]\\[url=\")\r\n> ```\r\n\r\n```python\r\n# Code\r\nrprint(\"[dim white]\\[url=[cyan]https://github.com/[/][dim white]][/]\")\r\n\r\n# Result\r\n[url=[cyan]https://github.com/]\r\n```\r\n\r\n\r\n> More generally, you could work with a Text object which will give you more fine control.  \r\n\r\nGot it.  It seems [rich.Text](https://rich.readthedocs.io/en/latest/text.html) will serve me.", "created_at": "2022-02-10T14:38:02Z"}
{"repo": "Textualize/rich", "pull_number": 1895, "instance_id": "Textualize__rich-1895", "issue_numbers": ["1890"], "base_commit": "bd11aa53c14fb7cad4cbfd8fd32effad188755a4", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 8b49b5c57..4997ae325 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## Unreleased\n+\n+### Added\n+\n+- Add support for US spelling of \"gray\" in ANSI color names https://github.com/Textualize/rich/issues/1890\n+\n ## [11.1.0] - 2022-01-28\n \n ### Added\ndiff --git a/rich/color.py b/rich/color.py\nindex f0fa026d6..b6c56a1ee 100644\n--- a/rich/color.py\n+++ b/rich/color.py\n@@ -7,7 +7,7 @@\n \n from ._palettes import EIGHT_BIT_PALETTE, STANDARD_PALETTE, WINDOWS_PALETTE\n from .color_triplet import ColorTriplet\n-from .repr import rich_repr, Result\n+from .repr import Result, rich_repr\n from .terminal_theme import DEFAULT_TERMINAL_THEME\n \n if TYPE_CHECKING:  # pragma: no cover\n@@ -61,6 +61,7 @@ def __repr__(self) -> str:\n     \"bright_cyan\": 14,\n     \"bright_white\": 15,\n     \"grey0\": 16,\n+    \"gray0\": 16,\n     \"navy_blue\": 17,\n     \"dark_blue\": 18,\n     \"blue3\": 20,\n@@ -96,6 +97,7 @@ def __repr__(self) -> str:\n     \"blue_violet\": 57,\n     \"orange4\": 94,\n     \"grey37\": 59,\n+    \"gray37\": 59,\n     \"medium_purple4\": 60,\n     \"slate_blue3\": 62,\n     \"royal_blue1\": 63,\n@@ -128,7 +130,9 @@ def __repr__(self) -> str:\n     \"yellow4\": 106,\n     \"wheat4\": 101,\n     \"grey53\": 102,\n+    \"gray53\": 102,\n     \"light_slate_grey\": 103,\n+    \"light_slate_gray\": 103,\n     \"medium_purple\": 104,\n     \"light_slate_blue\": 105,\n     \"dark_olive_green3\": 149,\n@@ -155,11 +159,13 @@ def __repr__(self) -> str:\n     \"light_salmon3\": 173,\n     \"rosy_brown\": 138,\n     \"grey63\": 139,\n+    \"gray63\": 139,\n     \"medium_purple1\": 141,\n     \"gold3\": 178,\n     \"dark_khaki\": 143,\n     \"navajo_white3\": 144,\n     \"grey69\": 145,\n+    \"gray69\": 145,\n     \"light_steel_blue3\": 146,\n     \"light_steel_blue\": 147,\n     \"yellow3\": 184,\n@@ -189,6 +195,7 @@ def __repr__(self) -> str:\n     \"light_goldenrod2\": 222,\n     \"light_yellow3\": 187,\n     \"grey84\": 188,\n+    \"gray84\": 188,\n     \"light_steel_blue1\": 189,\n     \"yellow2\": 190,\n     \"dark_olive_green1\": 192,\n@@ -223,30 +230,55 @@ def __repr__(self) -> str:\n     \"wheat1\": 229,\n     \"cornsilk1\": 230,\n     \"grey100\": 231,\n+    \"gray100\": 231,\n     \"grey3\": 232,\n+    \"gray3\": 232,\n     \"grey7\": 233,\n+    \"gray7\": 233,\n     \"grey11\": 234,\n+    \"gray11\": 234,\n     \"grey15\": 235,\n+    \"gray15\": 235,\n     \"grey19\": 236,\n+    \"gray19\": 236,\n     \"grey23\": 237,\n+    \"gray23\": 237,\n     \"grey27\": 238,\n+    \"gray27\": 238,\n     \"grey30\": 239,\n+    \"gray30\": 239,\n     \"grey35\": 240,\n+    \"gray35\": 240,\n     \"grey39\": 241,\n+    \"gray39\": 241,\n     \"grey42\": 242,\n+    \"gray42\": 242,\n     \"grey46\": 243,\n+    \"gray46\": 243,\n     \"grey50\": 244,\n+    \"gray50\": 244,\n     \"grey54\": 245,\n+    \"gray54\": 245,\n     \"grey58\": 246,\n+    \"gray58\": 246,\n     \"grey62\": 247,\n+    \"gray62\": 247,\n     \"grey66\": 248,\n+    \"gray66\": 248,\n     \"grey70\": 249,\n+    \"gray70\": 249,\n     \"grey74\": 250,\n+    \"gray74\": 250,\n     \"grey78\": 251,\n+    \"gray78\": 251,\n     \"grey82\": 252,\n+    \"gray82\": 252,\n     \"grey85\": 253,\n+    \"gray85\": 253,\n     \"grey89\": 254,\n+    \"gray89\": 254,\n     \"grey93\": 255,\n+    \"gray93\": 255,\n }\n \n \n@@ -279,8 +311,8 @@ class Color(NamedTuple):\n \n     def __rich__(self) -> \"Text\":\n         \"\"\"Dispays the actual color if Rich printed.\"\"\"\n-        from .text import Text\n         from .style import Style\n+        from .text import Text\n \n         return Text.assemble(\n             f\"<color {self.name!r} ({self.type.name.lower()})\",\n@@ -569,6 +601,8 @@ def blend_rgb(\n \n     colors = sorted((v, k) for k, v in ANSI_COLOR_NAMES.items())\n     for color_number, name in colors:\n+        if \"grey\" in name:\n+            continue\n         color_cell = Text(\" \" * 10, style=f\"on {name}\")\n         if color_number < 16:\n             table.add_row(color_cell, f\"{color_number}\", Text(f'\"{name}\"'))\n", "test_patch": "", "problem_statement": "Add US spellings to ansi color names\nWe have some UK spellings of \"grey\", we should add the US spelling as well (\"gray\").\r\n\r\nMake sure this doesn't break `python -m color`\n", "hints_text": "", "created_at": "2022-01-31T14:39:16Z"}
{"repo": "Textualize/rich", "pull_number": 1893, "instance_id": "Textualize__rich-1893", "issue_numbers": ["1882"], "base_commit": "633faab16dc3a8c01a6562648cc2186c19a476e3", "patch": "diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 892dc7918..bbae40c84 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -21,7 +21,6 @@ repos:\n     rev: v1.9.0\n     hooks:\n       - id: python-check-mock-methods\n-      - id: python-no-eval\n       - id: python-no-log-warn\n       - id: python-use-type-annotations\n       - id: rst-directive-colons\n", "test_patch": "diff --git a/tests/test_traceback.py b/tests/test_traceback.py\nindex e3342ca13..31658c5a4 100644\n--- a/tests/test_traceback.py\n+++ b/tests/test_traceback.py\n@@ -110,8 +110,8 @@ def test_syntax_error():\n     console = Console(width=100, file=io.StringIO())\n     try:\n         # raises SyntaxError: unexpected EOF while parsing\n-        compile(\"(2+2\")\n-    except Exception:\n+        eval(\"(2+2\")\n+    except SyntaxError:\n         console.print_exception()\n     exception_text = console.file.getvalue()\n     assert \"SyntaxError\" in exception_text\n", "problem_statement": "Get coverage of traceback.py back up to ~100%\nWe have a couple of larger gaps in coverage in traceback.py\r\n\r\nI'm sure this file was virtually 100% previously, suspect a recent refactor skipped a function or two.\r\n\r\n<img width=\"688\" alt=\"Screen Shot 2022-01-28 at 14 49 36\" src=\"https://user-images.githubusercontent.com/554369/151568343-d99c0b1d-d792-46a4-8b08-ea1f445a2143.png\">\r\n\r\n\n", "hints_text": "", "created_at": "2022-01-31T14:27:48Z"}
{"repo": "Textualize/rich", "pull_number": 1842, "instance_id": "Textualize__rich-1842", "issue_numbers": ["1838"], "base_commit": "d39626143036188cb2c9e1619e836540f5b627f8", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 0de277c2c..34ef0c3b8 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -10,6 +10,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n ### Added\n \n - Fix width measurement of 353 emoji variation sequences https://github.com/Textualize/rich/pull/1832\n+- Workaround for edge case of object from Faiss with no `__class__` https://github.com/Textualize/rich/issues/1838\n \n ## [11.0.0] - 2022-01-09\n \ndiff --git a/rich/_inspect.py b/rich/_inspect.py\nindex 262695b1c..07b1b623b 100644\n--- a/rich/_inspect.py\n+++ b/rich/_inspect.py\n@@ -3,7 +3,7 @@\n from inspect import cleandoc, getdoc, getfile, isclass, ismodule, signature\n from typing import Any, Iterable, Optional, Tuple\n \n-from .console import RenderableType, Group\n+from .console import Group, RenderableType\n from .highlighter import ReprHighlighter\n from .jupyter import JupyterMixin\n from .panel import Panel\n@@ -204,7 +204,8 @@ def safe_getattr(attr_name: str) -> Tuple[Any, Any]:\n                 add_row(key_text, Pretty(value, highlighter=highlighter))\n         if items_table.row_count:\n             yield items_table\n-        else:\n+        elif not_shown_count:\n             yield Text.from_markup(\n-                f\"[b cyan]{not_shown_count}[/][i] attribute(s) not shown.[/i] Run [b][magenta]inspect[/]([not b]inspect[/])[/b] for options.\"\n+                f\"[b cyan]{not_shown_count}[/][i] attribute(s) not shown.[/i] \"\n+                f\"Run [b][magenta]inspect[/]([not b]inspect[/])[/b] for options.\"\n             )\ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex 57e743df4..f42434ef5 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -2,7 +2,6 @@\n import dataclasses\n import inspect\n import os\n-import re\n import sys\n from array import array\n from collections import Counter, UserDict, UserList, defaultdict, deque\n@@ -93,7 +92,7 @@ def _ipy_display_hook(\n     from .console import ConsoleRenderable  # needed here to prevent circular import\n \n     # always skip rich generated jupyter renderables or None values\n-    if isinstance(value, JupyterRenderable) or value is None:\n+    if _safe_isinstance(value, JupyterRenderable) or value is None:\n         return\n \n     console = console or get_console()\n@@ -124,12 +123,12 @@ def _ipy_display_hook(\n                     return  # Delegate rendering to IPython\n \n     # certain renderables should start on a new line\n-    if isinstance(value, ConsoleRenderable):\n+    if _safe_isinstance(value, ConsoleRenderable):\n         console.line()\n \n     console.print(\n         value\n-        if isinstance(value, RichRenderable)\n+        if _safe_isinstance(value, RichRenderable)\n         else Pretty(\n             value,\n             overflow=overflow,\n@@ -144,6 +143,16 @@ def _ipy_display_hook(\n     )\n \n \n+def _safe_isinstance(\n+    obj: object, class_or_tuple: Union[type, Tuple[type, ...]]\n+) -> bool:\n+    \"\"\"isinstance can fail in rare cases, for example types with no __class__\"\"\"\n+    try:\n+        return isinstance(obj, class_or_tuple)\n+    except Exception:\n+        return False\n+\n+\n def install(\n     console: Optional[\"Console\"] = None,\n     overflow: \"OverflowMethod\" = \"ignore\",\n@@ -178,7 +187,7 @@ def display_hook(value: Any) -> None:\n             builtins._ = None  # type: ignore\n             console.print(\n                 value\n-                if isinstance(value, RichRenderable)\n+                if _safe_isinstance(value, RichRenderable)\n                 else Pretty(\n                     value,\n                     overflow=overflow,\n@@ -355,7 +364,7 @@ def _get_braces_for_array(_object: \"array[Any]\") -> Tuple[str, str, str]:\n def is_expandable(obj: Any) -> bool:\n     \"\"\"Check if an object may be expanded by pretty print.\"\"\"\n     return (\n-        isinstance(obj, _CONTAINERS)\n+        _safe_isinstance(obj, _CONTAINERS)\n         or (is_dataclass(obj))\n         or (hasattr(obj, \"__rich_repr__\"))\n         or _is_attr_object(obj)\n@@ -539,7 +548,7 @@ def to_repr(obj: Any) -> str:\n         \"\"\"Get repr string for an object, but catch errors.\"\"\"\n         if (\n             max_string is not None\n-            and isinstance(obj, (bytes, str))\n+            and _safe_isinstance(obj, (bytes, str))\n             and len(obj) > max_string\n         ):\n             truncated = len(obj) - max_string\n@@ -565,7 +574,7 @@ def _traverse(obj: Any, root: bool = False, depth: int = 0) -> Node:\n \n         def iter_rich_args(rich_args: Any) -> Iterable[Union[Any, Tuple[str, Any]]]:\n             for arg in rich_args:\n-                if isinstance(arg, tuple):\n+                if _safe_isinstance(arg, tuple):\n                     if len(arg) == 3:\n                         key, child, default = arg\n                         if default == child:\n@@ -622,7 +631,7 @@ def iter_rich_args(rich_args: Any) -> Iterable[Union[Any, Tuple[str, Any]]]:\n                             last=root,\n                         )\n                     for last, arg in loop_last(args):\n-                        if isinstance(arg, tuple):\n+                        if _safe_isinstance(arg, tuple):\n                             key, child = arg\n                             child_node = _traverse(child, depth=depth + 1)\n                             child_node.last = last\n@@ -689,7 +698,7 @@ def iter_attrs() -> Iterable[\n \n         elif (\n             is_dataclass(obj)\n-            and not isinstance(obj, type)\n+            and not _safe_isinstance(obj, type)\n             and not fake_attributes\n             and (_is_dataclass_repr(obj) or py_version == (3, 6))\n         ):\n@@ -722,9 +731,9 @@ def iter_attrs() -> Iterable[\n \n                 pop_visited(obj_id)\n \n-        elif isinstance(obj, _CONTAINERS):\n+        elif _safe_isinstance(obj, _CONTAINERS):\n             for container_type in _CONTAINERS:\n-                if isinstance(obj, container_type):\n+                if _safe_isinstance(obj, container_type):\n                     obj_type = container_type\n                     break\n \n@@ -752,7 +761,7 @@ def iter_attrs() -> Iterable[\n                 num_items = len(obj)\n                 last_item_index = num_items - 1\n \n-                if isinstance(obj, _MAPPING_CONTAINERS):\n+                if _safe_isinstance(obj, _MAPPING_CONTAINERS):\n                     iter_items = iter(obj.items())\n                     if max_length is not None:\n                         iter_items = islice(iter_items, max_length)\n@@ -777,7 +786,7 @@ def iter_attrs() -> Iterable[\n             pop_visited(obj_id)\n         else:\n             node = Node(value_repr=to_repr(obj), last=root)\n-        node.is_tuple = isinstance(obj, tuple)\n+        node.is_tuple = _safe_isinstance(obj, tuple)\n         return node\n \n     node = _traverse(_object, root=True)\n@@ -812,13 +821,13 @@ def pretty_repr(\n         str: A possibly multi-line representation of the object.\n     \"\"\"\n \n-    if isinstance(_object, Node):\n+    if _safe_isinstance(_object, Node):\n         node = _object\n     else:\n         node = traverse(\n             _object, max_length=max_length, max_string=max_string, max_depth=max_depth\n         )\n-    repr_str = node.render(\n+    repr_str: str = node.render(\n         max_width=max_width, indent_size=indent_size, expand_all=expand_all\n     )\n     return repr_str\n", "test_patch": "diff --git a/tests/test_inspect.py b/tests/test_inspect.py\nindex 5a9a57610..05a78b871 100644\n--- a/tests/test_inspect.py\n+++ b/tests/test_inspect.py\n@@ -6,7 +6,6 @@\n from rich import inspect\n from rich.console import Console\n \n-\n skip_py36 = pytest.mark.skipif(\n     sys.version_info.minor == 6 and sys.version_info.major == 3,\n     reason=\"rendered differently on py3.6\",\n@@ -260,3 +259,18 @@ class Foo:\n     result = render(foo, methods=True, width=100)\n     print(repr(result))\n     assert expected == result\n+\n+\n+def test_inspect_swig_edge_case():\n+    \"\"\"Issue #1838 - Edge case with Faiss library - object with empty dir()\"\"\"\n+\n+    class Thing:\n+        @property\n+        def __class__(self):\n+            raise AttributeError\n+\n+    thing = Thing()\n+    try:\n+        inspect(thing)\n+    except Exception as e:\n+        assert False, f\"Object with no __class__ shouldn't raise {e}\"\n", "problem_statement": "[BUG] rich.inspect on a module: AttributeError: Unknown C global variable '__class__'\n**Describe the bug**\r\n\r\nTrying to use `rich.inspect` on the module [Faiss](https://github.com/facebookresearch/faiss), (built by [these guys](https://github.com/kyamagu/faiss-wheels)) raises an `AttributeError` exception.\r\n\r\nrepro:\r\n\r\n```shell\r\npip install --user faiss-cpu rich\r\npython -c 'import rich, faiss; rich.inspect(faiss)'\r\n```\r\noutput:\r\n\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/__init__.py\", line 168, in inspect\r\n    _console.print(_inspect)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/console.py\", line 1621, in print\r\n    extend(render(renderable, render_options))\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/console.py\", line 1259, in render\r\n    for render_output in iter_render:\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/panel.py\", line 160, in __rich_console__\r\n    else console.measure(\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/console.py\", line 1212, in measure\r\n    measurement = Measurement.get(self, options or self.options, renderable)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/measure.py\", line 107, in get\r\n    get_console_width(console, options)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/padding.py\", line 132, in __rich_measure__\r\n    measure_min, measure_max = Measurement.get(console, options, self.renderable)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/measure.py\", line 107, in get\r\n    get_console_width(console, options)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/console.py\", line 468, in __rich_measure__\r\n    return measure_renderables(console, options, self.renderables)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/measure.py\", line 142, in measure_renderables\r\n    measurements = [\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/measure.py\", line 143, in <listcomp>\r\n    get_measurement(console, options, renderable) for renderable in renderables\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/measure.py\", line 107, in get\r\n    get_console_width(console, options)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/table.py\", line 296, in __rich_measure__\r\n    self._calculate_column_widths(\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/table.py\", line 482, in _calculate_column_widths\r\n    width_ranges = [\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/table.py\", line 483, in <listcomp>\r\n    self._measure_column(console, options, column) for column in columns\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/table.py\", line 678, in _measure_column\r\n    _min, _max = get_render_width(console, options, cell.renderable)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/measure.py\", line 107, in get\r\n    get_console_width(console, options)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/padding.py\", line 132, in __rich_measure__\r\n    measure_min, measure_max = Measurement.get(console, options, self.renderable)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/measure.py\", line 107, in get\r\n    get_console_width(console, options)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/pretty.py\", line 270, in __rich_measure__\r\n    pretty_str = pretty_repr(\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/pretty.py\", line 753, in pretty_repr\r\n    node = traverse(_object, max_length=max_length, max_string=max_string)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/pretty.py\", line 721, in traverse\r\n    node = _traverse(_object, root=True)\r\n  File \"/home/pbsds/.cache/pypoetry/virtualenvs/foobar-u94_3CgC-py3.9/lib/python3.9/site-packages/rich/pretty.py\", line 665, in _traverse\r\n    elif isinstance(obj, _CONTAINERS):\r\n  File \"/usr/lib/python3.9/abc.py\", line 119, in __instancecheck__\r\n    return _abc_instancecheck(cls, instance)\r\nAttributeError: Unknown C global variable '__class__'\r\n```\r\n</details>\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nLinux - Manjaro GNOME, using lxterminal\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=115 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 56                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=115, height=56),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=115,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=56,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=115, height=56)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 115                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\nWindowsConsoleFeatures(vt=False, truecolor=False)\r\nrich @ file:///home/pbsds/.cache/pypoetry/artifacts/1e/d2/56/58ed32503426d13d7f2181d73a291742842d3876c387b1f4ac2e3d2807/rich-10.16.2-py3-none-any.whl\r\n```\r\n</details>\n", "hints_text": "Tangentially related: #1659\nThis doesn't look like a problem with Rich per se, in that `isinstance` is not documented as being able to fail in that way. The failure is occurring when Rich does an isinstance check of a `<Swig global variables>` against an `OS._Environ` object. Which suggests an issue with Swig.\r\n\r\nThat said, Rich could probably work around that issue. I'll look in to it.\r\n", "created_at": "2022-01-17T15:40:38Z"}
{"repo": "Textualize/rich", "pull_number": 1834, "instance_id": "Textualize__rich-1834", "issue_numbers": ["1831"], "base_commit": "d39626143036188cb2c9e1619e836540f5b627f8", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 0de277c2c..b756e29de 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -8,7 +8,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n ## [Unreleased]\n \n ### Added\n-\n+- Stop using `functools.lru_cache` decorator on instance methods\n - Fix width measurement of 353 emoji variation sequences https://github.com/Textualize/rich/pull/1832\n \n ## [11.0.0] - 2022-01-09\ndiff --git a/rich/color.py b/rich/color.py\nindex f0fa026d6..2a6864962 100644\n--- a/rich/color.py\n+++ b/rich/color.py\n@@ -1,3 +1,4 @@\n+import functools\n import platform\n import re\n from colorsys import rgb_to_hls\n@@ -7,14 +8,13 @@\n \n from ._palettes import EIGHT_BIT_PALETTE, STANDARD_PALETTE, WINDOWS_PALETTE\n from .color_triplet import ColorTriplet\n-from .repr import rich_repr, Result\n+from .repr import Result, rich_repr\n from .terminal_theme import DEFAULT_TERMINAL_THEME\n \n if TYPE_CHECKING:  # pragma: no cover\n     from .terminal_theme import TerminalTheme\n     from .text import Text\n \n-\n WINDOWS = platform.system() == \"Windows\"\n \n \n@@ -279,8 +279,8 @@ class Color(NamedTuple):\n \n     def __rich__(self) -> \"Text\":\n         \"\"\"Dispays the actual color if Rich printed.\"\"\"\n-        from .text import Text\n         from .style import Style\n+        from .text import Text\n \n         return Text.assemble(\n             f\"<color {self.name!r} ({self.type.name.lower()})\",\n@@ -432,7 +432,7 @@ def parse(cls, color: str) -> \"Color\":\n                 number=number,\n             )\n \n-        else:  #  color_rgb:\n+        else:  # color_rgb:\n             components = color_rgb.split(\",\")\n             if len(components) != 3:\n                 raise ColorParseError(\n@@ -446,87 +446,94 @@ def parse(cls, color: str) -> \"Color\":\n                 )\n             return cls(color, ColorType.TRUECOLOR, triplet=triplet)\n \n-    @lru_cache(maxsize=1024)\n     def get_ansi_codes(self, foreground: bool = True) -> Tuple[str, ...]:\n         \"\"\"Get the ANSI escape codes for this color.\"\"\"\n-        _type = self.type\n-        if _type == ColorType.DEFAULT:\n-            return (\"39\" if foreground else \"49\",)\n-\n-        elif _type == ColorType.WINDOWS:\n-            number = self.number\n-            assert number is not None\n-            fore, back = (30, 40) if number < 8 else (82, 92)\n-            return (str(fore + number if foreground else back + number),)\n-\n-        elif _type == ColorType.STANDARD:\n-            number = self.number\n-            assert number is not None\n-            fore, back = (30, 40) if number < 8 else (82, 92)\n-            return (str(fore + number if foreground else back + number),)\n-\n-        elif _type == ColorType.EIGHT_BIT:\n-            assert self.number is not None\n-            return (\"38\" if foreground else \"48\", \"5\", str(self.number))\n-\n-        else:  # self.standard == ColorStandard.TRUECOLOR:\n-            assert self.triplet is not None\n-            red, green, blue = self.triplet\n-            return (\"38\" if foreground else \"48\", \"2\", str(red), str(green), str(blue))\n+        return _get_ansi_codes_cached(color=self, foreground=foreground)\n \n-    @lru_cache(maxsize=1024)\n     def downgrade(self, system: ColorSystem) -> \"Color\":\n         \"\"\"Downgrade a color system to a system with fewer colors.\"\"\"\n+        return _downgrade_cached(color=self, system=system)\n+\n+\n+@functools.lru_cache(maxsize=1024)\n+def _get_ansi_codes_cached(color: Color, foreground: bool) -> Tuple[str, ...]:\n+    _type = color.type\n+    if _type == ColorType.DEFAULT:\n+        return (\"39\" if foreground else \"49\",)\n+\n+    elif _type == ColorType.WINDOWS:\n+        number = color.number\n+        assert number is not None\n+        fore, back = (30, 40) if number < 8 else (82, 92)\n+        return (str(fore + number if foreground else back + number),)\n+\n+    elif _type == ColorType.STANDARD:\n+        number = color.number\n+        assert number is not None\n+        fore, back = (30, 40) if number < 8 else (82, 92)\n+        return (str(fore + number if foreground else back + number),)\n+\n+    elif _type == ColorType.EIGHT_BIT:\n+        assert color.number is not None\n+        return (\"38\" if foreground else \"48\", \"5\", str(color.number))\n+\n+    else:  # color.standard == ColorStandard.TRUECOLOR:\n+        assert color.triplet is not None\n+        red, green, blue = color.triplet\n+        return (\"38\" if foreground else \"48\", \"2\", str(red), str(green), str(blue))\n+\n+\n+@lru_cache(maxsize=1024)\n+def _downgrade_cached(color: Color, system: ColorSystem) -> Color:\n+    if color.type in [ColorType.DEFAULT, system]:\n+        return color\n+    # Convert to 8-bit color from truecolor color\n+    if system == ColorSystem.EIGHT_BIT and color.system == ColorSystem.TRUECOLOR:\n+        assert color.triplet is not None\n+        red, green, blue = color.triplet.normalized\n+        _h, l, s = rgb_to_hls(red, green, blue)\n+        # If saturation is under 10% assume it is grayscale\n+        if s < 0.1:\n+            gray = round(l * 25.0)\n+            if gray == 0:\n+                color_number = 16\n+            elif gray == 25:\n+                color_number = 231\n+            else:\n+                color_number = 231 + gray\n+            return Color(color.name, ColorType.EIGHT_BIT, number=color_number)\n+\n+        color_number = (\n+            16 + 36 * round(red * 5.0) + 6 * round(green * 5.0) + round(blue * 5.0)\n+        )\n+        return Color(color.name, ColorType.EIGHT_BIT, number=color_number)\n+\n+    # Convert to standard from truecolor or 8-bit\n+    elif system == ColorSystem.STANDARD:\n+        if color.system == ColorSystem.TRUECOLOR:\n+            assert color.triplet is not None\n+            triplet = color.triplet\n+        else:  # color.system == ColorSystem.EIGHT_BIT\n+            assert color.number is not None\n+            triplet = ColorTriplet(*EIGHT_BIT_PALETTE[color.number])\n+\n+        color_number = STANDARD_PALETTE.match(triplet)\n+        return Color(color.name, ColorType.STANDARD, number=color_number)\n+\n+    elif system == ColorSystem.WINDOWS:\n+        if color.system == ColorSystem.TRUECOLOR:\n+            assert color.triplet is not None\n+            triplet = color.triplet\n+        else:  # color.system == ColorSystem.EIGHT_BIT\n+            assert color.number is not None\n+            if color.number < 16:\n+                return Color(color.name, ColorType.WINDOWS, number=color.number)\n+            triplet = ColorTriplet(*EIGHT_BIT_PALETTE[color.number])\n+\n+        color_number = WINDOWS_PALETTE.match(triplet)\n+        return Color(color.name, ColorType.WINDOWS, number=color_number)\n \n-        if self.type in [ColorType.DEFAULT, system]:\n-            return self\n-        # Convert to 8-bit color from truecolor color\n-        if system == ColorSystem.EIGHT_BIT and self.system == ColorSystem.TRUECOLOR:\n-            assert self.triplet is not None\n-            red, green, blue = self.triplet.normalized\n-            _h, l, s = rgb_to_hls(red, green, blue)\n-            # If saturation is under 10% assume it is grayscale\n-            if s < 0.1:\n-                gray = round(l * 25.0)\n-                if gray == 0:\n-                    color_number = 16\n-                elif gray == 25:\n-                    color_number = 231\n-                else:\n-                    color_number = 231 + gray\n-                return Color(self.name, ColorType.EIGHT_BIT, number=color_number)\n-\n-            color_number = (\n-                16 + 36 * round(red * 5.0) + 6 * round(green * 5.0) + round(blue * 5.0)\n-            )\n-            return Color(self.name, ColorType.EIGHT_BIT, number=color_number)\n-\n-        # Convert to standard from truecolor or 8-bit\n-        elif system == ColorSystem.STANDARD:\n-            if self.system == ColorSystem.TRUECOLOR:\n-                assert self.triplet is not None\n-                triplet = self.triplet\n-            else:  # self.system == ColorSystem.EIGHT_BIT\n-                assert self.number is not None\n-                triplet = ColorTriplet(*EIGHT_BIT_PALETTE[self.number])\n-\n-            color_number = STANDARD_PALETTE.match(triplet)\n-            return Color(self.name, ColorType.STANDARD, number=color_number)\n-\n-        elif system == ColorSystem.WINDOWS:\n-            if self.system == ColorSystem.TRUECOLOR:\n-                assert self.triplet is not None\n-                triplet = self.triplet\n-            else:  # self.system == ColorSystem.EIGHT_BIT\n-                assert self.number is not None\n-                if self.number < 16:\n-                    return Color(self.name, ColorType.WINDOWS, number=self.number)\n-                triplet = ColorTriplet(*EIGHT_BIT_PALETTE[self.number])\n-\n-            color_number = WINDOWS_PALETTE.match(triplet)\n-            return Color(self.name, ColorType.WINDOWS, number=color_number)\n-\n-        return self\n+    return color\n \n \n def parse_rgb_hex(hex_color: str) -> ColorTriplet:\ndiff --git a/rich/palette.py b/rich/palette.py\nindex f29587945..cd55dec9b 100644\n--- a/rich/palette.py\n+++ b/rich/palette.py\n@@ -1,6 +1,6 @@\n-from math import sqrt\n from functools import lru_cache\n-from typing import Sequence, Tuple, TYPE_CHECKING\n+from math import sqrt\n+from typing import TYPE_CHECKING, Sequence, Tuple\n \n from .color_triplet import ColorTriplet\n \n@@ -20,8 +20,8 @@ def __getitem__(self, number: int) -> ColorTriplet:\n     def __rich__(self) -> \"Table\":\n         from rich.color import Color\n         from rich.style import Style\n-        from rich.text import Text\n         from rich.table import Table\n+        from rich.text import Text\n \n         table = Table(\n             \"index\",\n@@ -40,8 +40,6 @@ def __rich__(self) -> \"Table\":\n             )\n         return table\n \n-    # This is somewhat inefficient and needs caching\n-    @lru_cache(maxsize=1024)\n     def match(self, color: Tuple[int, int, int]) -> int:\n         \"\"\"Find a color from a palette that most closely matches a given color.\n \n@@ -51,30 +49,38 @@ def match(self, color: Tuple[int, int, int]) -> int:\n         Returns:\n             int: Index of closes matching color.\n         \"\"\"\n-        red1, green1, blue1 = color\n-        _sqrt = sqrt\n-        get_color = self._colors.__getitem__\n-\n-        def get_color_distance(index: int) -> float:\n-            \"\"\"Get the distance to a color.\"\"\"\n-            red2, green2, blue2 = get_color(index)\n-            red_mean = (red1 + red2) // 2\n-            red = red1 - red2\n-            green = green1 - green2\n-            blue = blue1 - blue2\n-            return _sqrt(\n-                (((512 + red_mean) * red * red) >> 8)\n-                + 4 * green * green\n-                + (((767 - red_mean) * blue * blue) >> 8)\n-            )\n+        return _match_palette_cached(color=color, available_colors=tuple(self._colors))\n+\n+\n+@lru_cache(maxsize=1024)\n+def _match_palette_cached(\n+    color: Tuple[int, int, int], available_colors: Tuple[Tuple[int, int, int]]\n+) -> int:\n+    red1, green1, blue1 = color\n+    _sqrt = sqrt\n+    get_color = available_colors.__getitem__\n+\n+    def get_color_distance(index: int) -> float:\n+        \"\"\"Get the distance to a color.\"\"\"\n+        red2, green2, blue2 = get_color(index)\n+        red_mean = (red1 + red2) // 2\n+        red = red1 - red2\n+        green = green1 - green2\n+        blue = blue1 - blue2\n+        return _sqrt(\n+            (((512 + red_mean) * red * red) >> 8)\n+            + 4 * green * green\n+            + (((767 - red_mean) * blue * blue) >> 8)\n+        )\n \n-        min_index = min(range(len(self._colors)), key=get_color_distance)\n-        return min_index\n+    min_index = min(range(len(available_colors)), key=get_color_distance)\n+    return min_index\n \n \n if __name__ == \"__main__\":  # pragma: no cover\n     import colorsys\n     from typing import Iterable\n+\n     from rich.color import Color\n     from rich.console import Console, ConsoleOptions\n     from rich.segment import Segment\ndiff --git a/rich/progress_bar.py b/rich/progress_bar.py\nindex 1797b5f78..ce51a8604 100644\n--- a/rich/progress_bar.py\n+++ b/rich/progress_bar.py\n@@ -1,5 +1,5 @@\n+import functools\n import math\n-from functools import lru_cache\n from time import monotonic\n from typing import Iterable, List, Optional\n \n@@ -15,6 +15,51 @@\n PULSE_SIZE = 20\n \n \n+@functools.lru_cache(maxsize=16)\n+def _get_pulse_segments(\n+    fore_style: Style,\n+    back_style: Style,\n+    color_system: str,\n+    no_color: bool,\n+    ascii: bool = False,\n+) -> List[Segment]:\n+    \"\"\"Get a list of segments to render a pulse animation.\n+\n+    Returns:\n+        List[Segment]: A list of segments, one segment per character.\n+    \"\"\"\n+    bar = \"-\" if ascii else \"\u2501\"\n+    segments: List[Segment] = []\n+    if color_system not in (\"standard\", \"eight_bit\", \"truecolor\") or no_color:\n+        segments += [Segment(bar, fore_style)] * (PULSE_SIZE // 2)\n+        segments += [Segment(\" \" if no_color else bar, back_style)] * (\n+            PULSE_SIZE - (PULSE_SIZE // 2)\n+        )\n+        return segments\n+\n+    append = segments.append\n+    fore_color = (\n+        fore_style.color.get_truecolor()\n+        if fore_style.color\n+        else ColorTriplet(255, 0, 255)\n+    )\n+    back_color = (\n+        back_style.color.get_truecolor() if back_style.color else ColorTriplet(0, 0, 0)\n+    )\n+    cos = math.cos\n+    pi = math.pi\n+    _Segment = Segment\n+    _Style = Style\n+    from_triplet = Color.from_triplet\n+\n+    for index in range(PULSE_SIZE):\n+        position = index / PULSE_SIZE\n+        fade = 0.5 + cos((position * pi * 2)) / 2.0\n+        color = blend_rgb(fore_color, back_color, cross_fade=fade)\n+        append(_Segment(bar, _Style(color=from_triplet(color))))\n+    return segments\n+\n+\n class ProgressBar(JupyterMixin):\n     \"\"\"Renders a (progress) bar. Used by rich.progress.\n \n@@ -64,53 +109,6 @@ def percentage_completed(self) -> float:\n         completed = min(100, max(0.0, completed))\n         return completed\n \n-    @lru_cache(maxsize=16)\n-    def _get_pulse_segments(\n-        self,\n-        fore_style: Style,\n-        back_style: Style,\n-        color_system: str,\n-        no_color: bool,\n-        ascii: bool = False,\n-    ) -> List[Segment]:\n-        \"\"\"Get a list of segments to render a pulse animation.\n-\n-        Returns:\n-            List[Segment]: A list of segments, one segment per character.\n-        \"\"\"\n-        bar = \"-\" if ascii else \"\u2501\"\n-        segments: List[Segment] = []\n-        if color_system not in (\"standard\", \"eight_bit\", \"truecolor\") or no_color:\n-            segments += [Segment(bar, fore_style)] * (PULSE_SIZE // 2)\n-            segments += [Segment(\" \" if no_color else bar, back_style)] * (\n-                PULSE_SIZE - (PULSE_SIZE // 2)\n-            )\n-            return segments\n-\n-        append = segments.append\n-        fore_color = (\n-            fore_style.color.get_truecolor()\n-            if fore_style.color\n-            else ColorTriplet(255, 0, 255)\n-        )\n-        back_color = (\n-            back_style.color.get_truecolor()\n-            if back_style.color\n-            else ColorTriplet(0, 0, 0)\n-        )\n-        cos = math.cos\n-        pi = math.pi\n-        _Segment = Segment\n-        _Style = Style\n-        from_triplet = Color.from_triplet\n-\n-        for index in range(PULSE_SIZE):\n-            position = index / PULSE_SIZE\n-            fade = 0.5 + cos((position * pi * 2)) / 2.0\n-            color = blend_rgb(fore_color, back_color, cross_fade=fade)\n-            append(_Segment(bar, _Style(color=from_triplet(color))))\n-        return segments\n-\n     def update(self, completed: float, total: Optional[float] = None) -> None:\n         \"\"\"Update progress with new values.\n \n@@ -139,7 +137,7 @@ def _render_pulse(\n         fore_style = console.get_style(self.pulse_style, default=\"white\")\n         back_style = console.get_style(self.style, default=\"black\")\n \n-        pulse_segments = self._get_pulse_segments(\n+        pulse_segments = _get_pulse_segments(\n             fore_style, back_style, console.color_system, console.no_color, ascii=ascii\n         )\n         segment_count = len(pulse_segments)\ndiff --git a/rich/style.py b/rich/style.py\nindex 0787c3314..4153e2774 100644\n--- a/rich/style.py\n+++ b/rich/style.py\n@@ -1,15 +1,14 @@\n import sys\n from functools import lru_cache\n-from marshal import loads, dumps\n+from marshal import dumps, loads\n from random import randint\n-from typing import Any, cast, Dict, Iterable, List, Optional, Type, Union\n+from typing import Any, Dict, Iterable, List, Optional, Type, Union, cast\n \n from . import errors\n from .color import Color, ColorParseError, ColorSystem, blend_rgb\n-from .repr import rich_repr, Result\n+from .repr import Result, rich_repr\n from .terminal_theme import DEFAULT_TERMINAL_THEME, TerminalTheme\n \n-\n # Style instances and style definitions are often interchangeable\n StyleType = Union[str, \"Style\"]\n \n@@ -575,42 +574,9 @@ def parse(cls, style_definition: str) -> \"Style\":\n         style = Style(color=color, bgcolor=bgcolor, link=link, **attributes)\n         return style\n \n-    @lru_cache(maxsize=1024)\n     def get_html_style(self, theme: Optional[TerminalTheme] = None) -> str:\n         \"\"\"Get a CSS style rule.\"\"\"\n-        theme = theme or DEFAULT_TERMINAL_THEME\n-        css: List[str] = []\n-        append = css.append\n-\n-        color = self.color\n-        bgcolor = self.bgcolor\n-        if self.reverse:\n-            color, bgcolor = bgcolor, color\n-        if self.dim:\n-            foreground_color = (\n-                theme.foreground_color if color is None else color.get_truecolor(theme)\n-            )\n-            color = Color.from_triplet(\n-                blend_rgb(foreground_color, theme.background_color, 0.5)\n-            )\n-        if color is not None:\n-            theme_color = color.get_truecolor(theme)\n-            append(f\"color: {theme_color.hex}\")\n-            append(f\"text-decoration-color: {theme_color.hex}\")\n-        if bgcolor is not None:\n-            theme_color = bgcolor.get_truecolor(theme, foreground=False)\n-            append(f\"background-color: {theme_color.hex}\")\n-        if self.bold:\n-            append(\"font-weight: bold\")\n-        if self.italic:\n-            append(\"font-style: italic\")\n-        if self.underline:\n-            append(\"text-decoration: underline\")\n-        if self.strike:\n-            append(\"text-decoration: line-through\")\n-        if self.overline:\n-            append(\"text-decoration: overline\")\n-        return \"; \".join(css)\n+        return _get_html_style_cached(self, theme)\n \n     @classmethod\n     def combine(cls, styles: Iterable[\"Style\"]) -> \"Style\":\n@@ -751,6 +717,43 @@ def __add__(self, style: Optional[\"Style\"]) -> \"Style\":\n NULL_STYLE = Style()\n \n \n+@lru_cache(maxsize=1024)\n+def _get_html_style_cached(style: Style, theme: Optional[TerminalTheme] = None) -> str:\n+    theme = theme or DEFAULT_TERMINAL_THEME\n+    css: List[str] = []\n+    append = css.append\n+\n+    color = style.color\n+    bgcolor = style.bgcolor\n+    if style.reverse:\n+        color, bgcolor = bgcolor, color\n+    if style.dim:\n+        foreground_color = (\n+            theme.foreground_color if color is None else color.get_truecolor(theme)\n+        )\n+        color = Color.from_triplet(\n+            blend_rgb(foreground_color, theme.background_color, 0.5)\n+        )\n+    if color is not None:\n+        theme_color = color.get_truecolor(theme)\n+        append(f\"color: {theme_color.hex}\")\n+        append(f\"text-decoration-color: {theme_color.hex}\")\n+    if bgcolor is not None:\n+        theme_color = bgcolor.get_truecolor(theme, foreground=False)\n+        append(f\"background-color: {theme_color.hex}\")\n+    if style.bold:\n+        append(\"font-weight: bold\")\n+    if style.italic:\n+        append(\"font-style: italic\")\n+    if style.underline:\n+        append(\"text-decoration: underline\")\n+    if style.strike:\n+        append(\"text-decoration: line-through\")\n+    if style.overline:\n+        append(\"text-decoration: overline\")\n+    return \"; \".join(css)\n+\n+\n class StyleStack:\n     \"\"\"A stack of styles.\"\"\"\n \n", "test_patch": "diff --git a/tests/test_bar.py b/tests/test_bar.py\nindex 021a8aaac..5d36a8caa 100644\n--- a/tests/test_bar.py\n+++ b/tests/test_bar.py\n@@ -1,5 +1,5 @@\n from rich.console import Console\n-from rich.progress_bar import ProgressBar\n+from rich.progress_bar import ProgressBar, _get_pulse_segments\n from rich.segment import Segment\n from rich.style import Style\n \n@@ -63,7 +63,7 @@ def test_pulse():\n \n def test_get_pulse_segments():\n     bar = ProgressBar()\n-    segments = bar._get_pulse_segments(\n+    segments = _get_pulse_segments(\n         Style.parse(\"red\"), Style.parse(\"yellow\"), None, False, False\n     )\n     print(repr(segments))\n", "problem_statement": "Remove lru_cache from methods\nUsing lru_cache on a method may cause Python to hold on to references (via self) for longer than strictly necessary.\r\n\r\nWe should review instances of lru_cache decorator in Rich, and if affected we might want to replace them with the LRUCache object.\r\n\r\nIt may not be a huge problem since I think must uses of lru_cache set a sensible maximum size.\n", "hints_text": "", "created_at": "2022-01-13T17:07:39Z"}
{"repo": "Textualize/rich", "pull_number": 1804, "instance_id": "Textualize__rich-1804", "issue_numbers": ["1717"], "base_commit": "d4450d9e43375e43614ef81eaaa5b9c18a8f278a", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex a5f50c903..d04e7b3c0 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,10 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+\n ## [11.0.0] - Unreleased\n \n ### Added\n \n+- Fixed issue with pretty repr in jupyter notebook https://github.com/Textualize/rich/issues/1717\n - Added max_depth arg to pretty printing\n \n ## [10.16.2] - 2021-01-02\n@@ -1591,6 +1593,7 @@ Major version bump for a breaking change to `Text.stylize signature`, which corr\n \n - First official release, API still to be stabilized\n \n+[11.0.0]: https://github.com/willmcgugan/rich/compare/v10.16.1...v11.0.0\n [10.16.1]: https://github.com/willmcgugan/rich/compare/v10.16.0...v10.16.1\n [10.16.0]: https://github.com/willmcgugan/rich/compare/v10.15.2...v10.16.0\n [10.15.2]: https://github.com/willmcgugan/rich/compare/v10.15.1...v10.15.2\ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex 5aaf87765..c29cd7904 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -5,6 +5,7 @@ The following people have contributed to the development of Rich:\n <!-- Add your name below, sort alphabetically by surname. Link to Github profile / your home page. -->\n \n - [Gregory Beauregard](https://github.com/GBeauregard/pyffstream)\n+- [Darren Burns](https://github.com/darrenburns)\n - [Pete Davison](https://github.com/pd93)\n - [James Estevez](https://github.com/jstvz)\n - [Oleksis Fraga](https://github.com/oleksis)\ndiff --git a/rich/jupyter.py b/rich/jupyter.py\nindex 7cdcc9cab..bedf5cb19 100644\n--- a/rich/jupyter.py\n+++ b/rich/jupyter.py\n@@ -4,7 +4,6 @@\n from .segment import Segment\n from .terminal_theme import DEFAULT_TERMINAL_THEME\n \n-\n JUPYTER_HTML_FORMAT = \"\"\"\\\n <pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">{code}</pre>\n \"\"\"\n@@ -75,11 +74,16 @@ def escape(text: str) -> str:\n \n def display(segments: Iterable[Segment], text: str) -> None:\n     \"\"\"Render segments to Jupyter.\"\"\"\n-    from IPython.display import display as ipython_display\n-\n     html = _render_segments(segments)\n     jupyter_renderable = JupyterRenderable(html, text)\n-    ipython_display(jupyter_renderable)\n+    try:\n+        from IPython.display import display as ipython_display\n+\n+        ipython_display(jupyter_renderable)\n+    except ModuleNotFoundError:\n+        # Handle the case where the Console has force_jupyter=True,\n+        # but IPython is not installed.\n+        pass\n \n \n def print(*args: Any, **kwargs: Any) -> None:\ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex 10cc29251..57e743df4 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -1,28 +1,30 @@\n import builtins\n+import dataclasses\n+import inspect\n import os\n-from rich.repr import RichReprResult\n+import re\n import sys\n from array import array\n-from collections import Counter, defaultdict, deque, UserDict, UserList\n-import dataclasses\n+from collections import Counter, UserDict, UserList, defaultdict, deque\n from dataclasses import dataclass, fields, is_dataclass\n from inspect import isclass\n from itertools import islice\n-import re\n+from types import MappingProxyType\n from typing import (\n-    DefaultDict,\n     TYPE_CHECKING,\n     Any,\n     Callable,\n+    DefaultDict,\n     Dict,\n     Iterable,\n     List,\n     Optional,\n     Set,\n-    Union,\n     Tuple,\n+    Union,\n )\n-from types import MappingProxyType\n+\n+from rich.repr import RichReprResult\n \n try:\n     import attr as _attr_module\n@@ -30,7 +32,6 @@\n     _attr_module = None  # type: ignore\n \n \n-from .highlighter import ReprHighlighter\n from . import get_console\n from ._loop import loop_last\n from ._pick import pick_bool\n@@ -51,9 +52,6 @@\n         RenderResult,\n     )\n \n-# Matches Jupyter's special methods\n-_re_jupyter_repr = re.compile(f\"^_repr_.+_$\")\n-\n \n def _is_attr_object(obj: Any) -> bool:\n     \"\"\"Check if an object was created with attrs module.\"\"\"\n@@ -82,6 +80,70 @@ def _is_dataclass_repr(obj: object) -> bool:\n         return False\n \n \n+def _ipy_display_hook(\n+    value: Any,\n+    console: Optional[\"Console\"] = None,\n+    overflow: \"OverflowMethod\" = \"ignore\",\n+    crop: bool = False,\n+    indent_guides: bool = False,\n+    max_length: Optional[int] = None,\n+    max_string: Optional[int] = None,\n+    expand_all: bool = False,\n+) -> None:\n+    from .console import ConsoleRenderable  # needed here to prevent circular import\n+\n+    # always skip rich generated jupyter renderables or None values\n+    if isinstance(value, JupyterRenderable) or value is None:\n+        return\n+\n+    console = console or get_console()\n+    if console.is_jupyter:\n+        # Delegate rendering to IPython if the object (and IPython) supports it\n+        #  https://ipython.readthedocs.io/en/stable/config/integrating.html#rich-display\n+        ipython_repr_methods = [\n+            \"_repr_html_\",\n+            \"_repr_markdown_\",\n+            \"_repr_json_\",\n+            \"_repr_latex_\",\n+            \"_repr_jpeg_\",\n+            \"_repr_png_\",\n+            \"_repr_svg_\",\n+            \"_repr_mimebundle_\",\n+        ]\n+        for repr_method in ipython_repr_methods:\n+            method = getattr(value, repr_method, None)\n+            if inspect.ismethod(method):\n+                # Calling the method ourselves isn't ideal. The interface for the `_repr_*_` methods\n+                #  specifies that if they return None, then they should not be rendered\n+                #  by the notebook.\n+                try:\n+                    repr_result = method()\n+                except Exception:\n+                    continue  # If the method raises, treat it as if it doesn't exist, try any others\n+                if repr_result is not None:\n+                    return  # Delegate rendering to IPython\n+\n+    # certain renderables should start on a new line\n+    if isinstance(value, ConsoleRenderable):\n+        console.line()\n+\n+    console.print(\n+        value\n+        if isinstance(value, RichRenderable)\n+        else Pretty(\n+            value,\n+            overflow=overflow,\n+            indent_guides=indent_guides,\n+            max_length=max_length,\n+            max_string=max_string,\n+            expand_all=expand_all,\n+            margin=12,\n+        ),\n+        crop=crop,\n+        new_line_start=True,\n+    )\n+\n+\n def install(\n     console: Optional[\"Console\"] = None,\n     overflow: \"OverflowMethod\" = \"ignore\",\n@@ -106,8 +168,6 @@ def install(\n     \"\"\"\n     from rich import get_console\n \n-    from .console import ConsoleRenderable  # needed here to prevent circular import\n-\n     console = console or get_console()\n     assert console is not None\n \n@@ -131,37 +191,6 @@ def display_hook(value: Any) -> None:\n             )\n             builtins._ = value  # type: ignore\n \n-    def ipy_display_hook(value: Any) -> None:  # pragma: no cover\n-        assert console is not None\n-        # always skip rich generated jupyter renderables or None values\n-        if isinstance(value, JupyterRenderable) or value is None:\n-            return\n-        # on jupyter rich display, if using one of the special representations don't use rich\n-        if console.is_jupyter and any(\n-            _re_jupyter_repr.match(attr) for attr in dir(value)\n-        ):\n-            return\n-\n-        # certain renderables should start on a new line\n-        if isinstance(value, ConsoleRenderable):\n-            console.line()\n-\n-        console.print(\n-            value\n-            if isinstance(value, RichRenderable)\n-            else Pretty(\n-                value,\n-                overflow=overflow,\n-                indent_guides=indent_guides,\n-                max_length=max_length,\n-                max_string=max_string,\n-                expand_all=expand_all,\n-                margin=12,\n-            ),\n-            crop=crop,\n-            new_line_start=True,\n-        )\n-\n     try:  # pragma: no cover\n         ip = get_ipython()  # type: ignore\n         from IPython.core.formatters import BaseFormatter\n@@ -171,7 +200,15 @@ class RichFormatter(BaseFormatter):  # type: ignore\n \n             def __call__(self, value: Any) -> Any:\n                 if self.pprint:\n-                    return ipy_display_hook(value)\n+                    return _ipy_display_hook(\n+                        value,\n+                        console=get_console(),\n+                        overflow=overflow,\n+                        indent_guides=indent_guides,\n+                        max_length=max_length,\n+                        max_string=max_string,\n+                        expand_all=expand_all,\n+                    )\n                 else:\n                     return repr(value)\n \n", "test_patch": "diff --git a/tests/test_pretty.py b/tests/test_pretty.py\nindex f5753fd22..871f1397c 100644\n--- a/tests/test_pretty.py\n+++ b/tests/test_pretty.py\n@@ -1,16 +1,16 @@\n-from array import array\n-from collections import defaultdict, UserDict, UserList\n-from dataclasses import dataclass, field\n import io\n import sys\n+from array import array\n+from collections import defaultdict, UserDict\n from typing import List\n \n import attr\n import pytest\n+from dataclasses import dataclass, field\n \n from rich.console import Console\n-from rich.pretty import install, Pretty, pprint, pretty_repr, Node\n-\n+from rich.pretty import install, Pretty, pprint, pretty_repr, Node, _ipy_display_hook\n+from rich.text import Text\n \n skip_py36 = pytest.mark.skipif(\n     sys.version_info.minor == 6 and sys.version_info.major == 3,\n@@ -44,6 +44,85 @@ def test_install():\n     assert sys.displayhook is not dh\n \n \n+def test_ipy_display_hook__repr_html():\n+    console = Console(file=io.StringIO(), force_jupyter=True)\n+\n+    class Thing:\n+        def _repr_html_(self):\n+            return \"hello\"\n+\n+    console.begin_capture()\n+    _ipy_display_hook(Thing(), console=console)\n+\n+    # Rendering delegated to notebook because _repr_html_ method exists\n+    assert console.end_capture() == \"\"\n+\n+\n+def test_ipy_display_hook__multiple_special_reprs():\n+    \"\"\"\n+    The case where there are multiple IPython special _repr_*_\n+    methods on the object, and one of them returns None but another\n+    one does not.\n+    \"\"\"\n+    console = Console(file=io.StringIO(), force_jupyter=True)\n+\n+    class Thing:\n+        def _repr_latex_(self):\n+            return None\n+\n+        def _repr_html_(self):\n+            return \"hello\"\n+\n+    console.begin_capture()\n+    _ipy_display_hook(Thing(), console=console)\n+\n+    assert console.end_capture() == \"\"\n+\n+\n+def test_ipy_display_hook__no_special_repr_methods():\n+    console = Console(file=io.StringIO(), force_jupyter=True)\n+\n+    class Thing:\n+        def __repr__(self) -> str:\n+            return \"hello\"\n+\n+    console.begin_capture()\n+    _ipy_display_hook(Thing(), console=console)\n+\n+    # No IPython special repr methods, so printed by Rich\n+    assert console.end_capture() == \"hello\\n\"\n+\n+\n+def test_ipy_display_hook__special_repr_raises_exception():\n+    \"\"\"\n+    When an IPython special repr method raises an exception,\n+    we treat it as if it doesn't exist and look for the next.\n+    \"\"\"\n+    console = Console(file=io.StringIO(), force_jupyter=True)\n+\n+    class Thing:\n+        def _repr_markdown_(self):\n+            raise Exception()\n+\n+        def _repr_latex_(self):\n+            return None\n+\n+        def _repr_html_(self):\n+            return \"hello\"\n+\n+    console.begin_capture()\n+    _ipy_display_hook(Thing(), console=console)\n+\n+    assert console.end_capture() == \"\"\n+\n+\n+def test_ipy_display_hook__console_renderables_on_newline():\n+    console = Console(file=io.StringIO(), force_jupyter=True)\n+    console.begin_capture()\n+    _ipy_display_hook(Text(\"hello\"), console=console)\n+    assert console.end_capture() == \"\\nhello\\n\"\n+\n+\n def test_pretty():\n     test = {\n         \"foo\": [1, 2, 3, (4, 5, {6}, 7, 8, {9}), {}],\n@@ -55,7 +134,6 @@ def test_pretty():\n \n     result = pretty_repr(test, max_width=80)\n     print(result)\n-    # print(repr(result))\n     expected = \"{\\n    'foo': [1, 2, 3, (4, 5, {6}, 7, 8, {9}), {}],\\n    'bar': {\\n        'egg': 'baz',\\n        'words': [\\n            'Hello World',\\n            'Hello World',\\n            'Hello World',\\n            'Hello World',\\n            'Hello World',\\n            'Hello World',\\n            'Hello World',\\n            'Hello World',\\n            'Hello World',\\n            'Hello World'\\n        ]\\n    },\\n    False: 'foo',\\n    True: '',\\n    'text': ('Hello World', 'foo bar baz egg')\\n}\"\n     print(expected)\n     assert result == expected\n", "problem_statement": "[BUG] repr fails for pd.Series in Jupyter with pretty.install()\n**Describe the bug**\r\n\r\n![image](https://user-images.githubusercontent.com/1360812/143245956-2ef17723-ddd0-487e-ad2a-11402ba58c1d.png)\r\n\r\nAny pd.Series does not appear in Jupyter (both Lab and Notebook) after `pretty.install()`, but appears with `pretty.pprint()`.\r\nThis is not the case with other pandas structures.\r\n\r\n**To Reproduce**\r\n\r\nFor copy paste purposes:\r\n\r\n```python\r\nfrom rich import pretty\r\npretty.install()\r\n\r\nimport pandas as pd\r\ndf = pd.DataFrame.from_records([{'a': 1, 'b': 1}, {'a': 2, 'b': 2}])\r\ndf.a  # no output\r\n\r\npretty.pprint(df.a)  # outputs fine\r\n```\r\n\r\n```\r\npython -m rich.diagnose\r\npython -m rich._windows\r\npip freeze | grep rich\r\n```\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                              \u2502\r\n\u2502                                                                              \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=80 ColorSystem.TRUECOLOR>                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                              \u2502\r\n\u2502     color_system = 'truecolor'                                               \u2502\r\n\u2502         encoding = 'utf-8'                                                   \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'               \u2502\r\n\u2502                    encoding='utf-8'>                                         \u2502\r\n\u2502           height = 24                                                        \u2502\r\n\u2502    is_alt_screen = False                                                     \u2502\r\n\u2502 is_dumb_terminal = False                                                     \u2502\r\n\u2502   is_interactive = True                                                      \u2502\r\n\u2502       is_jupyter = False                                                     \u2502\r\n\u2502      is_terminal = True                                                      \u2502\r\n\u2502   legacy_windows = False                                                     \u2502\r\n\u2502         no_color = False                                                     \u2502\r\n\u2502          options = ConsoleOptions(                                           \u2502\r\n\u2502                        size=ConsoleDimensions(width=80, height=24),          \u2502\r\n\u2502                        legacy_windows=False,                                 \u2502\r\n\u2502                        min_width=1,                                          \u2502\r\n\u2502                        max_width=80,                                         \u2502\r\n\u2502                        is_terminal=True,                                     \u2502\r\n\u2502                        encoding='utf-8',                                     \u2502\r\n\u2502                        max_height=24,                                        \u2502\r\n\u2502                        justify=None,                                         \u2502\r\n\u2502                        overflow=None,                                        \u2502\r\n\u2502                        no_wrap=False,                                        \u2502\r\n\u2502                        highlight=None,                                       \u2502\r\n\u2502                        markup=None,                                          \u2502\r\n\u2502                        height=None                                           \u2502\r\n\u2502                    )                                                         \u2502\r\n\u2502            quiet = False                                                     \u2502\r\n\u2502           record = False                                                     \u2502\r\n\u2502         safe_box = True                                                      \u2502\r\n\u2502             size = ConsoleDimensions(width=80, height=24)                    \u2502\r\n\u2502        soft_wrap = False                                                     \u2502\r\n\u2502           stderr = False                                                     \u2502\r\n\u2502            style = None                                                      \u2502\r\n\u2502         tab_size = 8                                                         \u2502\r\n\u2502            width = 80                                                        \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\nWindowsConsoleFeatures(vt=False, truecolor=False)\r\nrich==10.14.0\r\n```\r\n\n", "hints_text": "Probably irrelevant but `inspect` looks beautiful too, only automatic repr doesn't work.\r\n![image](https://user-images.githubusercontent.com/1360812/143247624-1a22a5c1-1cc0-40f7-8469-b3c5c9fca02b.png)\r\n\nDid I solve your problem? \n\nWhy not buy the devs a [coffee](https://ko-fi.com/textualize) to say thanks?", "created_at": "2022-01-06T10:23:32Z"}
{"repo": "Textualize/rich", "pull_number": 1796, "instance_id": "Textualize__rich-1796", "issue_numbers": ["1794"], "base_commit": "bf23d03893305d974e1ad9f44cfc45d71903a243", "patch": "diff --git a/poetry.lock b/poetry.lock\nindex c26946367..d0391f5c7 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -687,7 +687,7 @@ python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n \n [[package]]\n name = \"pygments\"\n-version = \"2.10.0\"\n+version = \"2.11.1\"\n description = \"Pygments is a syntax highlighting package written in Python.\"\n category = \"main\"\n optional = false\n@@ -1358,8 +1358,8 @@ pycparser = [\n     {file = \"pycparser-2.21.tar.gz\", hash = \"sha256:e644fdec12f7872f86c58ff790da456218b10f863970249516d60a5eaca77206\"},\n ]\n pygments = [\n-    {file = \"Pygments-2.10.0-py3-none-any.whl\", hash = \"sha256:b8e67fe6af78f492b3c4b3e2970c0624cbf08beb1e493b2c99b9fa1b67a20380\"},\n-    {file = \"Pygments-2.10.0.tar.gz\", hash = \"sha256:f398865f7eb6874156579fdf36bc840a03cab64d1cde9e93d68f46a425ec52c6\"},\n+    {file = \"Pygments-2.11.1-py3-none-any.whl\", hash = \"sha256:9135c1af61eec0f650cd1ea1ed8ce298e54d56bcd8cc2ef46edd7702c171337c\"},\n+    {file = \"Pygments-2.11.1.tar.gz\", hash = \"sha256:59b895e326f0fb0d733fd28c6839bd18ad0687ba20efc26d4277fd1d30b971f4\"},\n ]\n pyparsing = [\n     {file = \"pyparsing-3.0.6-py3-none-any.whl\", hash = \"sha256:04ff808a5b90911829c55c4e26f75fa5ca8a2f5f36aa3a51f68e27033341d3e4\"},\n", "test_patch": "diff --git a/tests/test_syntax.py b/tests/test_syntax.py\nindex de739c8d8..834285ac1 100644\n--- a/tests/test_syntax.py\n+++ b/tests/test_syntax.py\n@@ -49,7 +49,7 @@ def test_python_render():\n             lexer=\"python\",\n             line_numbers=True,\n             line_range=(2, 10),\n-            theme=\"foo\",\n+            theme=\"monokai\",\n             code_width=60,\n             word_wrap=True,\n         ),\n@@ -57,7 +57,7 @@ def test_python_render():\n     )\n     rendered_syntax = render(syntax)\n     print(repr(rendered_syntax))\n-    expected = '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 2 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;248;248;248m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;248;248;248m     \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248mand last value.\"\"\"\\x1b[0m\\x1b[48;2;248;248;248m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 3 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 4 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 5 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 6 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;210;65;58;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 7 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 8 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 9 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m10 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\n+    expected = '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 2 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;39;40;34m     \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34mand last value.\"\"\"\\x1b[0m\\x1b[48;2;39;40;34m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 3 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 4 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 5 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 6 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 7 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\x1b[48;2;39;40;34m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 8 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 9 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m10 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\n     assert rendered_syntax == expected\n \n \n@@ -66,13 +66,13 @@ def test_python_render_simple():\n         CODE,\n         lexer=\"python\",\n         line_numbers=False,\n-        theme=\"foo\",\n+        theme=\"monokai\",\n         code_width=60,\n         word_wrap=False,\n     )\n     rendered_syntax = render(syntax)\n     print(repr(rendered_syntax))\n-    expected = '\\x1b[1;38;2;0;128;0;48;2;248;248;248mdef\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;255;48;2;248;248;248mloop_first_last\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mT\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m]\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m-\\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m>\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mTuple\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mb\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first an\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                    \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;210;65;58;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                   \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                            \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                               \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[48;2;248;248;248m                                       \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                       \\x1b[0m\\n'\n+    expected = '\\x1b[38;2;102;217;239;48;2;39;40;34mdef\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mloop_first_last\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m-\\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m>\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mTuple\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mb\\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34m\"\"\"Iterate and generate a tuple with a flag for first an\\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                              \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                    \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                  \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                   \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\x1b[48;2;39;40;34m                                              \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[48;2;39;40;34m                                            \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                               \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                  \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[48;2;39;40;34m                                       \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[48;2;39;40;34m                              \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                       \\x1b[0m\\n'\n     assert rendered_syntax == expected\n \n \n@@ -81,13 +81,13 @@ def test_python_render_simple_passing_lexer_instance():\n         CODE,\n         lexer=PythonLexer(),\n         line_numbers=False,\n-        theme=\"foo\",\n+        theme=\"monokai\",\n         code_width=60,\n         word_wrap=False,\n     )\n     rendered_syntax = render(syntax)\n     print(repr(rendered_syntax))\n-    expected = '\\x1b[1;38;2;0;128;0;48;2;248;248;248mdef\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;255;48;2;248;248;248mloop_first_last\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mT\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m]\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m-\\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m>\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mTuple\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mb\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first an\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                    \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;210;65;58;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                   \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                            \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                               \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[48;2;248;248;248m                                       \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                       \\x1b[0m\\n'\n+    expected = '\\x1b[38;2;102;217;239;48;2;39;40;34mdef\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mloop_first_last\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m-\\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m>\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mTuple\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mb\\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34m\"\"\"Iterate and generate a tuple with a flag for first an\\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                              \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                    \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                  \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                   \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\x1b[48;2;39;40;34m                                              \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[48;2;39;40;34m                                            \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                               \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                  \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[48;2;39;40;34m                                       \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[48;2;39;40;34m                              \\x1b[0m\\n\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                       \\x1b[0m\\n'\n     assert rendered_syntax == expected\n \n \n@@ -131,7 +131,7 @@ def test_python_render_indent_guides():\n             lexer=\"python\",\n             line_numbers=True,\n             line_range=(2, 10),\n-            theme=\"foo\",\n+            theme=\"monokai\",\n             code_width=60,\n             word_wrap=True,\n             indent_guides=True,\n@@ -140,7 +140,7 @@ def test_python_render_indent_guides():\n     )\n     rendered_syntax = render(syntax)\n     print(repr(rendered_syntax))\n-    expected = '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 2 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;248;248;248m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;248;248;248m     \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248mand last value.\"\"\"\\x1b[0m\\x1b[48;2;248;248;248m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 3 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 4 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 5 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 6 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;210;65;58;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 7 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 8 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 9 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m10 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\n+    expected = '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 2 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;39;40;34m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;39;40;34m     \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34mand last value.\"\"\"\\x1b[0m\\x1b[48;2;39;40;34m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 3 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 4 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 5 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \u2502   \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 6 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 7 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \u2502   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\x1b[48;2;39;40;34m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 8 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 9 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m10 \\x1b[0m\\x1b[2;38;2;117;113;94;48;2;39;40;34m\u2502   \u2502   \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mfirst\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\n     assert rendered_syntax == expected\n \n \n", "problem_statement": "[BUG] 10.16.2: pytest is failing in \n**Describe the bug**\r\nLooks like pytest is failing on `tests/test_syntax.py::test_python_render*` units.\r\n\r\n**Platform**\r\nLinux x86/64\r\n\r\nI'm trying to package your module as an rpm package. So I'm using the typical PEP517 based build, install and test cycle used on building packages from non-root account.\r\n- `python3 -sBm build -w`\r\n- install .whl file in </install/prefix>\r\n- run pytest with PYTHONPATH pointing to sitearch and sitelib inside </install/prefix>\r\n\r\nHere is pytest output:\r\n```console\r\n+ PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-rich-10.16.2-2.fc35.x86_64/usr/lib64/python3.8/site-packages:/home/tkloczko/rpmbuild/BUILDROOT/python-rich-10.16.2-2.fc35.x86_64/usr/lib/python3.8/site-packages\r\n+ /usr/bin/pytest -ra\r\n=========================================================================== test session starts ============================================================================\r\nplatform linux -- Python 3.8.12, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\r\nrootdir: /home/tkloczko/rpmbuild/BUILD/rich-10.16.2\r\ncollected 583 items\r\n\r\ntests/test_align.py ................                                                                                                                                 [  2%]\r\ntests/test_ansi.py .                                                                                                                                                 [  2%]\r\ntests/test_bar.py .......                                                                                                                                            [  4%]\r\ntests/test_block_bar.py ....                                                                                                                                         [  4%]\r\ntests/test_box.py ......                                                                                                                                             [  5%]\r\ntests/test_card.py .                                                                                                                                                 [  6%]\r\ntests/test_cells.py ..                                                                                                                                               [  6%]\r\ntests/test_color.py .................                                                                                                                                [  9%]\r\ntests/test_color_triplet.py ...                                                                                                                                      [  9%]\r\ntests/test_columns.py .                                                                                                                                              [  9%]\r\ntests/test_columns_align.py .                                                                                                                                        [ 10%]\r\ntests/test_console.py ............................................................................                                                                   [ 23%]\r\ntests/test_constrain.py .                                                                                                                                            [ 23%]\r\ntests/test_containers.py ....                                                                                                                                        [ 24%]\r\ntests/test_control.py .....                                                                                                                                          [ 24%]\r\ntests/test_emoji.py ......                                                                                                                                           [ 25%]\r\ntests/test_file_proxy.py ..                                                                                                                                          [ 26%]\r\ntests/test_filesize.py ..                                                                                                                                            [ 26%]\r\ntests/test_highlighter.py ......................................                                                                                                     [ 33%]\r\ntests/test_inspect.py ......s.                                                                                                                                       [ 34%]\r\ntests/test_json.py .                                                                                                                                                 [ 34%]\r\ntests/test_jupyter.py .                                                                                                                                              [ 34%]\r\ntests/test_layout.py ......                                                                                                                                          [ 35%]\r\ntests/test_live.py ..........                                                                                                                                        [ 37%]\r\ntests/test_live_render.py ....                                                                                                                                       [ 38%]\r\ntests/test_log.py ...                                                                                                                                                [ 38%]\r\ntests/test_logging.py ....                                                                                                                                           [ 39%]\r\ntests/test_lrucache.py .                                                                                                                                             [ 39%]\r\ntests/test_markdown.py ..                                                                                                                                            [ 39%]\r\ntests/test_markdown_no_hyperlinks.py .                                                                                                                               [ 40%]\r\ntests/test_markup.py ...................                                                                                                                             [ 43%]\r\ntests/test_measure.py ....                                                                                                                                           [ 44%]\r\ntests/test_padding.py .....                                                                                                                                          [ 44%]\r\ntests/test_palette.py .                                                                                                                                              [ 45%]\r\ntests/test_panel.py .........                                                                                                                                        [ 46%]\r\ntests/test_pick.py .                                                                                                                                                 [ 46%]\r\ntests/test_pretty.py ......................s..                                                                                                                       [ 51%]\r\ntests/test_progress.py .........................                                                                                                                     [ 55%]\r\ntests/test_prompt.py ......                                                                                                                                          [ 56%]\r\ntests/test_protocol.py ......                                                                                                                                        [ 57%]\r\ntests/test_ratio.py .......                                                                                                                                          [ 58%]\r\ntests/test_repr.py ........                                                                                                                                          [ 60%]\r\ntests/test_rich_print.py .......                                                                                                                                     [ 61%]\r\ntests/test_rule.py .......                                                                                                                                           [ 62%]\r\ntests/test_screen.py .                                                                                                                                               [ 62%]\r\ntests/test_segment.py .............................................                                                                                                  [ 70%]\r\ntests/test_spinner.py .....                                                                                                                                          [ 71%]\r\ntests/test_stack.py .                                                                                                                                                [ 71%]\r\ntests/test_status.py ..                                                                                                                                              [ 71%]\r\ntests/test_style.py .........................                                                                                                                        [ 75%]\r\ntests/test_styled.py .                                                                                                                                               [ 76%]\r\ntests/test_syntax.py .FF..F..........                                                                                                                                [ 78%]\r\ntests/test_table.py .......                                                                                                                                          [ 80%]\r\ntests/test_tabulate.py .                                                                                                                                             [ 80%]\r\ntests/test_text.py ..................................................................................                                                                [ 94%]\r\ntests/test_theme.py .....                                                                                                                                            [ 95%]\r\ntests/test_tools.py ....                                                                                                                                             [ 95%]\r\ntests/test_traceback.py ...............                                                                                                                              [ 98%]\r\ntests/test_tree.py .....s.s.                                                                                                                                         [100%]\r\n\r\n================================================================================= FAILURES =================================================================================\r\n____________________________________________________________________________ test_python_render ____________________________________________________________________________\r\n\r\n    def test_python_render():\r\n        syntax = Panel.fit(\r\n            Syntax(\r\n                CODE,\r\n                lexer_name=\"python\",\r\n                line_numbers=True,\r\n                line_range=(2, 10),\r\n                theme=\"foo\",\r\n                code_width=60,\r\n                word_wrap=True,\r\n            ),\r\n            padding=0,\r\n        )\r\n        rendered_syntax = render(syntax)\r\n        print(repr(rendered_syntax))\r\n        expected = '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 2 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;248;248;248m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;248;248;248m     \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248mand last value.\"\"\"\\x1b[0m\\x1b[48;2;248;248;248m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 3 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 4 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 5 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 6 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;210;65;58;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 7 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 8 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 9 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m10 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\n>       assert rendered_syntax == expected\r\nE       AssertionError: assert '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n' == '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\nE         Skipping 1906 identical leading characters in diff, use -v to show\r\nE         Skipping 1814 identical trailing characters in diff, use -v to show\r\nE         -\r\nE         ?           -   ^  ^\r\nE         +\r\nE         ?            +  ^  ^\r\n\r\ntests/test_syntax.py:59: AssertionError\r\n--------------------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------------------\r\n'\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 2 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;248;248;248m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;248;248;248m     \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248mand last value.\"\"\"\\x1b[0m\\x1b[48;2;248;248;248m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 3 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 4 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 5 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 6 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;203;63;56;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 7 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 8 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 9 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m10 \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\n________________________________________________________________________ test_python_render_simple _________________________________________________________________________\r\n\r\n    def test_python_render_simple():\r\n        syntax = Syntax(\r\n            CODE,\r\n            lexer_name=\"python\",\r\n            line_numbers=False,\r\n            theme=\"foo\",\r\n            code_width=60,\r\n            word_wrap=False,\r\n        )\r\n        rendered_syntax = render(syntax)\r\n        print(repr(rendered_syntax))\r\n        expected = '\\x1b[1;38;2;0;128;0;48;2;248;248;248mdef\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;255;48;2;248;248;248mloop_first_last\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mT\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m]\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m-\\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m>\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mTuple\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mb\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first an\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                    \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;210;65;58;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                   \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                            \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                               \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[48;2;248;248;248m                                       \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                       \\x1b[0m\\n'\r\n>       assert rendered_syntax == expected\r\nE       AssertionError: assert '\\x1b[1;38;2;...    \\x1b[0m\\n' == '\\x1b[1;38;2;...    \\x1b[0m\\n'\r\nE         Skipping 2033 identical leading characters in diff, use -v to show\r\nE         Skipping 2431 identical trailing characters in diff, use -v to show\r\nE         -\r\nE         ?           -   ^  ^\r\nE         +\r\nE         ?            +  ^  ^\r\n\r\ntests/test_syntax.py:74: AssertionError\r\n--------------------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------------------\r\n'\\x1b[1;38;2;0;128;0;48;2;248;248;248mdef\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;255;48;2;248;248;248mloop_first_last\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mT\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m]\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m-\\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m>\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mIterable\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mTuple\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m[\\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mb\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first an\\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                    \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;203;63;56;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                   \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                            \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                               \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                  \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[48;2;248;248;248m                                       \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m        \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\\n\\x1b[38;2;0;0;0;48;2;248;248;248m    \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                       \\x1b[0m\\n'\r\n_____________________________________________________________________ test_python_render_indent_guides _____________________________________________________________________\r\n\r\n    def test_python_render_indent_guides():\r\n        syntax = Panel.fit(\r\n            Syntax(\r\n                CODE,\r\n                lexer_name=\"python\",\r\n                line_numbers=True,\r\n                line_range=(2, 10),\r\n                theme=\"foo\",\r\n                code_width=60,\r\n                word_wrap=True,\r\n                indent_guides=True,\r\n            ),\r\n            padding=0,\r\n        )\r\n        rendered_syntax = render(syntax)\r\n        print(repr(rendered_syntax))\r\n        expected = '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 2 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;248;248;248m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;248;248;248m     \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248mand last value.\"\"\"\\x1b[0m\\x1b[48;2;248;248;248m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 3 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 4 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 5 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 6 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;210;65;58;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 7 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 8 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 9 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m10 \\x1b[0m\\x1b[2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\n>       assert rendered_syntax == expected\r\nE       assert '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n' == '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\nE         Skipping 154 identical leading characters in diff, use -v to show\r\nE         Skipping 478 identical trailing characters in diff, use -v to show\r\nE         - 2;3;38;2;64;128;128;48;2;248;248;248m\u2502   \"\"\"Iterate and generate a tuple with a flag for first  \u2502\r\nE         ?           ^   ^   ^\r\nE         + 2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \"\"\"Iterate and generate a tuple with a flag for first  \u2502\r\nE         ?           ^   ^   ^\r\nE           \u2502     and ...\r\nE\r\nE         ...Full output truncated (33 lines hidden), use '-vv' to show\r\n\r\ntests/test_syntax.py:127: AssertionError\r\n--------------------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------------------\r\n'\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 2 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248m\"\"\"Iterate and generate a tuple with a flag for first \\x1b[0m\\x1b[48;2;248;248;248m \\x1b[0m\u2502\\n\u2502\\x1b[48;2;248;248;248m     \\x1b[0m\\x1b[3;38;2;186;33;33;48;2;248;248;248mand last value.\"\"\"\\x1b[0m\\x1b[48;2;248;248;248m                                         \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 3 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248miter\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalues\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 4 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mtry\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                                   \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 5 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;128;0;48;2;248;248;248mnext\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m(\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m)\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 6 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mexcept\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;203;63;56;48;2;248;248;248mStopIteration\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                                  \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 7 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mreturn\\x1b[0m\\x1b[48;2;248;248;248m                                             \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 8 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;102;102;102;48;2;248;248;248m=\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mTrue\\x1b[0m\\x1b[48;2;248;248;248m                                           \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m 9 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mfor\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mvalue\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;170;34;255;48;2;248;248;248min\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248miter_values\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m:\\x1b[0m\\x1b[48;2;248;248;248m                              \\x1b[0m\u2502\\n\u2502\\x1b[1;38;2;24;24;24;48;2;248;248;248m  \\x1b[0m\\x1b[38;2;173;173;173;48;2;248;248;248m10 \\x1b[0m\\x1b[2;3;38;2;61;123;123;48;2;248;248;248m\u2502   \u2502   \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248myield\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mfirst\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[1;38;2;0;128;0;48;2;248;248;248mFalse\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m,\\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248m \\x1b[0m\\x1b[38;2;0;0;0;48;2;248;248;248mprevious_value\\x1b[0m\\x1b[48;2;248;248;248m                 \\x1b[0m\u2502\\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\n============================================================================= warnings summary =============================================================================\r\ntests/test_tabulate.py: 17 warnings\r\n  /home/tkloczko/rpmbuild/BUILD/rich-10.16.2/rich/tabulate.py:32: DeprecationWarning: tabulate_mapping will be deprecated in Rich v11\r\n    warnings.warn(\"tabulate_mapping will be deprecated in Rich v11\", DeprecationWarning)\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n========================================================================= short test summary info ==========================================================================\r\nSKIPPED [1] tests/test_inspect.py:203: rendered differently on py3.8\r\nSKIPPED [1] tests/test_pretty.py:271: rendered differently on py3.8\r\nSKIPPED [1] tests/test_tree.py:79: Windows specific\r\nSKIPPED [1] tests/test_tree.py:115: Windows specific\r\nFAILED tests/test_syntax.py::test_python_render - AssertionError: assert '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n' == '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\nFAILED tests/test_syntax.py::test_python_render_simple - AssertionError: assert '\\x1b[1;38;2;...    \\x1b[0m\\n' == '\\x1b[1;38;2;...    \\x1b[0m\\n'\r\nFAILED tests/test_syntax.py::test_python_render_indent_guides - assert '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n' == '\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500...\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\\n'\r\n========================================================== 3 failed, 576 passed, 4 skipped, 17 warnings in 6.52s ===========================================================\r\n```\r\n\n", "hints_text": "", "created_at": "2022-01-03T13:04:54Z"}
{"repo": "Textualize/rich", "pull_number": 1654, "instance_id": "Textualize__rich-1654", "issue_numbers": ["1653"], "base_commit": "9b42555e26050e90a05818b592cbfca052ae75a1", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 3a0dad5b3..4d5c729dd 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -17,6 +17,7 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n - Fixed issue with TERM env vars that have more than one hyphen https://github.com/willmcgugan/rich/issues/1640\n - Fixed missing new line after progress bar when terminal is not interactive https://github.com/willmcgugan/rich/issues/1606\n - Fixed exception in IPython when disabling pprint with %pprint https://github.com/willmcgugan/rich/issues/1646\n+- Fixed issue where values longer than the console width produced invalid JSON https://github.com/willmcgugan/rich/issues/1653\n \n ## [10.12.0] - 2021-10-06\n \ndiff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md\nindex ad5147afc..ba0c7d671 100644\n--- a/CONTRIBUTORS.md\n+++ b/CONTRIBUTORS.md\n@@ -6,6 +6,7 @@ The following people have contributed to the development of Rich:\n \n - [Gregory Beauregard](https://github.com/GBeauregard/pyffstream)\n - [Pete Davison](https://github.com/pd93)\n+- [James Estevez](https://github.com/jstvz)\n - [Oleksis Fraga](https://github.com/oleksis)\n - [Finn Hughes](https://github.com/finnhughes)\n - [Josh Karpel](https://github.com/JoshKarpel)\ndiff --git a/rich/console.py b/rich/console.py\nindex 3b08e3949..4764e0bd3 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -1679,7 +1679,7 @@ def print_json(\n                 default=default,\n                 sort_keys=sort_keys,\n             )\n-        self.print(json_renderable)\n+        self.print(json_renderable, soft_wrap=True)\n \n     def update_screen(\n         self,\n", "test_patch": "diff --git a/tests/test_rich_print.py b/tests/test_rich_print.py\nindex f6ea5110d..a92b80002 100644\n--- a/tests/test_rich_print.py\n+++ b/tests/test_rich_print.py\n@@ -1,4 +1,5 @@\n import io\n+import json\n \n import rich\n from rich.console import Console\n@@ -38,6 +39,27 @@ def test_rich_print_json():\n     assert result == expected\n \n \n+def test_rich_print_json_round_trip():\n+    data = [\"x\" * 100, 2e128]\n+    console = rich.get_console()\n+    with console.capture() as capture:\n+        rich.print_json(data=data, indent=4)\n+    result = capture.get()\n+    print(repr(result))\n+    result_data = json.loads(result)\n+    assert result_data == data\n+\n+\n+def test_rich_print_json_no_truncation():\n+    console = rich.get_console()\n+    with console.capture() as capture:\n+        rich.print_json(f'[\"{\"x\" * 100}\", {int(2e128)}]', indent=4)\n+    result = capture.get()\n+    print(repr(result))\n+    assert (\"x\" * 100) in result\n+    assert str(int(2e128)) in result\n+\n+\n def test_rich_print_X():\n     console = rich.get_console()\n     output = io.StringIO()\n", "problem_statement": "[BUG] print_json produces invalid JSON with long values\n**Read the docs**\r\n\u2714\ufe0f : You might find a solution to your problem in the [docs](https://rich.readthedocs.io/en/latest/introduction.html) -- consider using the search function there.\r\n\r\n**Describe the bug**\r\n`print_json` produces invalid JSON when input includes values wider than console: \r\n```console\r\n$ python repro.py | jq\r\nparse error: Invalid string: control characters from U+0000 through U+001F must be escaped at line 3, column 3\r\n```\r\n**To Reproduce**\r\nrepro.py:\r\n```python\r\nimport rich\r\n\r\ndata = {'long_str': \"x\" * 1000, 'long_int': int(2e128)}\r\nrich.reconfigure(width=100)\r\nrich.print_json(data=data)\r\n```\r\n\r\n**Platform**\r\nReproduced in alacritty on macOS and Arch.\r\n\r\n**Diagnose**\r\n`diagnose`:\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=101 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 51                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=101, height=51),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=101,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=51,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=101, height=51)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 101                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n```\r\n`_windows`:\r\n\r\n```\r\nplatform=\"Linux\"\r\nWindowsConsoleFeatures(vt=False, truecolor=False)\r\n```\r\n\r\n```console\r\n$ pip freeze | grep rich\r\n48:rich==10.13.0\r\n```\r\n**Did I help?**\r\n\r\nIf I was able to resolve your problem, consider [sponsoring](https://github.com/sponsors/willmcgugan) my work on Rich, or [buy me a coffee](https://ko-fi.com/willmcgugan) to say thanks.\r\n\n", "hints_text": "", "created_at": "2021-11-06T19:49:43Z"}
{"repo": "Textualize/rich", "pull_number": 1634, "instance_id": "Textualize__rich-1634", "issue_numbers": ["1633"], "base_commit": "eb673d1204340738d3084ebc2e4c789a35a4e49b", "patch": "diff --git a/docs/source/conf.py b/docs/source/conf.py\nindex 774871e3e..34258eb49 100644\n--- a/docs/source/conf.py\n+++ b/docs/source/conf.py\n@@ -43,6 +43,7 @@\n     \"sphinx.ext.autodoc\",\n     \"sphinx.ext.viewcode\",\n     \"sphinx.ext.napoleon\",\n+    \"sphinx.ext.intersphinx\",\n     \"sphinx.ext.autosectionlabel\",\n     \"sphinx_copybutton\",\n ]\ndiff --git a/docs/source/console.rst b/docs/source/console.rst\nindex 6ea6e0926..2b26e3104 100644\n--- a/docs/source/console.rst\n+++ b/docs/source/console.rst\n@@ -238,12 +238,14 @@ The :meth:`~rich.console.Console.print` method has a boolean ``crop`` argument.\n Input\n -----\n \n-The console class has an :meth:`~rich.console.Console.input` which works in the same way as Python's builtin ``input()`` method, but can use anything that Rich can print as a prompt. For example, here's a colorful prompt with an emoji::\n+The console class has an :meth:`~rich.console.Console.input` method which works in the same way as Python's builtin :func:`input` function, but can use anything that Rich can print as a prompt. For example, here's a colorful prompt with an emoji::\n \n     from rich.console import Console\n     console = Console()\n     console.input(\"What is [i]your[/i] [bold red]name[/]? :smiley: \")\n \n+If Python's builtin :mod:`readline` module is previously loaded, elaborate line editing and history features will be available.\n+\n Exporting\n ---------\n \ndiff --git a/docs/source/prompt.rst b/docs/source/prompt.rst\nindex fa256a0f6..088aa8e74 100644\n--- a/docs/source/prompt.rst\n+++ b/docs/source/prompt.rst\n@@ -1,7 +1,7 @@\n Prompt\n ======\n \n-Rich has a number of :class:`~rich.prompt.Prompt` classes which ask a user for input and loop until a valid response is received. Here's a simple example::\n+Rich has a number of :class:`~rich.prompt.Prompt` classes which ask a user for input and loop until a valid response is received (they all use the :ref:`Console API<Input>` internally). Here's a simple example::\n \n     >>> from rich.prompt import Prompt\n     >>> name = Prompt.ask(\"Enter your name\")\ndiff --git a/rich/console.py b/rich/console.py\nindex 7c4be7fcf..de0a01b03 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -1919,6 +1919,8 @@ def input(\n     ) -> str:\n         \"\"\"Displays a prompt and waits for input from the user. The prompt may contain color / style.\n \n+        It works in the same way as Python's builtin :func:`input` function and provides elaborate line editing and history features if Python's builtin :mod:`readline` module is previously loaded.\n+\n         Args:\n             prompt (Union[str, Text]): Text to render in the prompt.\n             markup (bool, optional): Enable console markup (requires a str prompt). Defaults to True.\n", "test_patch": "", "problem_statement": "[REQUEST] Add instructions about readline in the docs\n- [x] Have you checked the issues for similar suggestions.\r\n\r\nI believe the docs (and the community in general) would benefit a **lot** from having some basic guidelines on how to use the standard [readline module](https://docs.python.org/3/library/readline.html) with Rich. It's a single import after all.\r\n\r\n**What problem does it solve for you?**\r\n\r\nWithout `readline` (weird stuff are the result of arrow keys):\r\n![withoutreadline](https://user-images.githubusercontent.com/37125/139588643-81fa4b1e-8c99-43fc-aef1-ef52ee183477.gif)\r\n\r\nWith `readline`:\r\n![withreadline](https://user-images.githubusercontent.com/37125/139588648-7bd68d68-99af-43ff-b866-ef9ed52fce45.gif)\r\n\r\n**How would you improve Rich?**\r\n\r\nIt turns out there's no need to change a single line in Rich, just mention it in the docs (such as [here](https://rich.readthedocs.io/en/latest/console.html?highlight=input#input)):\r\n\r\n```python\r\nfrom rich.console import Console\r\nimport readline  # just add this\r\nconsole = Console()\r\nconsole.input(\"What is [i]your[/i] [bold red]name[/]? :smiley: \")\r\n```\r\n\r\nThe reason I think it is useful is because\r\n1. it might not be known by beginners (I didn't!)\r\n2. it's [nowhere to be found in the docs](https://rich.readthedocs.io/en/latest/search.html?q=readline&check_keywords=yes&area=default)\r\n3. it's dead easy (just `import readline`)\r\n4. similar stuff seems to have been requested before (e.g. #306), but without any definite answer\n", "hints_text": "", "created_at": "2021-10-31T16:07:21Z"}
{"repo": "Textualize/rich", "pull_number": 1596, "instance_id": "Textualize__rich-1596", "issue_numbers": ["1523"], "base_commit": "0dc08eac95f4f0459f5adaaee21408c41591d80c", "patch": "diff --git a/rich/box.py b/rich/box.py\nindex de79f0593..d37c6c81c 100644\n--- a/rich/box.py\n+++ b/rich/box.py\n@@ -435,7 +435,7 @@ def get_bottom(self, widths: Iterable[int]) -> str:\n     from rich.columns import Columns\n     from rich.panel import Panel\n \n-    from . import box\n+    from . import box as box\n     from .console import Console\n     from .table import Table\n     from .text import Text\ndiff --git a/rich/live.py b/rich/live.py\nindex f2ba64a7e..8097f7d2e 100644\n--- a/rich/live.py\n+++ b/rich/live.py\n@@ -276,7 +276,7 @@ def process_renderables(\n \n     from .align import Align\n     from .console import Console\n-    from .live import Live\n+    from .live import Live as Live\n     from .panel import Panel\n     from .rule import Rule\n     from .syntax import Syntax\ndiff --git a/rich/table.py b/rich/table.py\nindex b6a9c1ae6..5d63d543f 100644\n--- a/rich/table.py\n+++ b/rich/table.py\n@@ -845,7 +845,7 @@ def _render(\n if __name__ == \"__main__\":  # pragma: no cover\n     from rich.console import Console\n     from rich.highlighter import ReprHighlighter\n-    from rich.table import Table\n+    from rich.table import Table as Table\n \n     table = Table(\n         title=\"Star Wars Movies\",\n", "test_patch": "", "problem_statement": "pyright: \"Table\" is not exported from module \"rich.table\"\nRunning [pyright](https://github.com/microsoft/pyright) 1.1.172 on\r\n```\r\nfrom rich.table import Table\r\n```\r\ngives\r\n```\r\n/tmp/b.py:1:24 - error: \"Table\" is not exported from module \"rich.table\" (reportPrivateImportUsage)\r\n```\n", "hints_text": "What version of pyright are you using? There have been changes to this specific check in pyright recently\r\n\npyright 1.1.169\r\n\r\n_Edit:_ Also occurs with 1.1.172.\nI suspect that may be because of the code in the main block, which imports Table. I don\u2019t think it\u2019s a real error to be concerned about, but I\u2019ll see if there is a workaround.\nI looked into this longer than i would have liked.\r\nThe check is very new. The solution could be to import it like this\r\n\r\n`from rich.table import Table as Table`\r\n\r\nits called a redundant alias and it signals pyright that this symbol has to be re-exported ..\r\n\r\nthough i dont know why it would matter that we import it in `__main__.py`. Why would this matter if we import from rich.table.\r\nThis check is a few weeks old its not out of the question that this is a pyright bug.\r\n\r\nRelevant links\r\nhttps://github.com/microsoft/pyright/issues/2277\r\nhttps://github.com/microsoft/pyright/blob/main/docs/typed-libraries.md#library-interface\nI also see what I think is the same issue, but in pylance:\r\n`\"Table\" is not exported from module \"rich.table\"`\r\n\r\nDespite that, the Intellisense seems to still work - it can autocomplete methods/attributes of `Table`, I can cmd+click into the library in site-packages, so I'm not sure what's going on.\r\n\r\nFull VS Code output:\r\n\r\n```\r\n{\r\n\t\"resource\": \"/path/to/source.py\",\r\n\t\"owner\": \"_generated_diagnostic_collection_name_#1\",\r\n\t\"code\": {\r\n\t\t\"value\": \"reportPrivateImportUsage\",\r\n\t\t\"target\": {\r\n\t\t\t\"$mid\": 1,\r\n\t\t\t\"external\": \"https://github.com/microsoft/pylance-release/blob/main/DIAGNOSTIC_SEVERITY_RULES.md#diagnostic-severity-rules\",\r\n\t\t\t\"path\": \"/microsoft/pylance-release/blob/main/DIAGNOSTIC_SEVERITY_RULES.md\",\r\n\t\t\t\"scheme\": \"https\",\r\n\t\t\t\"authority\": \"github.com\",\r\n\t\t\t\"fragment\": \"diagnostic-severity-rules\"\r\n\t\t}\r\n\t},\r\n\t\"severity\": 8,\r\n\t\"message\": \"\\\"Table\\\" is not exported from module \\\"rich.table\\\"\",\r\n\t\"source\": \"Pylance\",\r\n\t\"startLineNumber\": 8,\r\n\t\"startColumn\": 24,\r\n\t\"endLineNumber\": 8,\r\n\t\"endColumn\": 29\r\n}\r\n```\nI get a similar issue with Live: `/home/gregory/Documents/projects/pyffstream/src/pyffstream/cli.py:486:24 - error: \"Live\" is not exported from module \"rich.box.live\" (reportPrivateImportUsage)`\nUpstream pyright has affirmatively clarified the behavior is intended and the libraries need to be redundantly imported to be correctly marked as exported. See https://github.com/microsoft/pyright/issues/2277#issuecomment-937468789\r\n\r\nI'm working on a PR that will close this issue by adding the appropriate `TYPE_CHECKING` guards to the `if __name__ == __main__` blocks following the suggestion here https://github.com/microsoft/pyright/issues/2392#issuecomment-937522830", "created_at": "2021-10-15T20:12:40Z"}
{"repo": "Textualize/rich", "pull_number": 1573, "instance_id": "Textualize__rich-1573", "issue_numbers": ["1471"], "base_commit": "0dc08eac95f4f0459f5adaaee21408c41591d80c", "patch": "diff --git a/rich/tree.py b/rich/tree.py\nindex 5fd46fd46..66203e693 100644\n--- a/rich/tree.py\n+++ b/rich/tree.py\n@@ -28,6 +28,7 @@ def __init__(\n         guide_style: StyleType = \"tree.line\",\n         expanded: bool = True,\n         highlight: bool = False,\n+        hide_root: bool = False,\n     ) -> None:\n         self.label = label\n         self.style = style\n@@ -35,6 +36,7 @@ def __init__(\n         self.children: List[Tree] = []\n         self.expanded = expanded\n         self.highlight = highlight\n+        self.hide_root = hide_root\n \n     def add(\n         self,\n@@ -105,6 +107,8 @@ def make_guide(index: int, style: Style) -> Segment:\n         style_stack = StyleStack(get_style(self.style))\n         remove_guide_styles = Style(bold=False, underline2=False)\n \n+        depth = 0\n+\n         while stack:\n             stack_node = pop()\n             try:\n@@ -123,7 +127,7 @@ def make_guide(index: int, style: Style) -> Segment:\n \n             guide_style = guide_style_stack.current + get_style(node.guide_style)\n             style = style_stack.current + get_style(node.style)\n-            prefix = levels[1:]\n+            prefix = levels[(2 if self.hide_root else 1) :]\n             renderable_lines = console.render_lines(\n                 Styled(node.label, style),\n                 options.update(\n@@ -133,19 +137,21 @@ def make_guide(index: int, style: Style) -> Segment:\n                     height=None,\n                 ),\n             )\n-            for first, line in loop_first(renderable_lines):\n-                if prefix:\n-                    yield from _Segment.apply_style(\n-                        prefix,\n-                        style.background_style,\n-                        post_style=remove_guide_styles,\n-                    )\n-                yield from line\n-                yield new_line\n-                if first and prefix:\n-                    prefix[-1] = make_guide(\n-                        SPACE if last else CONTINUE, prefix[-1].style or null_style\n-                    )\n+\n+            if not (depth == 0 and self.hide_root):\n+                for first, line in loop_first(renderable_lines):\n+                    if prefix:\n+                        yield from _Segment.apply_style(\n+                            prefix,\n+                            style.background_style,\n+                            post_style=remove_guide_styles,\n+                        )\n+                    yield from line\n+                    yield new_line\n+                    if first and prefix:\n+                        prefix[-1] = make_guide(\n+                            SPACE if last else CONTINUE, prefix[-1].style or null_style\n+                        )\n \n             if node.expanded and node.children:\n                 levels[-1] = make_guide(\n@@ -157,6 +163,7 @@ def make_guide(index: int, style: Style) -> Segment:\n                 style_stack.push(get_style(node.style))\n                 guide_style_stack.push(get_style(node.guide_style))\n                 push(iter(loop_last(node.children)))\n+                depth += 1\n \n     def __rich_measure__(\n         self, console: \"Console\", options: \"ConsoleOptions\"\n@@ -222,7 +229,7 @@ class Segment(NamedTuple):\n \"\"\"\n     )\n \n-    root = Tree(\"\ud83c\udf32 [b green]Rich Tree\", highlight=True)\n+    root = Tree(\"\ud83c\udf32 [b green]Rich Tree\", highlight=True, hide_root=True)\n \n     node = root.add(\":file_folder: Renderables\", guide_style=\"red\")\n     simple_node = node.add(\":file_folder: [bold yellow]Atomic\", guide_style=\"uu green\")\n", "test_patch": "diff --git a/tests/test_tree.py b/tests/test_tree.py\nindex babcc3cf2..8fc070d3f 100644\n--- a/tests/test_tree.py\n+++ b/tests/test_tree.py\n@@ -94,6 +94,42 @@ def test_render_tree_win32():\n     assert result == expected\n \n \n+@pytest.mark.skipif(sys.platform == \"win32\", reason=\"different on Windows\")\n+def test_render_tree_hide_root_non_win32():\n+    tree = Tree(\"foo\", hide_root=True)\n+    tree.add(\"bar\", style=\"italic\")\n+    baz_tree = tree.add(\"baz\", guide_style=\"bold red\", style=\"on blue\")\n+    baz_tree.add(\"1\")\n+    baz_tree.add(\"2\")\n+    tree.add(\"egg\")\n+\n+    console = Console(width=20, force_terminal=True, color_system=\"standard\")\n+    console.begin_capture()\n+    console.print(tree)\n+    result = console.end_capture()\n+    print(repr(result))\n+    expected = \"\\x1b[3mbar\\x1b[0m\\x1b[3m                 \\x1b[0m\\n\\x1b[44mbaz\\x1b[0m\\x1b[44m                 \\x1b[0m\\n\\x1b[31;44m\u2523\u2501\u2501 \\x1b[0m\\x1b[44m1\\x1b[0m\\x1b[44m               \\x1b[0m\\n\\x1b[31;44m\u2517\u2501\u2501 \\x1b[0m\\x1b[44m2\\x1b[0m\\x1b[44m               \\x1b[0m\\negg                 \\n\"\n+    assert result == expected\n+\n+\n+@pytest.mark.skipif(sys.platform != \"win32\", reason=\"Windows specific\")\n+def test_render_tree_hide_root_win32():\n+    tree = Tree(\"foo\", hide_root=True)\n+    tree.add(\"bar\", style=\"italic\")\n+    baz_tree = tree.add(\"baz\", guide_style=\"bold red\", style=\"on blue\")\n+    baz_tree.add(\"1\")\n+    baz_tree.add(\"2\")\n+    tree.add(\"egg\")\n+\n+    console = Console(width=20, force_terminal=True, color_system=\"standard\")\n+    console.begin_capture()\n+    console.print(tree)\n+    result = console.end_capture()\n+    print(repr(result))\n+    expected = \"\\x1b[3mbar\\x1b[0m\\x1b[3m                 \\x1b[0m\\n\\x1b[44mbaz\\x1b[0m\\x1b[44m                 \\x1b[0m\\n\\x1b[31;44m\u251c\u2500\u2500 \\x1b[0m\\x1b[44m1\\x1b[0m\\x1b[44m               \\x1b[0m\\n\\x1b[31;44m\u2514\u2500\u2500 \\x1b[0m\\x1b[44m2\\x1b[0m\\x1b[44m               \\x1b[0m\\negg                 \\n\"\n+    assert result == expected\n+\n+\n def test_tree_measure():\n     tree = Tree(\"foo\")\n     tree.add(\"bar\")\n", "problem_statement": "Tree: Flag to hide root from display \nIn certain situations it would be useful to hide the root of a tree, either to save on screen space or for clarity. A `hide_root` flag could allow this behavior.  For example: \r\n```\r\n>>> tree = Tree(\"Dir to print\")\r\n>>> tree.add(\"dir1\").add(\"file1\")\r\n>>> tree.add(\"file2\")\r\n>>> print(tree)\r\n\r\nDir to print\r\n\u251c\u2500\u2500 dir1                                                                                     \r\n\u2502   \u2514\u2500\u2500 file1                                                                                \r\n\u2514\u2500\u2500 file2                                                                                    \r\n```\r\ncould instead be display as\r\n```\r\n>>> tree = Tree(\"Dir to print\", hide_root=True)\r\n>>> tree.add(\"dir1\").add(\"file1\")\r\n>>> tree.add(\"file2\")\r\n>>> print(tree)\r\n\r\ndir1                                                                                     \r\n\u2514\u2500\u2500 file1                                                                                \r\nfile2                                                                                    \r\n```\r\n\r\nThanks!\n", "hints_text": "@willmcgugan Can I work on this bug?\n@noobyogi0010 be my guest!", "created_at": "2021-10-12T16:21:21Z"}
{"repo": "Textualize/rich", "pull_number": 1426, "instance_id": "Textualize__rich-1426", "issue_numbers": ["1425"], "base_commit": "bf7c38ba6368ffd2f188b16e8431f6fb623b08ee", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 7b17d733d..5103330ad 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,11 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+\n+## Unreleased\n+\n+- Fixed a bug where calling `rich.reconfigure` within a `pytest_configure` hook would lead to a crash\n+\n ## [10.7.0] - 2021-08-05\n \n ### Added\ndiff --git a/rich/__init__.py b/rich/__init__.py\nindex d5ce4b5df..4bb5f12af 100644\n--- a/rich/__init__.py\n+++ b/rich/__init__.py\n@@ -41,6 +41,7 @@ def reconfigure(*args: Any, **kwargs: Any) -> None:\n     from rich.console import Console\n \n     new_console = Console(*args, **kwargs)\n+    _console = get_console()\n     _console.__dict__ = new_console.__dict__\n \n \n", "test_patch": "", "problem_statement": "[BUG] reconfiguring rich via pytest at runtime\n**Describe the bug**\r\n\r\nTrying to reconfigure rich when my code is run via pytest, using the following pytest hook:\r\n\r\n```python\r\n# conftest.py\r\n\r\ndef pytest_configure():\r\n    try:\r\n        import rich\r\n    except ImportError:\r\n        pass\r\n    else:\r\n        rich.reconfigure(soft_wrap=False)\r\n```\r\n\r\nand invoking my tests with\r\n```shell\r\npytest\r\n```\r\n\r\nI got the following error:\r\n\r\n```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/_pytest/main.py\", line 265, in wrap_session\r\nINTERNALERROR>     config._do_configure()\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 982, in _do_configure\r\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/pluggy/hooks.py\", line 308, in call_historic\r\nINTERNALERROR>     res = self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/robcleme/dev/my/wxc/tests/conftest.py\", line 33, in pytest_configure\r\nINTERNALERROR>     rich.reconfigure(soft_wrap=False)\r\nINTERNALERROR>   File \"/Users/robcleme/.pyenv/versions/wxc-dev/lib/python3.9/site-packages/rich/__init__.py\", line 45, in reconfigure\r\nINTERNALERROR>     _console.__dict__ = new_console.__dict__\r\nINTERNALERROR> AttributeError: 'NoneType' object has no attribute '__dict__'\r\n```\r\n\r\n**Platform**\r\nOsX\r\n\r\n**Diagnose**\r\n\r\n```\r\npython -m rich.diagnose\r\npython -m rich._windows\r\npip freeze | grep rich\r\n```\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=185 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 52                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=185, height=52),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=185,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=52,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=185, height=52)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 185                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Darwin\"\r\nWindowsConsoleFeatures(vt=False, truecolor=False)\r\nrich==10.7.0\r\n```\r\n\r\n\n", "hints_text": "", "created_at": "2021-08-24T09:09:54Z"}
{"repo": "Textualize/rich", "pull_number": 1182, "instance_id": "Textualize__rich-1182", "issue_numbers": ["1180"], "base_commit": "a05a5a1c2f95f25db70ac3657e99f0bab652e2cd", "patch": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex 6e27d5659..2cd9ccaa4 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -50,7 +50,7 @@ make typecheck\n Or if you don't have `make`:\n \n ```\n-mypy -p rich --ignore-missing-imports --warn-unreachable\n+mypy -p rich --config-file= --ignore-missing-imports --no-implicit-optional --warn-unreachable\n ```\n \n Please add type annotations for all new code.\ndiff --git a/Makefile b/Makefile\nindex 6bed4f767..bf2eff15e 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -5,9 +5,9 @@ format-check:\n format:\n \tblack .\n typecheck:\n-\tmypy -p rich --ignore-missing-imports --warn-unreachable\n+\tmypy -p rich --config-file= --ignore-missing-imports --no-implicit-optional --warn-unreachable\n typecheck-report:\n-\tmypy -p rich --ignore-missing-imports --warn-unreachable --html-report mypy_report\n+\tmypy -p rich --config-file= --ignore-missing-imports --no-implicit-optional --warn-unreachable --html-report mypy_report\n .PHONY: docs\n docs:\n \tcd docs; make html\ndiff --git a/rich/__init__.py b/rich/__init__.py\nindex b0e4c8d94..af9fae09e 100644\n--- a/rich/__init__.py\n+++ b/rich/__init__.py\n@@ -42,7 +42,13 @@ def reconfigure(*args, **kwargs) -> None:\n     _console.__dict__ = new_console.__dict__\n \n \n-def print(*objects: Any, sep=\" \", end=\"\\n\", file: IO[str] = None, flush: bool = False):\n+def print(\n+    *objects: Any,\n+    sep=\" \",\n+    end=\"\\n\",\n+    file: Optional[IO[str]] = None,\n+    flush: bool = False\n+):\n     r\"\"\"Print object(s) supplied via positional arguments.\n     This function has an identical signature to the built-in print.\n     For more advanced features, see the :class:`~rich.console.Console` class.\n@@ -63,8 +69,8 @@ def print(*objects: Any, sep=\" \", end=\"\\n\", file: IO[str] = None, flush: bool =\n def inspect(\n     obj: Any,\n     *,\n-    console: \"Console\" = None,\n-    title: str = None,\n+    console: Optional[\"Console\"] = None,\n+    title: Optional[str] = None,\n     help: bool = False,\n     methods: bool = False,\n     docs: bool = True,\ndiff --git a/rich/_inspect.py b/rich/_inspect.py\nindex 6e6ed8786..319972398 100644\n--- a/rich/_inspect.py\n+++ b/rich/_inspect.py\n@@ -44,7 +44,7 @@ def __init__(\n         self,\n         obj: Any,\n         *,\n-        title: TextType = None,\n+        title: Optional[TextType] = None,\n         help: bool = False,\n         methods: bool = False,\n         docs: bool = True,\ndiff --git a/rich/_log_render.py b/rich/_log_render.py\nindex 67579633a..3a77f0c87 100644\n--- a/rich/_log_render.py\n+++ b/rich/_log_render.py\n@@ -33,12 +33,12 @@ def __call__(\n         self,\n         console: \"Console\",\n         renderables: Iterable[\"ConsoleRenderable\"],\n-        log_time: datetime = None,\n-        time_format: Union[str, FormatTimeCallable] = None,\n+        log_time: Optional[datetime] = None,\n+        time_format: Optional[Union[str, FormatTimeCallable]] = None,\n         level: TextType = \"\",\n-        path: str = None,\n-        line_no: int = None,\n-        link_path: str = None,\n+        path: Optional[str] = None,\n+        line_no: Optional[int] = None,\n+        link_path: Optional[str] = None,\n     ) -> \"Table\":\n         from .containers import Renderables\n         from .table import Table\ndiff --git a/rich/_ratio.py b/rich/_ratio.py\nindex 6de54bc9e..a44bb7c53 100644\n--- a/rich/_ratio.py\n+++ b/rich/_ratio.py\n@@ -106,7 +106,7 @@ def ratio_reduce(\n \n \n def ratio_distribute(\n-    total: int, ratios: List[int], minimums: List[int] = None\n+    total: int, ratios: List[int], minimums: Optional[List[int]] = None\n ) -> List[int]:\n     \"\"\"Distribute an integer total in to parts based on ratios.\n \ndiff --git a/rich/align.py b/rich/align.py\nindex 83bf5d697..99c3d1503 100644\n--- a/rich/align.py\n+++ b/rich/align.py\n@@ -1,5 +1,5 @@\n from itertools import chain\n-from typing import Iterable, TYPE_CHECKING\n+from typing import Iterable, Optional, TYPE_CHECKING\n \n from typing_extensions import Literal\n from .constrain import Constrain\n@@ -37,12 +37,12 @@ def __init__(\n         self,\n         renderable: \"RenderableType\",\n         align: AlignMethod = \"left\",\n-        style: StyleType = None,\n+        style: Optional[StyleType] = None,\n         *,\n-        vertical: VerticalAlignMethod = None,\n+        vertical: Optional[VerticalAlignMethod] = None,\n         pad: bool = True,\n-        width: int = None,\n-        height: int = None,\n+        width: Optional[int] = None,\n+        height: Optional[int] = None,\n     ) -> None:\n         if align not in (\"left\", \"center\", \"right\"):\n             raise ValueError(\n@@ -67,12 +67,12 @@ def __repr__(self) -> str:\n     def left(\n         cls,\n         renderable: \"RenderableType\",\n-        style: StyleType = None,\n+        style: Optional[StyleType] = None,\n         *,\n-        vertical: VerticalAlignMethod = None,\n+        vertical: Optional[VerticalAlignMethod] = None,\n         pad: bool = True,\n-        width: int = None,\n-        height: int = None,\n+        width: Optional[int] = None,\n+        height: Optional[int] = None,\n     ) -> \"Align\":\n         \"\"\"Align a renderable to the left.\"\"\"\n         return cls(\n@@ -89,12 +89,12 @@ def left(\n     def center(\n         cls,\n         renderable: \"RenderableType\",\n-        style: StyleType = None,\n+        style: Optional[StyleType] = None,\n         *,\n-        vertical: VerticalAlignMethod = None,\n+        vertical: Optional[VerticalAlignMethod] = None,\n         pad: bool = True,\n-        width: int = None,\n-        height: int = None,\n+        width: Optional[int] = None,\n+        height: Optional[int] = None,\n     ) -> \"Align\":\n         \"\"\"Align a renderable to the center.\"\"\"\n         return cls(\n@@ -111,12 +111,12 @@ def center(\n     def right(\n         cls,\n         renderable: \"RenderableType\",\n-        style: StyleType = None,\n+        style: Optional[StyleType] = None,\n         *,\n-        vertical: VerticalAlignMethod = None,\n+        vertical: Optional[VerticalAlignMethod] = None,\n         pad: bool = True,\n-        width: int = None,\n-        height: int = None,\n+        width: Optional[int] = None,\n+        height: Optional[int] = None,\n     ) -> \"Align\":\n         \"\"\"Align a renderable to the right.\"\"\"\n         return cls(\n@@ -242,7 +242,7 @@ class VerticalCenter(JupyterMixin):\n     def __init__(\n         self,\n         renderable: \"RenderableType\",\n-        style: StyleType = None,\n+        style: Optional[StyleType] = None,\n     ) -> None:\n         self.renderable = renderable\n         self.style = style\ndiff --git a/rich/bar.py b/rich/bar.py\nindex ecd18743e..ed86a552d 100644\n--- a/rich/bar.py\n+++ b/rich/bar.py\n@@ -1,4 +1,4 @@\n-from typing import Union\n+from typing import Optional, Union\n \n from .color import Color\n from .console import Console, ConsoleOptions, RenderResult\n@@ -32,7 +32,7 @@ def __init__(\n         begin: float,\n         end: float,\n         *,\n-        width: int = None,\n+        width: Optional[int] = None,\n         color: Union[Color, str] = \"default\",\n         bgcolor: Union[Color, str] = \"default\",\n     ):\ndiff --git a/rich/color.py b/rich/color.py\nindex 3421061cc..15512e840 100644\n--- a/rich/color.py\n+++ b/rich/color.py\n@@ -305,7 +305,7 @@ def is_default(self) -> bool:\n         return self.type == ColorType.DEFAULT\n \n     def get_truecolor(\n-        self, theme: \"TerminalTheme\" = None, foreground=True\n+        self, theme: Optional[\"TerminalTheme\"] = None, foreground=True\n     ) -> ColorTriplet:\n         \"\"\"Get an equivalent color triplet for this color.\n \ndiff --git a/rich/columns.py b/rich/columns.py\nindex 9746ecb71..d68654e58 100644\n--- a/rich/columns.py\n+++ b/rich/columns.py\n@@ -30,16 +30,16 @@ class Columns(JupyterMixin):\n \n     def __init__(\n         self,\n-        renderables: Iterable[RenderableType] = None,\n+        renderables: Optional[Iterable[RenderableType]] = None,\n         padding: PaddingDimensions = (0, 1),\n         *,\n-        width: int = None,\n+        width: Optional[int] = None,\n         expand: bool = False,\n         equal: bool = False,\n         column_first: bool = False,\n         right_to_left: bool = False,\n-        align: AlignMethod = None,\n-        title: TextType = None,\n+        align: Optional[AlignMethod] = None,\n+        title: Optional[TextType] = None,\n     ) -> None:\n         self.renderables = list(renderables or [])\n         self.width = width\ndiff --git a/rich/console.py b/rich/console.py\nindex 71fa0809e..a4750d9f9 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -323,7 +323,7 @@ class PagerContext:\n     def __init__(\n         self,\n         console: \"Console\",\n-        pager: Pager = None,\n+        pager: Optional[Pager] = None,\n         styles: bool = False,\n         links: bool = False,\n     ) -> None:\n@@ -362,7 +362,9 @@ def __init__(\n         self.screen = Screen(style=style)\n         self._changed = False\n \n-    def update(self, *renderables: RenderableType, style: StyleType = None) -> None:\n+    def update(\n+        self, *renderables: RenderableType, style: Optional[StyleType] = None\n+    ) -> None:\n         \"\"\"Update the screen.\n \n         Args:\n@@ -566,18 +568,18 @@ def __init__(\n         color_system: Optional[\n             Literal[\"auto\", \"standard\", \"256\", \"truecolor\", \"windows\"]\n         ] = \"auto\",\n-        force_terminal: bool = None,\n-        force_jupyter: bool = None,\n-        force_interactive: bool = None,\n+        force_terminal: Optional[bool] = None,\n+        force_jupyter: Optional[bool] = None,\n+        force_interactive: Optional[bool] = None,\n         soft_wrap: bool = False,\n-        theme: Theme = None,\n+        theme: Optional[Theme] = None,\n         stderr: bool = False,\n-        file: IO[str] = None,\n+        file: Optional[IO[str]] = None,\n         quiet: bool = False,\n-        width: int = None,\n-        height: int = None,\n-        style: StyleType = None,\n-        no_color: bool = None,\n+        width: Optional[int] = None,\n+        height: Optional[int] = None,\n+        style: Optional[StyleType] = None,\n+        no_color: Optional[bool] = None,\n         tab_size: int = 8,\n         record: bool = False,\n         markup: bool = True,\n@@ -587,11 +589,11 @@ def __init__(\n         log_path: bool = True,\n         log_time_format: Union[str, FormatTimeCallable] = \"[%X]\",\n         highlighter: Optional[\"HighlighterType\"] = ReprHighlighter(),\n-        legacy_windows: bool = None,\n+        legacy_windows: Optional[bool] = None,\n         safe_box: bool = True,\n-        get_datetime: Callable[[], datetime] = None,\n-        get_time: Callable[[], float] = None,\n-        _environ: Mapping[str, str] = None,\n+        get_datetime: Optional[Callable[[], datetime]] = None,\n+        get_time: Optional[Callable[[], float]] = None,\n+        _environ: Optional[Mapping[str, str]] = None,\n     ):\n         # Copy of os.environ allows us to replace it for testing\n         if _environ is not None:\n@@ -953,7 +955,7 @@ def capture(self) -> Capture:\n         return capture\n \n     def pager(\n-        self, pager: Pager = None, styles: bool = False, links: bool = False\n+        self, pager: Optional[Pager] = None, styles: bool = False, links: bool = False\n     ) -> PagerContext:\n         \"\"\"A context manager to display anything printed within a \"pager\". The pager application\n         is defined by the system and will typically support at least pressing a key to scroll.\n@@ -1072,7 +1074,7 @@ def is_alt_screen(self) -> bool:\n         return self._is_alt_screen\n \n     def screen(\n-        self, hide_cursor: bool = True, style: StyleType = None\n+        self, hide_cursor: bool = True, style: Optional[StyleType] = None\n     ) -> \"ScreenContext\":\n         \"\"\"Context manager to enable and disable 'alternative screen' mode.\n \n@@ -1086,7 +1088,7 @@ def screen(\n         return ScreenContext(self, hide_cursor=hide_cursor, style=style or \"\")\n \n     def render(\n-        self, renderable: RenderableType, options: ConsoleOptions = None\n+        self, renderable: RenderableType, options: Optional[ConsoleOptions] = None\n     ) -> Iterable[Segment]:\n         \"\"\"Render an object in to an iterable of `Segment` instances.\n \n@@ -1193,12 +1195,12 @@ def render_str(\n         text: str,\n         *,\n         style: Union[str, Style] = \"\",\n-        justify: JustifyMethod = None,\n-        overflow: OverflowMethod = None,\n-        emoji: bool = None,\n-        markup: bool = None,\n-        highlight: bool = None,\n-        highlighter: HighlighterType = None,\n+        justify: Optional[JustifyMethod] = None,\n+        overflow: Optional[OverflowMethod] = None,\n+        emoji: Optional[bool] = None,\n+        markup: Optional[bool] = None,\n+        highlight: Optional[bool] = None,\n+        highlighter: Optional[HighlighterType] = None,\n     ) -> \"Text\":\n         \"\"\"Convert a string to a Text instance. This is is called automatically if\n         you print or log a string.\n@@ -1241,7 +1243,7 @@ def render_str(\n         return rich_text\n \n     def get_style(\n-        self, name: Union[str, Style], *, default: Union[Style, str] = None\n+        self, name: Union[str, Style], *, default: Optional[Union[Style, str]] = None\n     ) -> Style:\n         \"\"\"Get a Style instance by it's theme name or parse a definition.\n \n@@ -1276,10 +1278,10 @@ def _collect_renderables(\n         sep: str,\n         end: str,\n         *,\n-        justify: JustifyMethod = None,\n-        emoji: bool = None,\n-        markup: bool = None,\n-        highlight: bool = None,\n+        justify: Optional[JustifyMethod] = None,\n+        emoji: Optional[bool] = None,\n+        markup: Optional[bool] = None,\n+        highlight: Optional[bool] = None,\n     ) -> List[ConsoleRenderable]:\n         \"\"\"Combine a number of renderables and text into one renderable.\n \n@@ -1388,8 +1390,8 @@ def out(\n         *objects: Any,\n         sep=\" \",\n         end=\"\\n\",\n-        style: Union[str, Style] = None,\n-        highlight: bool = None,\n+        style: Optional[Union[str, Style]] = None,\n+        highlight: Optional[bool] = None,\n     ) -> None:\n         \"\"\"Output to the terminal. This is a low-level way of writing to the terminal which unlike\n         :meth:`~rich.console.Console.print` won't pretty print, wrap text, or apply markup, but will\n@@ -1420,17 +1422,17 @@ def print(\n         *objects: Any,\n         sep=\" \",\n         end=\"\\n\",\n-        style: Union[str, Style] = None,\n-        justify: JustifyMethod = None,\n-        overflow: OverflowMethod = None,\n-        no_wrap: bool = None,\n-        emoji: bool = None,\n-        markup: bool = None,\n-        highlight: bool = None,\n-        width: int = None,\n-        height: int = None,\n+        style: Optional[Union[str, Style]] = None,\n+        justify: Optional[JustifyMethod] = None,\n+        overflow: Optional[OverflowMethod] = None,\n+        no_wrap: Optional[bool] = None,\n+        emoji: Optional[bool] = None,\n+        markup: Optional[bool] = None,\n+        highlight: Optional[bool] = None,\n+        width: Optional[int] = None,\n+        height: Optional[int] = None,\n         crop: bool = True,\n-        soft_wrap: bool = None,\n+        soft_wrap: Optional[bool] = None,\n     ) -> None:\n         \"\"\"Print to the console.\n \n@@ -1509,8 +1511,8 @@ def update_screen(\n         self,\n         renderable: RenderableType,\n         *,\n-        region: Region = None,\n-        options: ConsoleOptions = None,\n+        region: Optional[Region] = None,\n+        options: Optional[ConsoleOptions] = None,\n     ) -> None:\n         \"\"\"Update the screen at a given offset.\n \n@@ -1591,11 +1593,11 @@ def log(\n         *objects: Any,\n         sep=\" \",\n         end=\"\\n\",\n-        style: Union[str, Style] = None,\n-        justify: JustifyMethod = None,\n-        emoji: bool = None,\n-        markup: bool = None,\n-        highlight: bool = None,\n+        style: Optional[Union[str, Style]] = None,\n+        justify: Optional[JustifyMethod] = None,\n+        emoji: Optional[bool] = None,\n+        markup: Optional[bool] = None,\n+        highlight: Optional[bool] = None,\n         log_locals: bool = False,\n         _stack_offset=1,\n     ) -> None:\n@@ -1734,7 +1736,7 @@ def input(\n         markup: bool = True,\n         emoji: bool = True,\n         password: bool = False,\n-        stream: TextIO = None,\n+        stream: Optional[TextIO] = None,\n     ) -> str:\n         \"\"\"Displays a prompt and waits for input from the user. The prompt may contain color / style.\n \n@@ -1816,9 +1818,9 @@ def save_text(self, path: str, *, clear: bool = True, styles: bool = False) -> N\n     def export_html(\n         self,\n         *,\n-        theme: TerminalTheme = None,\n+        theme: Optional[TerminalTheme] = None,\n         clear: bool = True,\n-        code_format: str = None,\n+        code_format: Optional[str] = None,\n         inline_styles: bool = False,\n     ) -> str:\n         \"\"\"Generate HTML from console contents (requires record=True argument in constructor).\n@@ -1896,7 +1898,7 @@ def save_html(\n         self,\n         path: str,\n         *,\n-        theme: TerminalTheme = None,\n+        theme: Optional[TerminalTheme] = None,\n         clear: bool = True,\n         code_format=CONSOLE_HTML_FORMAT,\n         inline_styles: bool = False,\ndiff --git a/rich/containers.py b/rich/containers.py\nindex 0f13fb810..9c44ea990 100644\n--- a/rich/containers.py\n+++ b/rich/containers.py\n@@ -3,6 +3,7 @@\n     Iterator,\n     Iterable,\n     List,\n+    Optional,\n     overload,\n     TypeVar,\n     TYPE_CHECKING,\n@@ -28,7 +29,9 @@\n class Renderables:\n     \"\"\"A list subclass which renders its contents to the console.\"\"\"\n \n-    def __init__(self, renderables: Iterable[\"RenderableType\"] = None) -> None:\n+    def __init__(\n+        self, renderables: Optional[Iterable[\"RenderableType\"]] = None\n+    ) -> None:\n         self._renderables: List[\"RenderableType\"] = (\n             list(renderables) if renderables is not None else []\n         )\ndiff --git a/rich/layout.py b/rich/layout.py\nindex 21057828e..00d372e2f 100644\n--- a/rich/layout.py\n+++ b/rich/layout.py\n@@ -154,14 +154,14 @@ class Layout:\n \n     def __init__(\n         self,\n-        renderable: RenderableType = None,\n+        renderable: Optional[RenderableType] = None,\n         *,\n-        name: str = None,\n-        size: int = None,\n+        name: Optional[str] = None,\n+        size: Optional[int] = None,\n         minimum_size: int = 1,\n         ratio: int = 1,\n         visible: bool = True,\n-        height: int = None,\n+        height: Optional[int] = None,\n     ) -> None:\n         self._renderable = renderable or _Placeholder(self)\n         self.size = size\ndiff --git a/rich/live.py b/rich/live.py\nindex 428228f64..4d59d1460 100644\n--- a/rich/live.py\n+++ b/rich/live.py\n@@ -49,9 +49,9 @@ class Live(JupyterMixin, RenderHook):\n \n     def __init__(\n         self,\n-        renderable: RenderableType = None,\n+        renderable: Optional[RenderableType] = None,\n         *,\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         screen: bool = False,\n         auto_refresh: bool = True,\n         refresh_per_second: float = 4,\n@@ -59,7 +59,7 @@ def __init__(\n         redirect_stdout: bool = True,\n         redirect_stderr: bool = True,\n         vertical_overflow: VerticalOverflowMethod = \"ellipsis\",\n-        get_renderable: Callable[[], RenderableType] = None,\n+        get_renderable: Optional[Callable[[], RenderableType]] = None,\n     ) -> None:\n         assert refresh_per_second > 0, \"refresh_per_second must be > 0\"\n         self._renderable = renderable\ndiff --git a/rich/logging.py b/rich/logging.py\nindex 04b466003..2a7f91b1c 100644\n--- a/rich/logging.py\n+++ b/rich/logging.py\n@@ -58,14 +58,14 @@ class RichHandler(Handler):\n     def __init__(\n         self,\n         level: Union[int, str] = logging.NOTSET,\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         *,\n         show_time: bool = True,\n         omit_repeated_times: bool = True,\n         show_level: bool = True,\n         show_path: bool = True,\n         enable_link_path: bool = True,\n-        highlighter: Highlighter = None,\n+        highlighter: Optional[Highlighter] = None,\n         markup: bool = False,\n         rich_tracebacks: bool = False,\n         tracebacks_width: Optional[int] = None,\ndiff --git a/rich/markdown.py b/rich/markdown.py\nindex 23c6124d6..763c21def 100644\n--- a/rich/markdown.py\n+++ b/rich/markdown.py\n@@ -348,7 +348,7 @@ def __init__(\n         console: Console,\n         options: ConsoleOptions,\n         style: Style,\n-        inline_code_lexer: str = None,\n+        inline_code_lexer: Optional[str] = None,\n         inline_code_theme: str = \"monokai\",\n     ) -> None:\n         self.console = console\n@@ -419,11 +419,11 @@ def __init__(\n         self,\n         markup: str,\n         code_theme: str = \"monokai\",\n-        justify: JustifyMethod = None,\n+        justify: Optional[JustifyMethod] = None,\n         style: Union[str, Style] = \"none\",\n         hyperlinks: bool = True,\n-        inline_code_lexer: str = None,\n-        inline_code_theme: str = None,\n+        inline_code_lexer: Optional[str] = None,\n+        inline_code_theme: Optional[str] = None,\n     ) -> None:\n         self.markup = markup\n         parser = Parser()\ndiff --git a/rich/measure.py b/rich/measure.py\nindex cd1d3e12f..0d2fb3a59 100644\n--- a/rich/measure.py\n+++ b/rich/measure.py\n@@ -1,5 +1,5 @@\n from operator import itemgetter\n-from typing import Iterable, NamedTuple, TYPE_CHECKING\n+from typing import Iterable, NamedTuple, Optional, TYPE_CHECKING\n \n from . import errors\n from .protocol import is_renderable\n@@ -56,7 +56,9 @@ def with_minimum(self, width: int) -> \"Measurement\":\n         width = max(0, width)\n         return Measurement(max(minimum, width), max(maximum, width))\n \n-    def clamp(self, min_width: int = None, max_width: int = None) -> \"Measurement\":\n+    def clamp(\n+        self, min_width: Optional[int] = None, max_width: Optional[int] = None\n+    ) -> \"Measurement\":\n         \"\"\"Clamp a measurement within the specified range.\n \n         Args:\ndiff --git a/rich/panel.py b/rich/panel.py\nindex 71ca9ebc0..0fa42d701 100644\n--- a/rich/panel.py\n+++ b/rich/panel.py\n@@ -40,7 +40,7 @@ def __init__(\n         renderable: \"RenderableType\",\n         box: Box = ROUNDED,\n         *,\n-        title: TextType = None,\n+        title: Optional[TextType] = None,\n         title_align: AlignMethod = \"center\",\n         safe_box: Optional[bool] = None,\n         expand: bool = True,\n@@ -70,7 +70,7 @@ def fit(\n         renderable: \"RenderableType\",\n         box: Box = ROUNDED,\n         *,\n-        title: TextType = None,\n+        title: Optional[TextType] = None,\n         title_align: AlignMethod = \"center\",\n         safe_box: Optional[bool] = None,\n         style: StyleType = \"none\",\ndiff --git a/rich/pretty.py b/rich/pretty.py\nindex 7903b2cc2..1e2f532d4 100644\n--- a/rich/pretty.py\n+++ b/rich/pretty.py\n@@ -42,12 +42,12 @@\n \n \n def install(\n-    console: \"Console\" = None,\n+    console: Optional[\"Console\"] = None,\n     overflow: \"OverflowMethod\" = \"ignore\",\n     crop: bool = False,\n     indent_guides: bool = False,\n-    max_length: int = None,\n-    max_string: int = None,\n+    max_length: Optional[int] = None,\n+    max_string: Optional[int] = None,\n     expand_all: bool = False,\n ) -> None:\n     \"\"\"Install automatic pretty printing in the Python REPL.\n@@ -154,15 +154,15 @@ class Pretty(JupyterMixin):\n     def __init__(\n         self,\n         _object: Any,\n-        highlighter: \"HighlighterType\" = None,\n+        highlighter: Optional[\"HighlighterType\"] = None,\n         *,\n         indent_size: int = 4,\n-        justify: \"JustifyMethod\" = None,\n+        justify: Optional[\"JustifyMethod\"] = None,\n         overflow: Optional[\"OverflowMethod\"] = None,\n         no_wrap: Optional[bool] = False,\n         indent_guides: bool = False,\n-        max_length: int = None,\n-        max_string: int = None,\n+        max_length: Optional[int] = None,\n+        max_string: Optional[int] = None,\n         expand_all: bool = False,\n         margin: int = 0,\n         insert_line: bool = False,\n@@ -413,7 +413,9 @@ def __str__(self) -> str:\n         return f\"{self.whitespace}{self.text}{self.node or ''}{self.suffix}\"\n \n \n-def traverse(_object: Any, max_length: int = None, max_string: int = None) -> Node:\n+def traverse(\n+    _object: Any, max_length: Optional[int] = None, max_string: Optional[int] = None\n+) -> Node:\n     \"\"\"Traverse object and generate a tree.\n \n     Args:\n@@ -589,8 +591,8 @@ def pretty_repr(\n     *,\n     max_width: int = 80,\n     indent_size: int = 4,\n-    max_length: int = None,\n-    max_string: int = None,\n+    max_length: Optional[int] = None,\n+    max_string: Optional[int] = None,\n     expand_all: bool = False,\n ) -> str:\n     \"\"\"Prettify repr string by expanding on to new lines to fit within a given width.\n@@ -622,10 +624,10 @@ def pretty_repr(\n def pprint(\n     _object: Any,\n     *,\n-    console: \"Console\" = None,\n+    console: Optional[\"Console\"] = None,\n     indent_guides: bool = True,\n-    max_length: int = None,\n-    max_string: int = None,\n+    max_length: Optional[int] = None,\n+    max_string: Optional[int] = None,\n     expand_all: bool = False,\n ):\n     \"\"\"A convenience function for pretty printing.\ndiff --git a/rich/progress.py b/rich/progress.py\nindex 12545ebf1..17ebfddaf 100644\n--- a/rich/progress.py\n+++ b/rich/progress.py\n@@ -87,7 +87,7 @@ def track(\n     auto_refresh=True,\n     console: Optional[Console] = None,\n     transient: bool = False,\n-    get_time: Callable[[], float] = None,\n+    get_time: Optional[Callable[[], float]] = None,\n     refresh_per_second: float = 10,\n     style: StyleType = \"bar.back\",\n     complete_style: StyleType = \"bar.complete\",\n@@ -153,7 +153,7 @@ class ProgressColumn(ABC):\n \n     max_refresh: Optional[float] = None\n \n-    def __init__(self, table_column: Column = None) -> None:\n+    def __init__(self, table_column: Optional[Column] = None) -> None:\n         self._table_column = table_column\n         self._renderable_cache: Dict[TaskID, Tuple[float, RenderableType]] = {}\n         self._update_time: Optional[float] = None\n@@ -197,7 +197,9 @@ class RenderableColumn(ProgressColumn):\n         renderable (RenderableType, optional): Any renderable. Defaults to empty string.\n     \"\"\"\n \n-    def __init__(self, renderable: RenderableType = \"\", *, table_column: Column = None):\n+    def __init__(\n+        self, renderable: RenderableType = \"\", *, table_column: Optional[Column] = None\n+    ):\n         self.renderable = renderable\n         super().__init__(table_column=table_column)\n \n@@ -221,7 +223,7 @@ def __init__(\n         style: Optional[StyleType] = \"progress.spinner\",\n         speed: float = 1.0,\n         finished_text: TextType = \" \",\n-        table_column: Column = None,\n+        table_column: Optional[Column] = None,\n     ):\n         self.spinner = Spinner(spinner_name, style=style, speed=speed)\n         self.finished_text = (\n@@ -264,8 +266,8 @@ def __init__(\n         style: StyleType = \"none\",\n         justify: JustifyMethod = \"left\",\n         markup: bool = True,\n-        highlighter: Highlighter = None,\n-        table_column: Column = None,\n+        highlighter: Optional[Highlighter] = None,\n+        table_column: Optional[Column] = None,\n     ) -> None:\n         self.text_format = text_format\n         self.justify = justify\n@@ -303,7 +305,7 @@ def __init__(\n         complete_style: StyleType = \"bar.complete\",\n         finished_style: StyleType = \"bar.finished\",\n         pulse_style: StyleType = \"bar.pulse\",\n-        table_column: Column = None,\n+        table_column: Optional[Column] = None,\n     ) -> None:\n         self.bar_width = bar_width\n         self.style = style\n@@ -379,7 +381,9 @@ class DownloadColumn(ProgressColumn):\n         binary_units (bool, optional): Use binary units, KiB, MiB etc. Defaults to False.\n     \"\"\"\n \n-    def __init__(self, binary_units: bool = False, table_column: Column = None) -> None:\n+    def __init__(\n+        self, binary_units: bool = False, table_column: Optional[Column] = None\n+    ) -> None:\n         self.binary_units = binary_units\n         super().__init__(table_column=table_column)\n \n@@ -568,14 +572,14 @@ class Progress(JupyterMixin):\n     def __init__(\n         self,\n         *columns: Union[str, ProgressColumn],\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         auto_refresh: bool = True,\n         refresh_per_second: float = 10,\n         speed_estimate_period: float = 30.0,\n         transient: bool = False,\n         redirect_stdout: bool = True,\n         redirect_stderr: bool = True,\n-        get_time: GetTimeCallable = None,\n+        get_time: Optional[GetTimeCallable] = None,\n         disable: bool = False,\n         expand: bool = False,\n     ) -> None:\n@@ -731,10 +735,10 @@ def update(\n         task_id: TaskID,\n         *,\n         total: Optional[float] = None,\n-        completed: float = None,\n-        advance: float = None,\n-        description: str = None,\n-        visible: bool = None,\n+        completed: Optional[float] = None,\n+        advance: Optional[float] = None,\n+        description: Optional[str] = None,\n+        visible: Optional[bool] = None,\n         refresh: bool = False,\n         **fields: Any,\n     ) -> None:\ndiff --git a/rich/progress_bar.py b/rich/progress_bar.py\nindex bf4f3b532..1797b5f78 100644\n--- a/rich/progress_bar.py\n+++ b/rich/progress_bar.py\n@@ -34,13 +34,13 @@ def __init__(\n         self,\n         total: float = 100.0,\n         completed: float = 0,\n-        width: int = None,\n+        width: Optional[int] = None,\n         pulse: bool = False,\n         style: StyleType = \"bar.back\",\n         complete_style: StyleType = \"bar.complete\",\n         finished_style: StyleType = \"bar.finished\",\n         pulse_style: StyleType = \"bar.pulse\",\n-        animation_time: float = None,\n+        animation_time: Optional[float] = None,\n     ):\n         self.total = total\n         self.completed = completed\n@@ -111,7 +111,7 @@ def _get_pulse_segments(\n             append(_Segment(bar, _Style(color=from_triplet(color))))\n         return segments\n \n-    def update(self, completed: float, total: float = None) -> None:\n+    def update(self, completed: float, total: Optional[float] = None) -> None:\n         \"\"\"Update progress with new values.\n \n         Args:\ndiff --git a/rich/prompt.py b/rich/prompt.py\nindex 7db5d2db7..8d9868225 100644\n--- a/rich/prompt.py\n+++ b/rich/prompt.py\n@@ -54,9 +54,9 @@ def __init__(\n         self,\n         prompt: TextType = \"\",\n         *,\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         password: bool = False,\n-        choices: List[str] = None,\n+        choices: Optional[List[str]] = None,\n         show_default: bool = True,\n         show_choices: bool = True,\n     ) -> None:\n@@ -78,13 +78,13 @@ def ask(\n         cls,\n         prompt: TextType = \"\",\n         *,\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         password: bool = False,\n-        choices: List[str] = None,\n+        choices: Optional[List[str]] = None,\n         show_default: bool = True,\n         show_choices: bool = True,\n         default: DefaultType,\n-        stream: TextIO = None,\n+        stream: Optional[TextIO] = None,\n     ) -> Union[DefaultType, PromptType]:\n         ...\n \n@@ -94,12 +94,12 @@ def ask(\n         cls,\n         prompt: TextType = \"\",\n         *,\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         password: bool = False,\n-        choices: List[str] = None,\n+        choices: Optional[List[str]] = None,\n         show_default: bool = True,\n         show_choices: bool = True,\n-        stream: TextIO = None,\n+        stream: Optional[TextIO] = None,\n     ) -> PromptType:\n         ...\n \n@@ -108,13 +108,13 @@ def ask(\n         cls,\n         prompt: TextType = \"\",\n         *,\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         password: bool = False,\n-        choices: List[str] = None,\n+        choices: Optional[List[str]] = None,\n         show_default: bool = True,\n         show_choices: bool = True,\n         default: Any = ...,\n-        stream: TextIO = None,\n+        stream: Optional[TextIO] = None,\n     ) -> Any:\n         \"\"\"Shortcut to construct and run a prompt loop and return the result.\n \n@@ -188,7 +188,7 @@ def get_input(\n         console: Console,\n         prompt: TextType,\n         password: bool,\n-        stream: TextIO = None,\n+        stream: Optional[TextIO] = None,\n     ) -> str:\n         \"\"\"Get input from user.\n \n@@ -250,16 +250,16 @@ def pre_prompt(self) -> None:\n         \"\"\"Hook to display something before the prompt.\"\"\"\n \n     @overload\n-    def __call__(self, *, stream: TextIO = None) -> PromptType:\n+    def __call__(self, *, stream: Optional[TextIO] = None) -> PromptType:\n         ...\n \n     @overload\n     def __call__(\n-        self, *, default: DefaultType, stream: TextIO = None\n+        self, *, default: DefaultType, stream: Optional[TextIO] = None\n     ) -> Union[PromptType, DefaultType]:\n         ...\n \n-    def __call__(self, *, default: Any = ..., stream: TextIO = None) -> Any:\n+    def __call__(self, *, default: Any = ..., stream: Optional[TextIO] = None) -> Any:\n         \"\"\"Run the prompt loop.\n \n         Args:\ndiff --git a/rich/scope.py b/rich/scope.py\nindex 9ba08b9f7..8521df96f 100644\n--- a/rich/scope.py\n+++ b/rich/scope.py\n@@ -1,5 +1,5 @@\n from collections.abc import Mapping\n-from typing import TYPE_CHECKING, Any, Tuple\n+from typing import TYPE_CHECKING, Any, Optional, Tuple\n \n from .highlighter import ReprHighlighter\n from .panel import Panel\n@@ -14,11 +14,11 @@\n def render_scope(\n     scope: Mapping,\n     *,\n-    title: TextType = None,\n+    title: Optional[TextType] = None,\n     sort_keys: bool = True,\n     indent_guides: bool = False,\n-    max_length: int = None,\n-    max_string: int = None,\n+    max_length: Optional[int] = None,\n+    max_string: Optional[int] = None,\n ) -> \"ConsoleRenderable\":\n     \"\"\"Render python variables in a given scope.\n \ndiff --git a/rich/screen.py b/rich/screen.py\nindex 5a3fb4c0f..189fdc3de 100644\n--- a/rich/screen.py\n+++ b/rich/screen.py\n@@ -1,4 +1,4 @@\n-from typing import TYPE_CHECKING\n+from typing import Optional, TYPE_CHECKING\n \n from .measure import Measurement\n from .segment import Segment\n@@ -19,7 +19,9 @@ class Screen:\n     \"\"\"\n \n     def __init__(\n-        self, renderable: \"RenderableType\" = None, style: StyleType = None\n+        self,\n+        renderable: Optional[\"RenderableType\"] = None,\n+        style: Optional[StyleType] = None,\n     ) -> None:\n         self.renderable = renderable\n         self.style = style\ndiff --git a/rich/segment.py b/rich/segment.py\nindex d7953daf6..e7f812b76 100644\n--- a/rich/segment.py\n+++ b/rich/segment.py\n@@ -82,8 +82,8 @@ def line(cls) -> \"Segment\":\n     def apply_style(\n         cls,\n         segments: Iterable[\"Segment\"],\n-        style: Style = None,\n-        post_style: Style = None,\n+        style: Optional[Style] = None,\n+        post_style: Optional[Style] = None,\n     ) -> Iterable[\"Segment\"]:\n         \"\"\"Apply style(s) to an iterable of segments.\n \n@@ -169,7 +169,7 @@ def split_and_crop_lines(\n         cls,\n         segments: Iterable[\"Segment\"],\n         length: int,\n-        style: Style = None,\n+        style: Optional[Style] = None,\n         pad: bool = True,\n         include_new_lines: bool = True,\n     ) -> Iterable[List[\"Segment\"]]:\n@@ -213,7 +213,11 @@ def split_and_crop_lines(\n \n     @classmethod\n     def adjust_line_length(\n-        cls, line: List[\"Segment\"], length: int, style: Style = None, pad: bool = True\n+        cls,\n+        line: List[\"Segment\"],\n+        length: int,\n+        style: Optional[Style] = None,\n+        pad: bool = True,\n     ) -> List[\"Segment\"]:\n         \"\"\"Adjust a line to a given width (cropping or padding as required).\n \n@@ -283,8 +287,8 @@ def set_shape(\n         cls,\n         lines: List[List[\"Segment\"]],\n         width: int,\n-        height: int = None,\n-        style: Style = None,\n+        height: Optional[int] = None,\n+        style: Optional[Style] = None,\n         new_lines: bool = False,\n     ) -> List[List[\"Segment\"]]:\n         \"\"\"Set the shape of a list of lines (enclosing rectangle).\ndiff --git a/rich/spinner.py b/rich/spinner.py\nindex 373854f3c..b5e2bbf19 100644\n--- a/rich/spinner.py\n+++ b/rich/spinner.py\n@@ -12,7 +12,12 @@\n \n class Spinner:\n     def __init__(\n-        self, name: str, text: TextType = \"\", *, style: StyleType = None, speed=1.0\n+        self,\n+        name: str,\n+        text: TextType = \"\",\n+        *,\n+        style: Optional[StyleType] = None,\n+        speed=1.0,\n     ) -> None:\n         \"\"\"A spinner animation.\n \ndiff --git a/rich/status.py b/rich/status.py\nindex 62f1ba95d..78b81fc0d 100644\n--- a/rich/status.py\n+++ b/rich/status.py\n@@ -24,7 +24,7 @@ def __init__(\n         self,\n         status: RenderableType,\n         *,\n-        console: Console = None,\n+        console: Optional[Console] = None,\n         spinner: str = \"dots\",\n         spinner_style: StyleType = \"status.spinner\",\n         speed: float = 1.0,\ndiff --git a/rich/style.py b/rich/style.py\nindex 594bcd52d..0e2e91ebd 100644\n--- a/rich/style.py\n+++ b/rich/style.py\n@@ -93,22 +93,22 @@ class Style:\n     def __init__(\n         self,\n         *,\n-        color: Union[Color, str] = None,\n-        bgcolor: Union[Color, str] = None,\n-        bold: bool = None,\n-        dim: bool = None,\n-        italic: bool = None,\n-        underline: bool = None,\n-        blink: bool = None,\n-        blink2: bool = None,\n-        reverse: bool = None,\n-        conceal: bool = None,\n-        strike: bool = None,\n-        underline2: bool = None,\n-        frame: bool = None,\n-        encircle: bool = None,\n-        overline: bool = None,\n-        link: str = None,\n+        color: Optional[Union[Color, str]] = None,\n+        bgcolor: Optional[Union[Color, str]] = None,\n+        bold: Optional[bool] = None,\n+        dim: Optional[bool] = None,\n+        italic: Optional[bool] = None,\n+        underline: Optional[bool] = None,\n+        blink: Optional[bool] = None,\n+        blink2: Optional[bool] = None,\n+        reverse: Optional[bool] = None,\n+        conceal: Optional[bool] = None,\n+        strike: Optional[bool] = None,\n+        underline2: Optional[bool] = None,\n+        frame: Optional[bool] = None,\n+        encircle: Optional[bool] = None,\n+        overline: Optional[bool] = None,\n+        link: Optional[str] = None,\n     ):\n         self._ansi: Optional[str] = None\n         self._style_definition: Optional[str] = None\n@@ -176,7 +176,9 @@ def null(cls) -> \"Style\":\n         return NULL_STYLE\n \n     @classmethod\n-    def from_color(cls, color: Color = None, bgcolor: Color = None) -> \"Style\":\n+    def from_color(\n+        cls, color: Optional[Color] = None, bgcolor: Optional[Color] = None\n+    ) -> \"Style\":\n         \"\"\"Create a new style with colors and no attributes.\n \n         Returns:\n@@ -492,7 +494,7 @@ def parse(cls, style_definition: str) -> \"Style\":\n         return style\n \n     @lru_cache(maxsize=1024)\n-    def get_html_style(self, theme: TerminalTheme = None) -> str:\n+    def get_html_style(self, theme: Optional[TerminalTheme] = None) -> str:\n         \"\"\"Get a CSS style rule.\"\"\"\n         theme = theme or DEFAULT_TERMINAL_THEME\n         css: List[str] = []\n@@ -575,7 +577,7 @@ def copy(self) -> \"Style\":\n         style._null = False\n         return style\n \n-    def update_link(self, link: str = None) -> \"Style\":\n+    def update_link(self, link: Optional[str] = None) -> \"Style\":\n         \"\"\"Get a copy with a different value for link.\n \n         Args:\ndiff --git a/rich/syntax.py b/rich/syntax.py\nindex 8d3851fca..64b432b0c 100644\n--- a/rich/syntax.py\n+++ b/rich/syntax.py\n@@ -230,12 +230,12 @@ def __init__(\n         dedent: bool = False,\n         line_numbers: bool = False,\n         start_line: int = 1,\n-        line_range: Tuple[int, int] = None,\n-        highlight_lines: Set[int] = None,\n+        line_range: Optional[Tuple[int, int]] = None,\n+        highlight_lines: Optional[Set[int]] = None,\n         code_width: Optional[int] = None,\n         tab_size: int = 4,\n         word_wrap: bool = False,\n-        background_color: str = None,\n+        background_color: Optional[str] = None,\n         indent_guides: bool = False,\n     ) -> None:\n         self.code = code\n@@ -264,13 +264,13 @@ def from_path(\n         theme: Union[str, SyntaxTheme] = DEFAULT_THEME,\n         dedent: bool = False,\n         line_numbers: bool = False,\n-        line_range: Tuple[int, int] = None,\n+        line_range: Optional[Tuple[int, int]] = None,\n         start_line: int = 1,\n-        highlight_lines: Set[int] = None,\n+        highlight_lines: Optional[Set[int]] = None,\n         code_width: Optional[int] = None,\n         tab_size: int = 4,\n         word_wrap: bool = False,\n-        background_color: str = None,\n+        background_color: Optional[str] = None,\n         indent_guides: bool = False,\n     ) -> \"Syntax\":\n         \"\"\"Construct a Syntax object from a file.\n@@ -351,7 +351,9 @@ def _get_token_color(self, token_type: TokenType) -> Optional[Color]:\n         style = self._theme.get_style_for_token(token_type)\n         return style.color\n \n-    def highlight(self, code: str, line_range: Tuple[int, int] = None) -> Text:\n+    def highlight(\n+        self, code: str, line_range: Optional[Tuple[int, int]] = None\n+    ) -> Text:\n         \"\"\"Highlight code and return a Text instance.\n \n         Args:\ndiff --git a/rich/table.py b/rich/table.py\nindex 8fc6379d9..54e39c949 100644\n--- a/rich/table.py\n+++ b/rich/table.py\n@@ -151,10 +151,10 @@ class Table(JupyterMixin):\n     def __init__(\n         self,\n         *headers: Union[Column, str],\n-        title: TextType = None,\n-        caption: TextType = None,\n-        width: int = None,\n-        min_width: int = None,\n+        title: Optional[TextType] = None,\n+        caption: Optional[TextType] = None,\n+        width: Optional[int] = None,\n+        min_width: Optional[int] = None,\n         box: Optional[box.Box] = box.HEAVY_HEAD,\n         safe_box: Optional[bool] = None,\n         padding: PaddingDimensions = (0, 1),\n@@ -167,12 +167,12 @@ def __init__(\n         show_lines: bool = False,\n         leading: int = 0,\n         style: StyleType = \"none\",\n-        row_styles: Iterable[StyleType] = None,\n+        row_styles: Optional[Iterable[StyleType]] = None,\n         header_style: Optional[StyleType] = \"table.header\",\n         footer_style: Optional[StyleType] = \"table.footer\",\n-        border_style: StyleType = None,\n-        title_style: StyleType = None,\n-        caption_style: StyleType = None,\n+        border_style: Optional[StyleType] = None,\n+        title_style: Optional[StyleType] = None,\n+        caption_style: Optional[StyleType] = None,\n         title_justify: \"JustifyMethod\" = \"center\",\n         caption_justify: \"JustifyMethod\" = \"center\",\n         highlight: bool = False,\n@@ -330,15 +330,15 @@ def add_column(\n         header: \"RenderableType\" = \"\",\n         footer: \"RenderableType\" = \"\",\n         *,\n-        header_style: StyleType = None,\n-        footer_style: StyleType = None,\n-        style: StyleType = None,\n+        header_style: Optional[StyleType] = None,\n+        footer_style: Optional[StyleType] = None,\n+        style: Optional[StyleType] = None,\n         justify: \"JustifyMethod\" = \"left\",\n         overflow: \"OverflowMethod\" = \"ellipsis\",\n-        width: int = None,\n-        min_width: int = None,\n-        max_width: int = None,\n-        ratio: int = None,\n+        width: Optional[int] = None,\n+        min_width: Optional[int] = None,\n+        max_width: Optional[int] = None,\n+        ratio: Optional[int] = None,\n         no_wrap: bool = False,\n     ) -> None:\n         \"\"\"Add a column to the table.\n@@ -379,7 +379,7 @@ def add_column(\n     def add_row(\n         self,\n         *renderables: Optional[\"RenderableType\"],\n-        style: StyleType = None,\n+        style: Optional[StyleType] = None,\n         end_section: bool = False,\n     ) -> None:\n         \"\"\"Add a row of renderables.\ndiff --git a/rich/tabulate.py b/rich/tabulate.py\nindex 680bd3214..5f7ed2164 100644\n--- a/rich/tabulate.py\n+++ b/rich/tabulate.py\n@@ -11,8 +11,8 @@\n \n def tabulate_mapping(\n     mapping: Mapping,\n-    title: str = None,\n-    caption: str = None,\n+    title: Optional[str] = None,\n+    caption: Optional[str] = None,\n     title_justify: Optional[JustifyMethod] = None,\n     caption_justify: Optional[JustifyMethod] = None,\n ) -> Table:\ndiff --git a/rich/terminal_theme.py b/rich/terminal_theme.py\nindex a5ca1c0c7..801ac0b7b 100644\n--- a/rich/terminal_theme.py\n+++ b/rich/terminal_theme.py\n@@ -1,4 +1,4 @@\n-from typing import List, Tuple\n+from typing import List, Optional, Tuple\n \n from .color_triplet import ColorTriplet\n from .palette import Palette\n@@ -22,7 +22,7 @@ def __init__(\n         background: _ColorTuple,\n         foreground: _ColorTuple,\n         normal: List[_ColorTuple],\n-        bright: List[_ColorTuple] = None,\n+        bright: Optional[List[_ColorTuple]] = None,\n     ) -> None:\n         self.background_color = ColorTriplet(*background)\n         self.foreground_color = ColorTriplet(*foreground)\ndiff --git a/rich/text.py b/rich/text.py\nindex c5edc0299..3f54d06bf 100644\n--- a/rich/text.py\n+++ b/rich/text.py\n@@ -129,12 +129,12 @@ def __init__(\n         text: str = \"\",\n         style: Union[str, Style] = \"\",\n         *,\n-        justify: \"JustifyMethod\" = None,\n-        overflow: \"OverflowMethod\" = None,\n-        no_wrap: bool = None,\n+        justify: Optional[\"JustifyMethod\"] = None,\n+        overflow: Optional[\"OverflowMethod\"] = None,\n+        no_wrap: Optional[bool] = None,\n         end: str = \"\\n\",\n         tab_size: Optional[int] = 8,\n-        spans: List[Span] = None,\n+        spans: Optional[List[Span]] = None,\n     ) -> None:\n         self._text = [strip_control_codes(text)]\n         self.style = style\n@@ -215,8 +215,8 @@ def from_markup(\n         *,\n         style: Union[str, Style] = \"\",\n         emoji: bool = True,\n-        justify: \"JustifyMethod\" = None,\n-        overflow: \"OverflowMethod\" = None,\n+        justify: Optional[\"JustifyMethod\"] = None,\n+        overflow: Optional[\"OverflowMethod\"] = None,\n     ) -> \"Text\":\n         \"\"\"Create Text instance from markup.\n \n@@ -242,8 +242,8 @@ def styled(\n         text: str,\n         style: StyleType = \"\",\n         *,\n-        justify: \"JustifyMethod\" = None,\n-        overflow: \"OverflowMethod\" = None,\n+        justify: Optional[\"JustifyMethod\"] = None,\n+        overflow: Optional[\"OverflowMethod\"] = None,\n     ) -> \"Text\":\n         \"\"\"Construct a Text instance with a pre-applied styled. A style applied in this way won't be used\n         to pad the text when it is justified.\n@@ -266,9 +266,9 @@ def assemble(\n         cls,\n         *parts: Union[str, \"Text\", Tuple[str, StyleType]],\n         style: Union[str, Style] = \"\",\n-        justify: \"JustifyMethod\" = None,\n-        overflow: \"OverflowMethod\" = None,\n-        no_wrap: bool = None,\n+        justify: Optional[\"JustifyMethod\"] = None,\n+        overflow: Optional[\"OverflowMethod\"] = None,\n+        no_wrap: Optional[bool] = None,\n         end: str = \"\\n\",\n         tab_size: int = 8,\n     ) -> \"Text\":\n@@ -357,7 +357,10 @@ def copy(self) -> \"Text\":\n         return copy_self\n \n     def stylize(\n-        self, style: Union[str, Style], start: int = 0, end: Optional[int] = None\n+        self,\n+        style: Union[str, Style],\n+        start: int = 0,\n+        end: Optional[int] = None,\n     ) -> None:\n         \"\"\"Apply a style to the text, or a portion of the text.\n \n@@ -412,7 +415,7 @@ def get_style_at_offset(self, console: \"Console\", offset: int) -> Style:\n     def highlight_regex(\n         self,\n         re_highlight: str,\n-        style: Union[GetStyleCallable, StyleType] = None,\n+        style: Optional[Union[GetStyleCallable, StyleType]] = None,\n         *,\n         style_prefix: str = \"\",\n     ) -> int:\n@@ -635,7 +638,7 @@ def iter_text() -> Iterable[\"Text\"]:\n         new_text._length = offset\n         return new_text\n \n-    def expand_tabs(self, tab_size: int = None) -> None:\n+    def expand_tabs(self, tab_size: Optional[int] = None) -> None:\n         \"\"\"Converts tabs to spaces.\n \n         Args:\n@@ -774,7 +777,7 @@ def align(self, align: AlignMethod, width: int, character: str = \" \") -> None:\n                 self.pad_left(excess_space, character)\n \n     def append(\n-        self, text: Union[\"Text\", str], style: Union[str, \"Style\"] = None\n+        self, text: Union[\"Text\", str], style: Optional[Union[str, \"Style\"]] = None\n     ) -> \"Text\":\n         \"\"\"Add text with an optional style.\n \n@@ -993,10 +996,10 @@ def wrap(\n         console: \"Console\",\n         width: int,\n         *,\n-        justify: \"JustifyMethod\" = None,\n-        overflow: \"OverflowMethod\" = None,\n+        justify: Optional[\"JustifyMethod\"] = None,\n+        overflow: Optional[\"OverflowMethod\"] = None,\n         tab_size: int = 8,\n-        no_wrap: bool = None,\n+        no_wrap: Optional[bool] = None,\n     ) -> Lines:\n         \"\"\"Word wrap the text.\n \n@@ -1077,7 +1080,7 @@ def detect_indentation(self) -> int:\n \n     def with_indent_guides(\n         self,\n-        indent_size: int = None,\n+        indent_size: Optional[int] = None,\n         *,\n         character: str = \"\u2502\",\n         style: StyleType = \"dim green\",\ndiff --git a/rich/theme.py b/rich/theme.py\nindex 68b1ef3d2..bfb3c7f82 100644\n--- a/rich/theme.py\n+++ b/rich/theme.py\n@@ -1,5 +1,5 @@\n import configparser\n-from typing import Dict, List, IO, Mapping\n+from typing import Dict, List, IO, Mapping, Optional\n \n from .default_styles import DEFAULT_STYLES\n from .style import Style, StyleType\n@@ -15,7 +15,9 @@ class Theme:\n \n     styles: Dict[str, Style]\n \n-    def __init__(self, styles: Mapping[str, StyleType] = None, inherit: bool = True):\n+    def __init__(\n+        self, styles: Optional[Mapping[str, StyleType]] = None, inherit: bool = True\n+    ):\n         self.styles = DEFAULT_STYLES.copy() if inherit else {}\n         if styles is not None:\n             self.styles.update(\n@@ -35,7 +37,7 @@ def config(self) -> str:\n \n     @classmethod\n     def from_file(\n-        cls, config_file: IO[str], source: str = None, inherit: bool = True\n+        cls, config_file: IO[str], source: Optional[str] = None, inherit: bool = True\n     ) -> \"Theme\":\n         \"\"\"Load a theme from a text mode file.\n \ndiff --git a/rich/traceback.py b/rich/traceback.py\nindex 23c6b24a8..878492138 100644\n--- a/rich/traceback.py\n+++ b/rich/traceback.py\n@@ -40,7 +40,7 @@\n \n def install(\n     *,\n-    console: Console = None,\n+    console: Optional[Console] = None,\n     width: Optional[int] = 100,\n     extra_lines: int = 3,\n     theme: Optional[str] = None,\n@@ -202,7 +202,7 @@ class Traceback:\n \n     def __init__(\n         self,\n-        trace: Trace = None,\n+        trace: Optional[Trace] = None,\n         width: Optional[int] = 100,\n         extra_lines: int = 3,\n         theme: Optional[str] = None,\ndiff --git a/rich/tree.py b/rich/tree.py\nindex 5fc4487a8..57027ca63 100644\n--- a/rich/tree.py\n+++ b/rich/tree.py\n@@ -1,4 +1,4 @@\n-from typing import Iterator, List, Tuple\n+from typing import Iterator, List, Optional, Tuple\n \n from ._loop import loop_first, loop_last\n from .console import Console, ConsoleOptions, RenderableType, RenderResult\n@@ -40,8 +40,8 @@ def add(\n         self,\n         label: RenderableType,\n         *,\n-        style: StyleType = None,\n-        guide_style: StyleType = None,\n+        style: Optional[StyleType] = None,\n+        guide_style: Optional[StyleType] = None,\n         expanded=True,\n         highlight=False,\n     ) -> \"Tree\":\ndiff --git a/tox.ini b/tox.ini\nindex 24e44a220..dba27dbb7 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -33,7 +33,7 @@ commands =\n description = Runs all linting tasks\n commands =\n     black .\n-    mypy -p rich --ignore-missing-imports --warn-unreachable\n+    mypy -p rich --config-file= --ignore-missing-imports --no-implicit-optional --warn-unreachable\n skip_install = true\n \n [testenv:docs]\n", "test_patch": "diff --git a/tests/test_repr.py b/tests/test_repr.py\nindex ee6ba0af0..2cc7aeb07 100644\n--- a/tests/test_repr.py\n+++ b/tests/test_repr.py\n@@ -1,10 +1,12 @@\n+from typing import Optional\n+\n from rich.console import Console\n from rich.repr import rich_repr\n \n \n @rich_repr\n class Foo:\n-    def __init__(self, foo: str, bar: int = None, egg: int = 1):\n+    def __init__(self, foo: str, bar: Optional[int] = None, egg: int = 1):\n         self.foo = foo\n         self.bar = bar\n         self.egg = egg\n", "problem_statement": "[BUG] No `Optional` typing in args that accept `None` in `Console`.\nSome arguments to `rich.console.Console`\u2014like `width`\u2014accept `None` as an argument and are documented as `Optional` but are typed as only `int`, raising some type checking errors if `width=None` is passed.\r\n\r\nhttps://github.com/willmcgugan/rich/blob/a05a5a1c2f95f25db70ac3657e99f0bab652e2cd/rich/console.py#L577\r\n\n", "hints_text": "What type checker are you using? Mypy will assume `Optional` when you set the default value to `None`.\n```python\r\n\"\"\"script.py\"\"\"\r\ndef foo(x : int = None) -> None:\r\n    ...\r\n\r\n\r\nfoo(x=None)\r\n```\r\n\r\nIn this case it fails default Pyre. \r\n\r\n```sh\r\n\u276f pyre\r\n\u019b Using virtual environment site-packages in search path...\r\n\u019b Found 2 type errors!\r\nsrc/script.py:1:8 Incompatible variable type [9]: x is declared to have type `int` but is used as type `None`.\r\nsrc/script.py:5:4 Incompatible parameter type [6]: Expected `int` for 1st parameter `x` to call `foo` but got `None`.\r\n```\r\n\r\nIt will fail default pytype as well\r\n\r\n```sh\r\n\u276f python -m pytype src/script.py\r\nComputing dependencies\r\nAnalyzing 1 sources with 0 local dependencies\r\nninja: Entering directory `.pytype'\r\n[1/1] check script\r\nFAILED: /Users/pawlu/Documents/scratch/typing-optional/.pytype/pyi/script.pyi\r\n/Users/pawlu/Documents/scratch/typing-optional/.venv/bin/python -m pytype.single --imports_info /Users/pawlu/Documents/scratch/typing-optional/.pytype/imports/script.imports --module-name script -V 3.8 -o /Users/pawlu/Documents/scratch/typing-optional/.pytype/pyi/script.pyi --analyze-annotated --nofail --quick /Users/pawlu/Documents/scratch/typing-optional/src/script.py\r\nFile \"/Users/pawlu/Documents/scratch/typing-optional/src/script.py\", line 5, in <module>: Function foo was called with the wrong arguments [wrong-arg-types]\r\n         Expected: (x: int = ...)\r\n  Actually passed: (x: None)\r\n\r\nFor more details, see https://google.github.io/pytype/errors.html#wrong-arg-types\r\nninja: build stopped: subcommand failed.\r\nLeaving directory '.pytype'\r\n```\r\n\r\nYou're right that it does pass mypy by default, but it will fail if you use `--strict` due to it invoking `--no-implicit-optional`.\r\n\r\n```sh\r\n\u276f python -m mypy --strict src/script.py\r\nmypy.ini: No [mypy] section in config file\r\nsrc/script.py:1: error: Incompatible default for argument \"x\" (default has type \"None\", argument has type \"int\")\r\nsrc/script.py:5: error: Argument \"x\" to \"foo\" has incompatible type \"None\"; expected \"int\"\r\nFound 2 errors in 1 file (checked 1 source file)\r\n```\r\n\r\nFor what it's worth, I think [mypy plans to (maybe) eventually switch `--no-implicit-optional` to the default](https://github.com/python/mypy/issues/9091), since [PEP 484](https://github.com/python/peps/pull/689) was adjusted.", "created_at": "2021-04-23T03:05:09Z"}
{"repo": "Textualize/rich", "pull_number": 911, "instance_id": "Textualize__rich-911", "issue_numbers": ["910"], "base_commit": "a1e9cc7cc622dfe379f233a0597a0a3148b21dd6", "patch": "diff --git a/rich/syntax.py b/rich/syntax.py\nindex 5485fd37a..1f9e0421d 100644\n--- a/rich/syntax.py\n+++ b/rich/syntax.py\n@@ -480,7 +480,7 @@ def __rich_console__(\n         padding = _Segment(\" \" * numbers_column_width + \" \", background_style)\n         new_line = _Segment(\"\\n\")\n \n-        line_pointer = \"\u2771 \"\n+        line_pointer = \"> \" if options.legacy_windows else \"\u2771 \"\n \n         for line_no, line in enumerate(lines, self.start_line + line_offset):\n             if self.word_wrap:\n", "test_patch": "", "problem_statement": "[BUG] Line pointer in Syntax doesn't render on \"legacy Windows\" \n**Describe the bug**\r\nLine pointer in Rich's `Syntax` class doesn't render on so-called \"legacy Windows\" cmd.\r\nI was expecting Rich to use a different character on \"legacy Windows\" so that it can be rendered, similarly to what's done to box drawing characters.\r\n\r\n**To Reproduce**\r\n```\r\nimport rich.traceback                                                                                                                                                                                                                                                                                                                                 rich.traceback.install()                                                                                                                                                                                                                                                                                                                              raise RuntimeError(\"Abc...\")\r\n```\r\n![image](https://user-images.githubusercontent.com/6032823/104316217-6e008c00-54dc-11eb-873a-144fa9312f49.png)\r\n\r\n**Platform**\r\nWindows, old Command Prompt (not Windows Terminal)\r\n\r\n**Diagnose**\r\n![image](https://user-images.githubusercontent.com/6032823/104316323-98eae000-54dc-11eb-9e2d-d9c2d82920af.png)\r\n\r\n\n", "hints_text": "Any chance of a PR?", "created_at": "2021-01-12T13:58:54Z"}
{"repo": "Textualize/rich", "pull_number": 369, "instance_id": "Textualize__rich-369", "issue_numbers": ["279"], "base_commit": "688f44155157f204538cc92baf49e239a4f79e8d", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 3a05e6811..0913a7906 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,7 +5,11 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n-## [8.0.1] - unreleased\n+## [8.1.0] - unreleased\n+\n+### Added\n+\n+- Added highlighting of EUI-48 and EUI-64 (MAC addresses)\n \n ### Changed\n \ndiff --git a/rich/default_styles.py b/rich/default_styles.py\nindex e320e3cad..ce1614373 100644\n--- a/rich/default_styles.py\n+++ b/rich/default_styles.py\n@@ -61,6 +61,8 @@\n     \"repr.comma\": Style(bold=True),\n     \"repr.ipv4\": Style(bold=True, color=\"bright_green\"),\n     \"repr.ipv6\": Style(bold=True, color=\"bright_green\"),\n+    \"repr.eui48\": Style(bold=True, color=\"bright_green\"),\n+    \"repr.eui64\": Style(bold=True, color=\"bright_green\"),\n     \"repr.tag_start\": Style(bold=True),\n     \"repr.tag_name\": Style(color=\"bright_magenta\", bold=True),\n     \"repr.tag_contents\": Style(color=\"default\"),\ndiff --git a/rich/highlighter.py b/rich/highlighter.py\nindex 9fe859556..02a606bdd 100644\n--- a/rich/highlighter.py\n+++ b/rich/highlighter.py\n@@ -80,6 +80,12 @@ class ReprHighlighter(RegexHighlighter):\n         r\"(?P<path>\\B(\\/[\\w\\.\\-\\_\\+]+)*\\/)(?P<filename>[\\w\\.\\-\\_\\+]*)?\",\n         r\"(?P<ipv4>[0-9]{1,3}\\.[0-9]{1,3}\\.[0-gt9]{1,3}\\.[0-9]{1,3})\",\n         r\"(?P<ipv6>([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\",\n+        r\"(?P<eui48>([0-9A-Fa-f]{1,2}-){5}[0-9A-Fa-f]{1,2})\",  # EUI-48 6x2 hyphen\n+        r\"(?P<eui64>([0-9A-Fa-f]{1,2}-){7}[0-9A-Fa-f]{1,2})\",  # EUI-64 8x2 hyphen\n+        r\"(?P<eui48>([0-9A-Fa-f]{1,2}:){5}[0-9A-Fa-f]{1,2})\",  # EUI-48 6x2 colon\n+        r\"(?P<eui64>([0-9A-Fa-f]{1,2}:){7}[0-9A-Fa-f]{1,2})\",  # EUI-64 8x2 colon\n+        r\"(?P<eui48>([0-9A-Fa-f]{4}\\.){2}[0-9A-Fa-f]{4})\",  # EUI-48 3x4 dot\n+        r\"(?P<eui64>([0-9A-Fa-f]{4}\\.){3}[0-9A-Fa-f]{4})\",  # EUI-64 4x4 dot\n         r\"(?<!\\\\)(?P<str>b?\\'\\'\\'.*?(?<!\\\\)\\'\\'\\'|b?\\'.*?(?<!\\\\)\\'|b?\\\"\\\"\\\".*?(?<!\\\\)\\\"\\\"\\\"|b?\\\".*?(?<!\\\\)\\\")\",\n         r\"(?P<url>https?:\\/\\/[0-9a-zA-Z\\$\\-\\_\\+\\!`\\(\\)\\,\\.\\?\\/\\;\\:\\&\\=\\%\\#]*)\",\n         r\"(?P<uuid>[a-fA-F0-9]{8}\\-[a-fA-F0-9]{4}\\-[a-fA-F0-9]{4}\\-[a-fA-F0-9]{4}\\-[a-fA-F0-9]{12})\",\n", "test_patch": "diff --git a/tests/test_highlighter.py b/tests/test_highlighter.py\nindex 5e3798e86..242452dba 100644\n--- a/tests/test_highlighter.py\n+++ b/tests/test_highlighter.py\n@@ -1,8 +1,34 @@\n+\"\"\"Tests for the higlighter classes.\"\"\"\n import pytest\n-from rich.highlighter import NullHighlighter\n+\n+from rich.highlighter import NullHighlighter, ReprHighlighter\n+from rich.text import Span, Text\n \n \n def test_wrong_type():\n     highlighter = NullHighlighter()\n     with pytest.raises(TypeError):\n         highlighter([])\n+\n+\n+@pytest.mark.parametrize(\n+    \"style_name, test_str\",\n+    [\n+        (\"repr.eui48\", \"01-23-45-67-89-AB\"),  # 6x2 hyphen\n+        (\"repr.eui64\", \"01-23-45-FF-FE-67-89-AB\"),  # 8x2 hyphen\n+        (\"repr.eui48\", \"01:23:45:67:89:AB\"),  # 6x2 colon\n+        (\"repr.eui64\", \"01:23:45:FF:FE:67:89:AB\"),  # 8x2 colon\n+        (\"repr.eui48\", \"0123.4567.89AB\"),  # 3x4 dot\n+        (\"repr.eui64\", \"0123.45FF.FE67.89AB\"),  # 4x4 dot\n+        (\"repr.eui48\", \"ed-ed-ed-ed-ed-ed\"),  # lowercase\n+        (\"repr.eui48\", \"ED-ED-ED-ED-ED-ED\"),  # uppercase\n+        (\"repr.eui48\", \"Ed-Ed-Ed-Ed-Ed-Ed\"),  # mixed case\n+        (\"repr.eui48\", \"0-00-1-01-2-02\"),  # dropped zero\n+    ],\n+)\n+def test_highlight_regex(style_name: str, test_str: str):\n+    \"\"\"Tests for the regular expressions used in ReprHighlighter.\"\"\"\n+    text = Text(test_str)\n+    highlighter = ReprHighlighter()\n+    highlighter.highlight(text)\n+    assert text._spans[-1] == Span(0, len(test_str), style_name)\n", "problem_statement": "[REQUEST]Please consider adding MAC/OUI highlighting - similar to IP Address/URL highlighting \n**Add MAC-address oui highlighting**\r\n\r\nIt'd be a useful addition if Rich could consistently handle highlighting of the multiple mac-address/oui formats that exist\r\n\r\ne.g.\r\n000c.298c.500f\r\n0:c:29:8c:50:f\r\n00:0C:29:8C:50:0F\r\n00-0C-29-8C-50-0F\r\n00:0c:29:8c:50:0f\r\n\n", "hints_text": "It\u2019s possible. Do you know of a regex for mac addresses?\nhttps://regex101.com/library/yS8eO4 perhaps?\r\n\r\nActually that's not a great example it fails on  0:17:88:70:53:70 for example - I'll keep looking.\nWhat default style would be fitting for this?\r\nShould we match the existing style for IP addresses?\r\nhttps://github.com/willmcgugan/rich/blob/ebb4eaa26f6c557daf4d03540f21ea277a02824e/rich/default_styles.py#L62-L63\r\nOr perhaps the same as a UUID?\r\nhttps://github.com/willmcgugan/rich/blob/ebb4eaa26f6c557daf4d03540f21ea277a02824e/rich/default_styles.py#L76\nI think it's closer to a IP address, conceptually. Makes sense to use the same style. \nCool, I'll start working on a patch for this :+1:\nI'll add highlighting for IEEE EUI-48 and EUI-64 (mac addresses) accepting three formats:\r\n\r\n* Six (EUI-48) or eight (EUI-64) groups of two hex digits with hyphen separators: `01-23-45-67-89-AB` or `01-23-45-FF-FE-67-89-AB`\r\n* Six (EUI-48) or eight (EUI-64) groups of two hex digits with colon separators: `01:23:45:67:89:AB` or `01:23:45:FF:FE:67:89:AB`\r\n* Three (EUI-48) or four (EUI-64) groups of four hex digits with dot separators `0123.4567.89AB` or `0123.45FF.FE67.89AB`\r\n\r\nThe first two forms are seemingly the most common, and are recommended in this IEEE document: \r\nhttps://standards.ieee.org/content/dam/ieee-standards/standards/web/documents/tutorials/eui.pdf\r\nI've found the third form scattered around places, although don't have an \"authoritative\" reference.\r\n\r\nIm thinking of accepting case-insensitive hex digits (e.g. `aa`. `aA`, and `AA`), but not accepting unpadded hex groups (e.g. `00:01` but not `0:1`) .\r\n\r\nLet me know if this sounds like the right approach :)\nOSX does this annoying thing where it drops leading zeroes (unless it's a double leading zero) - one to be aware of?\r\n\r\n- OSX\r\n```\r\n0:18:dd:21:8:6d\r\n```\r\n\r\n- linux (as an example of non-annoying behaviour)\r\n```\r\n00:18:dd:21:08:6d\r\n```\nOkay, that's easy enough to accommodate (for the hyphen or colon separated notation) \ud83d\udc4d", "created_at": "2020-10-08T19:52:37Z"}
{"repo": "Textualize/rich", "pull_number": 273, "instance_id": "Textualize__rich-273", "issue_numbers": ["272"], "base_commit": "1cdcd1ae6921ada4c9d53ca476b2155f19f9399d", "patch": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex f4dc8bb0b..52cc91add 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,12 @@ All notable changes to this project will be documented in this file.\n The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n+## [6.1.2] - Unreleased\n+\n+### Changed\n+\n+- The `#` sign is accepted as part of a URL\n+\n ## [6.1.1] - 2020-09-07\n \n ### Changed\ndiff --git a/rich/highlighter.py b/rich/highlighter.py\nindex 13fc0ac17..213252eb2 100644\n--- a/rich/highlighter.py\n+++ b/rich/highlighter.py\n@@ -79,7 +79,7 @@ class ReprHighlighter(RegexHighlighter):\n         r\"(?P<number>0x[0-9a-f]*)\",\n         r\"(?P<path>\\B(\\/[\\w\\.\\-\\_\\+]+)*\\/)(?P<filename>[\\w\\.\\-\\_\\+]*)?\",\n         r\"(?<!\\\\)(?P<str>b?\\'\\'\\'.*?(?<!\\\\)\\'\\'\\'|b?\\'.*?(?<!\\\\)\\'|b?\\\"\\\"\\\".*?(?<!\\\\)\\\"\\\"\\\"|b?\\\".*?(?<!\\\\)\\\")\",\n-        r\"(?P<url>https?:\\/\\/[0-9a-zA-Z\\$\\-\\_\\+\\!`\\(\\)\\,\\.\\?\\/\\;\\:\\&\\=\\%]*)\",\n+        r\"(?P<url>https?:\\/\\/[0-9a-zA-Z\\$\\-\\_\\+\\!`\\(\\)\\,\\.\\?\\/\\;\\:\\&\\=\\%\\#]*)\",\n         r\"(?P<uuid>[a-fA-F0-9]{8}\\-[a-fA-F0-9]{4}\\-[a-fA-F0-9]{4}\\-[a-fA-F0-9]{4}\\-[a-fA-F0-9]{12})\",\n     ]\n \n@@ -104,7 +104,7 @@ class ReprHighlighter(RegexHighlighter):\n     console.print(\" /foo/bar/baz/egg.py word\")\n     console.print(\"foo /foo/bar/baz/egg.py word\")\n     console.print(\"foo /foo/bar/ba._++z/egg+.py word\")\n-    console.print(\"https://example.org?foo=bar\")\n+    console.print(\"https://example.org?foo=bar#header\")\n \n     console.print(1234567.34)\n     console.print(1 / 2)\n", "test_patch": "", "problem_statement": "[BUG] '#' sign is treated as the end of a URL\n**Describe the bug**\r\nThe `#` a valid element of the URL, but Rich seems to ignore it and treats it as the end of it. \r\nConsider this URL: https://github.com/willmcgugan/rich#rich-print-function\r\n\r\n**To Reproduce**\r\n```python\r\nfrom rich.console import Console\r\n\r\nconsole = Console()\r\n\r\nconsole.log(\"https://github.com/willmcgugan/rich#rich-print-function\")\r\n```\r\n\r\nOutput:  \r\n![image](https://user-images.githubusercontent.com/18279161/92566941-44f59380-f27d-11ea-908d-64d01e224087.png)\r\n\r\n\r\n**Platform**\r\nI'm using Rich on Windows and Linux, with the currently newest version `6.1.1`.\r\n\n", "hints_text": "https://github.com/willmcgugan/rich/blob/master/rich/highlighter.py#L82\r\n\r\nAny chance of a PR ?\nSure, happy to try it.", "created_at": "2020-09-09T12:03:32Z"}
{"repo": "Textualize/rich", "pull_number": 211, "instance_id": "Textualize__rich-211", "issue_numbers": ["210"], "base_commit": "1501671a4d36077ba442b767f69997947bb660e8", "patch": "diff --git a/rich/markup.py b/rich/markup.py\nindex fb6f45c61..9af1cd9dd 100644\n--- a/rich/markup.py\n+++ b/rich/markup.py\n@@ -47,7 +47,7 @@ def escape(markup: str) -> str:\n     Returns:\n         str: Markup with square brackets escaped.\n     \"\"\"\n-    return markup.replace(\"[\", \"\\[\")\n+    return markup.replace(\"[\", r\"\\[\")\n \n \n def _parse(markup: str) -> Iterable[Tuple[int, Optional[str], Optional[Tag]]]:\n", "test_patch": "diff --git a/tests/test_markup.py b/tests/test_markup.py\nindex e345eaecc..8e254e9a3 100644\n--- a/tests/test_markup.py\n+++ b/tests/test_markup.py\n@@ -23,11 +23,11 @@ def test_re_match():\n \n \n def test_escape():\n-    assert escape(\"foo[bar]\") == \"foo\\[bar]\"\n+    assert escape(\"foo[bar]\") == r\"foo\\[bar]\"\n \n \n def test_parse():\n-    result = list(_parse(\"[foo]hello[/foo][bar]world[/]\\[escaped]\"))\n+    result = list(_parse(r\"[foo]hello[/foo][bar]world[/]\\[escaped]\"))\n     expected = [\n         (0, None, Tag(name=\"foo\", parameters=None)),\n         (10, \"hello\", None),\n", "problem_statement": "[BUG] Deprecation warning due to invalid escape sequences\n**Describe the bug**\r\n\r\nDeprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals. pyupgrade also helps in automatic conversion : https://github.com/asottile/pyupgrade/\r\n\r\n**To Reproduce**\r\n\r\n```\r\n./tests/test_markup.py:26: DeprecationWarning: invalid escape sequence \\[\r\n  assert escape(\"foo[bar]\") == \"foo\\[bar]\"\r\n./tests/test_markup.py:30: DeprecationWarning: invalid escape sequence \\[\r\n  result = list(_parse(\"[foo]hello[/foo][bar]world[/]\\[escaped]\"))\r\n./rich/markup.py:50: DeprecationWarning: invalid escape sequence \\[\r\n  return markup.replace(\"[\", \"\\[\")\r\n```\r\n\r\n**Platform**\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using. Which version of Rich?\r\n\n", "hints_text": "", "created_at": "2020-08-05T13:09:45Z"}
{"repo": "Textualize/rich", "pull_number": 207, "instance_id": "Textualize__rich-207", "issue_numbers": ["204"], "base_commit": "1501671a4d36077ba442b767f69997947bb660e8", "patch": "diff --git a/rich/console.py b/rich/console.py\nindex de5c2ab85..d690e4a9a 100644\n--- a/rich/console.py\n+++ b/rich/console.py\n@@ -795,18 +795,22 @@ def rule(\n         self,\n         title: str = \"\",\n         *,\n-        character: str = \"\u2500\",\n+        character: Optional[str] = None,\n+        characters: str = \"\u2500\",\n         style: Union[str, Style] = \"rule.line\",\n     ) -> None:\n         \"\"\"Draw a line with optional centered title.\n         \n         Args:\n             title (str, optional): Text to render over the rule. Defaults to \"\".\n-            character (str, optional): Character to form the line. Defaults to \"\u2500\".\n+            character: Will be deprecated in v6.0.0, please use characters argument instead.\n+            characters (str, optional): Character(s) to form the line. Defaults to \"\u2500\".\n         \"\"\"\n         from .rule import Rule\n \n-        rule = Rule(title=title, character=character, style=style)\n+        if character:\n+            characters = character\n+        rule = Rule(title=title, characters=characters, style=style)\n         self.print(rule)\n \n     def control(self, control_codes: Union[\"Control\", str]) -> None:\ndiff --git a/rich/rule.py b/rich/rule.py\nindex 5c8918ca5..73599421e 100644\n--- a/rich/rule.py\n+++ b/rich/rule.py\n@@ -1,6 +1,6 @@\n from typing import Union\n \n-from .cells import cell_len\n+from .cells import cell_len, set_cell_size\n from .console import Console, ConsoleOptions, RenderResult\n from .jupyter import JupyterMixin\n from .style import Style\n@@ -12,7 +12,8 @@ class Rule(JupyterMixin):\n     \n     Args:\n         title (Union[str, Text], optional): Text to render in the rule. Defaults to \"\".\n-        character (str, optional): Character used to draw the line. Defaults to \"\u2500\".\n+        character: Will be deprecated in v6.0.0, please use characters argument instead.\n+        characters (str, optional): Character(s) used to draw the line. Defaults to \"\u2500\".\n         style (StyleType, optional): Style of Rule. Defaults to \"rule.line\".\n         end (str, optional): Character at end of Rule. defaults to \"\\\\n\"\n     \"\"\"\n@@ -21,29 +22,37 @@ def __init__(\n         self,\n         title: Union[str, Text] = \"\",\n         *,\n-        character: str = None,\n+        character: Union[str, None] = None,\n+        characters: str = \"\u2500\",\n         style: Union[str, Style] = \"rule.line\",\n         end: str = \"\\n\",\n     ) -> None:\n-        if character and cell_len(character) != 1:\n-            raise ValueError(\"'character' argument must have a cell width of 1\")\n+        if character:\n+            characters = character\n+\n+        if cell_len(characters) < 1:\n+            raise ValueError(\n+                \"'characters' argument must have at least a cell width of 1\"\n+            )\n         self.title = title\n-        self.character = character\n+        self.characters = characters\n         self.style = style\n         self.end = end\n \n     def __repr__(self) -> str:\n-        return f\"Rule({self.title!r}, {self.character!r})\"\n+        return f\"Rule({self.title!r}, {self.characters!r})\"\n \n     def __rich_console__(\n         self, console: Console, options: ConsoleOptions\n     ) -> RenderResult:\n         width = options.max_width\n \n-        character = self.character or \"\u2500\"\n+        characters = self.characters or \"\u2500\"\n \n+        chars_len = cell_len(characters)\n         if not self.title:\n-            yield Text(character * width, self.style)\n+            rule_text = Text(characters * ((width // chars_len) + 1), self.style)\n+            rule_text.truncate(width)\n         else:\n             if isinstance(self.title, Text):\n                 title_text = self.title\n@@ -56,13 +65,17 @@ def __rich_console__(\n             title_text.plain = title_text.plain.replace(\"\\n\", \" \")\n             title_text = title_text.tabs_to_spaces()\n             rule_text = Text(end=self.end)\n-            center = (width - cell_len(title_text.plain)) // 2\n-            rule_text.append(character * (center - 1) + \" \", self.style)\n+            side_width = (width - cell_len(title_text.plain)) // 2\n+            left = Text(characters * (side_width // chars_len + 1))\n+            left.truncate(side_width - 1)\n+            right_length = width - cell_len(left.plain) - cell_len(title_text.plain)\n+            right = Text(characters * (side_width // chars_len + 1))\n+            right.truncate(right_length)\n+            rule_text.append(left.plain + \" \", self.style)\n             rule_text.append(title_text)\n-            rule_text.append(\n-                \" \" + character * (width - cell_len(rule_text.plain) - 1), self.style\n-            )\n-            yield rule_text\n+            rule_text.append(\" \" + right.plain, self.style)\n+            rule_text.plain = set_cell_size(rule_text.plain, width)\n+        yield rule_text\n \n \n if __name__ == \"__main__\":  # pragma: no cover\n@@ -74,4 +87,4 @@ def __rich_console__(\n     except IndexError:\n         text = \"Hello, World\"\n     console = Console()\n-    console.print(Rule(text))\n+    console.print(Rule(title=text))\n", "test_patch": "diff --git a/tests/_card_render.py b/tests/_card_render.py\nindex 320a7e7af..1f02e9f47 100644\n--- a/tests/_card_render.py\n+++ b/tests/_card_render.py\n@@ -1,1 +1,1 @@\n-expected='\\x1b[3m                                           Rich features                                            \\x1b[0m\\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m             Colors\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;33m256\\x1b[0m colors or \\x1b[1;32m16.7 million\\x1b[0m colors \\x1b[34m(if supported by your terminal)\\x1b[0m.             \\n                                                                                                    \\n                     \\x1b[48;5;16m  \\x1b[0m\\x1b[48;5;17m  \\x1b[0m\\x1b[48;5;18m  \\x1b[0m\\x1b[48;5;19m  \\x1b[0m\\x1b[48;5;20m  \\x1b[0m\\x1b[48;5;21m  \\x1b[0m\\x1b[48;5;52m  \\x1b[0m\\x1b[48;5;53m  \\x1b[0m\\x1b[48;5;54m  \\x1b[0m\\x1b[48;5;55m  \\x1b[0m\\x1b[48;5;56m  \\x1b[0m\\x1b[48;5;57m  \\x1b[0m\\x1b[48;5;88m  \\x1b[0m\\x1b[48;5;89m  \\x1b[0m\\x1b[48;5;90m  \\x1b[0m\\x1b[48;5;91m  \\x1b[0m\\x1b[48;5;92m  \\x1b[0m\\x1b[48;5;93m  \\x1b[0m\\x1b[48;5;124m  \\x1b[0m\\x1b[48;5;125m  \\x1b[0m\\x1b[48;5;126m  \\x1b[0m\\x1b[48;5;127m  \\x1b[0m\\x1b[48;5;128m  \\x1b[0m\\x1b[48;5;129m  \\x1b[0m\\x1b[48;5;160m  \\x1b[0m\\x1b[48;5;161m  \\x1b[0m\\x1b[48;5;162m  \\x1b[0m\\x1b[48;5;163m  \\x1b[0m\\x1b[48;5;164m  \\x1b[0m\\x1b[48;5;165m  \\x1b[0m\\x1b[48;5;196m  \\x1b[0m\\x1b[48;5;197m  \\x1b[0m\\x1b[48;5;198m  \\x1b[0m\\x1b[48;5;199m  \\x1b[0m\\x1b[48;5;200m  \\x1b[0m\\x1b[48;5;201m  \\x1b[0m       \\n                     \\x1b[48;5;22m  \\x1b[0m\\x1b[48;5;23m  \\x1b[0m\\x1b[48;5;24m  \\x1b[0m\\x1b[48;5;25m  \\x1b[0m\\x1b[48;5;26m  \\x1b[0m\\x1b[48;5;27m  \\x1b[0m\\x1b[48;5;58m  \\x1b[0m\\x1b[48;5;59m  \\x1b[0m\\x1b[48;5;60m  \\x1b[0m\\x1b[48;5;61m  \\x1b[0m\\x1b[48;5;62m  \\x1b[0m\\x1b[48;5;63m  \\x1b[0m\\x1b[48;5;94m  \\x1b[0m\\x1b[48;5;95m  \\x1b[0m\\x1b[48;5;96m  \\x1b[0m\\x1b[48;5;97m  \\x1b[0m\\x1b[48;5;98m  \\x1b[0m\\x1b[48;5;99m  \\x1b[0m\\x1b[48;5;130m  \\x1b[0m\\x1b[48;5;131m  \\x1b[0m\\x1b[48;5;132m  \\x1b[0m\\x1b[48;5;133m  \\x1b[0m\\x1b[48;5;134m  \\x1b[0m\\x1b[48;5;135m  \\x1b[0m\\x1b[48;5;166m  \\x1b[0m\\x1b[48;5;167m  \\x1b[0m\\x1b[48;5;168m  \\x1b[0m\\x1b[48;5;169m  \\x1b[0m\\x1b[48;5;170m  \\x1b[0m\\x1b[48;5;171m  \\x1b[0m\\x1b[48;5;202m  \\x1b[0m\\x1b[48;5;203m  \\x1b[0m\\x1b[48;5;204m  \\x1b[0m\\x1b[48;5;205m  \\x1b[0m\\x1b[48;5;206m  \\x1b[0m\\x1b[48;5;207m  \\x1b[0m       \\n                     \\x1b[48;5;28m  \\x1b[0m\\x1b[48;5;29m  \\x1b[0m\\x1b[48;5;30m  \\x1b[0m\\x1b[48;5;31m  \\x1b[0m\\x1b[48;5;32m  \\x1b[0m\\x1b[48;5;33m  \\x1b[0m\\x1b[48;5;64m  \\x1b[0m\\x1b[48;5;65m  \\x1b[0m\\x1b[48;5;66m  \\x1b[0m\\x1b[48;5;67m  \\x1b[0m\\x1b[48;5;68m  \\x1b[0m\\x1b[48;5;69m  \\x1b[0m\\x1b[48;5;100m  \\x1b[0m\\x1b[48;5;101m  \\x1b[0m\\x1b[48;5;102m  \\x1b[0m\\x1b[48;5;103m  \\x1b[0m\\x1b[48;5;104m  \\x1b[0m\\x1b[48;5;105m  \\x1b[0m\\x1b[48;5;136m  \\x1b[0m\\x1b[48;5;137m  \\x1b[0m\\x1b[48;5;138m  \\x1b[0m\\x1b[48;5;139m  \\x1b[0m\\x1b[48;5;140m  \\x1b[0m\\x1b[48;5;141m  \\x1b[0m\\x1b[48;5;172m  \\x1b[0m\\x1b[48;5;173m  \\x1b[0m\\x1b[48;5;174m  \\x1b[0m\\x1b[48;5;175m  \\x1b[0m\\x1b[48;5;176m  \\x1b[0m\\x1b[48;5;177m  \\x1b[0m\\x1b[48;5;208m  \\x1b[0m\\x1b[48;5;209m  \\x1b[0m\\x1b[48;5;210m  \\x1b[0m\\x1b[48;5;211m  \\x1b[0m\\x1b[48;5;212m  \\x1b[0m\\x1b[48;5;213m  \\x1b[0m       \\n                     \\x1b[48;5;34m  \\x1b[0m\\x1b[48;5;35m  \\x1b[0m\\x1b[48;5;36m  \\x1b[0m\\x1b[48;5;37m  \\x1b[0m\\x1b[48;5;38m  \\x1b[0m\\x1b[48;5;39m  \\x1b[0m\\x1b[48;5;70m  \\x1b[0m\\x1b[48;5;71m  \\x1b[0m\\x1b[48;5;72m  \\x1b[0m\\x1b[48;5;73m  \\x1b[0m\\x1b[48;5;74m  \\x1b[0m\\x1b[48;5;75m  \\x1b[0m\\x1b[48;5;106m  \\x1b[0m\\x1b[48;5;107m  \\x1b[0m\\x1b[48;5;108m  \\x1b[0m\\x1b[48;5;109m  \\x1b[0m\\x1b[48;5;110m  \\x1b[0m\\x1b[48;5;111m  \\x1b[0m\\x1b[48;5;142m  \\x1b[0m\\x1b[48;5;143m  \\x1b[0m\\x1b[48;5;144m  \\x1b[0m\\x1b[48;5;145m  \\x1b[0m\\x1b[48;5;146m  \\x1b[0m\\x1b[48;5;147m  \\x1b[0m\\x1b[48;5;178m  \\x1b[0m\\x1b[48;5;179m  \\x1b[0m\\x1b[48;5;180m  \\x1b[0m\\x1b[48;5;181m  \\x1b[0m\\x1b[48;5;182m  \\x1b[0m\\x1b[48;5;183m  \\x1b[0m\\x1b[48;5;214m  \\x1b[0m\\x1b[48;5;215m  \\x1b[0m\\x1b[48;5;216m  \\x1b[0m\\x1b[48;5;217m  \\x1b[0m\\x1b[48;5;218m  \\x1b[0m\\x1b[48;5;219m  \\x1b[0m       \\n                     \\x1b[48;5;40m  \\x1b[0m\\x1b[48;5;41m  \\x1b[0m\\x1b[48;5;42m  \\x1b[0m\\x1b[48;5;43m  \\x1b[0m\\x1b[48;5;44m  \\x1b[0m\\x1b[48;5;45m  \\x1b[0m\\x1b[48;5;76m  \\x1b[0m\\x1b[48;5;77m  \\x1b[0m\\x1b[48;5;78m  \\x1b[0m\\x1b[48;5;79m  \\x1b[0m\\x1b[48;5;80m  \\x1b[0m\\x1b[48;5;81m  \\x1b[0m\\x1b[48;5;112m  \\x1b[0m\\x1b[48;5;113m  \\x1b[0m\\x1b[48;5;114m  \\x1b[0m\\x1b[48;5;115m  \\x1b[0m\\x1b[48;5;116m  \\x1b[0m\\x1b[48;5;117m  \\x1b[0m\\x1b[48;5;148m  \\x1b[0m\\x1b[48;5;149m  \\x1b[0m\\x1b[48;5;150m  \\x1b[0m\\x1b[48;5;151m  \\x1b[0m\\x1b[48;5;152m  \\x1b[0m\\x1b[48;5;153m  \\x1b[0m\\x1b[48;5;184m  \\x1b[0m\\x1b[48;5;185m  \\x1b[0m\\x1b[48;5;186m  \\x1b[0m\\x1b[48;5;187m  \\x1b[0m\\x1b[48;5;188m  \\x1b[0m\\x1b[48;5;189m  \\x1b[0m\\x1b[48;5;220m  \\x1b[0m\\x1b[48;5;221m  \\x1b[0m\\x1b[48;5;222m  \\x1b[0m\\x1b[48;5;223m  \\x1b[0m\\x1b[48;5;224m  \\x1b[0m\\x1b[48;5;225m  \\x1b[0m       \\n                     \\x1b[48;5;46m  \\x1b[0m\\x1b[48;5;47m  \\x1b[0m\\x1b[48;5;48m  \\x1b[0m\\x1b[48;5;49m  \\x1b[0m\\x1b[48;5;50m  \\x1b[0m\\x1b[48;5;51m  \\x1b[0m\\x1b[48;5;82m  \\x1b[0m\\x1b[48;5;83m  \\x1b[0m\\x1b[48;5;84m  \\x1b[0m\\x1b[48;5;85m  \\x1b[0m\\x1b[48;5;86m  \\x1b[0m\\x1b[48;5;87m  \\x1b[0m\\x1b[48;5;118m  \\x1b[0m\\x1b[48;5;119m  \\x1b[0m\\x1b[48;5;120m  \\x1b[0m\\x1b[48;5;121m  \\x1b[0m\\x1b[48;5;122m  \\x1b[0m\\x1b[48;5;123m  \\x1b[0m\\x1b[48;5;154m  \\x1b[0m\\x1b[48;5;155m  \\x1b[0m\\x1b[48;5;156m  \\x1b[0m\\x1b[48;5;157m  \\x1b[0m\\x1b[48;5;158m  \\x1b[0m\\x1b[48;5;159m  \\x1b[0m\\x1b[48;5;190m  \\x1b[0m\\x1b[48;5;191m  \\x1b[0m\\x1b[48;5;192m  \\x1b[0m\\x1b[48;5;193m  \\x1b[0m\\x1b[48;5;194m  \\x1b[0m\\x1b[48;5;195m  \\x1b[0m\\x1b[48;5;226m  \\x1b[0m\\x1b[48;5;227m  \\x1b[0m\\x1b[48;5;228m  \\x1b[0m\\x1b[48;5;229m  \\x1b[0m\\x1b[48;5;230m  \\x1b[0m\\x1b[48;5;231m  \\x1b[0m       \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m             Styles\\x1b[0m\\x1b[1;31m \\x1b[0mAll ansi styles: \\x1b[1mbold\\x1b[0m, \\x1b[2mdim\\x1b[0m, \\x1b[3mitalic\\x1b[0m, \\x1b[4munderline\\x1b[0m, \\x1b[9mstrikethrough\\x1b[0m, \\x1b[7mreverse\\x1b[0m, and     \\n                     even \\x1b[5mblink\\x1b[0m.                                                                    \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m               Text\\x1b[0m\\x1b[1;31m \\x1b[0mWord wrap text. Justify \\x1b[32mleft\\x1b[0m, \\x1b[33mcenter\\x1b[0m, \\x1b[34mright\\x1b[0m or \\x1b[31mfull\\x1b[0m.                           \\n                                                                                                    \\n                     \\x1b[32mLorem ipsum dolor  \\x1b[0m \\x1b[33mLorem ipsum dolor \\x1b[0m \\x1b[34m  Lorem ipsum dolor\\x1b[0m \\x1b[31mLorem\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mipsum\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mdolor\\x1b[0m \\n                     \\x1b[32msit amet,          \\x1b[0m \\x1b[33m    sit amet,     \\x1b[0m \\x1b[34m          sit amet,\\x1b[0m \\x1b[31msit\\x1b[0m\\x1b[31m           \\x1b[0m\\x1b[31mamet,\\x1b[0m \\n                     \\x1b[32mconsectetur        \\x1b[0m \\x1b[33m   consectetur    \\x1b[0m \\x1b[34m        consectetur\\x1b[0m \\x1b[31mconsectetur\\x1b[0m         \\n                     \\x1b[32madipiscing elit.   \\x1b[0m \\x1b[33m adipiscing elit. \\x1b[0m \\x1b[34m   adipiscing elit.\\x1b[0m \\x1b[31madipiscing\\x1b[0m\\x1b[31m    \\x1b[0m\\x1b[31melit.\\x1b[0m \\n                     \\x1b[32mQuisque in metus   \\x1b[0m \\x1b[33m Quisque in metus \\x1b[0m \\x1b[34m   Quisque in metus\\x1b[0m \\x1b[31mQuisque\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31min\\x1b[0m\\x1b[31m   \\x1b[0m\\x1b[31mmetus\\x1b[0m \\n                     \\x1b[32msed sapien         \\x1b[0m \\x1b[33m    sed sapien    \\x1b[0m \\x1b[34m         sed sapien\\x1b[0m \\x1b[31msed\\x1b[0m\\x1b[31m          \\x1b[0m\\x1b[31msapien\\x1b[0m \\n                     \\x1b[32multricies pretium a\\x1b[0m \\x1b[33multricies pretium \\x1b[0m \\x1b[34multricies pretium a\\x1b[0m \\x1b[31multricies\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mpretium\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31ma\\x1b[0m \\n                     \\x1b[32mat justo. Maecenas \\x1b[0m \\x1b[33m   a at justo.    \\x1b[0m \\x1b[34m at justo. Maecenas\\x1b[0m \\x1b[31mat\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mjusto.\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mMaecenas\\x1b[0m \\n                     \\x1b[32mluctus velit et    \\x1b[0m \\x1b[33m Maecenas luctus  \\x1b[0m \\x1b[34m    luctus velit et\\x1b[0m \\x1b[31mluctus\\x1b[0m\\x1b[31m   \\x1b[0m\\x1b[31mvelit\\x1b[0m\\x1b[31m   \\x1b[0m\\x1b[31met\\x1b[0m \\n                     \\x1b[32mauctor maximus.    \\x1b[0m \\x1b[33m velit et auctor  \\x1b[0m \\x1b[34m    auctor maximus.\\x1b[0m \\x1b[31mauctor\\x1b[0m\\x1b[31m     \\x1b[0m\\x1b[31mmaximus.\\x1b[0m \\n                     \\x1b[32mDonec faucibus vel \\x1b[0m \\x1b[33m  maximus. Donec  \\x1b[0m \\x1b[34m Donec faucibus vel\\x1b[0m \\x1b[31mDonec\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mfaucibus\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mvel\\x1b[0m \\n                     \\x1b[32marcu id pretium.   \\x1b[0m \\x1b[33mfaucibus vel arcu \\x1b[0m \\x1b[34m   arcu id pretium.\\x1b[0m \\x1b[31marcu id pretium.\\x1b[0m    \\n                                         \\x1b[33m   id pretium.    \\x1b[0m                                         \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m        CJK support\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[31m\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\\x1b[0m                                               \\n                     \\x1b[31m\u2551\\x1b[0m\u8be5\u5e93\u652f\u6301\u4e2d\u6587\uff0c\u65e5\u6587\u548c\u97e9\u6587\u6587\u672c\uff01\\x1b[31m\u2551\\x1b[0m                                               \\n                     \\x1b[31m\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\\x1b[0m                                               \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m              Emoji\\x1b[0m\\x1b[1;31m \\x1b[0mRender emoji code: :+1: :apple: :ant:   Render emoji code: \ud83d\udc4d \ud83c\udf4e \ud83d\udc1c \ud83d\udc3b \ud83e\udd56 \ud83d\ude8c   \\n                     :bear: :baguette_bread: :bus:                                                  \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m     Console markup\\x1b[0m\\x1b[1;31m \\x1b[0m[bold magenta]Rich[/] supports a        \\x1b[1;35mRich\\x1b[0m supports a simple \\x1b[3mbbcode\\x1b[0m like     \\n                     simple [i]bbcode[/i] like               \\x1b[1mmarkup\\x1b[0m, you can use to insert \\x1b[33mcolor\\x1b[0m    \\n                     [b]markup[/b], you can use to insert    and \\x1b[4mstyle\\x1b[0m.                             \\n                     [yellow]color[/] and                                                           \\n                     [underline]style[/].                                                           \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m             Tables\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[3m                             Star Wars box office                             \\x1b[0m \\n                     \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \\n                     \u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35mDate        \\x1b[0m\\x1b[1;35m \\x1b[0m\u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35mTitle                 \\x1b[0m\\x1b[1;35m \\x1b[0m\u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35mProduction Budget\\x1b[0m\\x1b[1;35m \\x1b[0m\u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35m    Box Office\\x1b[0m\\x1b[1;35m \\x1b[0m\u2503 \\n                     \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \\n                     \u2502\\x1b[2m \\x1b[0m\\x1b[2mDec 20, 2019\\x1b[0m\\x1b[2m \\x1b[0m\u2502 Star Wars: The Rise of \u2502      $275,000,000 \u2502   $375,126,118 \u2502 \\n                     \u2502              \u2502 Skywalker              \u2502                   \u2502                \u2502 \\n                     \u2502\\x1b[2m \\x1b[0m\\x1b[2mMay 25, 2018\\x1b[0m\\x1b[2m \\x1b[0m\u2502 \\x1b[31mSolo\\x1b[0m: A Star Wars      \u2502      $275,000,000 \u2502   $393,151,347 \u2502 \\n                     \u2502              \u2502 Story                  \u2502                   \u2502                \u2502 \\n                     \u2502\\x1b[2m \\x1b[0m\\x1b[2mDec 15, 2017\\x1b[0m\\x1b[2m \\x1b[0m\u2502 Star Wars Ep. VIII:    \u2502      $262,000,000 \u2502 \\x1b[1m$1,332,539,889\\x1b[0m \u2502 \\n                     \u2502              \u2502 The Last Jedi          \u2502                   \u2502                \u2502 \\n                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31mSyntax highlighting\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 1 \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mdef\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34miter_last\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m-\\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m>\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mTuple\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mbool\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m          \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 2 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34m\"\"\"Iterate and generate a tuple with a flag for last value.\"\"\"\\x1b[0m\\x1b[48;2;39;40;34m       \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 3 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 4 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                                 \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 5 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                               \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 6 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 7 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\x1b[48;2;39;40;34m                                                           \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 8 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                            \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 9 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                                      \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m10 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m11 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m           Markdown\\x1b[0m\\x1b[1;31m \\x1b[0m# Markdown                              \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \\n                                                             \u2551              \\x1b[1mMarkdown\\x1b[0m              \u2551 \\n                     Supports much of the *markdown*,        \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \\n                     __syntax__!                                                                    \\n                                                             Supports much of the \\x1b[3mmarkdown\\x1b[0m, \\x1b[1msyntax\\x1b[0m! \\n                     - Headers                                                                      \\n                     - Basic formatting: **bold**,           \\x1b[1;33m \u2022 \\x1b[0mHeaders                             \\n                     *italic*, `code`                        \\x1b[1;33m \u2022 \\x1b[0mBasic formatting: \\x1b[1mbold\\x1b[0m, \\x1b[3mitalic\\x1b[0m,     \\n                     - Block quotes                          \\x1b[1;33m   \\x1b[0m\\x1b[97;40mcode\\x1b[0m                                \\n                     - Lists, and more...                    \\x1b[1;33m \u2022 \\x1b[0mBlock quotes                        \\n                                                             \\x1b[1;33m \u2022 \\x1b[0mLists, and more...                  \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m           And more\\x1b[0m\\x1b[1;31m \\x1b[0mProgress bars, styled logging handler, tracebacks, etc...                      \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n'\n\\ No newline at end of file\n+expected = '\\x1b[3m                                           Rich features                                            \\x1b[0m\\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m             Colors\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;33m256\\x1b[0m colors or \\x1b[1;32m16.7 million\\x1b[0m colors \\x1b[34m(if supported by your terminal)\\x1b[0m.             \\n                                                                                                    \\n                     \\x1b[48;5;16m  \\x1b[0m\\x1b[48;5;17m  \\x1b[0m\\x1b[48;5;18m  \\x1b[0m\\x1b[48;5;19m  \\x1b[0m\\x1b[48;5;20m  \\x1b[0m\\x1b[48;5;21m  \\x1b[0m\\x1b[48;5;52m  \\x1b[0m\\x1b[48;5;53m  \\x1b[0m\\x1b[48;5;54m  \\x1b[0m\\x1b[48;5;55m  \\x1b[0m\\x1b[48;5;56m  \\x1b[0m\\x1b[48;5;57m  \\x1b[0m\\x1b[48;5;88m  \\x1b[0m\\x1b[48;5;89m  \\x1b[0m\\x1b[48;5;90m  \\x1b[0m\\x1b[48;5;91m  \\x1b[0m\\x1b[48;5;92m  \\x1b[0m\\x1b[48;5;93m  \\x1b[0m\\x1b[48;5;124m  \\x1b[0m\\x1b[48;5;125m  \\x1b[0m\\x1b[48;5;126m  \\x1b[0m\\x1b[48;5;127m  \\x1b[0m\\x1b[48;5;128m  \\x1b[0m\\x1b[48;5;129m  \\x1b[0m\\x1b[48;5;160m  \\x1b[0m\\x1b[48;5;161m  \\x1b[0m\\x1b[48;5;162m  \\x1b[0m\\x1b[48;5;163m  \\x1b[0m\\x1b[48;5;164m  \\x1b[0m\\x1b[48;5;165m  \\x1b[0m\\x1b[48;5;196m  \\x1b[0m\\x1b[48;5;197m  \\x1b[0m\\x1b[48;5;198m  \\x1b[0m\\x1b[48;5;199m  \\x1b[0m\\x1b[48;5;200m  \\x1b[0m\\x1b[48;5;201m  \\x1b[0m       \\n                     \\x1b[48;5;22m  \\x1b[0m\\x1b[48;5;23m  \\x1b[0m\\x1b[48;5;24m  \\x1b[0m\\x1b[48;5;25m  \\x1b[0m\\x1b[48;5;26m  \\x1b[0m\\x1b[48;5;27m  \\x1b[0m\\x1b[48;5;58m  \\x1b[0m\\x1b[48;5;59m  \\x1b[0m\\x1b[48;5;60m  \\x1b[0m\\x1b[48;5;61m  \\x1b[0m\\x1b[48;5;62m  \\x1b[0m\\x1b[48;5;63m  \\x1b[0m\\x1b[48;5;94m  \\x1b[0m\\x1b[48;5;95m  \\x1b[0m\\x1b[48;5;96m  \\x1b[0m\\x1b[48;5;97m  \\x1b[0m\\x1b[48;5;98m  \\x1b[0m\\x1b[48;5;99m  \\x1b[0m\\x1b[48;5;130m  \\x1b[0m\\x1b[48;5;131m  \\x1b[0m\\x1b[48;5;132m  \\x1b[0m\\x1b[48;5;133m  \\x1b[0m\\x1b[48;5;134m  \\x1b[0m\\x1b[48;5;135m  \\x1b[0m\\x1b[48;5;166m  \\x1b[0m\\x1b[48;5;167m  \\x1b[0m\\x1b[48;5;168m  \\x1b[0m\\x1b[48;5;169m  \\x1b[0m\\x1b[48;5;170m  \\x1b[0m\\x1b[48;5;171m  \\x1b[0m\\x1b[48;5;202m  \\x1b[0m\\x1b[48;5;203m  \\x1b[0m\\x1b[48;5;204m  \\x1b[0m\\x1b[48;5;205m  \\x1b[0m\\x1b[48;5;206m  \\x1b[0m\\x1b[48;5;207m  \\x1b[0m       \\n                     \\x1b[48;5;28m  \\x1b[0m\\x1b[48;5;29m  \\x1b[0m\\x1b[48;5;30m  \\x1b[0m\\x1b[48;5;31m  \\x1b[0m\\x1b[48;5;32m  \\x1b[0m\\x1b[48;5;33m  \\x1b[0m\\x1b[48;5;64m  \\x1b[0m\\x1b[48;5;65m  \\x1b[0m\\x1b[48;5;66m  \\x1b[0m\\x1b[48;5;67m  \\x1b[0m\\x1b[48;5;68m  \\x1b[0m\\x1b[48;5;69m  \\x1b[0m\\x1b[48;5;100m  \\x1b[0m\\x1b[48;5;101m  \\x1b[0m\\x1b[48;5;102m  \\x1b[0m\\x1b[48;5;103m  \\x1b[0m\\x1b[48;5;104m  \\x1b[0m\\x1b[48;5;105m  \\x1b[0m\\x1b[48;5;136m  \\x1b[0m\\x1b[48;5;137m  \\x1b[0m\\x1b[48;5;138m  \\x1b[0m\\x1b[48;5;139m  \\x1b[0m\\x1b[48;5;140m  \\x1b[0m\\x1b[48;5;141m  \\x1b[0m\\x1b[48;5;172m  \\x1b[0m\\x1b[48;5;173m  \\x1b[0m\\x1b[48;5;174m  \\x1b[0m\\x1b[48;5;175m  \\x1b[0m\\x1b[48;5;176m  \\x1b[0m\\x1b[48;5;177m  \\x1b[0m\\x1b[48;5;208m  \\x1b[0m\\x1b[48;5;209m  \\x1b[0m\\x1b[48;5;210m  \\x1b[0m\\x1b[48;5;211m  \\x1b[0m\\x1b[48;5;212m  \\x1b[0m\\x1b[48;5;213m  \\x1b[0m       \\n                     \\x1b[48;5;34m  \\x1b[0m\\x1b[48;5;35m  \\x1b[0m\\x1b[48;5;36m  \\x1b[0m\\x1b[48;5;37m  \\x1b[0m\\x1b[48;5;38m  \\x1b[0m\\x1b[48;5;39m  \\x1b[0m\\x1b[48;5;70m  \\x1b[0m\\x1b[48;5;71m  \\x1b[0m\\x1b[48;5;72m  \\x1b[0m\\x1b[48;5;73m  \\x1b[0m\\x1b[48;5;74m  \\x1b[0m\\x1b[48;5;75m  \\x1b[0m\\x1b[48;5;106m  \\x1b[0m\\x1b[48;5;107m  \\x1b[0m\\x1b[48;5;108m  \\x1b[0m\\x1b[48;5;109m  \\x1b[0m\\x1b[48;5;110m  \\x1b[0m\\x1b[48;5;111m  \\x1b[0m\\x1b[48;5;142m  \\x1b[0m\\x1b[48;5;143m  \\x1b[0m\\x1b[48;5;144m  \\x1b[0m\\x1b[48;5;145m  \\x1b[0m\\x1b[48;5;146m  \\x1b[0m\\x1b[48;5;147m  \\x1b[0m\\x1b[48;5;178m  \\x1b[0m\\x1b[48;5;179m  \\x1b[0m\\x1b[48;5;180m  \\x1b[0m\\x1b[48;5;181m  \\x1b[0m\\x1b[48;5;182m  \\x1b[0m\\x1b[48;5;183m  \\x1b[0m\\x1b[48;5;214m  \\x1b[0m\\x1b[48;5;215m  \\x1b[0m\\x1b[48;5;216m  \\x1b[0m\\x1b[48;5;217m  \\x1b[0m\\x1b[48;5;218m  \\x1b[0m\\x1b[48;5;219m  \\x1b[0m       \\n                     \\x1b[48;5;40m  \\x1b[0m\\x1b[48;5;41m  \\x1b[0m\\x1b[48;5;42m  \\x1b[0m\\x1b[48;5;43m  \\x1b[0m\\x1b[48;5;44m  \\x1b[0m\\x1b[48;5;45m  \\x1b[0m\\x1b[48;5;76m  \\x1b[0m\\x1b[48;5;77m  \\x1b[0m\\x1b[48;5;78m  \\x1b[0m\\x1b[48;5;79m  \\x1b[0m\\x1b[48;5;80m  \\x1b[0m\\x1b[48;5;81m  \\x1b[0m\\x1b[48;5;112m  \\x1b[0m\\x1b[48;5;113m  \\x1b[0m\\x1b[48;5;114m  \\x1b[0m\\x1b[48;5;115m  \\x1b[0m\\x1b[48;5;116m  \\x1b[0m\\x1b[48;5;117m  \\x1b[0m\\x1b[48;5;148m  \\x1b[0m\\x1b[48;5;149m  \\x1b[0m\\x1b[48;5;150m  \\x1b[0m\\x1b[48;5;151m  \\x1b[0m\\x1b[48;5;152m  \\x1b[0m\\x1b[48;5;153m  \\x1b[0m\\x1b[48;5;184m  \\x1b[0m\\x1b[48;5;185m  \\x1b[0m\\x1b[48;5;186m  \\x1b[0m\\x1b[48;5;187m  \\x1b[0m\\x1b[48;5;188m  \\x1b[0m\\x1b[48;5;189m  \\x1b[0m\\x1b[48;5;220m  \\x1b[0m\\x1b[48;5;221m  \\x1b[0m\\x1b[48;5;222m  \\x1b[0m\\x1b[48;5;223m  \\x1b[0m\\x1b[48;5;224m  \\x1b[0m\\x1b[48;5;225m  \\x1b[0m       \\n                     \\x1b[48;5;46m  \\x1b[0m\\x1b[48;5;47m  \\x1b[0m\\x1b[48;5;48m  \\x1b[0m\\x1b[48;5;49m  \\x1b[0m\\x1b[48;5;50m  \\x1b[0m\\x1b[48;5;51m  \\x1b[0m\\x1b[48;5;82m  \\x1b[0m\\x1b[48;5;83m  \\x1b[0m\\x1b[48;5;84m  \\x1b[0m\\x1b[48;5;85m  \\x1b[0m\\x1b[48;5;86m  \\x1b[0m\\x1b[48;5;87m  \\x1b[0m\\x1b[48;5;118m  \\x1b[0m\\x1b[48;5;119m  \\x1b[0m\\x1b[48;5;120m  \\x1b[0m\\x1b[48;5;121m  \\x1b[0m\\x1b[48;5;122m  \\x1b[0m\\x1b[48;5;123m  \\x1b[0m\\x1b[48;5;154m  \\x1b[0m\\x1b[48;5;155m  \\x1b[0m\\x1b[48;5;156m  \\x1b[0m\\x1b[48;5;157m  \\x1b[0m\\x1b[48;5;158m  \\x1b[0m\\x1b[48;5;159m  \\x1b[0m\\x1b[48;5;190m  \\x1b[0m\\x1b[48;5;191m  \\x1b[0m\\x1b[48;5;192m  \\x1b[0m\\x1b[48;5;193m  \\x1b[0m\\x1b[48;5;194m  \\x1b[0m\\x1b[48;5;195m  \\x1b[0m\\x1b[48;5;226m  \\x1b[0m\\x1b[48;5;227m  \\x1b[0m\\x1b[48;5;228m  \\x1b[0m\\x1b[48;5;229m  \\x1b[0m\\x1b[48;5;230m  \\x1b[0m\\x1b[48;5;231m  \\x1b[0m       \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m             Styles\\x1b[0m\\x1b[1;31m \\x1b[0mAll ansi styles: \\x1b[1mbold\\x1b[0m, \\x1b[2mdim\\x1b[0m, \\x1b[3mitalic\\x1b[0m, \\x1b[4munderline\\x1b[0m, \\x1b[9mstrikethrough\\x1b[0m, \\x1b[7mreverse\\x1b[0m, and     \\n                     even \\x1b[5mblink\\x1b[0m.                                                                    \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m               Text\\x1b[0m\\x1b[1;31m \\x1b[0mWord wrap text. Justify \\x1b[32mleft\\x1b[0m, \\x1b[33mcenter\\x1b[0m, \\x1b[34mright\\x1b[0m or \\x1b[31mfull\\x1b[0m.                           \\n                                                                                                    \\n                     \\x1b[32mLorem ipsum dolor  \\x1b[0m \\x1b[33mLorem ipsum dolor \\x1b[0m \\x1b[34m  Lorem ipsum dolor\\x1b[0m \\x1b[31mLorem\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mipsum\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mdolor\\x1b[0m \\n                     \\x1b[32msit amet,          \\x1b[0m \\x1b[33m    sit amet,     \\x1b[0m \\x1b[34m          sit amet,\\x1b[0m \\x1b[31msit\\x1b[0m\\x1b[31m           \\x1b[0m\\x1b[31mamet,\\x1b[0m \\n                     \\x1b[32mconsectetur        \\x1b[0m \\x1b[33m   consectetur    \\x1b[0m \\x1b[34m        consectetur\\x1b[0m \\x1b[31mconsectetur\\x1b[0m         \\n                     \\x1b[32madipiscing elit.   \\x1b[0m \\x1b[33m adipiscing elit. \\x1b[0m \\x1b[34m   adipiscing elit.\\x1b[0m \\x1b[31madipiscing\\x1b[0m\\x1b[31m    \\x1b[0m\\x1b[31melit.\\x1b[0m \\n                     \\x1b[32mQuisque in metus   \\x1b[0m \\x1b[33m Quisque in metus \\x1b[0m \\x1b[34m   Quisque in metus\\x1b[0m \\x1b[31mQuisque\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31min\\x1b[0m\\x1b[31m   \\x1b[0m\\x1b[31mmetus\\x1b[0m \\n                     \\x1b[32msed sapien         \\x1b[0m \\x1b[33m    sed sapien    \\x1b[0m \\x1b[34m         sed sapien\\x1b[0m \\x1b[31msed\\x1b[0m\\x1b[31m          \\x1b[0m\\x1b[31msapien\\x1b[0m \\n                     \\x1b[32multricies pretium a\\x1b[0m \\x1b[33multricies pretium \\x1b[0m \\x1b[34multricies pretium a\\x1b[0m \\x1b[31multricies\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mpretium\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31ma\\x1b[0m \\n                     \\x1b[32mat justo. Maecenas \\x1b[0m \\x1b[33m   a at justo.    \\x1b[0m \\x1b[34m at justo. Maecenas\\x1b[0m \\x1b[31mat\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mjusto.\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mMaecenas\\x1b[0m \\n                     \\x1b[32mluctus velit et    \\x1b[0m \\x1b[33m Maecenas luctus  \\x1b[0m \\x1b[34m    luctus velit et\\x1b[0m \\x1b[31mluctus\\x1b[0m\\x1b[31m   \\x1b[0m\\x1b[31mvelit\\x1b[0m\\x1b[31m   \\x1b[0m\\x1b[31met\\x1b[0m \\n                     \\x1b[32mauctor maximus.    \\x1b[0m \\x1b[33m velit et auctor  \\x1b[0m \\x1b[34m    auctor maximus.\\x1b[0m \\x1b[31mauctor\\x1b[0m\\x1b[31m     \\x1b[0m\\x1b[31mmaximus.\\x1b[0m \\n                     \\x1b[32mDonec faucibus vel \\x1b[0m \\x1b[33m  maximus. Donec  \\x1b[0m \\x1b[34m Donec faucibus vel\\x1b[0m \\x1b[31mDonec\\x1b[0m\\x1b[31m \\x1b[0m\\x1b[31mfaucibus\\x1b[0m\\x1b[31m  \\x1b[0m\\x1b[31mvel\\x1b[0m \\n                     \\x1b[32marcu id pretium.   \\x1b[0m \\x1b[33mfaucibus vel arcu \\x1b[0m \\x1b[34m   arcu id pretium.\\x1b[0m \\x1b[31marcu id pretium.\\x1b[0m    \\n                                         \\x1b[33m   id pretium.    \\x1b[0m                                         \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m        CJK support\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[31m\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\\x1b[0m                                               \\n                     \\x1b[31m\u2551\\x1b[0m\u8be5\u5e93\u652f\u6301\u4e2d\u6587\uff0c\u65e5\u6587\u548c\u97e9\u6587\u6587\u672c\uff01\\x1b[31m\u2551\\x1b[0m                                               \\n                     \\x1b[31m\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\\x1b[0m                                               \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m              Emoji\\x1b[0m\\x1b[1;31m \\x1b[0mRender emoji code: :+1: :apple: :ant:   Render emoji code: \ud83d\udc4d \ud83c\udf4e \ud83d\udc1c \ud83d\udc3b \ud83e\udd56 \ud83d\ude8c   \\n                     :bear: :baguette_bread: :bus:                                                  \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m     Console markup\\x1b[0m\\x1b[1;31m \\x1b[0m[bold magenta]Rich[/] supports a        \\x1b[1;35mRich\\x1b[0m supports a simple \\x1b[3mbbcode\\x1b[0m like     \\n                     simple [i]bbcode[/i] like               \\x1b[1mmarkup\\x1b[0m, you can use to insert \\x1b[33mcolor\\x1b[0m    \\n                     [b]markup[/b], you can use to insert    and \\x1b[4mstyle\\x1b[0m.                             \\n                     [yellow]color[/] and                                                           \\n                     [underline]style[/].                                                           \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m             Tables\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[3m                             Star Wars box office                             \\x1b[0m \\n                     \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \\n                     \u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35mDate        \\x1b[0m\\x1b[1;35m \\x1b[0m\u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35mTitle                 \\x1b[0m\\x1b[1;35m \\x1b[0m\u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35mProduction Budget\\x1b[0m\\x1b[1;35m \\x1b[0m\u2503\\x1b[1;35m \\x1b[0m\\x1b[1;35m    Box Office\\x1b[0m\\x1b[1;35m \\x1b[0m\u2503 \\n                     \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \\n                     \u2502\\x1b[2m \\x1b[0m\\x1b[2mDec 20, 2019\\x1b[0m\\x1b[2m \\x1b[0m\u2502 Star Wars: The Rise of \u2502      $275,000,000 \u2502   $375,126,118 \u2502 \\n                     \u2502              \u2502 Skywalker              \u2502                   \u2502                \u2502 \\n                     \u2502\\x1b[2m \\x1b[0m\\x1b[2mMay 25, 2018\\x1b[0m\\x1b[2m \\x1b[0m\u2502 \\x1b[31mSolo\\x1b[0m: A Star Wars      \u2502      $275,000,000 \u2502   $393,151,347 \u2502 \\n                     \u2502              \u2502 Story                  \u2502                   \u2502                \u2502 \\n                     \u2502\\x1b[2m \\x1b[0m\\x1b[2mDec 15, 2017\\x1b[0m\\x1b[2m \\x1b[0m\u2502 Star Wars Ep. VIII:    \u2502      $262,000,000 \u2502 \\x1b[1m$1,332,539,889\\x1b[0m \u2502 \\n                     \u2502              \u2502 The Last Jedi          \u2502                   \u2502                \u2502 \\n                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31mSyntax highlighting\\x1b[0m\\x1b[1;31m \\x1b[0m\\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 1 \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mdef\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34miter_last\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m-\\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m>\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mIterable\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mTuple\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m[\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mbool\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mT\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m]\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m          \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 2 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;230;219;116;48;2;39;40;34m\"\"\"Iterate and generate a tuple with a flag for last value.\"\"\"\\x1b[0m\\x1b[48;2;39;40;34m       \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 3 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalues\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 4 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mtry\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                                 \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 5 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mnext\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m(\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m)\\x1b[0m\\x1b[48;2;39;40;34m                               \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 6 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mexcept\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;166;226;46;48;2;39;40;34mStopIteration\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                                \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 7 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mreturn\\x1b[0m\\x1b[48;2;39;40;34m                                                           \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 8 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mfor\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34min\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34miter_values\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m:\\x1b[0m\\x1b[48;2;39;40;34m                                            \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m 9 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mFalse\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                                      \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m10 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m        \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;249;38;114;48;2;39;40;34m=\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mvalue\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m \\n                     \\x1b[1;38;2;227;227;221;48;2;39;40;34m  \\x1b[0m\\x1b[38;2;101;102;96;48;2;39;40;34m11 \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m    \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34myield\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;102;217;239;48;2;39;40;34mTrue\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m,\\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34m \\x1b[0m\\x1b[38;2;248;248;242;48;2;39;40;34mprevious_value\\x1b[0m\\x1b[48;2;39;40;34m                                           \\x1b[0m \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m           Markdown\\x1b[0m\\x1b[1;31m \\x1b[0m# Markdown                              \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \\n                                                             \u2551              \\x1b[1mMarkdown\\x1b[0m              \u2551 \\n                     Supports much of the *markdown*,        \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \\n                     __syntax__!                                                                    \\n                                                             Supports much of the \\x1b[3mmarkdown\\x1b[0m, \\x1b[1msyntax\\x1b[0m! \\n                     - Headers                                                                      \\n                     - Basic formatting: **bold**,           \\x1b[1;33m \u2022 \\x1b[0mHeaders                             \\n                     *italic*, `code`                        \\x1b[1;33m \u2022 \\x1b[0mBasic formatting: \\x1b[1mbold\\x1b[0m, \\x1b[3mitalic\\x1b[0m,     \\n                     - Block quotes                          \\x1b[1;33m   \\x1b[0m\\x1b[97;40mcode\\x1b[0m                                \\n                     - Lists, and more...                    \\x1b[1;33m \u2022 \\x1b[0mBlock quotes                        \\n                                                             \\x1b[1;33m \u2022 \\x1b[0mLists, and more...                  \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n\\x1b[1;31m \\x1b[0m\\x1b[1;31m           And more\\x1b[0m\\x1b[1;31m \\x1b[0mProgress bars, styled logging handler, tracebacks, etc...                      \\n\\x1b[1;31m                     \\x1b[0m                                                                               \\n'\ndiff --git a/tests/test_rule.py b/tests/test_rule.py\nindex 22c53ab37..1d6300e76 100644\n--- a/tests/test_rule.py\n+++ b/tests/test_rule.py\n@@ -11,13 +11,16 @@ def test_rule():\n     console = Console(\n         width=16, file=io.StringIO(), force_terminal=True, legacy_windows=False\n     )\n-    console.rule()\n-    console.rule(\"foo\")\n+    console.print(Rule())\n+    console.print(Rule(\"foo\"))\n     console.rule(Text(\"foo\", style=\"bold\"))\n     console.rule(\"foobarbazeggfoobarbazegg\")\n-    expected = \"\\x1b[92m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\n\\x1b[92m\u2500\u2500\u2500\u2500\u2500 \\x1b[0mfoo\\x1b[92m \u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\n\\x1b[92m\u2500\u2500\u2500\u2500\u2500 \\x1b[0m\\x1b[1mfoo\\x1b[0m\\x1b[92m \u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\n\\x1b[92m\u2500 \\x1b[0mfoobarbazeg\u2026\\x1b[92m \u2500\\x1b[0m\\n\"\n+    expected = \"\\x1b[92m\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\n\"\n+    expected += \"\\x1b[92m\u2500\u2500\u2500\u2500\u2500 \\x1b[0mfoo\\x1b[92m \u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\n\"\n+    expected += \"\\x1b[92m\u2500\u2500\u2500\u2500\u2500 \\x1b[0m\\x1b[1mfoo\\x1b[0m\\x1b[92m \u2500\u2500\u2500\u2500\u2500\u2500\\x1b[0m\\n\"\n+    expected += \"\\x1b[92m\u2500 \\x1b[0mfoobarbazeg\u2026\\x1b[92m \u2500\\x1b[0m\\n\"\n+\n     result = console.file.getvalue()\n-    print(repr(result))\n     assert result == expected\n \n \n@@ -34,6 +37,23 @@ def test_rule_cjk():\n     assert console.file.getvalue() == expected\n \n \n+def test_characters():\n+    console = Console(\n+        width=16,\n+        file=io.StringIO(),\n+        force_terminal=True,\n+        color_system=None,\n+        legacy_windows=False,\n+    )\n+    console.rule(characters=\"+*\")\n+    console.rule(\"foo\", characters=\"+*\")\n+    console.print(Rule(characters=\".,\"))\n+    expected = \"+*+*+*+*+*+*+*+*\\n\"\n+    expected += \"+*+*+ foo +*+*+*\\n\"\n+    expected += \".,.,.,.,.,.,.,.,\\n\"\n+    assert console.file.getvalue() == expected\n+\n+\n def test_repr():\n     rule = Rule(\"foo\")\n     assert isinstance(repr(rule), str)\n@@ -41,4 +61,4 @@ def test_repr():\n \n def test_error():\n     with pytest.raises(ValueError):\n-        Rule(character=\"bar\")\n+        Rule(characters=\"\")\n", "problem_statement": "[REQUEST] support multiple chars for rule printing\nHave you checked the issues for a similar suggestions? Yes\r\n\r\n**How would you improve Rich?**\r\n\r\nCurrently for rule.py it only allows the character to have 1 cell length, it would better if it could allow more, like\r\n\r\n```python\r\n>>> console.print(Rule(\"hello\", character=\"-+\"))\r\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ hello -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n```\r\n\r\n\r\n**What problem does it solved for you?**\r\n\r\nI was just thinking it would improve it and it looks like an ASCII rule, which is cool (like [this](https://github.com/LuRsT/hr#how-to-use-it) program)\r\n\r\n---\r\n\r\nIf this is accepted, I would like to work on it, because I have already tried it out \u201dlocally\u201d (https://repl.it/@hedythedev/rich#rich/rule.py) and it works well\r\n\r\n```python\r\nconsole.print(Rule(text, character=\"-/-\"))\r\n```\r\n\r\n![BDB784D3-8BA2-4978-9791-6860EEFE0384](https://user-images.githubusercontent.com/50042066/89253524-7613f000-d64f-11ea-8abf-19070df40fab.jpeg)\r\n\r\n\n", "hints_text": "I will also remember add tests for this (if accepted) of course\nHi @hedythedev \r\n\r\nWorks for me. Since we allow multiple characters now, it should probably take in to account multi-cell characters like emoji. See the functions in [cells.py](https://github.com/willmcgugan/rich/blob/master/rich/cells.py) for help with that.\r\n\r\nThe name of the parameter is probably wrong now. `character` implies a single character. Suggest adding additional `characters` parameter which allows for multiple characters. \r\n\r\nBTW there is a [rule](https://rich.readthedocs.io/en/latest/reference/console.html#rich.console.Console.rule) method on the Console class that will also need updating...\r\n\r\nThanks!\nGot it!\r\nBtw when you say works for me, do you mean the code in repl.it?\r\n\r\nAlso would `chars` work better? Because `characters` is a bit long\n> Btw when you say works for me, do you mean the code in repl.it?\r\n\r\nJust meant its a good idea in general.\r\n\r\n> Also would chars work better? Because characters is a bit long\r\n\r\nIt is, but I dislike abbreviations. I'd rather type it in full than recall how it was abbreviated...\nSo if the characters provided have a long length, this might end up happening (`|` represents terminal width)\r\n```python\r\n>>> console.print(Rule(\"hello\", character=\"12345\"))\r\n|12345 hello 12345    |\r\n#                 ^^^^\r\n```\r\nBecause `12345` is longer than the width left after the right side of `12345`, there will be a number blank spaces smaller than the cell width of `characters` param, in this case it is `len(\u201c12345\u201d) == 5`. Which is caused by treating `characters` (12345) as a whole.\r\n\r\nSo in this case, which solution would we want? \r\n1. using `truncate()` to make it\r\n`|1234512 hello 1234512 |`  (there will be an ending space if length of `characters` is odd)\r\n\r\n2. Or just leave it as is\r\n```\r\n|12345 hello 12345    |\r\n```\r\n\r\nIn my opinion we should use truncate\nThe Rule should extend to the full width available, which may mean you need an extra character on the right hand side. To use your example:\r\n\r\n```\r\n|1234512 hello 12345123|\r\n```", "created_at": "2020-08-05T00:04:56Z"}
{"repo": "Textualize/rich", "pull_number": 198, "instance_id": "Textualize__rich-198", "issue_numbers": ["197"], "base_commit": "2b0ad53e1c5600d2f9f892b7135127de988ed184", "patch": "diff --git a/docs/source/panel.rst b/docs/source/panel.rst\nindex b98af37b7..bbb938d72 100644\n--- a/docs/source/panel.rst\n+++ b/docs/source/panel.rst\n@@ -9,7 +9,7 @@ To draw a border around any content, construct a :class:`~rich.panel.Panel` with\n \n You can change the style of the panel by setting the ``box`` argument to the Panel constructor. See :ref:`appendix_box` for a list of available box styles.\n \n-Panels will extend to the full width of the terminal. You can make panel *fit* the content why setting ``fit=True`` on the constructor, or by creating the Panel with :meth:`~rich.panel.Panel.fit`. For example::\n+Panels will extend to the full width of the terminal. You can make panel *fit* the content by setting ``expand=False`` on the constructor, or by creating the Panel with :meth:`~rich.panel.Panel.fit`. For example::\n \n     from rich import print\n     from rich.panel import Panel\n@@ -21,4 +21,4 @@ The Panel constructor accepts a ``title`` argument which will draw a title withi\n     from rich.panel import Panel\n     print(Panel(\"Hello, [red]World!\", title=\"Welcome\"))\n \n-See :class:`~rich.panel.Panel` for details how to customize Panels.\n\\ No newline at end of file\n+See :class:`~rich.panel.Panel` for details how to customize Panels.\n", "test_patch": "", "problem_statement": "Documentation mistake in Panel\nTypo and wrong argument in: \r\n\r\n> You can make panel fit the content why setting `fit=True` on the constructor\r\n\r\nIt should be: \r\n\r\n> You can make panel fit the content by setting `expand=False` on the constructor\r\n\n", "hints_text": "Any chance of a PR?", "created_at": "2020-08-01T12:01:18Z"}
