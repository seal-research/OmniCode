[
    {
        "repo": "camel-ai/camel",
        "pull_number": 1627,
        "instance_id": "camel-ai__camel-1627",
        "issue_numbers": [
            "1626"
        ],
        "base_commit": "639d4b02836851943256c830a76e6a4857530119",
        "patch": "diff --git a/camel/datagen/self_instruct/filter/instruction_filter.py b/camel/datagen/self_instruct/filter/instruction_filter.py\nindex 155cc1aa88..1df0a2bd5f 100644\n--- a/camel/datagen/self_instruct/filter/instruction_filter.py\n+++ b/camel/datagen/self_instruct/filter/instruction_filter.py\n@@ -11,14 +11,22 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n-from typing import Any, Dict, List\n+from typing import Any, Dict, List, Tuple, Union\n+\n+from camel.logger import get_logger\n \n from .filter_function import FilterFunction, RewardModelFilter\n from .filter_registry import FILTER_REGISTRY\n \n+logger = get_logger(__name__)\n+\n \n class InstructionFilter:\n-    def __init__(self, filters_config: Dict[str, Dict[str, Any]]):\n+    def __init__(\n+        self,\n+        filters_config: Dict[str, Dict[str, Any]],\n+        stop_on_first_failure: bool = False,\n+    ):\n         r\"\"\"Initialize the InstructionFilter with a dictionary of filter\n             configurations.\n \n@@ -37,12 +45,15 @@ def __init__(self, filters_config: Dict[str, Dict[str, Any]]):\n                 Each key in filters_config corresponds to a filter name\n                     (registered in FILTER_REGISTRY).\n                 Each value is a dict of parameters for that filter.\n+            stop_on_first_failure (bool): If True, stops checking filters after\n+                the first failure.\n         \"\"\"\n         self.filters: List[FilterFunction] = []\n         for filter_name, params in filters_config.items():\n             if filter_name not in FILTER_REGISTRY:\n                 raise ValueError(f\"Unknown filter function: {filter_name}\")\n             self.filters.append(FILTER_REGISTRY[filter_name](params))\n+        self.stop_on_first_failure: bool = stop_on_first_failure\n \n     def add_filter(self, filter_function: FilterFunction):\n         r\"\"\"Add a custom filter function to the InstructionFilter.\n@@ -55,7 +66,7 @@ def add_filter(self, filter_function: FilterFunction):\n \n     def filter(\n         self, prompt: str, instruction: str, return_details: bool = False\n-    ):\n+    ) -> Union[bool, Tuple[bool, List[str]]]:\n         r\"\"\"Check if the given instruction passes all filter functions.\n \n         Args:\n@@ -75,6 +86,11 @@ def filter(\n                 f.prompt = prompt\n             if not f.apply(instruction):\n                 failed_filters.append(type(f).__name__)\n+                logger.warning(\n+                    f\"{type(f).__name__} failed instruction: {instruction}\"\n+                )\n+                if self.stop_on_first_failure:\n+                    break\n \n         if return_details:\n             return len(failed_filters) == 0, failed_filters\ndiff --git a/camel/datagen/self_instruct/self_instruct.py b/camel/datagen/self_instruct/self_instruct.py\nindex 80a964dc17..cd78a4f327 100644\n--- a/camel/datagen/self_instruct/self_instruct.py\n+++ b/camel/datagen/self_instruct/self_instruct.py\n@@ -45,6 +45,8 @@ class SelfInstructPipeline:\n         filter_config (Optional[Dict[str, Dict[str, Any]]]): configuration\n             for the filter functions registered in FILE_REGISTRY.\n             (default::obj:`None`)\n+        stop_on_first_failure (bool): If True, stops checking filters after\n+            the first failure.\n     \"\"\"\n \n     def __init__(\n@@ -56,6 +58,7 @@ def __init__(\n         human_to_machine_ratio: tuple = (6, 2),\n         instruction_filter: Optional[InstructionFilter] = None,\n         filter_config: Optional[Dict[str, Dict[str, Any]]] = None,\n+        stop_on_first_failure: bool = False,\n     ):\n         self.agent = agent\n         self.num_machine_instructions = num_machine_instructions\n@@ -80,7 +83,9 @@ def __init__(\n             config_to_use = (\n                 filter_config if filter_config is not None else default_config\n             )\n-            self.instruction_filter = InstructionFilter(config_to_use)\n+            self.instruction_filter = InstructionFilter(\n+                config_to_use, stop_on_first_failure\n+            )\n \n     def load_seed(self, path: str):\n         r\"\"\"Load seed tasks from a file. Defaults to a predefined seed file if\n",
        "test_patch": "diff --git a/test/datagen/self_instruct/filter/instruction_filter_tests.py b/test/datagen/self_instruct/filter/instruction_filter_tests.py\nindex bfb54c707f..363479bad4 100644\n--- a/test/datagen/self_instruct/filter/instruction_filter_tests.py\n+++ b/test/datagen/self_instruct/filter/instruction_filter_tests.py\n@@ -51,22 +51,55 @@ def setUp(self):\n     def test_all_pass_filters(self):\n         filters_config = {\"pass_filter\": {}}\n         instruction_filter = InstructionFilter(filters_config)\n-        self.assertTrue(instruction_filter.filter(\"Any instruction\"))\n+        self.assertTrue(\n+            instruction_filter.filter(prompt=\"\", instruction=\"Any instruction\")\n+        )\n         result, failed_filters = instruction_filter.filter(\n-            \"Any instruction\", return_details=True\n+            prompt=\"\", instruction=\"Any instruction\", return_details=True\n         )\n         self.assertTrue(result)\n         self.assertEqual(len(failed_filters), 0)\n \n-    @patch.dict(FILTER_REGISTRY, {\"fail_filter\": lambda _: DummyFailFilter()})\n+    @patch.dict(\n+        FILTER_REGISTRY,\n+        {\n+            \"first_fail_filter\": lambda _: DummyFailFilter(),\n+            \"second_fail_filter\": lambda _: DummyFailFilter(),\n+        },\n+    )\n     def test_all_fail_filters(self):\n-        filters_config = {\"fail_filter\": {}}\n+        filters_config = {\"first_fail_filter\": {}, \"second_fail_filter\": {}}\n         instruction_filter = InstructionFilter(filters_config)\n-        self.assertFalse(instruction_filter.filter(\"Any instruction\"))\n+        self.assertFalse(\n+            instruction_filter.filter(prompt=\"\", instruction=\"Any instruction\")\n+        )\n         result, failed_filters = instruction_filter.filter(\n-            \"Any instruction\", return_details=True\n+            prompt=\"\", instruction=\"Any instruction\", return_details=True\n         )\n         self.assertFalse(result)\n+        self.assertEqual(len(failed_filters), 2)\n+        self.assertIn(\"DummyFailFilter\", failed_filters)\n+\n+    @patch.dict(\n+        FILTER_REGISTRY,\n+        {\n+            \"first_fail_filter\": lambda _: DummyFailFilter(),\n+            \"second_fail_filter\": lambda _: DummyFailFilter(),\n+        },\n+    )\n+    def test_all_fail_filters_early_stop(self):\n+        filters_config = {\"first_fail_filter\": {}, \"second_fail_filter\": {}}\n+        instruction_filter = InstructionFilter(\n+            filters_config, stop_on_first_failure=True\n+        )\n+        self.assertFalse(\n+            instruction_filter.filter(prompt=\"\", instruction=\"Any instruction\")\n+        )\n+        result, failed_filters = instruction_filter.filter(\n+            prompt=\"\", instruction=\"Any instruction\", return_details=True\n+        )\n+        self.assertFalse(result)\n+        self.assertEqual(len(failed_filters), 1)\n         self.assertIn(\"DummyFailFilter\", failed_filters)\n \n     @patch.dict(\n@@ -85,27 +118,36 @@ def test_all_fail_filters(self):\n     def test_mixed_filters(self):\n         instruction_filter = InstructionFilter(self.config_mixed)\n \n-        self.assertTrue(instruction_filter.filter(\"This is valid\"))\n+        self.assertTrue(\n+            instruction_filter.filter(prompt=\"\", instruction=\"This is valid\")\n+        )\n         result, failed_filters = instruction_filter.filter(\n-            \"This is valid\", return_details=True\n+            prompt=\"\", instruction=\"This is valid\", return_details=True\n         )\n         self.assertTrue(result)\n         self.assertEqual(len(failed_filters), 0)\n \n         self.assertFalse(\n             instruction_filter.filter(\n-                \"This instruction is definitely too long\"\n+                prompt=\"\",\n+                instruction=\"This instruction is definitely too long\",\n             )\n         )\n         result, failed_filters = instruction_filter.filter(\n-            \"This instruction is definitely too long\", return_details=True\n+            prompt=\"\",\n+            instruction=\"This instruction is definitely too long\",\n+            return_details=True,\n         )\n         self.assertFalse(result)\n         self.assertIn(\"MagicMock\", failed_filters)\n \n-        self.assertFalse(instruction_filter.filter(\"This is forbidden\"))\n+        self.assertFalse(\n+            instruction_filter.filter(\n+                prompt=\"\", instruction=\"This is forbidden\"\n+            )\n+        )\n         result, failed_filters = instruction_filter.filter(\n-            \"This is forbidden\", return_details=True\n+            prompt=\"\", instruction=\"This is forbidden\", return_details=True\n         )\n         self.assertFalse(result)\n         self.assertIn(\"MagicMock\", failed_filters)\n@@ -119,12 +161,20 @@ def test_unknown_filter_raises(self):\n     def test_add_custom_filter(self):\n         filters_config = {\"pass_filter\": {}}\n         instruction_filter = InstructionFilter(filters_config)\n-        self.assertTrue(instruction_filter.filter(\"Some instruction\"))\n+        self.assertTrue(\n+            instruction_filter.filter(\n+                prompt=\"\", instruction=\"Some instruction\"\n+            )\n+        )\n \n         instruction_filter.add_filter(DummyFailFilter())\n-        self.assertFalse(instruction_filter.filter(\"Some instruction\"))\n+        self.assertFalse(\n+            instruction_filter.filter(\n+                prompt=\"\", instruction=\"Some instruction\"\n+            )\n+        )\n         result, failed_filters = instruction_filter.filter(\n-            \"Some instruction\", return_details=True\n+            prompt=\"\", instruction=\"Some instruction\", return_details=True\n         )\n         self.assertFalse(result)\n         self.assertIn(\"DummyFailFilter\", failed_filters)\n",
        "problem_statement": "[Feature Request] Enhance InstructionFilter.filter() Method with Type Hints and Early Returns\n### Required prerequisites\n\n- [x] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nThe `filter()` method in `InstructionFilter` class currently:\n- Has unclear return type hints\n- Processes all filters even when early return is possible\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2025-02-19T14:12:12Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "test/datagen/self_instruct/filter/instruction_filter_tests.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1526,
        "instance_id": "camel-ai__camel-1526",
        "issue_numbers": [
            "1524"
        ],
        "base_commit": "03c3f22d9f728b131112e4487c0000f9f4552c49",
        "patch": "diff --git a/.env b/.env\nindex 0600f02192..31878e4263 100644\n--- a/.env\n+++ b/.env\n@@ -53,6 +53,9 @@\n # InternLM API (https://internlm.intern-ai.org.cn/api/tokens)\n # INTERNLM_API_KEY=\"Fill your API key here\"\n \n+# Moonshot API (https://platform.moonshot.cn/)\n+# MOONSHOT_API_KEY=\"Fill your API key here\"\n+\n # JINA API (https://jina.ai/)\n # JINA_API_KEY=\"Fill your API key here\"\n \ndiff --git a/.github/workflows/build_package.yml b/.github/workflows/build_package.yml\nindex 4c61f07ec5..d5fd5474c0 100644\n--- a/.github/workflows/build_package.yml\n+++ b/.github/workflows/build_package.yml\n@@ -80,6 +80,7 @@ jobs:\n           DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n           INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n           JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n+          MOONSHOT_API_KEY: \"${{ secrets.MOONSHOT_API_KEY }}\"\n         run: |\n           source venv/bin/activate\n           pytest --fast-test-mode ./test\ndiff --git a/camel/configs/__init__.py b/camel/configs/__init__.py\nindex 2e6b30b3f1..3a3250858f 100644\n--- a/camel/configs/__init__.py\n+++ b/camel/configs/__init__.py\n@@ -20,6 +20,7 @@\n from .internlm_config import INTERNLM_API_PARAMS, InternLMConfig\n from .litellm_config import LITELLM_API_PARAMS, LiteLLMConfig\n from .mistral_config import MISTRAL_API_PARAMS, MistralConfig\n+from .moonshot_config import MOONSHOT_API_PARAMS, MoonshotConfig\n from .nvidia_config import NVIDIA_API_PARAMS, NvidiaConfig\n from .ollama_config import OLLAMA_API_PARAMS, OllamaConfig\n from .openai_config import OPENAI_API_PARAMS, ChatGPTConfig\n@@ -79,4 +80,6 @@\n     'DEEPSEEK_API_PARAMS',\n     'InternLMConfig',\n     'INTERNLM_API_PARAMS',\n+    'MoonshotConfig',\n+    \"MOONSHOT_API_PARAMS\",\n ]\ndiff --git a/camel/configs/moonshot_config.py b/camel/configs/moonshot_config.py\nnew file mode 100644\nindex 0000000000..681ff1b635\n--- /dev/null\n+++ b/camel/configs/moonshot_config.py\n@@ -0,0 +1,63 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+from typing import List, Optional, Union\n+\n+from camel.configs.base_config import BaseConfig\n+\n+\n+class MoonshotConfig(BaseConfig):\n+    r\"\"\"Defines the parameters for generating chat completions using the\n+    Moonshot API. You can refer to the following link for more details:\n+    https://platform.moonshot.cn/docs/api-reference\n+\n+    Args:\n+        temperature (float, optional): Controls randomness in the response.\n+            Lower values make the output more focused and deterministic.\n+            (default: :obj:`0.3`)\n+        max_tokens (int, optional): The maximum number of tokens to generate.\n+            (default: :obj:`None`)\n+        stream (bool, optional): Whether to stream the response.\n+            (default: :obj:`False`)\n+        tools (list, optional): List of tools that the model can use for\n+            function calling. Each tool should be a dictionary containing\n+            type, function name, description, and parameters.\n+            (default: :obj:`None`)\n+        top_p (float, optional): Controls diversity via nucleus sampling.\n+            (default: :obj:`1.0`)\n+        n (int, optional): How many chat completion choices to generate for\n+            each input message. (default: :obj:`1`)\n+        presence_penalty (float, optional): Penalty for new tokens based on\n+            whether they appear in the text so far.\n+            (default: :obj:`0.0`)\n+        frequency_penalty (float, optional): Penalty for new tokens based on\n+            their frequency in the text so far.\n+            (default: :obj:`0.0`)\n+        stop (Optional[Union[str, List[str]]], optional): Up to 4 sequences\n+            where the API will stop generating further tokens.\n+            (default: :obj:`None`)\n+    \"\"\"\n+\n+    temperature: float = 0.3\n+    max_tokens: Optional[int] = None\n+    stream: bool = False\n+    tools: Optional[list] = None\n+    top_p: float = 1.0\n+    n: int = 1\n+    presence_penalty: float = 0.0\n+    frequency_penalty: float = 0.0\n+    stop: Optional[Union[str, List[str]]] = None\n+\n+\n+MOONSHOT_API_PARAMS = {param for param in MoonshotConfig.model_fields.keys()}\ndiff --git a/camel/models/__init__.py b/camel/models/__init__.py\nindex 6a4adc4c4c..138f5dadd9 100644\n--- a/camel/models/__init__.py\n+++ b/camel/models/__init__.py\n@@ -24,6 +24,7 @@\n from .mistral_model import MistralModel\n from .model_factory import ModelFactory\n from .model_manager import ModelManager, ModelProcessingError\n+from .moonshot_model import MoonshotModel\n from .nemotron_model import NemotronModel\n from .nvidia_model import NvidiaModel\n from .ollama_model import OllamaModel\n@@ -70,4 +71,5 @@\n     'DeepSeekModel',\n     'FishAudioModel',\n     'InternLMModel',\n+    'MoonshotModel',\n ]\ndiff --git a/camel/models/model_factory.py b/camel/models/model_factory.py\nindex c401ffd0aa..8ffc83e01c 100644\n--- a/camel/models/model_factory.py\n+++ b/camel/models/model_factory.py\n@@ -23,6 +23,7 @@\n from camel.models.internlm_model import InternLMModel\n from camel.models.litellm_model import LiteLLMModel\n from camel.models.mistral_model import MistralModel\n+from camel.models.moonshot_model import MoonshotModel\n from camel.models.nvidia_model import NvidiaModel\n from camel.models.ollama_model import OllamaModel\n from camel.models.openai_compatible_model import OpenAICompatibleModel\n@@ -127,6 +128,8 @@ def create(\n             model_class = DeepSeekModel\n         elif model_platform.is_internlm and model_type.is_internlm:\n             model_class = InternLMModel\n+        elif model_platform.is_moonshot and model_type.is_moonshot:\n+            model_class = MoonshotModel\n         elif model_type == ModelType.STUB:\n             model_class = StubModel\n \ndiff --git a/camel/models/moonshot_model.py b/camel/models/moonshot_model.py\nnew file mode 100644\nindex 0000000000..d23f365be9\n--- /dev/null\n+++ b/camel/models/moonshot_model.py\n@@ -0,0 +1,138 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import os\n+from typing import Any, Dict, List, Optional, Union\n+\n+from openai import OpenAI, Stream\n+\n+from camel.configs import MOONSHOT_API_PARAMS, MoonshotConfig\n+from camel.messages import OpenAIMessage\n+from camel.models import BaseModelBackend\n+from camel.types import (\n+    ChatCompletion,\n+    ChatCompletionChunk,\n+    ModelType,\n+)\n+from camel.utils import (\n+    BaseTokenCounter,\n+    OpenAITokenCounter,\n+    api_keys_required,\n+)\n+\n+\n+class MoonshotModel(BaseModelBackend):\n+    r\"\"\"Moonshot API in a unified BaseModelBackend interface.\n+\n+    Args:\n+        model_type (Union[ModelType, str]): Model for which a backend is\n+            created, one of Moonshot series.\n+        model_config_dict (Optional[Dict[str, Any]], optional): A dictionary\n+            that will be fed into :obj:`openai.ChatCompletion.create()`. If\n+            :obj:`None`, :obj:`MoonshotConfig().as_dict()` will be used.\n+            (default: :obj:`None`)\n+        api_key (Optional[str], optional): The API key for authenticating with\n+            the Moonshot service. (default: :obj:`None`)\n+        url (Optional[str], optional): The url to the Moonshot service.\n+            (default: :obj:`https://api.moonshot.cn/v1`)\n+        token_counter (Optional[BaseTokenCounter], optional): Token counter to\n+            use for the model. If not provided, :obj:`OpenAITokenCounter(\n+            ModelType.GPT_4)` will be used.\n+            (default: :obj:`None`)\n+    \"\"\"\n+\n+    @api_keys_required([(\"api_key\", \"MOONSHOT_API_KEY\")])\n+    def __init__(\n+        self,\n+        model_type: Union[ModelType, str],\n+        model_config_dict: Optional[Dict[str, Any]] = None,\n+        api_key: Optional[str] = None,\n+        url: Optional[str] = None,\n+        token_counter: Optional[BaseTokenCounter] = None,\n+    ) -> None:\n+        if model_config_dict is None:\n+            model_config_dict = MoonshotConfig().as_dict()\n+        api_key = api_key or os.environ.get(\"MOONSHOT_API_KEY\")\n+        url = url or os.environ.get(\n+            \"MOONSHOT_API_BASE_URL\",\n+            \"https://api.moonshot.cn/v1\",\n+        )\n+        super().__init__(\n+            model_type, model_config_dict, api_key, url, token_counter\n+        )\n+        self._client = OpenAI(\n+            api_key=self._api_key,\n+            timeout=180,\n+            max_retries=3,\n+            base_url=self._url,\n+        )\n+\n+    def run(\n+        self,\n+        messages: List[OpenAIMessage],\n+    ) -> Union[ChatCompletion, Stream[ChatCompletionChunk]]:\n+        r\"\"\"Runs inference of Moonshot chat completion.\n+\n+        Args:\n+            messages (List[OpenAIMessage]): Message list with the chat history\n+                in OpenAI API format.\n+\n+        Returns:\n+            Union[ChatCompletion, Stream[ChatCompletionChunk]]:\n+                `ChatCompletion` in the non-stream mode, or\n+                `Stream[ChatCompletionChunk]` in the stream mode.\n+        \"\"\"\n+        response = self._client.chat.completions.create(\n+            messages=messages,\n+            model=self.model_type,\n+            **self.model_config_dict,\n+        )\n+        return response\n+\n+    @property\n+    def token_counter(self) -> BaseTokenCounter:\n+        r\"\"\"Initialize the token counter for the model backend.\n+\n+        Returns:\n+            OpenAITokenCounter: The token counter following the model's\n+                tokenization style.\n+        \"\"\"\n+        if not self._token_counter:\n+            self._token_counter = OpenAITokenCounter(ModelType.GPT_4O_MINI)\n+        return self._token_counter\n+\n+    def check_model_config(self):\n+        r\"\"\"Check whether the model configuration contains any\n+        unexpected arguments to Moonshot API.\n+\n+        Raises:\n+            ValueError: If the model configuration dictionary contains any\n+                unexpected arguments to Moonshot API.\n+        \"\"\"\n+        for param in self.model_config_dict:\n+            if param not in MOONSHOT_API_PARAMS:\n+                raise ValueError(\n+                    f\"Unexpected argument `{param}` is \"\n+                    \"input into Moonshot model backend.\"\n+                )\n+\n+    @property\n+    def stream(self) -> bool:\n+        r\"\"\"Returns whether the model is in stream mode, which sends partial\n+        results each time.\n+\n+        Returns:\n+            bool: Whether the model is in stream mode.\n+        \"\"\"\n+        return self.model_config_dict.get('stream', False)\ndiff --git a/camel/types/enums.py b/camel/types/enums.py\nindex 5fbc1acb55..b694ad2fd2 100644\n--- a/camel/types/enums.py\n+++ b/camel/types/enums.py\n@@ -170,6 +170,11 @@ class ModelType(UnifiedModelType, Enum):\n     INTERNLM2_5_LATEST = \"internlm2.5-latest\"\n     INTERNLM2_PRO_CHAT = \"internlm2-pro-chat\"\n \n+    # Moonshot models\n+    MOONSHOT_V1_8K = \"moonshot-v1-8k\"\n+    MOONSHOT_V1_32K = \"moonshot-v1-32k\"\n+    MOONSHOT_V1_128K = \"moonshot-v1-128k\"\n+\n     def __str__(self):\n         return self.value\n \n@@ -201,6 +206,7 @@ def support_native_tool_calling(self) -> bool:\n                 self.is_sambanova,\n                 self.is_groq,\n                 self.is_sglang,\n+                self.is_moonshot,\n             ]\n         )\n \n@@ -422,6 +428,14 @@ def is_internlm(self) -> bool:\n             ModelType.INTERNLM2_PRO_CHAT,\n         }\n \n+    @property\n+    def is_moonshot(self) -> bool:\n+        return self in {\n+            ModelType.MOONSHOT_V1_8K,\n+            ModelType.MOONSHOT_V1_32K,\n+            ModelType.MOONSHOT_V1_128K,\n+        }\n+\n     @property\n     def is_sglang(self) -> bool:\n         return self in {\n@@ -469,6 +483,7 @@ def token_limit(self) -> int:\n             ModelType.QWEN_VL_PLUS,\n             ModelType.NVIDIA_LLAMA3_70B,\n             ModelType.TOGETHER_MISTRAL_7B,\n+            ModelType.MOONSHOT_V1_8K,\n         }:\n             return 8_192\n         elif self in {\n@@ -502,6 +517,7 @@ def token_limit(self) -> int:\n             ModelType.INTERNLM2_PRO_CHAT,\n             ModelType.TOGETHER_MIXTRAL_8_7B,\n             ModelType.SGLANG_MISTRAL_7B,\n+            ModelType.MOONSHOT_V1_32K,\n         }:\n             return 32_768\n         elif self in {\n@@ -546,6 +562,7 @@ def token_limit(self) -> int:\n             ModelType.SGLANG_LLAMA_3_1_405B,\n             ModelType.SGLANG_LLAMA_3_2_1B,\n             ModelType.SGLANG_MIXTRAL_NEMO,\n+            ModelType.MOONSHOT_V1_128K,\n         }:\n             return 128_000\n         elif self in {\n@@ -767,6 +784,7 @@ class ModelPlatformType(Enum):\n     DEEPSEEK = \"deepseek\"\n     SGLANG = \"sglang\"\n     INTERNLM = \"internlm\"\n+    MOONSHOT = \"moonshot\"\n \n     @property\n     def is_openai(self) -> bool:\n@@ -874,6 +892,11 @@ def is_internlm(self) -> bool:\n         r\"\"\"Returns whether this platform is InternLM.\"\"\"\n         return self is ModelPlatformType.INTERNLM\n \n+    @property\n+    def is_moonshot(self) -> bool:\n+        r\"\"\"Returns whether this platform is Moonshot model.\"\"\"\n+        return self is ModelPlatformType.MOONSHOT\n+\n \n class AudioModelType(Enum):\n     TTS_1 = \"tts-1\"\ndiff --git a/camel/types/unified_model_type.py b/camel/types/unified_model_type.py\nindex b4027cc6e5..45bba6ecfd 100644\n--- a/camel/types/unified_model_type.py\n+++ b/camel/types/unified_model_type.py\n@@ -118,6 +118,11 @@ def is_internlm(self) -> bool:\n         r\"\"\"Returns whether the model is a InternLM model.\"\"\"\n         return True\n \n+    @property\n+    def is_moonshot(self) -> bool:\n+        r\"\"\"Returns whether this platform is Moonshot model.\"\"\"\n+        return True\n+\n     @property\n     def support_native_structured_output(self) -> bool:\n         r\"\"\"Returns whether the model supports native structured output.\"\"\"\ndiff --git a/docs/key_modules/models.md b/docs/key_modules/models.md\nindex ede9fdad8e..489091c671 100644\n--- a/docs/key_modules/models.md\n+++ b/docs/key_modules/models.md\n@@ -35,6 +35,9 @@ The following table lists currently supported model platforms by CAMEL.\n | Mistral AI | open-mixtral-8x7b | N |\n | Mistral AI | open-mixtral-8x22b | N |\n | Mistral AI | open-codestral-mamba | N |\n+| Moonshot | moonshot-v1-8k | N |\n+| Moonshot | moonshot-v1-32k | N |\n+| Moonshot | moonshot-v1-128k | N |\n | Anthropic | claude-3-5-sonnet-latest | Y |\n | Anthropic | claude-3-5-haiku-latest | N |\n | Anthropic | claude-3-haiku-20240307 | Y |\ndiff --git a/examples/models/moonshot_model_example.py b/examples/models/moonshot_model_example.py\nnew file mode 100644\nindex 0000000000..88c9051235\n--- /dev/null\n+++ b/examples/models/moonshot_model_example.py\n@@ -0,0 +1,46 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+from camel.agents import ChatAgent\n+from camel.configs import MoonshotConfig\n+from camel.models import ModelFactory\n+from camel.types import ModelPlatformType, ModelType\n+\n+model = ModelFactory.create(\n+    model_platform=ModelPlatformType.MOONSHOT,\n+    model_type=ModelType.MOONSHOT_V1_8K,\n+    model_config_dict=MoonshotConfig(temperature=0.2).as_dict(),\n+)\n+\n+# Define system message\n+sys_msg = \"You are a helpful assistant.\"\n+\n+# Set agent\n+camel_agent = ChatAgent(system_message=sys_msg, model=model)\n+\n+user_msg = \"\"\"Say hi to CAMEL AI, one open-source community\n+    dedicated to the study of autonomous and communicative agents.\"\"\"\n+\n+# Get response information\n+response = camel_agent.step(user_msg)\n+print(response.msgs[0].content)\n+\n+'''\n+===============================================================================\n+Hi CAMEL AI! It's great to hear about your open-source community dedicated to \n+the study of autonomous and communicative agents. I'm here to help and support\n+you in any way I can. If you have any questions or need assistance with your\n+research, feel free to ask!\n+===============================================================================\n+'''\n",
        "test_patch": "diff --git a/.github/workflows/pytest_apps.yml b/.github/workflows/pytest_apps.yml\nindex e1cf0f0c01..e07fdbc362 100644\n--- a/.github/workflows/pytest_apps.yml\n+++ b/.github/workflows/pytest_apps.yml\n@@ -30,6 +30,7 @@ jobs:\n         SEARCH_ENGINE_ID: \"${{ secrets.SEARCH_ENGINE_ID }}\"\n         COHERE_API_KEY: \"${{ secrets.COHERE_API_KEY }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n+        MOONSHOT_API_KEY: \"${{ secrets.MOONSHOT_API_KEY }}\"\n       run: poetry run pytest -v apps/\n \n   pytest_examples:\n@@ -49,4 +50,5 @@ jobs:\n         SEARCH_ENGINE_ID: \"${{ secrets.SEARCH_ENGINE_ID }}\"\n         COHERE_API_KEY: \"${{ secrets.COHERE_API_KEY }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n+        MOONSHOT_API_KEY: \"${{ secrets.MOONSHOT_API_KEY }}\"\n       run: poetry run pytest -v examples/\ndiff --git a/.github/workflows/pytest_package.yml b/.github/workflows/pytest_package.yml\nindex 70c0f01151..eb227633b7 100644\n--- a/.github/workflows/pytest_package.yml\n+++ b/.github/workflows/pytest_package.yml\n@@ -59,6 +59,7 @@ jobs:\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n         JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n+        MOONSHOT_API_KEY: \"${{ secrets.MOONSHOT_API_KEY }}\"\n       run: poetry run pytest --fast-test-mode test/\n \n   pytest_package_llm_test:\n@@ -107,6 +108,7 @@ jobs:\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n         JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n+        MOONSHOT_API_KEY: \"${{ secrets.MOONSHOT_API_KEY }}\"\n       run: poetry run pytest --llm-test-only test/\n \n   pytest_package_very_slow_test:\n@@ -155,4 +157,5 @@ jobs:\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n         JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n+        MOONSHOT_API_KEY: \"${{ secrets.MOONSHOT_API_KEY }}\"\n       run: poetry run pytest --very-slow-test-only test/\ndiff --git a/test/models/test_moonshot_model.py b/test/models/test_moonshot_model.py\nnew file mode 100644\nindex 0000000000..3f1d0d72a5\n--- /dev/null\n+++ b/test/models/test_moonshot_model.py\n@@ -0,0 +1,55 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import re\n+\n+import pytest\n+\n+from camel.configs import MoonshotConfig\n+from camel.models import MoonshotModel\n+from camel.types import ModelType\n+\n+\n+@pytest.mark.model_backend\n+@pytest.mark.parametrize(\n+    \"model_type\",\n+    [\n+        ModelType.MOONSHOT_V1_8K,\n+        ModelType.MOONSHOT_V1_32K,\n+        ModelType.MOONSHOT_V1_128K,\n+    ],\n+)\n+def test_moonshot_model(model_type: ModelType):\n+    model = MoonshotModel(model_type)\n+    assert model.model_type == model_type\n+    assert model.model_config_dict == MoonshotConfig().as_dict()\n+    assert isinstance(model.model_type.value_for_tiktoken, str)\n+    assert isinstance(model.model_type.token_limit, int)\n+\n+\n+@pytest.mark.model_backend\n+def test_moonshot_model_unexpected_argument():\n+    model_type = ModelType.MOONSHOT_V1_8K\n+    model_config_dict = {\"model_path\": \"moonshot_v1\"}\n+\n+    with pytest.raises(\n+        ValueError,\n+        match=re.escape(\n+            (\n+                \"Unexpected argument `model_path` is \"\n+                \"input into Moonshot model backend.\"\n+            )\n+        ),\n+    ):\n+        _ = MoonshotModel(model_type, model_config_dict)\n",
        "problem_statement": "[Feature Request] Integrating moonshot models \n### Required prerequisites\n\n- [x] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nintegrating moonshot models\nintroduced in the paper: https://arxiv.org/abs/2501.12599 (kimi-k1.5 not available in the api atm)\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "@Wendong-Fan can you leave some previous model integrations.\nThanks\nhere is one you could refer to: https://github.com/camel-ai/camel/pull/1466\nThanks @GitHoobar !",
        "created_at": "2025-01-29T19:19:41Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            ".github/workflows/pytest_apps.yml",
            ".github/workflows/pytest_package.yml"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1500,
        "instance_id": "camel-ai__camel-1500",
        "issue_numbers": [
            "1497"
        ],
        "base_commit": "9cceb01f64bc268705efd155944c6f296e9bf5b1",
        "patch": "diff --git a/.env b/.env\nindex 6b84096d88..0600f02192 100644\n--- a/.env\n+++ b/.env\n@@ -53,6 +53,9 @@\n # InternLM API (https://internlm.intern-ai.org.cn/api/tokens)\n # INTERNLM_API_KEY=\"Fill your API key here\"\n \n+# JINA API (https://jina.ai/)\n+# JINA_API_KEY=\"Fill your API key here\"\n+\n #===========================================\n # Tools & Services API\n #===========================================\ndiff --git a/.github/workflows/build_package.yml b/.github/workflows/build_package.yml\nindex e062074a64..4c61f07ec5 100644\n--- a/.github/workflows/build_package.yml\n+++ b/.github/workflows/build_package.yml\n@@ -79,6 +79,7 @@ jobs:\n           DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n           DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n           INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n+          JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n         run: |\n           source venv/bin/activate\n           pytest --fast-test-mode ./test\ndiff --git a/camel/embeddings/__init__.py b/camel/embeddings/__init__.py\nindex e61e2768a8..a40d260758 100644\n--- a/camel/embeddings/__init__.py\n+++ b/camel/embeddings/__init__.py\n@@ -12,6 +12,7 @@\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n from .base import BaseEmbedding\n+from .jina_embedding import JinaEmbedding\n from .mistral_embedding import MistralEmbedding\n from .openai_compatible_embedding import OpenAICompatibleEmbedding\n from .openai_embedding import OpenAIEmbedding\n@@ -25,4 +26,5 @@\n     \"VisionLanguageEmbedding\",\n     \"MistralEmbedding\",\n     \"OpenAICompatibleEmbedding\",\n+    \"JinaEmbedding\",\n ]\ndiff --git a/camel/embeddings/jina_embedding.py b/camel/embeddings/jina_embedding.py\nnew file mode 100644\nindex 0000000000..eca4473dea\n--- /dev/null\n+++ b/camel/embeddings/jina_embedding.py\n@@ -0,0 +1,156 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import base64\n+import io\n+import os\n+from typing import Any, Optional, Union\n+\n+import requests\n+from PIL import Image\n+\n+from camel.embeddings import BaseEmbedding\n+from camel.types.enums import EmbeddingModelType\n+from camel.utils import api_keys_required\n+\n+\n+class JinaEmbedding(BaseEmbedding[Union[str, Image.Image]]):\n+    r\"\"\"Provides text and image embedding functionalities using Jina AI's API.\n+\n+    Args:\n+        model_type (EmbeddingModelType, optional): The model to use for\n+            embeddings. (default: :obj:`JINA_EMBEDDINGS_V3`)\n+        api_key (Optional[str], optional): The API key for authenticating with\n+            Jina AI. (default: :obj:`None`)\n+        dimensions (Optional[int], optional): The dimension of the output\n+            embeddings. (default: :obj:`None`)\n+        task (Optional[str], optional): The type of task for text embeddings.\n+            Options: retrieval.query, retrieval.passage, text-matching,\n+            classification, separation. (default: :obj:`None`)\n+        late_chunking (bool, optional): If true, concatenates all sentences in\n+            input and treats as a single input. (default: :obj:`False`)\n+        normalized (bool, optional): If true, embeddings are normalized to unit\n+            L2 norm. (default: :obj:`False`)\n+    \"\"\"\n+\n+    @api_keys_required([(\"api_key\", 'JINA_API_KEY')])\n+    def __init__(\n+        self,\n+        model_type: EmbeddingModelType = EmbeddingModelType.JINA_EMBEDDINGS_V3,\n+        api_key: Optional[str] = None,\n+        dimensions: Optional[int] = None,\n+        embedding_type: Optional[str] = None,\n+        task: Optional[str] = None,\n+        late_chunking: bool = False,\n+        normalized: bool = False,\n+    ) -> None:\n+        if not model_type.is_jina:\n+            raise ValueError(\n+                f\"Model type {model_type} is not a Jina model. \"\n+                \"Please use a valid Jina model type.\"\n+            )\n+        self.model_type = model_type\n+        if dimensions is None:\n+            self.output_dim = model_type.output_dim\n+        else:\n+            self.output_dim = dimensions\n+        self._api_key = api_key or os.environ.get(\"JINA_API_KEY\")\n+\n+        self.embedding_type = embedding_type\n+        self.task = task\n+        self.late_chunking = late_chunking\n+        self.normalized = normalized\n+        self.url = 'https://api.jina.ai/v1/embeddings'\n+        self.headers = {\n+            'Content-Type': 'application/json',\n+            'Accept': 'application/json',\n+            'Authorization': f'Bearer {self._api_key}',\n+        }\n+\n+    def embed_list(\n+        self,\n+        objs: list[Union[str, Image.Image]],\n+        **kwargs: Any,\n+    ) -> list[list[float]]:\n+        r\"\"\"Generates embeddings for the given texts or images.\n+\n+        Args:\n+            objs (list[Union[str, Image.Image]]): The texts or images for which\n+                to generate the embeddings.\n+            **kwargs (Any): Extra kwargs passed to the embedding API. Not used\n+                in this implementation.\n+\n+        Returns:\n+            list[list[float]]: A list that represents the generated embedding\n+                as a list of floating-point numbers.\n+\n+        Raises:\n+            ValueError: If the input type is not supported.\n+            RuntimeError: If the API request fails.\n+        \"\"\"\n+        input_data = []\n+        for obj in objs:\n+            if isinstance(obj, str):\n+                if self.model_type == EmbeddingModelType.JINA_CLIP_V2:\n+                    input_data.append({\"text\": obj})\n+                else:\n+                    input_data.append(obj)  # type: ignore[arg-type]\n+            elif isinstance(obj, Image.Image):\n+                if self.model_type != EmbeddingModelType.JINA_CLIP_V2:\n+                    raise ValueError(\n+                        f\"Model {self.model_type} does not support \"\n+                        \"image input. Use JINA_CLIP_V2 for image embeddings.\"\n+                    )\n+                # Convert PIL Image to base64 string\n+                buffered = io.BytesIO()\n+                obj.save(buffered, format=\"PNG\")\n+                img_str = base64.b64encode(buffered.getvalue()).decode()\n+                input_data.append({\"image\": img_str})\n+            else:\n+                raise ValueError(\n+                    f\"Input type {type(obj)} is not supported. \"\n+                    \"Must be either str or PIL.Image\"\n+                )\n+\n+        data = {\n+            \"model\": self.model_type.value,\n+            \"input\": input_data,\n+            \"embedding_type\": \"float\",\n+        }\n+\n+        if self.embedding_type is not None:\n+            data[\"embedding_type\"] = self.embedding_type\n+        if self.task is not None:\n+            data[\"task\"] = self.task\n+        if self.late_chunking:\n+            data[\"late_chunking\"] = self.late_chunking  # type: ignore[assignment]\n+        if self.normalized:\n+            data[\"normalized\"] = self.normalized  # type: ignore[assignment]\n+        try:\n+            response = requests.post(\n+                self.url, headers=self.headers, json=data, timeout=180\n+            )\n+            response.raise_for_status()\n+            result = response.json()\n+            return [data[\"embedding\"] for data in result[\"data\"]]\n+        except requests.exceptions.RequestException as e:\n+            raise RuntimeError(f\"Failed to get embeddings from Jina AI: {e}\")\n+\n+    def get_output_dim(self) -> int:\n+        r\"\"\"Returns the output dimension of the embeddings.\n+\n+        Returns:\n+            int: The dimensionality of the embedding for the current model.\n+        \"\"\"\n+        return self.output_dim\ndiff --git a/camel/types/enums.py b/camel/types/enums.py\nindex 5622dece99..2b32f77cf5 100644\n--- a/camel/types/enums.py\n+++ b/camel/types/enums.py\n@@ -567,6 +567,11 @@ class EmbeddingModelType(Enum):\n     TEXT_EMBEDDING_3_SMALL = \"text-embedding-3-small\"\n     TEXT_EMBEDDING_3_LARGE = \"text-embedding-3-large\"\n \n+    JINA_EMBEDDINGS_V3 = \"jina-embeddings-v3\"\n+    JINA_CLIP_V2 = \"jina-clip-v2\"\n+    JINA_COLBERT_V2 = \"jina-colbert-v2\"\n+    JINA_EMBEDDINGS_V2_BASE_CODE = \"jina-embeddings-v2-base-code\"\n+\n     MISTRAL_EMBED = \"mistral-embed\"\n \n     @property\n@@ -578,6 +583,16 @@ def is_openai(self) -> bool:\n             EmbeddingModelType.TEXT_EMBEDDING_3_LARGE,\n         }\n \n+    @property\n+    def is_jina(self) -> bool:\n+        r\"\"\"Returns whether this type of models is an Jina model.\"\"\"\n+        return self in {\n+            EmbeddingModelType.JINA_EMBEDDINGS_V3,\n+            EmbeddingModelType.JINA_CLIP_V2,\n+            EmbeddingModelType.JINA_COLBERT_V2,\n+            EmbeddingModelType.JINA_EMBEDDINGS_V2_BASE_CODE,\n+        }\n+\n     @property\n     def is_mistral(self) -> bool:\n         r\"\"\"Returns whether this type of models is an Mistral-released\n@@ -589,7 +604,20 @@ def is_mistral(self) -> bool:\n \n     @property\n     def output_dim(self) -> int:\n-        if self is EmbeddingModelType.TEXT_EMBEDDING_ADA_2:\n+        if self in {\n+            EmbeddingModelType.JINA_COLBERT_V2,\n+        }:\n+            return 128\n+        elif self in {\n+            EmbeddingModelType.JINA_EMBEDDINGS_V2_BASE_CODE,\n+        }:\n+            return 768\n+        elif self in {\n+            EmbeddingModelType.JINA_EMBEDDINGS_V3,\n+            EmbeddingModelType.JINA_CLIP_V2,\n+        }:\n+            return 1024\n+        elif self is EmbeddingModelType.TEXT_EMBEDDING_ADA_2:\n             return 1536\n         elif self is EmbeddingModelType.TEXT_EMBEDDING_3_SMALL:\n             return 1536\ndiff --git a/examples/embeddings/jina_embedding_example.py b/examples/embeddings/jina_embedding_example.py\nnew file mode 100644\nindex 0000000000..193d46add2\n--- /dev/null\n+++ b/examples/embeddings/jina_embedding_example.py\n@@ -0,0 +1,96 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import requests\n+from PIL import Image\n+\n+from camel.embeddings import JinaEmbedding\n+from camel.types import EmbeddingModelType\n+\n+# Set the text embedding instance\n+jina_text_embed = JinaEmbedding(\n+    model_type=EmbeddingModelType.JINA_EMBEDDINGS_V3,\n+)\n+\n+# Embed the text\n+text_embeddings = jina_text_embed.embed_list(\n+    [\"What is the capital of France?\"]\n+)\n+\n+print(len(text_embeddings[0]))\n+'''\n+===============================================================================\n+1024\n+===============================================================================\n+'''\n+\n+\n+# Set the code embedding instance\n+jina_code_embed = JinaEmbedding(\n+    model_type=EmbeddingModelType.JINA_EMBEDDINGS_V2_BASE_CODE,\n+    normalized=True,\n+)\n+\n+# Embed the code\n+code_embeddings = jina_code_embed.embed_list(\n+    [\n+        \"Calculates the square of a number. Parameters: number (int or float)\"\n+        \" - The number to square. Returns: int or float - The square of the\"\n+        \" number.\",\n+        \"This function calculates the square of a number you give it.\",\n+        \"def square(number): return number ** 2\",\n+        \"print(square(5))\",\n+        \"Output: 25\",\n+        \"Each text can be up to 8192 tokens long\",\n+    ]\n+)\n+\n+print(len(code_embeddings[0]))\n+'''\n+===============================================================================\n+768\n+===============================================================================\n+'''\n+\n+# Set the clip embedding instance\n+jina_clip_embed = JinaEmbedding(\n+    model_type=EmbeddingModelType.JINA_CLIP_V2,\n+)\n+\n+# Embed the text\n+text_embeddings = jina_clip_embed.embed_list(\n+    [\"What is the capital of France?\"]\n+)\n+\n+# Set example image to embed\n+url = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n+image_example = Image.open(requests.get(url, stream=True).raw)\n+\n+# Embed the image\n+image_embeddings = jina_clip_embed.embed_list([image_example])\n+\n+print(len(text_embeddings[0]))\n+'''\n+===============================================================================\n+1024\n+===============================================================================\n+'''\n+\n+print(len(image_embeddings[0]))\n+\n+'''\n+===============================================================================\n+1024\n+===============================================================================\n+'''\n",
        "test_patch": "diff --git a/.github/workflows/pytest_package.yml b/.github/workflows/pytest_package.yml\nindex 4dd092f659..70c0f01151 100644\n--- a/.github/workflows/pytest_package.yml\n+++ b/.github/workflows/pytest_package.yml\n@@ -58,6 +58,7 @@ jobs:\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n+        JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n       run: poetry run pytest --fast-test-mode test/\n \n   pytest_package_llm_test:\n@@ -105,6 +106,7 @@ jobs:\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n+        JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n       run: poetry run pytest --llm-test-only test/\n \n   pytest_package_very_slow_test:\n@@ -152,4 +154,5 @@ jobs:\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n         INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n+        JINA_API_KEY: \"${{ secrets.JINA_API_KEY }}\"\n       run: poetry run pytest --very-slow-test-only test/\ndiff --git a/test/embeddings/test_jina_embedding.py b/test/embeddings/test_jina_embedding.py\nnew file mode 100644\nindex 0000000000..11debf3660\n--- /dev/null\n+++ b/test/embeddings/test_jina_embedding.py\n@@ -0,0 +1,142 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import os\n+from unittest.mock import MagicMock, patch\n+\n+import pytest\n+import requests\n+from PIL import Image\n+\n+from camel.embeddings import JinaEmbedding\n+from camel.types import EmbeddingModelType\n+\n+\n+@patch.dict(os.environ, {\"JINA_API_KEY\": \"fake_api_key\"})\n+@patch('requests.post')\n+def test_text_embed_list(mock_post):\n+    # Mock the API response\n+    mock_response = MagicMock()\n+    mock_response.json.return_value = {\n+        \"data\": [{\"embedding\": [0.1, 0.2, 0.3]}]\n+    }\n+    mock_response.raise_for_status.return_value = None\n+    mock_post.return_value = mock_response\n+\n+    # Initialize embedding instance\n+    embedding = JinaEmbedding()\n+\n+    # Test text embedding\n+    result = embedding.embed_list([\"test text\"])\n+\n+    # Verify the API was called correctly\n+    mock_post.assert_called_once()\n+    assert isinstance(result, list)\n+    assert len(result) == 1\n+    assert result[0] == [0.1, 0.2, 0.3]\n+\n+\n+@patch.dict(os.environ, {\"JINA_API_KEY\": \"fake_api_key\"})\n+@patch('requests.post')\n+def test_image_embed_list(mock_post):\n+    # Mock the API response\n+    mock_response = MagicMock()\n+    mock_response.json.return_value = {\n+        \"data\": [{\"embedding\": [0.1, 0.2, 0.3]}]\n+    }\n+    mock_response.raise_for_status.return_value = None\n+    mock_post.return_value = mock_response\n+\n+    # Create a dummy image\n+    img = Image.new('RGB', (60, 30), color='red')\n+\n+    # Initialize embedding instance with CLIP model\n+    embedding = JinaEmbedding(model_type=EmbeddingModelType.JINA_CLIP_V2)\n+\n+    # Test image embedding\n+    result = embedding.embed_list([img])\n+\n+    # Verify the API was called correctly\n+    mock_post.assert_called_once()\n+    assert isinstance(result, list)\n+    assert len(result) == 1\n+    assert result[0] == [0.1, 0.2, 0.3]\n+\n+\n+@patch.dict(os.environ, {\"JINA_API_KEY\": \"fake_api_key\"})\n+def test_invalid_model_type():\n+    # Test initialization with invalid model type\n+    with pytest.raises(ValueError, match=\"is not a Jina model\"):\n+        JinaEmbedding(model_type=EmbeddingModelType.TEXT_EMBEDDING_3_SMALL)\n+\n+\n+@patch.dict(os.environ, {\"JINA_API_KEY\": \"fake_api_key\"})\n+@patch('requests.post')\n+def test_embed_list_with_options(mock_post):\n+    # Mock the API response\n+    mock_response = MagicMock()\n+    mock_response.json.return_value = {\n+        \"data\": [{\"embedding\": [0.1, 0.2, 0.3]}]\n+    }\n+    mock_response.raise_for_status.return_value = None\n+    mock_post.return_value = mock_response\n+\n+    # Initialize embedding instance with options\n+    embedding = JinaEmbedding(\n+        dimensions=3,\n+        task=\"text-matching\",\n+        late_chunking=True,\n+        normalized=True,\n+    )\n+\n+    # Test embedding with options\n+    result = embedding.embed_list([\"test text\"])\n+\n+    # Verify the API was called with correct parameters\n+    mock_post.assert_called_once()\n+    call_kwargs = mock_post.call_args[1]\n+    assert len(result[0]) == 3\n+    assert \"json\" in call_kwargs\n+    request_data = call_kwargs[\"json\"]\n+    assert request_data[\"task\"] == \"text-matching\"\n+    assert request_data[\"late_chunking\"] is True\n+    assert request_data[\"normalized\"] is True\n+\n+\n+@patch.dict(os.environ, {\"JINA_API_KEY\": \"fake_api_key\"})\n+def test_get_output_dim():\n+    # Test with default model\n+    embedding = JinaEmbedding()\n+    assert embedding.get_output_dim() == embedding.output_dim\n+\n+    # Test with custom dimensions\n+    custom_dim = 512\n+    embedding_custom = JinaEmbedding(dimensions=custom_dim)\n+    assert embedding_custom.get_output_dim() == custom_dim\n+\n+\n+@patch.dict(os.environ, {\"JINA_API_KEY\": \"fake_api_key\"})\n+@patch('requests.post')\n+def test_api_error_handling(mock_post):\n+    # Mock a failed API response\n+    mock_post.side_effect = requests.exceptions.RequestException(\"API Error\")\n+\n+    # Initialize embedding instance\n+    embedding = JinaEmbedding()\n+\n+    # Test error handling\n+    with pytest.raises(\n+        RuntimeError, match=\"Failed to get embeddings from Jina AI\"\n+    ):\n+        embedding.embed_list([\"test text\"])\n",
        "problem_statement": "[Feature Request] Integrate jina-embeddings-y2-base-code\n### Required prerequisites\n\n- [x] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\njina-embeddings-y2-base-code is an embedding model specialized for code embeddings, which is pretty useful for code retrieval.\n\n### Solution\n\nReferences: \n- API call: https://jina.ai/models/jina-embeddings-v2-base-code/\n- Huggingface: https://huggingface.co/jinaai/jina-embeddings-v2-base-code\n\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2025-01-24T09:51:30Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            ".github/workflows/pytest_package.yml"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1478,
        "instance_id": "camel-ai__camel-1478",
        "issue_numbers": [
            "1411"
        ],
        "base_commit": "91ec01bdcfb795e348cb3d37a0687bf7051e299e",
        "patch": "diff --git a/camel/agents/chat_agent.py b/camel/agents/chat_agent.py\nindex 72743bb8a1..03cd20b3d5 100644\n--- a/camel/agents/chat_agent.py\n+++ b/camel/agents/chat_agent.py\n@@ -573,9 +573,8 @@ def step(\n             self.model_backend.model_config_dict.get(\"response_format\")\n             and response_format\n         ):\n-            raise ValueError(\n-                \"The `response_format` parameter cannot be set both in \"\n-                \"the model configuration and in the ChatAgent step.\"\n+            logger.warning(\n+                f\"Overriding the response format with {response_format}.\"\n             )\n \n         self.original_model_dict = self.model_backend.model_config_dict\ndiff --git a/camel/datagen/__init__.py b/camel/datagen/__init__.py\nindex aabc9131ee..b044e8705b 100644\n--- a/camel/datagen/__init__.py\n+++ b/camel/datagen/__init__.py\n@@ -12,10 +12,12 @@\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n \n-from .cotdatagen import CoTDataGenerator\n+from .cot_datagen import CoTDataGenerator\n+from .self_improving_cot import SelfImprovingCoTPipeline\n from .self_instruct import SelfInstructPipeline\n \n __all__ = [\n     \"CoTDataGenerator\",\n     \"SelfInstructPipeline\",\n+    \"SelfImprovingCoTPipeline\",\n ]\ndiff --git a/camel/datagen/cotdatagen.py b/camel/datagen/cot_datagen.py\nsimilarity index 100%\nrename from camel/datagen/cotdatagen.py\nrename to camel/datagen/cot_datagen.py\ndiff --git a/camel/datagen/self_improving_cot.py b/camel/datagen/self_improving_cot.py\nnew file mode 100644\nindex 0000000000..b9e5df260a\n--- /dev/null\n+++ b/camel/datagen/self_improving_cot.py\n@@ -0,0 +1,821 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import asyncio\n+import json\n+import math\n+import os\n+import threading\n+import time\n+from concurrent.futures import ThreadPoolExecutor, as_completed\n+from typing import Any, Dict, List, Optional, Union\n+\n+from pydantic import BaseModel\n+\n+from camel.agents import ChatAgent\n+from camel.logger import get_logger\n+from camel.models.reward import BaseRewardModel, Evaluator\n+from camel.utils import BatchProcessor, retry_on_error\n+\n+logger = get_logger(__name__)\n+\n+\n+class AgentTraceEvaluation(BaseModel):\n+    correctness: float\n+    clarity: float\n+    completeness: float\n+    feedback: str\n+\n+\n+class RewardTraceEvaluation(BaseModel):\n+    feedback: str\n+\n+    def __init__(self, **data):\n+        # Allow dynamic score fields while ensuring feedback is present\n+        super().__init__(**data)\n+\n+    class Config:\n+        extra = (\n+            \"allow\"  # Allow extra fields for different reward model dimensions\n+        )\n+\n+\n+class TraceIteration(BaseModel):\n+    iteration: int\n+    trace: str\n+    evaluation: Union[AgentTraceEvaluation, RewardTraceEvaluation]\n+\n+\n+class ProblemResult(BaseModel):\n+    id: Optional[str] = None\n+    type: Optional[str] = None\n+    problem: str\n+    solution: Optional[str] = None\n+    final_trace: str\n+    agent_evaluate_success: Optional[bool] = None\n+    boxed_answer_success: bool = False\n+    improvement_history: List[TraceIteration]\n+\n+\n+class SelfImprovingCoTPipeline:\n+    r\"\"\"Pipeline for generating self-taught reasoning traces\n+    using the self-improving methodology.\n+\n+    This implements the STaR paper's approach of:\n+    1. Initial reasoning trace generation\n+    2. Self-evaluation\n+    3. Feedback-based improvement\n+    4. Iterative refinement\n+    \"\"\"\n+\n+    def __init__(\n+        self,\n+        reason_agent: ChatAgent,\n+        problems: List[Dict],\n+        max_iterations: int = 3,\n+        score_threshold: Union[float, Dict[str, float]] = 0.7,\n+        evaluate_agent: Optional[ChatAgent] = None,\n+        reward_model: Optional[BaseRewardModel] = None,\n+        output_path: Optional[str] = None,\n+        few_shot_examples: Optional[str] = None,\n+        batch_size: Optional[int] = None,\n+        max_workers: Optional[int] = None,\n+        solution_pattern: str = r'\\\\boxed{(.*?)}',\n+        trace_pattern: Optional[str] = None,\n+    ):\n+        r\"\"\"Initialize the self-improving cot pipeline.\n+\n+        Args:\n+            reason_agent (ChatAgent): The chat agent used for generating and\n+                improving reasoning traces.\n+            problems (List[Dict]): List of problem dictionaries to process.\n+            max_iterations (int, optional): Maximum number of improvement\n+                iterations. If set to `0`, the pipeline will generate an\n+                initial trace without any improvement iterations.\n+                (default: :obj:`3`)\n+            score_threshold (Union[float, Dict[str, float]], optional):\n+                Quality threshold. Can be either a single float value applied\n+                to average score, or a dictionary mapping score dimensions to\n+                their thresholds. For example: {\"correctness\": 0.8,\n+                \"coherence\": 0.7}. If using reward model and threshold for a\n+                dimension is not specified, will use the default value 0.7.\n+                (default: :obj:`0.7`)\n+            evaluate_agent (Optional[ChatAgent]): The chat agent used for\n+                evaluating reasoning traces. (default: :obj:`None`)\n+            reward_model (BaseRewardModel, optional): Model used to evaluate\n+                reasoning traces. If `None`, uses Agent self-evaluation.\n+                (default: :obj:`None`)\n+            output_path (str, optional): Output path for saving traces. If\n+                `None`, results will only be returned without saving to file.\n+                (default: :obj:`None`)\n+            few_shot_examples (str, optional): Examples to use for few-shot\n+                generation. (default: :obj:`None`)\n+            batch_size (int, optional): Batch size for parallel processing.\n+                (default: :obj:`None`)\n+            max_workers (int, optional): Maximum number of worker threads.\n+                (default: :obj:`None`)\n+            solution_pattern (str, optional): Regular expression pattern with\n+                one capture group to extract answers from solution text.\n+                (default: :obj:`r'\\\\boxed{(.*?)}'`)\n+            trace_pattern (str, optional): Regular expression pattern with one\n+                capture group to extract answers from trace text. If `None`,\n+                uses the same pattern as solution_pattern.\n+                (default: :obj:`None`)\n+        \"\"\"\n+        self.reason_agent = reason_agent\n+        self.evaluate_agent = evaluate_agent\n+        self.problems = problems\n+        self.output_path = output_path\n+        self.max_iterations = max_iterations\n+        self.score_threshold = score_threshold\n+        self.reward_model = reward_model\n+        self.evaluator = (\n+            Evaluator(reward_model=reward_model) if reward_model else None\n+        )\n+        self.reasoning_traces: List[Dict[str, Any]] = []\n+        self.few_shot_examples = few_shot_examples\n+        self.batch_processor = BatchProcessor(max_workers, batch_size)\n+        self.solution_pattern = solution_pattern\n+        self.trace_pattern = (\n+            trace_pattern if trace_pattern is not None else solution_pattern\n+        )\n+\n+        # Initialize output file with empty results if path is specified\n+        if self.output_path:\n+            with open(self.output_path, 'w') as f:\n+                json.dump({'traces': []}, f, indent=2)\n+        self.lock = threading.Lock()\n+\n+    def safe_write_json(self, file_path, data):\n+        temp_path = file_path + \".tmp\"\n+        with open(temp_path, \"w\") as f:\n+            json.dump(data, f, indent=2)\n+        os.replace(temp_path, file_path)\n+\n+    def clean_json(self, data):\n+        if isinstance(data, dict):\n+            return {k: self.clean_json(v) for k, v in data.items()}\n+        elif isinstance(data, list):\n+            return [self.clean_json(v) for v in data]\n+        elif isinstance(data, float) and (\n+            math.isnan(data) or math.isinf(data)\n+        ):\n+            return None\n+        return data\n+\n+    async def _batch_process_problems(\n+        self, problems: List[Dict], rationalization: bool\n+    ) -> List[ProblemResult]:\n+        r\"\"\"Process multiple problems in parallel batches with dynamic sizing.\n+\n+        Args:\n+            problems (List[Dict]): List of problem dictionaries to process.\n+            rationalization (bool): Whether to use rationalization.\n+\n+        Returns:\n+            List[ProblemResult]: List of problem results.\n+        \"\"\"\n+        results = []\n+        total_problems = len(problems)\n+        processed = 0\n+\n+        while processed < total_problems:\n+            batch_size = self.batch_processor.batch_size\n+            batch = problems[processed : processed + batch_size]\n+            batch_start_time = time.time()\n+\n+            try:\n+                with ThreadPoolExecutor(\n+                    max_workers=self.batch_processor.max_workers\n+                ) as executor:\n+                    # Create futures with rationalization parameter\n+                    futures = [\n+                        executor.submit(\n+                            self.process_problem,\n+                            problem=problem,\n+                            rationalization=rationalization,\n+                        )\n+                        for problem in batch\n+                    ]\n+\n+                    batch_results = []\n+                    batch_success = True\n+                    for future in as_completed(futures):\n+                        try:\n+                            result = future.result()\n+                            batch_results.append(result)\n+                        except Exception as e:\n+                            logger.error(f\"Error processing problem: {e}\")\n+                            batch_success = False\n+                            continue\n+\n+                    results.extend(batch_results)\n+                    processed += len(batch)\n+\n+                    # Calculate processing time and adjust batch size\n+                    processing_time = time.time() - batch_start_time\n+                    self.batch_processor.adjust_batch_size(\n+                        batch_success, processing_time\n+                    )\n+\n+                    # Log progress and performance metrics\n+                    metrics = self.batch_processor.get_performance_metrics()\n+                    logger.info(\n+                        f\"Processed {processed}/{total_problems} problems \"\n+                        f\"(batch size: {batch_size}, workers: \"\n+                        f\"{metrics['current_workers']}, \"\n+                        f\"CPU: {metrics['current_cpu']:.1f}%, \"\n+                        f\"Memory: {metrics['current_memory']:.1f}%)\"\n+                    )\n+            except Exception as e:\n+                logger.error(f\"Batch processing error: {e}\")\n+                self.batch_processor.adjust_batch_size(False)\n+                continue\n+\n+        return results\n+\n+    async def _batch_evaluate_traces(\n+        self,\n+        problems: List[Dict[str, Any]],\n+        traces: List[str],\n+        solutions: Optional[List[str]] = None,\n+    ) -> List[Dict[str, Any]]:\n+        r\"\"\"Evaluate multiple traces in parallel batches with resource\n+        monitoring.\n+\n+        Args:\n+            problems (List[Dict[str, Any]]): List of problem dictionaries\n+            traces (List[str]): List of reasoning traces to evaluate\n+            solutions (Optional[List[str]]): Optional list of solutions\n+\n+        Returns:\n+            List[Dict[str, Any]]: List of evaluation results\n+        \"\"\"\n+        if solutions is None:\n+            solutions = [\"null\"] * len(problems)\n+\n+        results = []\n+        total_traces = len(traces)\n+        processed = 0\n+\n+        while processed < total_traces:\n+            batch_size = self.batch_processor.batch_size\n+            problem_batch = problems[processed : processed + batch_size]\n+            trace_batch = traces[processed : processed + batch_size]\n+            solution_batch = solutions[processed : processed + batch_size]\n+            batch_start_time = time.time()\n+\n+            try:\n+                with ThreadPoolExecutor(\n+                    max_workers=self.batch_processor.max_workers\n+                ) as executor:\n+                    futures = [\n+                        executor.submit(\n+                            self.evaluate_trace,\n+                            problem=problem[\"problem\"],\n+                            trace=trace,\n+                            solution=solution,\n+                        )\n+                        for problem, trace, solution in zip(\n+                            problem_batch, trace_batch, solution_batch\n+                        )\n+                    ]\n+\n+                    batch_results = []\n+                    batch_success = True\n+                    for future in as_completed(futures):\n+                        try:\n+                            result = future.result()\n+                            batch_results.append(result)\n+                        except Exception as e:\n+                            logger.error(f\"Error evaluating trace: {e}\")\n+                            batch_success = False\n+                            continue\n+\n+                    results.extend(batch_results)\n+                    processed += len(batch_results)\n+\n+                    # Calculate processing time and adjust batch size\n+                    processing_time = time.time() - batch_start_time\n+                    self.batch_processor.adjust_batch_size(\n+                        batch_success, processing_time\n+                    )\n+\n+                    # Log progress and performance metrics\n+                    metrics = self.batch_processor.get_performance_metrics()\n+                    logger.info(\n+                        f\"Evaluated {processed}/{total_traces} traces \"\n+                        f\"(batch size: {batch_size}, workers: \"\n+                        f\"{metrics['current_workers']}, \"\n+                        f\"avg time: {metrics['avg_processing_time']:.2f}s, \"\n+                        f\"error rate: {metrics['error_rate']:.1f}%)\"\n+                    )\n+            except Exception as e:\n+                logger.error(f\"Batch evaluation error: {e}\")\n+                self.batch_processor.adjust_batch_size(False)\n+                continue\n+\n+        return results\n+\n+    def _check_score_threshold(self, scores: Dict[str, float]) -> bool:\n+        r\"\"\"Check if scores meet the threshold requirements.\n+\n+        Args:\n+            scores (Dict[str, float]): Dictionary of scores for different\n+                dimensions.\n+\n+        Returns:\n+            bool: True if scores meet threshold requirements, False otherwise.\n+        \"\"\"\n+        # If score_threshold is a float, apply it to all dimensions\n+        if isinstance(self.score_threshold, float):\n+            return all(\n+                score >= self.score_threshold for score in scores.values()\n+            )\n+\n+        # If score_threshold is a dict, check each dimension with its threshold\n+        # Use 0 as default threshold for unspecified dimensions\n+        if isinstance(self.score_threshold, dict):\n+            for dim, score in scores.items():\n+                threshold = self.score_threshold.get(dim, 0)\n+                if score < threshold:\n+                    return False\n+            return True\n+\n+        # If score_threshold is None or invalid type, pass the check\n+        return True\n+\n+    def _generate_feedback(self, scores: Dict[str, float]) -> str:\n+        r\"\"\"Generate feedback based on which dimensions need improvement.\n+\n+        Args:\n+            scores (Dict[str, float]): Dictionary of scores for different\n+                dimensions.\n+\n+        Returns:\n+            str: Feedback message indicating which dimensions need improvement.\n+        \"\"\"\n+        if isinstance(self.score_threshold, float):\n+            below_threshold = [\n+                dim\n+                for dim, score in scores.items()\n+                if score < self.score_threshold\n+            ]\n+            if not below_threshold:\n+                return \"All dimensions meet the required threshold\"\n+            dims = \", \".join(below_threshold)\n+            return f\"Need improvement in: {dims}\"\n+\n+        if isinstance(self.score_threshold, dict):\n+            default_threshold = 0\n+            below_threshold = [\n+                dim\n+                for dim, score in scores.items()\n+                if score < self.score_threshold.get(dim, default_threshold)\n+            ]\n+            if not below_threshold:\n+                return \"All dimensions meet their respective thresholds\"\n+            dims = \", \".join(below_threshold)\n+            return f\"Need improvement in: {dims}\"\n+\n+        # If no threshold set, just list all dimensions and their scores\n+        dims = \", \".join(\n+            f\"{dim}: {score:.2f}\" for dim, score in scores.items()\n+        )\n+        return f\"Current scores - {dims}\"\n+\n+    @retry_on_error()\n+    def generate_reasoning_trace(self, problem: str) -> str:\n+        r\"\"\"Generate initial reasoning trace for a given problem.\n+\n+        Args:\n+            problem (str): The problem text to generate reasoning for.\n+\n+        Returns:\n+            str: Generated reasoning trace.\n+        \"\"\"\n+        self.reason_agent.reset()\n+        few_shot_examples = (\n+            f\"Examples: {self.few_shot_examples}\"\n+            if self.few_shot_examples\n+            else \"\"\n+        )\n+        prompt = self.REASONING_TEMPLATE.format(\n+            problem=problem, few_shot_examples=few_shot_examples\n+        )\n+        response = self.reason_agent.step(prompt)\n+        return response.msg.content\n+\n+    @retry_on_error()\n+    def evaluate_trace(\n+        self, problem: str, trace: str, solution: Optional[str] = None\n+    ) -> Dict[str, Any]:\n+        r\"\"\"Evaluate the quality of a reasoning trace.\n+\n+        Args:\n+            problem (str): The original problem text to evaluate against.\n+            trace (str): The reasoning trace to evaluate.\n+            solution (Optional[str]): The solution to the problem, if provided.\n+                (default: :obj:`None`)\n+\n+        Returns:\n+            Dict[str, Any]: Evaluation results containing:\n+                - scores: Dict of evaluation dimensions and their scores\n+                - feedback: Detailed feedback for improvement\n+\n+                For Agent self-evaluation, the scores will include:\n+                - correctness: Score for logical correctness\n+                - clarity: Score for clarity of explanation\n+                - completeness: Score for completeness of reasoning\n+\n+                For reward model evaluation, the scores will depend on\n+                the model's evaluation dimensions.\n+        \"\"\"\n+        self.evaluate_agent.reset()  # type: ignore[union-attr]\n+        if self.evaluator:\n+            # Use reward model evaluation\n+            messages = [\n+                {\"role\": \"user\", \"content\": problem},\n+                {\"role\": \"assistant\", \"content\": trace},\n+            ]\n+            scores = self.evaluator.evaluate(messages)\n+\n+            # For models that return a single score\n+            if isinstance(scores, (int, float)) or (\n+                isinstance(scores, dict) and len(scores) == 1\n+            ):\n+                if isinstance(scores, dict):\n+                    score = next(iter(scores.values()))\n+                else:\n+                    score = scores\n+                scores_dict = {\"overall\": score}\n+                return {\n+                    **scores_dict,\n+                    \"feedback\": self._generate_feedback(scores_dict),\n+                }\n+\n+            # For models that return multiple dimensions\n+            return {**scores, \"feedback\": self._generate_feedback(scores)}\n+        else:\n+            # Fallback to original Agent self-evaluation\n+            solution_text = f\"Solution: {solution}\" if solution else \"\"\n+            prompt = self.EVALUATION_TEMPLATE.format(\n+                problem=problem, trace=trace, solution=solution_text\n+            )\n+            response = self.evaluate_agent.step(  # type: ignore[union-attr]\n+                prompt, response_format=AgentTraceEvaluation\n+            )\n+            if response.msg.parsed is None:\n+                raise AttributeError(\"Failed to parse evaluation response\")\n+            # Convert dict to AgentTraceEvaluation if needed\n+            if isinstance(response.msg.parsed, dict):\n+                evaluation = AgentTraceEvaluation(**response.msg.parsed)\n+            else:\n+                evaluation = response.msg.parsed\n+\n+            return evaluation.model_dump()\n+\n+    @retry_on_error()\n+    def improve_trace(\n+        self,\n+        problem: str,\n+        trace: str,\n+        feedback: str,\n+        solution: Optional[str] = None,\n+    ) -> str:\n+        r\"\"\"Generate improved reasoning trace based on feedback.\n+\n+        Args:\n+            problem (str): The original problem text.\n+            trace (str): The current reasoning trace.\n+            feedback (str): Feedback for improving the trace.\n+            solution (Optional[str]): The solution to the problem, if provided.\n+                (default: :obj:`None`)\n+\n+        Returns:\n+            str: Improved reasoning trace.\n+        \"\"\"\n+        self.reason_agent.reset()\n+        solution_text = f\"Solution: {solution}\" if solution else \"\"\n+        prompt = self.IMPROVEMENT_TEMPLATE.format(\n+            problem=problem,\n+            trace=trace,\n+            feedback=feedback,\n+            solution=solution_text,\n+        )\n+        response = self.reason_agent.step(prompt)\n+        return response.msg.content\n+\n+    def validate_problem_format(self, problem: Dict) -> None:\n+        r\"\"\"Validate that a problem dictionary has the required format.\n+\n+        Args:\n+            problem (Dict): Problem dictionary to validate.\n+\n+        Raises:\n+            ValueError: If the problem format is invalid.\n+        \"\"\"\n+        if not isinstance(problem, dict):\n+            raise ValueError(\"Problem must be a dictionary.\")\n+\n+        # Check required problem field\n+        if \"problem\" not in problem:\n+            raise ValueError(\"Problem dictionary must contain 'problem' key.\")\n+        if not isinstance(problem[\"problem\"], str):\n+            raise ValueError(\"Problem 'problem' field must be a string.\")\n+\n+        # Optional fields validation\n+        optional_fields: dict[str, type | tuple[type, ...]] = {\n+            \"id\": (str, int, type(None)),\n+            \"type\": str,\n+            \"solution\": str,\n+        }\n+\n+        for field, expected_type in optional_fields.items():\n+            if field in problem and not isinstance(\n+                problem[field], expected_type\n+            ):\n+                type_name = (\n+                    expected_type.__name__\n+                    if hasattr(expected_type, '__name__')\n+                    else str(expected_type)\n+                )\n+                raise ValueError(\n+                    f\"Problem '{field}' must be of \"\n+                    f\"type {type_name} if present.\"\n+                )\n+\n+    def _check_boxed_answers(self, solution: str, trace: str) -> bool:\n+        r\"\"\"Check if the answer in the trace matches the solution using the\n+        configured patterns.\n+\n+        Args:\n+            solution (str): The problem solution string.\n+            trace (str): The reasoning trace string.\n+\n+        Returns:\n+            bool: True if answers match, False otherwise\n+        \"\"\"\n+        import re\n+\n+        # Extract content using the configured patterns\n+        solution_match = re.search(self.solution_pattern, solution, re.DOTALL)\n+        trace_match = re.search(self.trace_pattern, trace, re.DOTALL)\n+\n+        if solution_match and trace_match:\n+            # Clean up whitespace and normalize content\n+            solution_answer = solution_match.group(1).strip()\n+            trace_answer = trace_match.group(1).strip()\n+            return solution_answer == trace_answer\n+\n+        return False\n+\n+    def process_problem(\n+        self, problem: Dict, rationalization: bool = False\n+    ) -> ProblemResult:\n+        r\"\"\"Process a single problem through the self-improving cot pipeline.\n+\n+        Args:\n+            problem (Dict): Problem dictionary containing the problem text.\n+            rationalization (bool, optional): Whether to use rationalization.\n+                (default: :obj:`False`)\n+\n+        Returns:\n+            ProblemResult: Results with final trace and history.\n+\n+        Raises:\n+            ValueError: If the problem format is invalid.\n+        \"\"\"\n+        # Validate problem format before processing\n+        self.validate_problem_format(problem)\n+\n+        problem_text = problem[\"problem\"]\n+        solution_text = problem.get(\"solution\", \"\")\n+        current_trace = self.generate_reasoning_trace(problem_text)\n+        improvement_history = []\n+        scores = {}\n+\n+        # Only evaluate if evaluate_agent or reward_model is set\n+        if self.evaluate_agent or self.reward_model:\n+            # Create batches for parallel evaluation\n+            batch_problems = [problem]\n+            batch_traces = [current_trace]\n+            batch_solutions = [solution_text]\n+\n+            # Evaluate current trace batch\n+            loop = asyncio.new_event_loop()\n+            asyncio.set_event_loop(loop)\n+            try:\n+                eval_results = loop.run_until_complete(\n+                    self._batch_evaluate_traces(\n+                        batch_problems, batch_traces, batch_solutions\n+                    )\n+                )\n+            finally:\n+                loop.close()\n+\n+            # Process evaluation results\n+            eval_dict = eval_results[-1]  # Get latest evaluation\n+            scores = {k: v for k, v in eval_dict.items() if k != \"feedback\"}\n+\n+            # Record initial evaluation\n+            if self.evaluator:\n+                improvement_history.append(\n+                    TraceIteration(\n+                        iteration=0,\n+                        trace=current_trace,\n+                        evaluation=RewardTraceEvaluation(**eval_dict),\n+                    )\n+                )\n+            else:\n+                improvement_history.append(\n+                    TraceIteration(\n+                        iteration=0,\n+                        trace=current_trace,\n+                        evaluation=AgentTraceEvaluation(\n+                            **scores, feedback=eval_dict[\"feedback\"]\n+                        ),\n+                    )\n+                )\n+\n+            # Only do improvement iterations if max_iterations > 0\n+            if self.max_iterations > 0:\n+                for iteration in range(0, self.max_iterations):\n+                    # Check if quality threshold met\n+                    if self._check_score_threshold(scores):\n+                        break\n+\n+                    # Generate improved trace\n+                    if rationalization:\n+                        current_trace = self.improve_trace(\n+                            problem_text,\n+                            current_trace,\n+                            eval_dict[\"feedback\"],\n+                            solution_text,\n+                        )\n+                    else:\n+                        current_trace = self.improve_trace(\n+                            problem_text, current_trace, eval_dict[\"feedback\"]\n+                        )\n+\n+                    # Evaluate improved trace\n+                    batch_traces = [current_trace]\n+                    loop = asyncio.new_event_loop()\n+                    asyncio.set_event_loop(loop)\n+                    try:\n+                        eval_results = loop.run_until_complete(\n+                            self._batch_evaluate_traces(\n+                                batch_problems, batch_traces, batch_solutions\n+                            )\n+                        )\n+                    finally:\n+                        loop.close()\n+\n+                    eval_dict = eval_results[-1]\n+                    scores = {\n+                        k: v for k, v in eval_dict.items() if k != \"feedback\"\n+                    }\n+\n+                    # Record iteration history\n+                    if self.evaluator:\n+                        improvement_history.append(\n+                            TraceIteration(\n+                                iteration=iteration + 1,\n+                                trace=current_trace,\n+                                evaluation=RewardTraceEvaluation(**eval_dict),\n+                            )\n+                        )\n+                    else:\n+                        improvement_history.append(\n+                            TraceIteration(\n+                                iteration=iteration + 1,\n+                                trace=current_trace,\n+                                evaluation=AgentTraceEvaluation(\n+                                    **scores, feedback=eval_dict[\"feedback\"]\n+                                ),\n+                            )\n+                        )\n+\n+        boxed_answer_success = self._check_boxed_answers(\n+            problem.get(\"solution\", \"\"), current_trace\n+        )\n+\n+        result = ProblemResult(\n+            id=problem.get(\"id\", \"\"),\n+            type=problem.get(\"type\", \"\"),\n+            problem=problem_text,\n+            solution=problem.get(\"solution\", \"\"),\n+            final_trace=current_trace,\n+            agent_evaluate_success=self._check_score_threshold(scores)\n+            if scores\n+            else None,\n+            boxed_answer_success=boxed_answer_success,\n+            improvement_history=improvement_history,\n+        )\n+\n+        # Write result to file immediately if output path is specified\n+        if self.output_path:\n+            with self.lock:\n+                try:\n+                    # Read existing results\n+                    with open(self.output_path, 'r') as f:\n+                        data = json.load(f)\n+\n+                    cleaned_result = self.clean_json(result.model_dump())\n+                    data['traces'].append(cleaned_result)\n+                    self.safe_write_json(self.output_path, data)\n+\n+                except Exception as e:\n+                    logger.error(f\"Error writing result to file: {e}\")\n+\n+        return result\n+\n+    def generate(self, rationalization: bool = False) -> List[Dict[str, Any]]:\n+        r\"\"\"Execute the self-improving cot pipeline on all problems.\n+\n+        Process problems and return results. If output_path is specified,\n+        also save results to file.\n+\n+        Args:\n+            rationalization (bool, optional): Whether to use rationalization.\n+                (default: :obj:`False`)\n+\n+        Returns:\n+            List[Dict[str, Any]]: List of processed results\n+        \"\"\"\n+        # Pre-allocate results list\n+        self.reasoning_traces = []\n+\n+        # Process problems in batches\n+        loop = asyncio.new_event_loop()\n+        asyncio.set_event_loop(loop)\n+\n+        try:\n+            results = loop.run_until_complete(\n+                self._batch_process_problems(self.problems, rationalization)\n+            )\n+        finally:\n+            loop.close()\n+\n+        self.reasoning_traces = [result.model_dump() for result in results]\n+        return self.reasoning_traces\n+\n+    # Templates for generating reasoning, evaluation and improving them.\n+    REASONING_TEMPLATE = \"\"\"Let's solve this step by step:\n+Problem: {problem}\n+1. First, let's understand what we're asked\n+2. Let's break this down into parts\n+3. Let's solve each part systematically\n+4. Finally, let's verify our solution\n+\n+{few_shot_examples}\n+\n+Please show your complete reasoning process.\"\"\"\n+\n+    EVALUATION_TEMPLATE = \"\"\"Please evaluate this reasoning trace and \n+provide scores and feedback in valid JSON format.\n+\n+Problem: {problem}\n+\n+{solution}\n+\n+Reasoning Trace:\n+{trace}\n+\n+Evaluate for:\n+1. Correctness (Is each step logically sound?)\n+2. Clarity (Is the explanation clear and well-structured?)\n+3. Completeness (Are all necessary steps included?)\n+\n+Respond ONLY with a JSON object in this exact format:\n+{{\n+    \"correctness\": <score between 0 and 1>,\n+    \"clarity\": <score between 0 and 1>,\n+    \"completeness\": <score between 0 and 1>,\n+    \"feedback\": \"<specific feedback for improvement>\"\n+}}\"\"\"\n+\n+    IMPROVEMENT_TEMPLATE = \"\"\"Based on this feedback, generate an \n+improved reasoning trace:\n+Problem: {problem}\n+\n+{solution}\n+\n+Previous Trace:\n+{trace}\n+\n+Feedback:\n+{feedback}\n+\n+Generate a new, improved reasoning trace that addresses the feedback.\"\"\"\ndiff --git a/camel/toolkits/reddit_toolkit.py b/camel/toolkits/reddit_toolkit.py\nindex 1415a578b9..6d8f8778b0 100644\n--- a/camel/toolkits/reddit_toolkit.py\n+++ b/camel/toolkits/reddit_toolkit.py\n@@ -16,10 +16,9 @@\n import time\n from typing import Any, Dict, List, Union\n \n-from requests.exceptions import RequestException\n-\n from camel.toolkits import FunctionTool\n from camel.toolkits.base import BaseToolkit\n+from camel.utils import retry_on_error\n \n \n class RedditToolkit(BaseToolkit):\n@@ -61,30 +60,7 @@ def __init__(self, retries: int = 3, delay: int = 0):\n             request_timeout=30,  # Set a timeout to handle delays\n         )\n \n-    def _retry_request(self, func, *args, **kwargs):\n-        r\"\"\"Retries a function in case of network-related errors.\n-\n-        Args:\n-            func (callable): The function to be retried.\n-            *args: Arguments to pass to the function.\n-            **kwargs: Keyword arguments to pass to the function.\n-\n-        Returns:\n-            Any: The result of the function call if successful.\n-\n-        Raises:\n-            RequestException: If all retry attempts fail.\n-        \"\"\"\n-        for attempt in range(self.retries):\n-            try:\n-                return func(*args, **kwargs)\n-            except RequestException as e:\n-                print(f\"Attempt {attempt + 1}/{self.retries} failed: {e}\")\n-                if attempt < self.retries - 1:\n-                    time.sleep(self.delay)\n-                else:\n-                    raise\n-\n+    @retry_on_error()\n     def collect_top_posts(\n         self,\n         subreddit_name: str,\n@@ -113,8 +89,8 @@ def collect_top_posts(\n                 \"Please set the environment variables.\"\n             )\n \n-        subreddit = self._retry_request(self.reddit.subreddit, subreddit_name)\n-        top_posts = self._retry_request(subreddit.top, limit=post_limit)\n+        subreddit = self.reddit.subreddit(subreddit_name)\n+        top_posts = subreddit.top(limit=post_limit)\n         data = []\n \n         for post in top_posts:\n@@ -122,9 +98,7 @@ def collect_top_posts(\n                 \"Post Title\": post.title,\n                 \"Comments\": [\n                     {\"Comment Body\": comment.body, \"Upvotes\": comment.score}\n-                    for comment in self._retry_request(\n-                        lambda post=post: list(post.comments)\n-                    )[:comment_limit]\n+                    for comment in list(post.comments)[:comment_limit]\n                 ],\n             }\n             data.append(post_data)\n@@ -192,15 +166,11 @@ def track_keyword_discussions(\n         data = []\n \n         for subreddit_name in subreddits:\n-            subreddit = self._retry_request(\n-                self.reddit.subreddit, subreddit_name\n-            )\n-            top_posts = self._retry_request(subreddit.top, limit=post_limit)\n+            subreddit = self.reddit.subreddit(subreddit_name)\n+            top_posts = subreddit.top(limit=post_limit)\n \n             for post in top_posts:\n-                for comment in self._retry_request(\n-                    lambda post=post: list(post.comments)\n-                )[:comment_limit]:\n+                for comment in list(post.comments)[:comment_limit]:\n                     # Print comment body for debugging\n                     if any(\n                         keyword.lower() in comment.body.lower()\ndiff --git a/camel/toolkits/whatsapp_toolkit.py b/camel/toolkits/whatsapp_toolkit.py\nindex 80f778cfa4..f2859e6753 100644\n--- a/camel/toolkits/whatsapp_toolkit.py\n+++ b/camel/toolkits/whatsapp_toolkit.py\n@@ -19,7 +19,7 @@\n \n from camel.toolkits import FunctionTool\n from camel.toolkits.base import BaseToolkit\n-from camel.utils.commons import retry_request\n+from camel.utils import retry_on_error\n \n \n class WhatsAppToolkit(BaseToolkit):\n@@ -36,18 +36,8 @@ class WhatsAppToolkit(BaseToolkit):\n         version (str): API version.\n     \"\"\"\n \n-    def __init__(self, retries: int = 3, delay: int = 1):\n-        r\"\"\"Initializes the WhatsAppToolkit with the specified number of\n-        retries and delay.\n-\n-        Args:\n-            retries (int): Number of times to retry the request in case of\n-                failure. (default: :obj:`3`)\n-            delay (int): Time in seconds to wait between retries.\n-                (default: :obj:`1`)\n-        \"\"\"\n-        self.retries = retries\n-        self.delay = delay\n+    def __init__(self):\n+        r\"\"\"Initializes the WhatsAppToolkit.\"\"\"\n         self.base_url = \"https://graph.facebook.com\"\n         self.version = \"v17.0\"\n \n@@ -61,6 +51,7 @@ def __init__(self, retries: int = 3, delay: int = 1):\n                 \"WHATSAPP_PHONE_NUMBER_ID environment variables.\"\n             )\n \n+    @retry_on_error()\n     def send_message(\n         self, to: str, message: str\n     ) -> Union[Dict[str, Any], str]:\n@@ -88,19 +79,15 @@ def send_message(\n         }\n \n         try:\n-            response = retry_request(\n-                requests.post,\n-                retries=self.retries,\n-                delay=self.delay,\n-                url=url,\n-                headers=headers,\n-                json=data,\n-            )\n+            response = requests.post(url=url, headers=headers, json=data)\n             response.raise_for_status()\n             return response.json()\n+        except requests.exceptions.RequestException as e:\n+            raise e\n         except Exception as e:\n             return f\"Failed to send message: {e!s}\"\n \n+    @retry_on_error()\n     def get_message_templates(self) -> Union[List[Dict[str, Any]], str]:\n         r\"\"\"Retrieves all message templates for the WhatsApp Business account.\n \n@@ -116,18 +103,13 @@ def get_message_templates(self) -> Union[List[Dict[str, Any]], str]:\n         headers = {\"Authorization\": f\"Bearer {self.access_token}\"}\n \n         try:\n-            response = retry_request(\n-                requests.get,\n-                retries=self.retries,\n-                delay=self.delay,\n-                url=url,\n-                headers=headers,\n-            )\n+            response = requests.get(url=url, headers=headers)\n             response.raise_for_status()\n             return response.json().get(\"data\", [])\n         except Exception as e:\n             return f\"Failed to retrieve message templates: {e!s}\"\n \n+    @retry_on_error()\n     def get_business_profile(self) -> Union[Dict[str, Any], str]:\n         r\"\"\"Retrieves the WhatsApp Business profile information.\n \n@@ -149,10 +131,7 @@ def get_business_profile(self) -> Union[Dict[str, Any], str]:\n         }\n \n         try:\n-            response = retry_request(\n-                requests.get,\n-                retries=self.retries,\n-                delay=self.delay,\n+            response = requests.get(\n                 url=url,\n                 headers=headers,\n                 params=params,\ndiff --git a/camel/types/enums.py b/camel/types/enums.py\nindex dc5c0501b0..b549b8d9a7 100644\n--- a/camel/types/enums.py\n+++ b/camel/types/enums.py\n@@ -218,7 +218,11 @@ def value_for_tiktoken(self) -> str:\n \n     @property\n     def support_native_structured_output(self) -> bool:\n-        return self.is_openai\n+        return any(\n+            [\n+                self.is_openai,\n+            ]\n+        )\n \n     @property\n     def support_native_tool_calling(self) -> bool:\ndiff --git a/camel/utils/__init__.py b/camel/utils/__init__.py\nindex 448670c271..481471f3c3 100644\n--- a/camel/utils/__init__.py\n+++ b/camel/utils/__init__.py\n@@ -14,6 +14,7 @@\n \n from .commons import (\n     AgentOpsMeta,\n+    BatchProcessor,\n     agentops_decorator,\n     api_keys_required,\n     check_server_running,\n@@ -33,6 +34,7 @@\n     is_docker_running,\n     json_to_function_code,\n     print_text_animated,\n+    retry_on_error,\n     text_extract_from_web,\n     to_pascal,\n     track_agent,\n@@ -80,4 +82,6 @@\n     \"get_pydantic_model\",\n     \"download_github_subdirectory\",\n     \"generate_prompt_for_structured_output\",\n+    \"retry_on_error\",\n+    \"BatchProcessor\",\n ]\ndiff --git a/camel/utils/commons.py b/camel/utils/commons.py\nindex a131f41770..29a82f86a8 100644\n--- a/camel/utils/commons.py\n+++ b/camel/utils/commons.py\n@@ -11,7 +11,9 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import functools\n import importlib\n+import logging\n import os\n import platform\n import re\n@@ -47,6 +49,8 @@\n \n F = TypeVar('F', bound=Callable[..., Any])\n \n+logger = logging.getLogger(__name__)\n+\n \n def print_text_animated(text, delay: float = 0.02, end: str = \"\"):\n     r\"\"\"Prints the given text with an animated effect.\n@@ -620,33 +624,206 @@ def handle_http_error(response: requests.Response) -> str:\n         return \"HTTP Error\"\n \n \n-def retry_request(\n-    func: Callable, retries: int = 3, delay: int = 1, *args: Any, **kwargs: Any\n-) -> Any:\n-    r\"\"\"Retries a function in case of any errors.\n+def retry_on_error(\n+    max_retries: int = 3, initial_delay: float = 1.0\n+) -> Callable:\n+    r\"\"\"Decorator to retry function calls on exception with exponential\n+    backoff.\n \n     Args:\n-        func (Callable): The function to be retried.\n-        retries (int): Number of retry attempts. (default: :obj:`3`)\n-        delay (int): Delay between retries in seconds. (default: :obj:`1`)\n-        *args: Arguments to pass to the function.\n-        **kwargs: Keyword arguments to pass to the function.\n+        max_retries (int): Maximum number of retry attempts\n+        initial_delay (float): Initial delay between retries in seconds\n \n     Returns:\n-        Any: The result of the function call if successful.\n+        Callable: Decorated function with retry logic\n+    \"\"\"\n \n-    Raises:\n-        Exception: If all retry attempts fail.\n+    def decorator(func: Callable) -> Callable:\n+        @functools.wraps(func)\n+        def wrapper(*args, **kwargs):\n+            delay = initial_delay\n+            last_exception = None\n+\n+            for attempt in range(max_retries + 1):\n+                try:\n+                    return func(*args, **kwargs)\n+                except Exception as e:\n+                    last_exception = e\n+                    if attempt == max_retries:\n+                        logger.error(\n+                            f\"Failed after {max_retries} retries: {e!s}\"\n+                        )\n+                        raise\n+\n+                    logger.warning(\n+                        f\"Attempt {attempt + 1} failed: {e!s}. \"\n+                        f\"Retrying in {delay:.1f}s...\"\n+                    )\n+                    time.sleep(delay)\n+                    delay *= 2  # Exponential backoff\n+\n+            raise last_exception\n+\n+        return wrapper\n+\n+    return decorator\n+\n+\n+class BatchProcessor:\n+    r\"\"\"Handles batch processing with dynamic sizing and error handling based\n+    on system load.\n     \"\"\"\n-    for attempt in range(retries):\n-        try:\n-            return func(*args, **kwargs)\n-        except Exception as e:\n-            print(f\"Attempt {attempt + 1}/{retries} failed: {e}\")\n-            if attempt < retries - 1:\n-                time.sleep(delay)\n-            else:\n-                raise\n+\n+    def __init__(\n+        self,\n+        max_workers: Optional[int] = None,\n+        initial_batch_size: Optional[int] = None,\n+        monitoring_interval: float = 5.0,\n+        cpu_threshold: float = 80.0,\n+        memory_threshold: float = 85.0,\n+    ):\n+        r\"\"\"Initialize the BatchProcessor with dynamic worker allocation.\n+\n+        Args:\n+            max_workers: Maximum number of workers. If None, will be\n+                determined dynamically based on system resources.\n+                (default: :obj:`None`)\n+            initial_batch_size: Initial size of each batch. If `None`,\n+                defaults to `10`. (default: :obj:`None`)\n+            monitoring_interval: Interval in seconds between resource checks.\n+                (default: :obj:`5.0`)\n+            cpu_threshold: CPU usage percentage threshold for scaling down.\n+                (default: :obj:`80.0`)\n+            memory_threshold: Memory usage percentage threshold for scaling\n+                down. (default: :obj:`85.0`)\n+        \"\"\"\n+        import psutil\n+\n+        self.monitoring_interval = monitoring_interval\n+        self.cpu_threshold = cpu_threshold\n+        self.memory_threshold = memory_threshold\n+        self.last_check_time = time.time()\n+        self.psutil = psutil\n+\n+        # Initialize performance metrics\n+        self.total_processed = 0\n+        self.total_errors = 0\n+        self.processing_times: List = []\n+\n+        if max_workers is None:\n+            self.max_workers = self._calculate_optimal_workers()\n+        else:\n+            self.max_workers = max_workers\n+\n+        self.batch_size = (\n+            10 if initial_batch_size is None else initial_batch_size\n+        )\n+        self.min_batch_size = 1\n+        self.max_batch_size = 20\n+        self.backoff_factor = 0.8\n+        self.success_factor = 1.2\n+\n+        # Initial resource check\n+        self._update_resource_metrics()\n+\n+    def _calculate_optimal_workers(self) -> int:\n+        r\"\"\"Calculate optimal number of workers based on system resources.\"\"\"\n+        cpu_count = self.psutil.cpu_count()\n+        cpu_percent = self.psutil.cpu_percent(interval=1)\n+        memory = self.psutil.virtual_memory()\n+\n+        # Base number of workers on CPU count and current load\n+        if cpu_percent > self.cpu_threshold:\n+            workers = max(1, cpu_count // 4)\n+        elif cpu_percent > 60:\n+            workers = max(1, cpu_count // 2)\n+        else:\n+            workers = max(1, cpu_count - 1)\n+\n+        # Further reduce if memory is constrained\n+        if memory.percent > self.memory_threshold:\n+            workers = max(1, workers // 2)\n+\n+        return workers\n+\n+    def _update_resource_metrics(self) -> None:\n+        r\"\"\"Update current resource usage metrics.\"\"\"\n+        self.current_cpu = self.psutil.cpu_percent()\n+        self.current_memory = self.psutil.virtual_memory().percent\n+        self.last_check_time = time.time()\n+\n+    def _should_check_resources(self) -> bool:\n+        r\"\"\"Determine if it's time to check resource usage again.\"\"\"\n+        return time.time() - self.last_check_time >= self.monitoring_interval\n+\n+    def adjust_batch_size(\n+        self, success: bool, processing_time: Optional[float] = None\n+    ) -> None:\n+        r\"\"\"Adjust batch size based on success/failure and system resources.\n+\n+        Args:\n+            success (bool): Whether the last batch completed successfully\n+            processing_time (Optional[float]): Time taken to process the last\n+                batch. (default: :obj:`None`)\n+        \"\"\"\n+        # Update metrics\n+        self.total_processed += 1\n+        if not success:\n+            self.total_errors += 1\n+        if processing_time is not None:\n+            self.processing_times.append(processing_time)\n+\n+        # Check system resources if interval has elapsed\n+        if self._should_check_resources():\n+            self._update_resource_metrics()\n+\n+            # Adjust based on resource usage\n+            if (\n+                self.current_cpu > self.cpu_threshold\n+                or self.current_memory > self.memory_threshold\n+            ):\n+                self.batch_size = max(\n+                    int(self.batch_size * self.backoff_factor),\n+                    self.min_batch_size,\n+                )\n+                self.max_workers = max(1, self.max_workers - 1)\n+                return\n+\n+        # Adjust based on success/failure\n+        if success:\n+            self.batch_size = min(\n+                int(self.batch_size * self.success_factor), self.max_batch_size\n+            )\n+        else:\n+            self.batch_size = max(\n+                int(self.batch_size * self.backoff_factor), self.min_batch_size\n+            )\n+\n+    def get_performance_metrics(self) -> Dict[str, Any]:\n+        r\"\"\"Get current performance metrics.\n+\n+        Returns:\n+            Dict containing performance metrics including:\n+            - total_processed: Total number of batches processed\n+            - error_rate: Percentage of failed batches\n+            - avg_processing_time: Average time per batch\n+            - current_batch_size: Current batch size\n+            - current_workers: Current number of workers\n+            - current_cpu: Current CPU usage percentage\n+            - current_memory: Current memory usage percentage\n+        \"\"\"\n+        metrics = {\n+            \"total_processed\": self.total_processed,\n+            \"error_rate\": (self.total_errors / max(1, self.total_processed))\n+            * 100,\n+            \"avg_processing_time\": sum(self.processing_times)\n+            / max(1, len(self.processing_times)),\n+            \"current_batch_size\": self.batch_size,\n+            \"current_workers\": self.max_workers,\n+            \"current_cpu\": self.current_cpu,\n+            \"current_memory\": self.current_memory,\n+        }\n+        return metrics\n \n \n def download_github_subdirectory(\ndiff --git a/docs/camel.rst b/docs/camel.rst\nindex 449642d530..740b64a111 100644\n--- a/docs/camel.rst\n+++ b/docs/camel.rst\n@@ -9,6 +9,7 @@ Subpackages\n \n    camel.agents\n    camel.configs\n+   camel.datagen\n    camel.embeddings\n    camel.interpreters\n    camel.loaders\ndiff --git a/docs/cookbooks/data_generation/index.rst b/docs/cookbooks/data_generation/index.rst\nindex 91fa5114ac..1cda3b3171 100644\n--- a/docs/cookbooks/data_generation/index.rst\n+++ b/docs/cookbooks/data_generation/index.rst\n@@ -21,3 +21,4 @@ Agentic Data Generation\n    data_model_generation_and_structured_output_with_qwen\n    distill_math_reasoning_data_from_deepseek_r1\n    self_improving_math_reasoning_data_distillation_from_deepSeek_r1\n+   self_improving_cot_generation\ndiff --git a/docs/cookbooks/data_generation/self_improving_cot_generation.md b/docs/cookbooks/data_generation/self_improving_cot_generation.md\nnew file mode 100644\nindex 0000000000..33382503b6\n--- /dev/null\n+++ b/docs/cookbooks/data_generation/self_improving_cot_generation.md\n@@ -0,0 +1,345 @@\n+# Deep Dive into CAMEL\u2019s Practices for Self-Improving CoT Generation \ud83d\ude80\n+\n+The field of AI is rapidly evolving, with reasoning models playing a crucial role in enhancing the problem-solving capabilities of large language models (LLMs). Recent developments, such as DeepSeek's R1 and OpenAI's o3-mini, demonstrate the industry's commitment to advancing reasoning through innovative approaches.\n+\n+DeepSeek's R1 model, introduced in January 2025, has shown remarkable proficiency in tasks that require complex reasoning and code generation. Its exceptional performance in areas like mathematics, science, and programming is particularly noteworthy.\n+\n+By distilling Chain-of-Thought (CoT) data from reasoning models, we can generate high-quality reasoning traces that are more accurate in solving complex problems. These generated data can be used to further fine-tune another LLM with less parameters, thereby enhancing its reasoning ability.\n+\n+CAMEL developed an approach leverages iterative refinement, self-assessment, and efficient batch processing to enable the continuous improvement of reasoning traces. In this blog, we will delve into how CAMEL implements its self-improving CoT pipeline.\n+\n+---\n+\n+## 1. Overview of the End-to-End Pipeline \ud83d\udd0d\n+\n+### 1.1 Why an Iterative CoT Pipeline? \n+\n+One-time CoT generation often leads to incomplete or suboptimal solutions. CAMEL addresses this challenge by employing a multi-step, iterative approach:\n+\n+1. **Generate** an initial reasoning trace.\n+2. **Evaluate** the trace through either a dedicated evaluation agent or a specialized reward model.\n+3. **Refine** the trace based on the feedback provided.\n+\n+This self-improving methodology ensures that the reasoning process improves progressively, meeting specific thresholds for correctness, clarity, and completeness. Each iteration enhances the model's ability to solve the problem by learning from the previous outputs and evaluations.\n+\n+### 1.2 Core Components \n+\n+The self-improving pipeline consists of three key components:\n+1. **`reason_agent`:** This agent is responsible for generating or improving reasoning traces.\n+2. **`evaluate_agent`:** An optional agent that evaluates the quality of the reasoning trace. This can be replaced by a reward model if needed.\n+3. **`reward_model`:** An optional model that provides numerical feedback on the trace, evaluating dimensions such as correctness, coherence, complexity, and verbosity.\n+\n+Here's a high-level diagram of the pipeline:\n+\n+![Self-Improving CoT Pipeline](https://i.postimg.cc/DygTcWd6/download.png)\n+\n+---\n+\n+## 2. Generation of CoT Data: The Heart of the Pipeline \ud83e\udd16\n+\n+Generating CoT data is at the core of the pipeline. Below, we outline the process in detail.\n+\n+### 2.1 Initial Trace Generation \ud83d\udc23\n+\n+The first step in the process is the generation of an initial reasoning trace. The **`reason_agent`** plays a central role here, creating a coherent and logical explanation of how to solve a given problem. The agent breaks down the problem into smaller steps, illustrating the thought process at each stage. We also support the use of non-reasoning LLMs to generate traces through prompt engineering.\n+\n+The generation could also guided by **few-shot examples**, which provide context and help the agent understand the desired reasoning style. Here\u2019s how this is accomplished:\n+\n+- **Input**: The problem statement is provided to the **`reason_agent`**, we can optionally provide the ground truth to guide the reasoning process.\n+- **Output**: The agent generates a sequence of reasoning content.\n+\n+This initial generation serves as a foundational reasoning process that can be directly useful or further refined.\n+\n+### 2.2 Evaluation of the Initial Trace \ud83d\udcd2\n+\n+Once the reasoning trace is generated, it is evaluated for its quality. This evaluation serves two purposes:\n+\n+- **Detecting weaknesses**: The evaluation identifies areas where the reasoning trace could be further improved.\n+- **Providing feedback**: The evaluation produces feedback that guides the agent in refining the reasoning trace. This feedback can come from either the **`evaluate_agent`** or a **`reward_model`**.\n+\n+#### 2.2.1 Agent-Based Evaluation \n+\n+If an **`evaluate_agent`** is available, it examines the reasoning trace for:\n+1. **Correctness**: Does the trace logically solve the problem?\n+2. **Clarity**: Is the reasoning easy to follow and well-structured?\n+3. **Completeness**: Are all necessary steps included in the reasoning?\n+\n+The feedback from the agent provides insights into areas for improvement, such as unclear reasoning or incorrect answers, offering a more generalized approach compared to rule-based matching.\n+\n+#### 2.2.2 Reward Model Evaluation \n+\n+Alternatively, the pipeline supports using a **reward model** to evaluate the trace. The reward model outputs scores based on predefined dimensions such as correctness, coherence, complexity, and verbosity.\n+\n+---\n+\n+### 2.3 Iterative Refinement: The Self-Improving Cycle \ud83d\udd01\n+\n+The key to CAMEL's success in CoT generation is its **self-improving loop**. After the initial trace is generated and evaluated, the model refines the trace based on the evaluation feedback. This process is repeated in a loop.\n+\n+#### How does this iterative refinement work?\n+\n+1. **Feedback Integration**: The feedback from the evaluation phase is used to refine the reasoning. This could involve rewording unclear parts, adding missing steps, or adjusting the logic to make it more correct or complete.\n+   \n+2. **Improvement through Reasoning**: After receiving feedback, the **`reason_agent`** is used again to generate an improved version of the reasoning trace. This trace incorporates the feedback provided, refining the earlier steps and enhancing the overall reasoning.\n+\n+3. **Re-evaluation**: Once the trace is improved, the new version is evaluated again using the same process (either agent-based evaluation or reward model). This new trace is assessed against the same criteria to ensure the improvements have been made.\n+\n+4. **Threshold Check**: The iterative process continues until the desired quality thresholds are met or reached the maximum number of iterations.\n+\n+---\n+\n+## 3. Pipeline Setup in Code \ud83d\udcbb\n+\n+Below is a truncated version of our pipeline initialization. We encapsulate logic in a class called `SelfImprovingCoTPipeline`:\n+\n+```python\n+class SelfImprovingCoTPipeline:\n+    def __init__(\n+        self,\n+        reason_agent: ChatAgent,\n+        problems: List[Dict],\n+        max_iterations: int = 3,\n+        score_threshold: Union[float, Dict[str, float]] = 0.7,\n+        evaluate_agent: Optional[ChatAgent] = None,\n+        reward_model: Optional[BaseRewardModel] = None,\n+        output_path: Optional[str] = None,\n+        few_shot_examples: Optional[str] = None,\n+        batch_size: Optional[int] = None,\n+        max_workers: Optional[int] = None,\n+        solution_pattern: str = r'\\\\boxed{(.*?)}',\n+        trace_pattern: Optional[str] = None,\n+    ):\n+        r\"\"\"Initialize the STaR pipeline.\n+\n+        Args:\n+            reason_agent (ChatAgent): The chat agent used for generating and\n+                improving reasoning traces.\n+            problems (List[Dict]): List of problem dictionaries to process.\n+            max_iterations (int, optional): Maximum number of improvement\n+                iterations. If set to `0`, the pipeline will generate an\n+                initial trace without any improvement iterations.\n+                (default: :obj:`3`)\n+            score_threshold (Union[float, Dict[str, float]], optional):\n+                Quality threshold. Can be either a single float value applied\n+                to average score, or a dictionary mapping score dimensions to\n+                their thresholds. For example: {\"correctness\": 0.8,\n+                \"coherence\": 0.7}. If using reward model and threshold for a\n+                dimension is not specified, will use the default value 0.7.\n+                (default: :obj:`0.7`)\n+            evaluate_agent (Optional[ChatAgent]): The chat agent used for\n+                evaluating reasoning traces. (default: :obj:`None`)\n+            reward_model (BaseRewardModel, optional): Model used to evaluate\n+                reasoning traces. If `None`, uses Agent self-evaluation.\n+                (default: :obj:`None`)\n+            output_path (str, optional): Output path for saving traces. If\n+                `None`, results will only be returned without saving to file.\n+                (default: :obj:`None`)\n+            few_shot_examples (str, optional): Examples to use for few-shot\n+                generation. (default: :obj:`None`)\n+            batch_size (int, optional): Batch size for parallel processing.\n+                (default: :obj:`None`)\n+            max_workers (int, optional): Maximum number of worker threads.\n+                (default: :obj:`None`)\n+            solution_pattern (str, optional): Regular expression pattern with\n+                one capture group to extract answers from solution text.\n+                (default: :obj:`r'\\\\boxed{(.*?)}'`)\n+            trace_pattern (str, optional): Regular expression pattern with one\n+                capture group to extract answers from trace text. If `None`,\n+                uses the same pattern as solution_pattern.\n+                (default: :obj:`None`)\n+        \"\"\"\n+        ...\n+```\n+\n+**Example usage:**\n+\n+```python\n+from camel.agents import ChatAgent\n+from camel.datagen import SelfImprovingCoTPipeline\n+\n+# Initialize agents\n+reason_agent = ChatAgent(\n+    \"You are a struggling student who finds solving math problems challenging. \"\n+    \"Your reasoning process is often flawed or lacks clarity when explaining \"\n+    \"your answers to others.\"\n+)\n+\n+evaluate_agent = ChatAgent(\n+    \"You are a highly critical teacher who evaluates the student's answers \"\n+    \"with a meticulous and demanding approach.\"\n+)\n+\n+# Prepare your problems\n+problems = [\n+    {\"problem\": \"Your problem text here\"},\n+    # Add more problems...\n+]\n+\n+# Create and run the pipeline\n+pipeline = SelfImprovingCoTPipeline(\n+    reason_agent=reason_agent,\n+    evaluate_agent=evaluate_agent,\n+    problems=problems,\n+    max_iterations=3,\n+    output_path=\"star_output.json\"\n+)\n+\n+results = pipeline.generate()\n+```\n+\n+---\n+\n+## 4. Batch Processing & API Request Handling \ud83d\udce6\n+\n+### 4.1 The Need for Batch Processing \u23f0\n+\n+Early on, we tried generating CoT reasoning for each problem one by one. This approach quickly revealed two major issues:\n+\n+1. **Time consumption**: Sequential processing doesn't scale to large problem sets.\n+2. **API request bottlenecks**: Slowdowns or occasional disconnections occurred when handling numerous calls.\n+\n+Hence, we introduced a parallel **`BatchProcessor`** to:\n+\n+- Split the tasks into manageable batches.\n+- Dynamically adjust batch size (`batch_size`) based on the success/failure rates and system resource usage (CPU/memory).\n+- Retry on transient errors or API timeouts to maintain a stable flow.\n+\n+Below shows how we batch-process multiple problems:\n+\n+```python\n+async def _batch_process_problems(\n+    self, problems: List[Dict], rationalization: bool\n+) -> List[ProblemResult]:\n+    results = []\n+    total_problems = len(problems)\n+    processed = 0\n+\n+    while processed < total_problems:\n+        batch_size = self.batch_processor.batch_size\n+        batch = problems[processed : processed + batch_size]\n+        batch_start_time = time.time()\n+\n+        with ThreadPoolExecutor(max_workers=self.batch_processor.max_workers) as executor:\n+            futures = [\n+                executor.submit(\n+                    self.process_problem,\n+                    problem=problem,\n+                    rationalization=rationalization,\n+                )\n+                for problem in batch\n+            ]\n+            ...\n+        processed += len(batch)\n+        ...\n+        # Log progress & performance\n+```\n+\n+### 4.2 Handling API Instability \ud83d\udea8\n+\n+Even with batching, API requests for LLMs can fail due to network fluctuations or remote server instability. We implemented a `retry_on_error` decorator:\n+\n+```python\n+def retry_on_error(\n+    max_retries: int = 3, initial_delay: float = 1.0\n+) -> Callable:\n+    def decorator(func: Callable) -> Callable:\n+        @functools.wraps(func)\n+        def wrapper(*args, **kwargs):\n+            delay = initial_delay\n+            for attempt in range(max_retries + 1):\n+                try:\n+                    return func(*args, **kwargs)\n+                except Exception as e:\n+                    if attempt == max_retries:\n+                        raise\n+                    time.sleep(delay)\n+                    delay *= 2\n+            raise\n+        return wrapper\n+    return decorator\n+```\n+\n+Whenever we invoke LLM calls for generation, evaluation, or improvement, these decorated methods gracefully handle transient errors by retrying with exponential backoff (doubling the wait time after each failed attempt).\n+\n+---\n+\n+## 5. Model Switching & Dynamic File Writing \ud83d\udcdd\n+\n+### 5.1 Flexible Model Scheduling \ud83d\udd52\n+\n+In CAMEL's CoT pipeline, adding models to the `ChatAgent` is useful for handling errors and ensuring smooth operation. This setup allows the system to switch between models as needed, maintaining reasoning continuity.\n+\n+To add models to a `ChatAgent`, you can create instances of models and include them in the agent's model list:\n+\n+```python\n+model1 = ModelFactory.create(\n+    model_platform=ModelPlatformType.DEEPSEEK,\n+    model_type=\"deepseek-reasoner\",\n+    ...\n+)\n+\n+model2 = ModelFactory.create(\n+    model_platform=ModelPlatformType.TOGETHER,\n+    model_type=\"deepseek-reasoner\",\n+    ...\n+)\n+\n+agent = ChatAgent(\n+    system_message,\n+    model=[model1, model2]\n+)\n+```\n+\n+By incorporating multiple models, CAMEL can effectively manage model availability and ensure robust error handling.\n+\n+### 5.2 Real-Time JSON Updates \ud83d\udd04\n+\n+As soon as a problem\u2019s results are ready, we lock the file (`output_path`) and update it in-place\u2014rather than saving everything at the very end. This ensures data integrity if the process is interrupted partway through.\n+\n+```python\n+def safe_write_json(self, file_path, data):\n+    temp_path = file_path + \".tmp\"\n+    with open(temp_path, \"w\") as f:\n+        json.dump(data, f, indent=2)\n+    os.replace(temp_path, file_path)\n+```\n+\n+This two-step write (to a `.tmp` file then replace) prevents partial writes from corrupting the output file.\n+\n+---\n+\n+## 6. CAMEL\u2019s Next Steps in CoT Data Generation \ud83d\ude80\n+\n+1. **Real-Time Monitoring Dashboard**: Visualize throughput, error rates, running cost, data quality, etc. for smooth operational oversight.\n+2. **Performance Enhancements**: Further improve performance and add more error handling to make the system more robust.\n+3. **Cutting-Edge Research Solutions**: Integrate more cutting-edge research solutions for synthetic data generation.\n+4. **Rejection Sampling**: Integrate rejection sampling method to the SelfImprovingCoT pipeline.\n+\n+---\n+\n+## Conclusion \ud83d\udcda\n+\n+CAMEL\u2019s self-improving pipeline exemplifies a comprehensive approach to Chain-of-Thought data generation:\n+\n+- **Flexible Evaluation**: Utilizing agent-based or reward-model-based evaluation provides adaptable scoring and feedback loops.\n+- **Continuous Improvement**: Iterative refinement ensures each reasoning trace is enhanced until it meets the desired quality.\n+- **Efficient Processing**: Batched concurrency increases throughput while maintaining system balance.\n+- **Robust Stability**: Error-tolerant mechanisms with retries enhance system reliability.\n+- **Consistent Output**: Dynamic file writing ensures partial results are consistently preserved and valid.\n+\n+Looking ahead, CAMEL\u2019s roadmap is dedicated to pioneering advanced synthetic data generation methods, integrating cutting-edge research and technology.\n+\n+_Stay tuned for more updates on CAMEL's journey in advancing agentic synthetic data generation!_\n+\n+---\n+\n+**Further Reading & Resources**\n+\n+- **CAMEL GitHub**: Explore our open-source projects on [GitHub](https://github.com/camel-ai/camel) and give us a \ud83c\udf1fstar.\n+\n+**Data Generation Cookbooks**\n+\n+- [Self-Improving Math Reasoning Data Distillation](https://docs.camel-ai.org/cookbooks/data_generation/self_improving_math_reasoning_data_distillation_from_deepSeek_r1.html)\n+- [Generating High-Quality SFT Data with CAMEL](https://docs.camel-ai.org/cookbooks/data_generation/sft_data_generation_and_unsloth_finetuning_Qwen2_5_7B.html)\n+- [Function Call Data Generation and Evaluation](https://docs.camel-ai.org/cookbooks/data_generation/data_gen_with_real_function_calls_and_hermes_format.html)\n+- [Agentic Data Generation, Evaluation & Filtering with Reward Models](https://docs.camel-ai.org/cookbooks/data_generation/synthetic_dataevaluation%26filter_with_reward_model.html)\n\\ No newline at end of file\ndiff --git a/docs/key_modules/datagen.md b/docs/key_modules/datagen.md\nnew file mode 100644\nindex 0000000000..25f15bddbc\n--- /dev/null\n+++ b/docs/key_modules/datagen.md\n@@ -0,0 +1,493 @@\n+# Data Generation Modules\n+\n+This document describes the key data generation modules in CAMEL: Chain of Thought (CoT), Self-Instruct, Source2Synth, and STaR.\n+\n+## Chain of Thought (CoT) Data Generation\n+\n+### Overview\n+\n+The Chain of Thought (CoT) data generation module implements a sophisticated system for generating high-quality reasoning paths through chat agent interactions. It combines several advanced algorithms to produce and validate reasoning chains.\n+\n+### Key Features\n+\n+- Monte Carlo Tree Search (MCTS) for solution exploration\n+- Binary Search Error Detection for precise error localization\n+- Dual-Agent Verification System for quality assurance\n+- Solution Tree Management for tracking reasoning paths\n+\n+### Core Components\n+\n+#### CoTDataGenerator Class\n+\n+The main class that implements the CoT generation system with the following capabilities:\n+\n+- **Dual-Agent Architecture**: Supports both single-agent (legacy) and dual-agent modes\n+- **Answer Generation**: Sophisticated answer generation with MCTS\n+- **Answer Verification**: Robust verification system using golden answers\n+- **Error Detection**: Binary search-based error detection in solutions\n+- **Solution Management**: Comprehensive solution tree management and export\n+\n+### Usage\n+\n+#### Basic Example\n+\n+```python\n+from camel.agents import ChatAgent\n+from camel.datagen import CoTDataGenerator\n+\n+# Initialize agents\n+generator_agent = ChatAgent(\"System message for generator\")\n+verifier_agent = ChatAgent(\"System message for verifier\")\n+\n+# Define golden answers\n+golden_answers = {\n+    \"question1\": \"answer1\",\n+    \"question2\": \"answer2\"\n+}\n+\n+# Create generator\n+cot_generator = CoTDataGenerator(\n+    generator_agent=generator_agent,\n+    verifier_agent=verifier_agent,\n+    golden_answers=golden_answers,\n+    search_limit=100\n+)\n+\n+# Generate solution\n+solution = cot_generator.solve(\"question1\")\n+```\n+\n+#### Data Import/Export\n+\n+```python\n+# Import QA pairs from JSON\n+cot_generator.import_qa_from_json(\"qa_pairs.json\")\n+\n+# Export solutions\n+cot_generator.export_solutions(\"solutions.json\")\n+```\n+\n+### Solution Generation Process\n+\n+1. **Direct Solution Attempt**\n+   - First tries to solve the problem directly\n+   - Verifies against golden answer\n+\n+2. **MCTS-based Exploration**\n+   - If direct solution fails, uses MCTS to explore solution space\n+   - Builds solution tree based on previous attempts\n+\n+3. **Error Detection and Correction**\n+   - Uses binary search to locate errors in solutions\n+   - Generates new solutions based on correct parts\n+\n+4. **Solution Verification**\n+   - Verifies solutions using dual-agent system or golden answers\n+   - Maintains solution quality through strict verification\n+\n+### Configuration Options\n+\n+- `search_limit`: Maximum number of search iterations (default: 100)\n+- `generator_agent`: Specialized agent for answer generation\n+- `verifier_agent`: Specialized agent for answer verification\n+- `golden_answers`: Pre-defined correct answers for validation\n+\n+### Output Format\n+\n+The solution tree is exported in JSON format containing:\n+- Solutions with intermediate steps\n+- Golden answers used for verification\n+- Export timestamp\n+- Solution scores and verification results\n+\n+\n+## Self-Instruct: Instruction Generation\n+\n+### Overview\n+\n+The Self-Instruct module implements a pipeline for generating and managing machine-generated instructions for tasks. It combines human-written seed instructions with machine-generated ones to create diverse, high-quality task instructions, while ensuring quality through configurable filtering mechanisms.\n+\n+### Core Components\n+\n+#### Self Instruct Pipeline\n+\n+The main pipeline class that orchestrates the instruction generation process.\n+\n+Key Features:\n+- Combines human-written and machine-generated instructions using configurable ratios\n+- Supports classification and non-classification task types\n+- Built-in instruction filtering and validation\n+- Automatic instance generation for tasks\n+- JSON-based data input/output\n+\n+#### Instruction Filter\n+\n+A comprehensive filtering system for validating and filtering generated instructions.\n+\n+Features:\n+- Length-based filtering\n+- Keyword filtering\n+- Punctuation checks\n+- Non-English text detection\n+- ROUGE similarity filtering for deduplication\n+- Extensible filter registry for custom filters\n+\n+### Usage\n+\n+#### Basic Example\n+\n+```python\n+from camel.agents import ChatAgent\n+from camel.datagen.self_instruct import SelfInstructPipeline\n+\n+# Initialize agent\n+agent = ChatAgent()\n+\n+# Create pipeline with default settings\n+pipeline = SelfInstructPipeline(\n+    agent=agent,\n+    seed='seed_tasks.jsonl',  # Path to human-written seed tasks\n+    num_machine_instructions=5,\n+    data_output_path='./data_output.json',\n+    human_to_machine_ratio=(6, 2)  # Use 6 human tasks and 2 machine tasks for generation\n+)\n+\n+# Generate instructions\n+pipeline.generate()\n+```\n+\n+#### Custom Filtering\n+\n+```python\n+from camel.datagen.self_instruct import SelfInstructPipeline\n+from camel.datagen.self_instruct.filter import InstructionFilter\n+\n+# Configure filters\n+filter_config = {\n+    \"length\": {},  # Default length constraints\n+    \"keyword\": {},  # Keyword-based filtering\n+    \"punctuation\": {},  # Punctuation checks\n+    \"non_english\": {},  # Non-English text detection\n+    \"rouge_similarity\": {  # ROUGE-based similarity filtering\n+        \"threshold\": 0.7,\n+        \"metric\": \"rouge-l\"\n+    }\n+}\n+\n+# Create pipeline with custom filter configuration\n+pipeline = SelfInstructPipeline(\n+    agent=agent,\n+    seed='seed_tasks.jsonl',\n+    instruction_filter=InstructionFilter(filter_config),\n+    num_machine_instructions=5\n+)\n+```\n+\n+### Configuration Options\n+\n+#### Pipeline Parameters\n+\n+- `agent`: ChatAgent instance for generating instructions\n+- `seed`: Path to human-written seed tasks in JSONL format\n+- `num_machine_instructions`: Number of machine-generated instructions to generate (default: 5)\n+- `data_output_path`: Path for saving generated data (default: './data_output.json')\n+- `human_to_machine_ratio`: Ratio of human to machine tasks for generation (default: (6, 2))\n+- `instruction_filter`: Custom InstructionFilter instance (optional)\n+- `filter_config`: Configuration dictionary for default filters (optional)\n+\n+#### Filter Configuration\n+\n+The default filter configuration includes:\n+- `length`: Configure length constraints for instructions\n+- `keyword`: Set up keyword-based filtering rules\n+- `punctuation`: Define punctuation validation rules\n+- `non_english`: Configure non-English text detection\n+- `rouge_similarity`: Set ROUGE similarity thresholds for deduplication\n+\n+### Pipeline Stages\n+\n+1. **Seed Loading**\n+   - Load human-written instructions from JSONL file\n+   - Validate seed format\n+   - Initialize task storage\n+\n+2. **Instruction Generation**\n+   - Sample human and machine tasks based on ratio\n+   - Generate new instructions using ChatAgent\n+   - Apply instruction filters\n+\n+3. **Task Classification**\n+   - Identify if tasks are classification or non-classification\n+   - Generate appropriate prompts based on task type\n+\n+4. **Instance Generation**\n+   - Generate input-output pairs for each task\n+   - Parse and format instances based on task type\n+   - Apply quality filters\n+\n+5. **Data Output**\n+   - Save generated tasks and instances to JSON\n+   - Include metadata and configuration details\n+   - Maintain structured output format\n+\n+### Input/Output Format\n+\n+#### Seed Tasks (Input)\n+```jsonl\n+{\"instruction\": \"Classify the sentiment of this text as positive or negative.\"}\n+{\"instruction\": \"Generate a summary of the given paragraph.\"}\n+```\n+\n+#### Generated Data (Output)\n+```json\n+{\n+  \"machine_instructions\": [\n+    {\n+      \"instruction\": \"...\",\n+      \"is_classification\": true,\n+      \"instances\": [\n+        {\n+          \"input\": \"...\",\n+          \"output\": \"...\"\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+\n+## Source2Synth: Multi-hop Question-Answer Generation\n+\n+### Overview\n+\n+Source2Synth is a sophisticated data generation system designed to create multi-hop question-answer pairs from source text data. It implements a pipeline that processes raw text, extracts information pairs, and generates complex, multi-hop reasoning questions with configurable complexity thresholds.\n+\n+### Core Components\n+\n+#### UserDataProcessor\n+\n+The main orchestrator class that manages the entire pipeline from text processing to dataset generation.\n+\n+Features:\n+- Single text and batch processing capabilities\n+- Configurable AI model or rule-based processing\n+- Integration with MultiHopGeneratorAgent for QA generation\n+- Random seed control for reproducibility\n+\n+#### ExampleConstructor\n+\n+Handles the construction of training examples from raw text data.\n+\n+Features:\n+- Text preprocessing and quality validation\n+- Information pair extraction with premise-intermediate-conclusion relationships\n+- Multi-hop QA pair generation using AI or rule-based approaches\n+- Complexity scoring for generated examples\n+\n+#### DataCurator\n+\n+Manages and curates datasets of multi-hop question-answer pairs.\n+\n+Features:\n+- Quality filtering based on configurable criteria\n+- Complexity threshold filtering\n+- Deduplication of similar examples\n+- Dataset sampling to achieve target size\n+- Random seed control for reproducible sampling\n+\n+### Usage\n+\n+#### Basic Example\n+\n+```python\n+from camel.datagen.source2synth import (\n+    UserDataProcessor,\n+    ProcessorConfig\n+)\n+\n+# Create configuration\n+config = ProcessorConfig(\n+    seed=42,\n+    min_length=50,\n+    max_length=1000,\n+    complexity_threshold=0.5,\n+    dataset_size=10,\n+    use_ai_model=True,\n+)\n+\n+# Initialize processor\n+processor = UserDataProcessor(config)\n+\n+# Process a single text\n+result = processor.process_text(\n+    \"Your source text here\",\n+    source=\"example_source\"\n+)\n+\n+# Process multiple texts\n+texts = [\"Text 1\", \"Text 2\", \"Text 3\"]\n+sources = [\"source1\", \"source2\", \"source3\"]\n+batch_results = processor.process_batch(texts, sources)\n+```\n+\n+### Configuration Options\n+\n+#### ProcessorConfig\n+\n+Key parameters:\n+- `seed`: Random seed for reproducibility\n+- `min_length`: Minimum text length for processing\n+- `max_length`: Maximum text length for processing\n+- `complexity_threshold`: Minimum complexity score (0.0-1.0)\n+- `dataset_size`: Target size for the final dataset\n+- `use_ai_model`: Toggle between AI model and rule-based processing\n+- `hop_generating_agent`: Custom MultiHopGeneratorAgent instance (optional)\n+\n+### Pipeline Stages\n+\n+1. **Text Preprocessing**\n+   - Length validation\n+   - Quality checks\n+   - Text standardization\n+\n+2. **Information Extraction**\n+   - Premise identification\n+   - Intermediate relationship extraction\n+   - Conclusion formation\n+\n+3. **QA Generation**\n+   - Multi-hop question generation\n+   - Answer validation\n+   - Complexity scoring\n+\n+4. **Dataset Curation**\n+   - Quality filtering\n+   - Complexity thresholding\n+   - Deduplication\n+   - Target size sampling\n+\n+\n+## Self-Improving CoT Data Generation\n+\n+### Overview\n+\n+The Self-Improving CoT Data Generation pipeline implements an iterative approach to generate and improve reasoning traces for problem-solving tasks. This implementation is based on the methodology of self-taught reasoning, where an AI agent learns to improve its reasoning process through self-evaluation and feedback.\n+\n+### Architecture\n+\n+The pipeline consists of four main stages:\n+1. Initial reasoning trace generation\n+2. Self-evaluation\n+3. Feedback-based improvement\n+4. Iterative refinement\n+\n+### Key Components\n+\n+#### SelfImprovingCoTPipeline Class\n+\n+The core class that implements the STaR methodology with the following features:\n+- Customizable reasoning and evaluation agents\n+- Support for both agent-based evaluation and external reward models\n+- Configurable quality thresholds for different evaluation dimensions\n+- Iterative improvement process with customizable maximum iterations\n+- Optional few-shot examples for better reasoning generation\n+- Flexible output formats and file saving options\n+\n+### Usage\n+\n+#### Basic Example\n+\n+```python\n+from camel.agents import ChatAgent\n+from camel.datagen import SelfImprovingCoTPipeline\n+\n+# Initialize agents\n+reason_agent = ChatAgent(\n+    \"You are a struggling student who finds solving math problems challenging. \"\n+    \"Your reasoning process is often flawed or lacks clarity when explaining \"\n+    \"your answers to others.\"\n+)\n+\n+evaluate_agent = ChatAgent(\n+    \"You are a highly critical teacher who evaluates the student's answers \"\n+    \"with a meticulous and demanding approach.\"\n+)\n+\n+# Prepare your problems\n+problems = [\n+    {\"problem\": \"Your problem text here\"},\n+    # Add more problems...\n+]\n+\n+# Create and run the pipeline\n+pipeline = SelfImprovingCoTPipeline(\n+    reason_agent=reason_agent,\n+    evaluate_agent=evaluate_agent,\n+    problems=problems,\n+    max_iterations=3,\n+    output_path=\"star_output.json\"\n+)\n+\n+results = pipeline.generate()\n+```\n+\n+#### Advanced Usage with External Reward Models\n+\n+```python\n+from camel.models.reward import NemotronRewardModel\n+\n+# Initialize reward model\n+reward_model = NemotronRewardModel(\n+    model_type=ModelType.NVIDIA_NEMOTRON_340B_REWARD,\n+    url=\"https://integrate.api.nvidia.com/v1\",\n+    api_key=\"your_api_key\"\n+)\n+\n+# Create pipeline with reward model\n+pipeline = SelfImprovingCoTPipeline(\n+    reason_agent=reason_agent,\n+    evaluate_agent=evaluate_agent,\n+    problems=problems,\n+    reward_model=reward_model,\n+    score_threshold={\n+        \"correctness\": 0.8,\n+        \"clarity\": 0.7,\n+        \"completeness\": 0.7\n+    }\n+)\n+```\n+\n+### Input/Output Formats\n+\n+#### Input Format\n+\n+The pipeline expects problems in a JSON format:\n+\n+```json\n+{\n+    \"problems\": [\n+        {\n+            \"problem\": \"Problem text here\",\n+            \"solution\": \"Optional solution text\"\n+        }\n+    ]\n+}\n+```\n+\n+#### Output Format\n+\n+The pipeline generates output in JSON format containing:\n+- Original problem\n+- Final reasoning trace\n+- Improvement history with iterations\n+- Evaluation scores and feedback for each iteration\n+\n+### Configuration Options\n+\n+- `max_iterations`: Maximum number of improvement iterations (default: 3)\n+- `score_threshold`: Quality thresholds for evaluation dimensions (default: 0.7)\n+- `few_shot_examples`: Optional examples for few-shot learning\n+- `output_path`: Path for saving results (optional)\n+\n+\ndiff --git a/examples/datagen/self_improving_cot/download_math_datasets.py b/examples/datagen/self_improving_cot/download_math_datasets.py\nnew file mode 100644\nindex 0000000000..1765216b6f\n--- /dev/null\n+++ b/examples/datagen/self_improving_cot/download_math_datasets.py\n@@ -0,0 +1,121 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import json\n+import uuid\n+from pathlib import Path\n+\n+from datasets import load_dataset\n+\n+\n+def download_gsm8k_dataset():\n+    try:\n+        # Load the dataset using the datasets library\n+        dataset = load_dataset(\"openai/gsm8k\", \"main\")\n+\n+        # Get only 20 items from train split\n+        data = dataset['train'].select(range(10))\n+\n+        # Convert to the desired format\n+        formatted_data = []\n+        for item in data:\n+            # Extract the final answer from the solution\n+            solution = item['answer']\n+            if solution:\n+                # GSM8K solutions typically end with \"#### number\"\n+                import re\n+\n+                match = re.search(r'####\\s*(\\d+)', solution)\n+                if match:\n+                    number = match.group(1)\n+                    # Replace the \"#### number\" with \"\\boxed{number}\"\n+                    solution = re.sub(\n+                        r'####\\s*\\d+', f'\\\\\\\\boxed{{{number}}}', solution\n+                    )\n+\n+            formatted_item = {\n+                \"id\": str(uuid.uuid4()),  # GSM8K doesn't provide IDs\n+                \"problem\": item['question'],\n+                \"type\": \"openai/gsm8k\",  # All problems are from GSM8K\n+                \"solution\": solution,  # Use the modified solution with \\boxed\n+                \"evaluate_success\": False,\n+                \"boxed_answer_success\": True,\n+                \"improvement_history\": [],\n+            }\n+            formatted_data.append(formatted_item)\n+\n+        # Create output directory if it doesn't exist\n+        output_dir = Path(\"examples/datagen/star\")\n+        output_dir.mkdir(exist_ok=True)\n+\n+        # Save all data to a single JSON file\n+        output_file = output_dir / \"gsm8k_dataset.json\"\n+        with open(output_file, \"w\", encoding=\"utf-8\") as f:\n+            json.dump(formatted_data, f, indent=4, ensure_ascii=False)\n+        print(\n+            f\"Successfully saved {len(formatted_data)} records \"\n+            f\"to {output_file}\"\n+        )\n+\n+        return formatted_data\n+\n+    except Exception as e:\n+        print(f\"Error downloading GSM8K dataset: {e}\")\n+\n+\n+def download_amc_aime_dataset():\n+    try:\n+        # Load the dataset using the datasets library\n+        dataset = load_dataset(\n+            \"mlfoundations-dev/bespokelabs-sky-t1-numina-amc-aime-subset-unfiltered\"\n+        )\n+\n+        # Get the first 4070 items from train split\n+        data = dataset['train'].select(range(4069))\n+\n+        # Convert to the desired format\n+        formatted_data = []\n+        for item in data:\n+            formatted_item = {\n+                \"id\": str(uuid.uuid4()),\n+                \"problem\": item['problem'],\n+                \"type\": \"amc_aime\",\n+                \"solution\": item['ground_truth_solution'],\n+            }\n+            formatted_data.append(formatted_item)\n+\n+        # Create output directory if it doesn't exist\n+        output_dir = Path(\"examples/datagen/star\")\n+        output_dir.mkdir(exist_ok=True)\n+\n+        # Save all data to a single JSON file\n+        output = formatted_data\n+        output_file = output_dir / \"star_r1_output_amc_aime.json\"\n+        with open(output_file, \"w\", encoding=\"utf-8\") as f:\n+            json.dump(output, f, indent=4, ensure_ascii=False)\n+        print(\n+            f\"Successfully saved {len(formatted_data)} records \"\n+            f\"to {output_file}\"\n+        )\n+\n+        return formatted_data\n+\n+    except Exception as e:\n+        print(f\"Error downloading AMC/AIME dataset: {e}\")\n+        return None\n+\n+\n+if __name__ == \"__main__\":\n+    download_gsm8k_dataset()\n+    # download_amc_aime_dataset()\ndiff --git a/examples/datagen/self_improving_cot/gsm8k_dataset.json b/examples/datagen/self_improving_cot/gsm8k_dataset.json\nnew file mode 100644\nindex 0000000000..be68dad056\n--- /dev/null\n+++ b/examples/datagen/self_improving_cot/gsm8k_dataset.json\n@@ -0,0 +1,92 @@\n+[\n+    {\n+        \"id\": \"d400221b-9ae5-48af-bde3-9e76573bfdb6\",\n+        \"problem\": \"Natalia sold clips to 48 of her friends in April, and then she sold half as many clips in May. How many clips did Natalia sell altogether in April and May?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"Natalia sold 48/2 = <<48/2=24>>24 clips in May.\\nNatalia sold 48+24 = <<48+24=72>>72 clips altogether in April and May.\\n\\\\boxed{72}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"3b1a60e0-92fc-4714-8dba-2f96bfdd0a1c\",\n+        \"problem\": \"Weng earns $12 an hour for babysitting. Yesterday, she just did 50 minutes of babysitting. How much did she earn?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"Weng earns 12/60 = $<<12/60=0.2>>0.2 per minute.\\nWorking 50 minutes, she earned 0.2 x 50 = $<<0.2*50=10>>10.\\n\\\\boxed{10}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"ce6d4527-1a77-454b-b13c-434578aae277\",\n+        \"problem\": \"Betty is saving money for a new wallet which costs $100. Betty has only half of the money she needs. Her parents decided to give her $15 for that purpose, and her grandparents twice as much as her parents. How much more money does Betty need to buy the wallet?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"In the beginning, Betty has only 100 / 2 = $<<100/2=50>>50.\\nBetty's grandparents gave her 15 * 2 = $<<15*2=30>>30.\\nThis means, Betty needs 100 - 50 - 30 - 15 = $<<100-50-30-15=5>>5 more.\\n\\\\boxed{5}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"2373553d-eb17-43e7-8be2-e718c81b86a0\",\n+        \"problem\": \"Julie is reading a 120-page book. Yesterday, she was able to read 12 pages and today, she read twice as many pages as yesterday. If she wants to read half of the remaining pages tomorrow, how many pages should she read?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"Maila read 12 x 2 = <<12*2=24>>24 pages today.\\nSo she was able to read a total of 12 + 24 = <<12+24=36>>36 pages since yesterday.\\nThere are 120 - 36 = <<120-36=84>>84 pages left to be read.\\nSince she wants to read half of the remaining pages tomorrow, then she should read 84/2 = <<84/2=42>>42 pages.\\n\\\\boxed{42}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"9e450c49-fcd4-4ed9-8d99-5bba64e12370\",\n+        \"problem\": \"James writes a 3-page letter to 2 different friends twice a week.  How many pages does he write a year?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"He writes each friend 3*2=<<3*2=6>>6 pages a week\\nSo he writes 6*2=<<6*2=12>>12 pages every week\\nThat means he writes 12*52=<<12*52=624>>624 pages a year\\n\\\\boxed{624}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"0234a9a9-257c-4292-9685-09f8599ac069\",\n+        \"problem\": \"Mark has a garden with flowers. He planted plants of three different colors in it. Ten of them are yellow, and there are 80% more of those in purple. There are only 25% as many green flowers as there are yellow and purple flowers. How many flowers does Mark have in his garden?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"There are 80/100 * 10 = <<80/100*10=8>>8 more purple flowers than yellow flowers.\\nSo in Mark's garden, there are 10 + 8 = <<10+8=18>>18 purple flowers.\\nPurple and yellow flowers sum up to 10 + 18 = <<10+18=28>>28 flowers.\\nThat means in Mark's garden there are 25/100 * 28 = <<25/100*28=7>>7 green flowers.\\nSo in total Mark has 28 + 7 = <<28+7=35>>35 plants in his garden.\\n\\\\boxed{35}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"3147dbfb-bbc5-4323-ac12-b768fe225cc8\",\n+        \"problem\": \"Albert is wondering how much pizza he can eat in one day. He buys 2 large pizzas and 2 small pizzas. A large pizza has 16 slices and a small pizza has 8 slices. If he eats it all, how many pieces does he eat that day?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"He eats 32 from the largest pizzas because 2 x 16 = <<2*16=32>>32\\nHe eats 16 from the small pizza because 2 x 8 = <<2*8=16>>16\\nHe eats 48 pieces because 32 + 16 = <<32+16=48>>48\\n\\\\boxed{48}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"9ea57ccc-1bf0-4a6e-b449-12061324057d\",\n+        \"problem\": \"Ken created a care package to send to his brother, who was away at boarding school.  Ken placed a box on a scale, and then he poured into the box enough jelly beans to bring the weight to 2 pounds.  Then, he added enough brownies to cause the weight to triple.  Next, he added another 2 pounds of jelly beans.  And finally, he added enough gummy worms to double the weight once again.  What was the final weight of the box of goodies, in pounds?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"To the initial 2 pounds of jelly beans, he added enough brownies to cause the weight to triple, bringing the weight to 2*3=<<2*3=6>>6 pounds.\\nNext, he added another 2 pounds of jelly beans, bringing the weight to 6+2=<<6+2=8>>8 pounds.\\nAnd finally, he added enough gummy worms to double the weight once again, to a final weight of 8*2=<<8*2=16>>16 pounds.\\n\\\\boxed{16}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"b1f0b087-72e7-4b68-a344-1d8965e646a9\",\n+        \"problem\": \"Alexis is applying for a new job and bought a new set of business clothes to wear to the interview. She went to a department store with a budget of $200 and spent $30 on a button-up shirt, $46 on suit pants, $38 on a suit coat, $11 on socks, and $18 on a belt. She also purchased a pair of shoes, but lost the receipt for them. She has $16 left from her budget. How much did Alexis pay for the shoes?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"Let S be the amount Alexis paid for the shoes.\\nShe spent S + 30 + 46 + 38 + 11 + 18 = S + <<+30+46+38+11+18=143>>143.\\nShe used all but $16 of her budget, so S + 143 = 200 - 16 = 184.\\nThus, Alexis paid S = 184 - 143 = $<<184-143=41>>41 for the shoes.\\n\\\\boxed{41}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    },\n+    {\n+        \"id\": \"5bb003cb-8705-48e2-92fc-20dee5912f75\",\n+        \"problem\": \"Tina makes $18.00 an hour.  If she works more than 8 hours per shift, she is eligible for overtime, which is paid by your hourly wage + 1/2 your hourly wage.  If she works 10 hours every day for 5 days, how much money does she make?\",\n+        \"type\": \"openai/gsm8k\",\n+        \"solution\": \"She works 8 hours a day for $18 per hour so she makes 8*18 = $<<8*18=144.00>>144.00 per 8-hour shift\\nShe works 10 hours a day and anything over 8 hours is eligible for overtime, so she gets 10-8 = <<10-8=2>>2 hours of overtime\\nOvertime is calculated as time and a half so and she makes $18/hour so her overtime pay is 18*.5 = $<<18*.5=9.00>>9.00\\nHer overtime pay is 18+9 = $<<18+9=27.00>>27.00\\nHer base pay is $144.00 per 8-hour shift and she works 5 days and makes 5 * $144 = $<<144*5=720.00>>720.00\\nHer overtime pay is $27.00 per hour and she works 2 hours of overtime per day and makes 27*2 = $<<27*2=54.00>>54.00 in overtime pay\\n2 hours of overtime pay for 5 days means she makes 54*5 = $270.00\\nIn 5 days her base pay is $720.00 and she makes $270.00 in overtime pay so she makes $720 + $270 = $<<720+270=990.00>>990.00\\n\\\\boxed{990}\",\n+        \"evaluate_success\": false,\n+        \"boxed_answer_success\": true,\n+        \"improvement_history\": []\n+    }\n+]\n\\ No newline at end of file\ndiff --git a/examples/datagen/self_improving_cot/self_improving_cot_example.py b/examples/datagen/self_improving_cot/self_improving_cot_example.py\nnew file mode 100644\nindex 0000000000..f5dea4ea60\n--- /dev/null\n+++ b/examples/datagen/self_improving_cot/self_improving_cot_example.py\n@@ -0,0 +1,98 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import json\n+import os\n+import time\n+\n+from camel.agents import ChatAgent\n+from camel.configs import DeepSeekConfig\n+from camel.datagen import SelfImprovingCoTPipeline\n+from camel.models import ModelFactory\n+from camel.types import ModelPlatformType, ModelType\n+\n+# from camel.models.reward import NemotronRewardModel\n+\n+\"\"\"\n+please set the below os environment:\n+export DEEPSEEK_API_KEY=\"\"\n+\"\"\"\n+\n+\n+model = ModelFactory.create(\n+    model_platform=ModelPlatformType.DEEPSEEK,\n+    model_type=ModelType.DEEPSEEK_CHAT,\n+    model_config_dict=DeepSeekConfig(temperature=0).as_dict(),\n+)\n+\n+\n+def main():\n+    start_time = time.time()\n+\n+    current_dir = os.path.dirname(os.path.abspath(__file__))\n+    problems_path = os.path.join(current_dir, 'gsm8k_dataset.json')\n+    output_path = os.path.join(current_dir, 'self_improving_cot_output.json')\n+\n+    # Load problems from JSON file\n+    with open(problems_path, 'r') as f:\n+        problems = json.load(f)\n+\n+    # Initialize agent\n+    reason_agent_system_message = \"\"\"Please reason step by step, and put your \n+    final answer within \\\\boxed{}.\"\"\"\n+    evaluate_agent_system_message = \"\"\"You are a highly critical teacher who \n+    evaluates the student's answers with a meticulous and demanding approach.\n+    \"\"\"\n+    reason_agent = ChatAgent(reason_agent_system_message, model=model)\n+    evaluate_agent = ChatAgent(evaluate_agent_system_message)\n+\n+    # Initialize reward model (optional)\n+    # reward_model = NemotronRewardModel(\n+    #     model_type=ModelType.NVIDIA_NEMOTRON_340B_REWARD,\n+    #     url=\"https://integrate.api.nvidia.com/v1\",\n+    #     api_key=os.environ.get(\"NVIDIA_API_KEY\"),\n+    # )\n+\n+    # Set score thresholds for different dimensions (optional)\n+    score_threshold = {\n+        \"correctness\": 0.9,\n+        \"clarity\": 0.9,\n+        \"completeness\": 0.6,\n+    }\n+    # Or use a single threshold for all dimensions:\n+    # score_threshold = 0.9\n+\n+    # Create and run pipeline\n+    pipeline = SelfImprovingCoTPipeline(\n+        reason_agent=reason_agent,\n+        evaluate_agent=evaluate_agent,\n+        problems=problems,  # Pass problems list directly\n+        output_path=output_path,\n+        max_iterations=3,\n+        score_threshold=score_threshold,\n+        # reward_model=reward_model,  # To use a reward model (optional)\n+    )\n+\n+    results = pipeline.generate(rationalization=False)\n+\n+    end_time = time.time()\n+    execution_time = end_time - start_time\n+\n+    print(f\"\\nProcessed {len(results)} problems\")\n+    print(f\"Results saved to: {output_path}\")\n+    print(f\"Total execution time: {execution_time:.2f} seconds\")\n+\n+\n+if __name__ == \"__main__\":\n+    main()\ndiff --git a/examples/datagen/self_improving_cot/self_improving_cot_example_with_r1.py b/examples/datagen/self_improving_cot/self_improving_cot_example_with_r1.py\nnew file mode 100644\nindex 0000000000..472602997a\n--- /dev/null\n+++ b/examples/datagen/self_improving_cot/self_improving_cot_example_with_r1.py\n@@ -0,0 +1,133 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import json\n+import os\n+import time\n+\n+from camel.agents import ChatAgent\n+from camel.datagen import SelfImprovingCoTPipeline\n+from camel.models import ModelFactory\n+from camel.types import ModelPlatformType, ModelType\n+\n+\"\"\"\n+please set the below os environment:\n+export DEEPSEEK_API_KEY=\"\"\n+export GET_REASONING_CONTENT=\"true\"\n+\"\"\"\n+\n+evaluate_model = ModelFactory.create(\n+    model_platform=ModelPlatformType.DEFAULT,\n+    model_type=ModelType.DEFAULT,\n+)\n+\n+reason_model_1 = ModelFactory.create(\n+    model_platform=ModelPlatformType.DEEPSEEK,\n+    model_type=ModelType.DEEPSEEK_REASONER,\n+)\n+\n+reason_model_2 = ModelFactory.create(\n+    model_platform=ModelPlatformType.OPENAI_COMPATIBLE_MODEL,\n+    model_type=\"accounts/fireworks/models/deepseek-r1\",\n+    api_key=os.getenv(\"FIREWORKS_API_KEY\"),\n+    url=\"https://api.fireworks.ai/inference/v1\",\n+    model_config_dict={\"max_tokens\": 4096},\n+)\n+\n+reason_model_3 = ModelFactory.create(\n+    model_platform=ModelPlatformType.OPENAI_COMPATIBLE_MODEL,\n+    model_type=\"deepseek-ai/DeepSeek-R1\",\n+    api_key=os.getenv(\"HYPERBOLIC_API_KEY\"),\n+    url=\"https://api.hyperbolic.xyz/v1\",\n+)\n+\n+reason_model_4 = ModelFactory.create(\n+    model_platform=ModelPlatformType.TOGETHER,\n+    model_type=\"deepseek-ai/DeepSeek-R1\",\n+    api_key=os.getenv(\"TOGETHER_API_KEY\"),\n+)\n+# from camel.models.reward import NemotronRewardModel\n+\n+\n+def main():\n+    start_time = time.time()\n+\n+    current_dir = os.path.dirname(os.path.abspath(__file__))\n+    problems_path = os.path.join(current_dir, 'outputs/gsm8k_dataset.json')\n+    output_path = os.path.join(\n+        current_dir, 'outputs/self_improving_cot_r1_output.json'\n+    )\n+\n+    # Load problems from JSON file\n+    with open(problems_path, 'r') as f:\n+        problems = json.load(f)\n+\n+    # Initialize agent\n+    reason_agent_system_message = \"\"\"Answer my question and give your \n+    final answer within \\\\boxed{}.\"\"\"\n+    evaluate_agent_system_message = \"\"\"You are a highly critical teacher who \n+    evaluates the student's answers with a meticulous and demanding approach.\n+    \"\"\"\n+    reason_agent = ChatAgent(\n+        system_message=reason_agent_system_message,\n+        model=[\n+            # reason_model_1,\n+            reason_model_2,\n+            # reason_model_3,\n+            # reason_model_4,\n+        ],\n+    )\n+    evaluate_agent = ChatAgent(\n+        system_message=evaluate_agent_system_message, model=evaluate_model\n+    )\n+\n+    # Initialize reward model (optional)\n+    # reward_model = NemotronRewardModel(\n+    #     model_type=ModelType.NVIDIA_NEMOTRON_340B_REWARD,\n+    #     url=\"https://integrate.api.nvidia.com/v1\",\n+    #     api_key=os.environ.get(\"NVIDIA_API_KEY\"),\n+    # )\n+\n+    # Set score thresholds for different dimensions (optional)\n+    score_threshold = {\n+        \"correctness\": 1.0,\n+        \"clarity\": 0.0,\n+        \"completeness\": 0.0,\n+    }\n+    # Or use a single threshold for all dimensions:\n+    # score_threshold = 0.9\n+\n+    # Create and run pipeline\n+    pipeline = SelfImprovingCoTPipeline(\n+        reason_agent=reason_agent,\n+        evaluate_agent=evaluate_agent,\n+        problems=problems,  # Pass problems list directly\n+        output_path=output_path,\n+        max_iterations=0,\n+        score_threshold=score_threshold,\n+        # reward_model=reward_model,  # To use a reward model (optional)\n+    )\n+\n+    results = pipeline.generate(rationalization=False)\n+\n+    end_time = time.time()\n+    execution_time = end_time - start_time\n+\n+    print(f\"\\nProcessed {len(results)} problems\")\n+    print(f\"Results saved to: {output_path}\")\n+    print(f\"Total execution time: {execution_time:.2f} seconds\")\n+\n+\n+if __name__ == \"__main__\":\n+    main()\ndiff --git a/poetry.lock b/poetry.lock\nindex 5903b6b98b..67303807dc 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -82,13 +82,13 @@ files = [\n \n [[package]]\n name = \"aiohappyeyeballs\"\n-version = \"2.4.5\"\n+version = \"2.4.6\"\n description = \"Happy Eyeballs for asyncio\"\n optional = false\n python-versions = \">=3.9\"\n files = [\n-    {file = \"aiohappyeyeballs-2.4.5-py3-none-any.whl\", hash = \"sha256:67b5c2033c60048046863ed377f450bceb74634dc0f9abe4723b60ba12bfe135\"},\n-    {file = \"aiohappyeyeballs-2.4.5.tar.gz\", hash = \"sha256:950d95733a9c09011e75cf58550c68eb834ee5211106ad1a686b7259d3110bc4\"},\n+    {file = \"aiohappyeyeballs-2.4.6-py3-none-any.whl\", hash = \"sha256:147ec992cf873d74f5062644332c539fcd42956dc69453fe5204195e560517e1\"},\n+    {file = \"aiohappyeyeballs-2.4.6.tar.gz\", hash = \"sha256:9b05052f9042985d32ecbe4b59a77ae19c006a78f1344d7fdad69d28ded3d0b0\"},\n ]\n \n [[package]]\n@@ -4050,23 +4050,23 @@ files = [\n \n [[package]]\n name = \"langchain\"\n-version = \"0.3.17\"\n+version = \"0.3.18\"\n description = \"Building applications with LLMs through composability\"\n optional = true\n python-versions = \"<4.0,>=3.9\"\n files = [\n-    {file = \"langchain-0.3.17-py3-none-any.whl\", hash = \"sha256:4d6d3cf454cc261a5017fd1fa5014cffcc7aeaccd0ec0530fc10c5f71e6e97a0\"},\n-    {file = \"langchain-0.3.17.tar.gz\", hash = \"sha256:cef56f0a7c8369f35f1fa2690ecf0caa4504a36a5383de0eb29b8a5e26f625a0\"},\n+    {file = \"langchain-0.3.18-py3-none-any.whl\", hash = \"sha256:1a6e629f02a25962aa5b16932e8f073248104a66804ed5af1f78618ad7c1d38d\"},\n+    {file = \"langchain-0.3.18.tar.gz\", hash = \"sha256:311ac227a995545ff7c3f74c7767930c5349edef0b39f19d3105b86d39316b69\"},\n ]\n \n [package.dependencies]\n aiohttp = \">=3.8.3,<4.0.0\"\n async-timeout = {version = \">=4.0.0,<5.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\n-langchain-core = \">=0.3.33,<0.4.0\"\n-langchain-text-splitters = \">=0.3.3,<0.4.0\"\n+langchain-core = \">=0.3.34,<1.0.0\"\n+langchain-text-splitters = \">=0.3.6,<1.0.0\"\n langsmith = \">=0.1.17,<0.4\"\n numpy = [\n-    {version = \">=1.22.4,<2\", markers = \"python_version < \\\"3.12\\\"\"},\n+    {version = \">=1.26.4,<2\", markers = \"python_version < \\\"3.12\\\"\"},\n     {version = \">=1.26.2,<3\", markers = \"python_version >= \\\"3.12\\\"\"},\n ]\n pydantic = \">=2.7.4,<3.0.0\"\n@@ -4075,26 +4075,42 @@ requests = \">=2,<3\"\n SQLAlchemy = \">=1.4,<3\"\n tenacity = \">=8.1.0,<8.4.0 || >8.4.0,<10\"\n \n+[package.extras]\n+anthropic = [\"langchain-anthropic\"]\n+aws = [\"langchain-aws\"]\n+cohere = [\"langchain-cohere\"]\n+community = [\"langchain-community\"]\n+deepseek = [\"langchain-deepseek\"]\n+fireworks = [\"langchain-fireworks\"]\n+google-genai = [\"langchain-google-genai\"]\n+google-vertexai = [\"langchain-google-vertexai\"]\n+groq = [\"langchain-groq\"]\n+huggingface = [\"langchain-huggingface\"]\n+mistralai = [\"langchain-mistralai\"]\n+ollama = [\"langchain-ollama\"]\n+openai = [\"langchain-openai\"]\n+together = [\"langchain-together\"]\n+\n [[package]]\n name = \"langchain-community\"\n-version = \"0.3.16\"\n+version = \"0.3.17\"\n description = \"Community contributed LangChain integrations.\"\n optional = true\n python-versions = \"<4.0,>=3.9\"\n files = [\n-    {file = \"langchain_community-0.3.16-py3-none-any.whl\", hash = \"sha256:a702c577b048d48882a46708bb3e08ca9aec79657c421c3241a305409040c0d6\"},\n-    {file = \"langchain_community-0.3.16.tar.gz\", hash = \"sha256:825709bc328e294942b045d0b7f55053e8e88f7f943576306d778cf56417126c\"},\n+    {file = \"langchain_community-0.3.17-py3-none-any.whl\", hash = \"sha256:13bbd87d681b0df67bafa294321613b13ac524f173c92f11048d40c74e585f0b\"},\n+    {file = \"langchain_community-0.3.17.tar.gz\", hash = \"sha256:d8547a3d4f8307950be88ca638cd6ab1abe2440d0012e401a172ba4a39aa8044\"},\n ]\n \n [package.dependencies]\n aiohttp = \">=3.8.3,<4.0.0\"\n dataclasses-json = \">=0.5.7,<0.7\"\n-httpx-sse = \">=0.4.0,<0.5.0\"\n-langchain = \">=0.3.16,<0.4.0\"\n-langchain-core = \">=0.3.32,<0.4.0\"\n+httpx-sse = \">=0.4.0,<1.0.0\"\n+langchain = \">=0.3.18,<1.0.0\"\n+langchain-core = \">=0.3.34,<1.0.0\"\n langsmith = \">=0.1.125,<0.4\"\n numpy = [\n-    {version = \">=1.22.4,<2\", markers = \"python_version < \\\"3.12\\\"\"},\n+    {version = \">=1.26.4,<2\", markers = \"python_version < \\\"3.12\\\"\"},\n     {version = \">=1.26.2,<3\", markers = \"python_version >= \\\"3.12\\\"\"},\n ]\n pydantic-settings = \">=2.4.0,<3.0.0\"\n@@ -7616,28 +7632,27 @@ files = [\n \n [[package]]\n name = \"psutil\"\n-version = \"6.0.0\"\n+version = \"5.9.8\"\n description = \"Cross-platform lib for process and system monitoring in Python.\"\n-optional = true\n-python-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7\"\n+optional = false\n+python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*\"\n files = [\n-    {file = \"psutil-6.0.0-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:a021da3e881cd935e64a3d0a20983bda0bb4cf80e4f74fa9bfcb1bc5785360c6\"},\n-    {file = \"psutil-6.0.0-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:1287c2b95f1c0a364d23bc6f2ea2365a8d4d9b726a3be7294296ff7ba97c17f0\"},\n-    {file = \"psutil-6.0.0-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:a9a3dbfb4de4f18174528d87cc352d1f788b7496991cca33c6996f40c9e3c92c\"},\n-    {file = \"psutil-6.0.0-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:6ec7588fb3ddaec7344a825afe298db83fe01bfaaab39155fa84cf1c0d6b13c3\"},\n-    {file = \"psutil-6.0.0-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:1e7c870afcb7d91fdea2b37c24aeb08f98b6d67257a5cb0a8bc3ac68d0f1a68c\"},\n-    {file = \"psutil-6.0.0-cp27-none-win32.whl\", hash = \"sha256:02b69001f44cc73c1c5279d02b30a817e339ceb258ad75997325e0e6169d8b35\"},\n-    {file = \"psutil-6.0.0-cp27-none-win_amd64.whl\", hash = \"sha256:21f1fb635deccd510f69f485b87433460a603919b45e2a324ad65b0cc74f8fb1\"},\n-    {file = \"psutil-6.0.0-cp36-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:c588a7e9b1173b6e866756dde596fd4cad94f9399daf99ad8c3258b3cb2b47a0\"},\n-    {file = \"psutil-6.0.0-cp36-abi3-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6ed2440ada7ef7d0d608f20ad89a04ec47d2d3ab7190896cd62ca5fc4fe08bf0\"},\n-    {file = \"psutil-6.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5fd9a97c8e94059b0ef54a7d4baf13b405011176c3b6ff257c247cae0d560ecd\"},\n-    {file = \"psutil-6.0.0-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e2e8d0054fc88153ca0544f5c4d554d42e33df2e009c4ff42284ac9ebdef4132\"},\n-    {file = \"psutil-6.0.0-cp36-cp36m-win32.whl\", hash = \"sha256:fc8c9510cde0146432bbdb433322861ee8c3efbf8589865c8bf8d21cb30c4d14\"},\n-    {file = \"psutil-6.0.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:34859b8d8f423b86e4385ff3665d3f4d94be3cdf48221fbe476e883514fdb71c\"},\n-    {file = \"psutil-6.0.0-cp37-abi3-win32.whl\", hash = \"sha256:a495580d6bae27291324fe60cea0b5a7c23fa36a7cd35035a16d93bdcf076b9d\"},\n-    {file = \"psutil-6.0.0-cp37-abi3-win_amd64.whl\", hash = \"sha256:33ea5e1c975250a720b3a6609c490db40dae5d83a4eb315170c4fe0d8b1f34b3\"},\n-    {file = \"psutil-6.0.0-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:ffe7fc9b6b36beadc8c322f84e1caff51e8703b88eee1da46d1e3a6ae11b4fd0\"},\n-    {file = \"psutil-6.0.0.tar.gz\", hash = \"sha256:8faae4f310b6d969fa26ca0545338b21f73c6b15db7c4a8d934a5482faa818f2\"},\n+    {file = \"psutil-5.9.8-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:26bd09967ae00920df88e0352a91cff1a78f8d69b3ecabbfe733610c0af486c8\"},\n+    {file = \"psutil-5.9.8-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:05806de88103b25903dff19bb6692bd2e714ccf9e668d050d144012055cbca73\"},\n+    {file = \"psutil-5.9.8-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:611052c4bc70432ec770d5d54f64206aa7203a101ec273a0cd82418c86503bb7\"},\n+    {file = \"psutil-5.9.8-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:50187900d73c1381ba1454cf40308c2bf6f34268518b3f36a9b663ca87e65e36\"},\n+    {file = \"psutil-5.9.8-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:02615ed8c5ea222323408ceba16c60e99c3f91639b07da6373fb7e6539abc56d\"},\n+    {file = \"psutil-5.9.8-cp27-none-win32.whl\", hash = \"sha256:36f435891adb138ed3c9e58c6af3e2e6ca9ac2f365efe1f9cfef2794e6c93b4e\"},\n+    {file = \"psutil-5.9.8-cp27-none-win_amd64.whl\", hash = \"sha256:bd1184ceb3f87651a67b2708d4c3338e9b10c5df903f2e3776b62303b26cb631\"},\n+    {file = \"psutil-5.9.8-cp36-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:aee678c8720623dc456fa20659af736241f575d79429a0e5e9cf88ae0605cc81\"},\n+    {file = \"psutil-5.9.8-cp36-abi3-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8cb6403ce6d8e047495a701dc7c5bd788add903f8986d523e3e20b98b733e421\"},\n+    {file = \"psutil-5.9.8-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d06016f7f8625a1825ba3732081d77c94589dca78b7a3fc072194851e88461a4\"},\n+    {file = \"psutil-5.9.8-cp36-cp36m-win32.whl\", hash = \"sha256:7d79560ad97af658a0f6adfef8b834b53f64746d45b403f225b85c5c2c140eee\"},\n+    {file = \"psutil-5.9.8-cp36-cp36m-win_amd64.whl\", hash = \"sha256:27cc40c3493bb10de1be4b3f07cae4c010ce715290a5be22b98493509c6299e2\"},\n+    {file = \"psutil-5.9.8-cp37-abi3-win32.whl\", hash = \"sha256:bc56c2a1b0d15aa3eaa5a60c9f3f8e3e565303b465dbf57a1b730e7a2b9844e0\"},\n+    {file = \"psutil-5.9.8-cp37-abi3-win_amd64.whl\", hash = \"sha256:8db4c1b57507eef143a15a6884ca10f7c73876cdf5d51e713151c1236a0e68cf\"},\n+    {file = \"psutil-5.9.8-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:d16bbddf0693323b8c6123dd804100241da461e41d6e332fb0ba6058f630f8c8\"},\n+    {file = \"psutil-5.9.8.tar.gz\", hash = \"sha256:6be126e3225486dff286a8fb9a06246a5253f4c7c53b475ea5f5ac934e64194c\"},\n ]\n \n [package.extras]\n@@ -12484,4 +12499,4 @@ web-tools = [\"apify_client\", \"asknews\", \"dappier\", \"duckduckgo-search\", \"firecra\n [metadata]\n lock-version = \"2.0\"\n python-versions = \">=3.10,<3.13\"\n-content-hash = \"f90dc798e70cb314de13e76955341cfce2131528c9f1570debcd5ea6fbd85a58\"\n+content-hash = \"ccd7845251187d9c2bd3831125c486c75a62e259f6306a3ad92dba5d87892d4c\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex faa9c85301..ddfe39ada7 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -42,6 +42,7 @@ eval-type-backport = \"0.2.0\"\n curl_cffi = \"0.6.2\"\n pandoc = \"*\"\n httpx = \">=0.23.0,<0.27.3\"\n+psutil = \"^5.9.8\"\n \n # Model platforms\n litellm = { version = \"^1.38.1\", optional = true }\n@@ -460,6 +461,7 @@ module = [\n     \"openai.error\",\n     \"anthropic\",\n     \"pytest\",\n+    \"psutil\",\n     \"_pytest.config\",\n     \"_pytest.nodes\",\n     \"numpy\",\n",
        "test_patch": "diff --git a/test/datagen/test_self_improving_cot_pipeline.py b/test/datagen/test_self_improving_cot_pipeline.py\nnew file mode 100644\nindex 0000000000..69722fed02\n--- /dev/null\n+++ b/test/datagen/test_self_improving_cot_pipeline.py\n@@ -0,0 +1,478 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import unittest\n+from unittest.mock import MagicMock, patch\n+\n+from camel.agents import ChatAgent\n+from camel.datagen import SelfImprovingCoTPipeline\n+from camel.datagen.self_improving_cot import (\n+    ProblemResult,\n+    TraceIteration,\n+)\n+from camel.models.reward import BaseRewardModel\n+\n+\n+class TestSelfImprovingCoTPipeline(unittest.TestCase):\n+    def setUp(self):\n+        self.mock_reason_agent = MagicMock(spec=ChatAgent)\n+        self.mock_reason_agent.step.return_value = MagicMock(\n+            msg=MagicMock(content=\"Mock reasoning trace\")\n+        )\n+\n+        self.mock_evaluate_agent = MagicMock(spec=ChatAgent)\n+        self.mock_evaluate_agent.step.return_value = MagicMock(\n+            msg=MagicMock(\n+                parsed={\n+                    \"correctness\": 0.8,\n+                    \"clarity\": 0.9,\n+                    \"completeness\": 0.85,\n+                    \"feedback\": \"Good explanation\",\n+                }\n+            )\n+        )\n+\n+        self.test_problems = [\n+            {\n+                \"id\": \"problem_0\",\n+                \"problem\": (\n+                    \"If John has 5 apples and gives 2 to Mary, \"\n+                    \"how many does he have left?\"\n+                ),\n+                \"type\": \"arithmetic\",\n+                \"solution\": \"3\",\n+            }\n+        ]\n+\n+    def test_pipeline_initialization(self):\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+            batch_size=10,\n+            max_workers=4,\n+        )\n+        self.assertEqual(len(pipeline.problems), 1)\n+        self.assertEqual(pipeline.max_iterations, 3)\n+        self.assertEqual(pipeline.score_threshold, 0.7)\n+        self.assertIsNone(pipeline.reward_model)\n+        self.assertIsNone(pipeline.evaluator)\n+        self.assertIsNone(pipeline.few_shot_examples)\n+        self.assertEqual(pipeline.batch_processor.batch_size, 10)\n+        self.assertEqual(pipeline.batch_processor.max_workers, 4)\n+\n+    def test_pipeline_initialization_with_few_shot(self):\n+        few_shot = \"Example: 2 + 2 = 4\"\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+            few_shot_examples=few_shot,\n+        )\n+        self.assertEqual(pipeline.few_shot_examples, few_shot)\n+\n+    def test_generate_reasoning_trace(self):\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+        )\n+        trace = pipeline.generate_reasoning_trace(\n+            self.test_problems[0][\"problem\"]\n+        )\n+        self.assertEqual(trace, \"Mock reasoning trace\")\n+        self.mock_reason_agent.reset.assert_called_once()\n+        self.mock_reason_agent.step.assert_called_once()\n+\n+    def test_agent_evaluate_trace(self):\n+        evaluation_response = {\n+            \"correctness\": 0.8,\n+            \"clarity\": 0.9,\n+            \"completeness\": 0.85,\n+            \"feedback\": \"Good explanation, but could be more detailed\",\n+        }\n+        self.mock_evaluate_agent.step.return_value = MagicMock(\n+            msg=MagicMock(parsed=evaluation_response)\n+        )\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+        )\n+\n+        evaluation = pipeline.evaluate_trace(\n+            self.test_problems[0][\"problem\"],\n+            \"Test reasoning trace\",\n+        )\n+\n+        self.assertIsInstance(evaluation, dict)\n+        self.assertEqual(evaluation[\"correctness\"], 0.8)\n+        self.assertEqual(evaluation[\"clarity\"], 0.9)\n+        self.assertEqual(evaluation[\"completeness\"], 0.85)\n+        self.assertEqual(\n+            evaluation[\"feedback\"],\n+            \"Good explanation, but could be more detailed\",\n+        )\n+\n+    def test_reward_model_single_score_evaluation(self):\n+        mock_reward_model = MagicMock(spec=BaseRewardModel)\n+        mock_evaluator = MagicMock()\n+        mock_evaluator.evaluate.return_value = 0.85\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+            reward_model=mock_reward_model,\n+        )\n+        pipeline.evaluator = mock_evaluator\n+\n+        evaluation = pipeline.evaluate_trace(\n+            self.test_problems[0][\"problem\"],\n+            \"Test reasoning trace\",\n+        )\n+\n+        self.assertIsInstance(evaluation, dict)\n+        self.assertEqual(evaluation[\"overall\"], 0.85)\n+        self.assertIn(\"feedback\", evaluation)\n+\n+    def test_reward_model_multi_score_evaluation(self):\n+        mock_reward_model = MagicMock(spec=BaseRewardModel)\n+        mock_evaluator = MagicMock()\n+        mock_evaluator.evaluate.return_value = {\n+            \"correctness\": 0.8,\n+            \"coherence\": 0.9,\n+            \"helpfulness\": 0.85,\n+        }\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+            reward_model=mock_reward_model,\n+        )\n+        pipeline.evaluator = mock_evaluator\n+\n+        evaluation = pipeline.evaluate_trace(\n+            self.test_problems[0][\"problem\"],\n+            \"Test reasoning trace\",\n+        )\n+\n+        self.assertIsInstance(evaluation, dict)\n+        self.assertEqual(evaluation[\"correctness\"], 0.8)\n+        self.assertEqual(evaluation[\"coherence\"], 0.9)\n+        self.assertEqual(evaluation[\"helpfulness\"], 0.85)\n+        self.assertIn(\"feedback\", evaluation)\n+\n+    def test_improve_trace(self):\n+        improved_trace = \"Improved reasoning with more details\"\n+        self.mock_reason_agent.step.return_value = MagicMock(\n+            msg=MagicMock(content=improved_trace)\n+        )\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+        )\n+\n+        result = pipeline.improve_trace(\n+            self.test_problems[0][\"problem\"],\n+            \"Original trace\",\n+            \"Add more details\",\n+        )\n+\n+        self.assertEqual(result, improved_trace)\n+        self.mock_reason_agent.reset.assert_called_once()\n+        self.mock_reason_agent.step.assert_called_once()\n+\n+    def test_process_problem(self):\n+        # Mock responses for the process_problem pipeline\n+        mock_reason_responses = [\n+            MagicMock(msg=MagicMock(content=\"Initial reasoning trace\")),\n+        ]\n+        mock_evaluate_responses = [\n+            MagicMock(\n+                msg=MagicMock(\n+                    parsed={\n+                        \"correctness\": 0.95,\n+                        \"clarity\": 0.9,\n+                        \"completeness\": 0.95,\n+                        \"feedback\": \"Excellent explanation\",\n+                    }\n+                )\n+            ),\n+        ]\n+        self.mock_reason_agent.step.side_effect = mock_reason_responses\n+        self.mock_evaluate_agent.step.side_effect = mock_evaluate_responses\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+        )\n+\n+        result = pipeline.process_problem(self.test_problems[0])\n+\n+        self.assertIsInstance(result, ProblemResult)\n+        self.assertEqual(result.problem, self.test_problems[0][\"problem\"])\n+        self.assertEqual(result.final_trace, \"Initial reasoning trace\")\n+        self.assertEqual(len(result.improvement_history), 1)\n+        self.assertIsInstance(result.improvement_history[0], TraceIteration)\n+\n+    def test_score_threshold_dict(self):\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+            score_threshold={\"correctness\": 0.8, \"clarity\": 0.7},\n+        )\n+\n+        # Test with scores meeting thresholds\n+        scores = {\"correctness\": 0.9, \"clarity\": 0.8, \"completeness\": 0.6}\n+        self.assertTrue(pipeline._check_score_threshold(scores))\n+\n+        # Test with scores below thresholds\n+        scores = {\"correctness\": 0.7, \"clarity\": 0.6, \"completeness\": 0.9}\n+        self.assertFalse(pipeline._check_score_threshold(scores))\n+\n+    @patch(\"psutil.cpu_times\")\n+    @patch(\"psutil.cpu_count\")\n+    @patch(\"psutil.cpu_percent\")\n+    @patch(\"psutil.virtual_memory\")\n+    @patch(\"builtins.open\")\n+    @patch(\"json.dump\")\n+    @patch(\"json.load\")\n+    def test_generate_with_output(\n+        self,\n+        mock_load,\n+        mock_dump,\n+        mock_open,\n+        mock_virtual_memory,\n+        mock_cpu_percent,\n+        mock_cpu_count,\n+        mock_cpu_times,\n+    ):\n+        mock_load.return_value = {\"traces\": []}\n+        mock_open.return_value.__enter__ = mock_open\n+        mock_open.return_value.__exit__ = MagicMock()\n+\n+        # Mock psutil functions\n+        mock_cpu_times.return_value = MagicMock(\n+            user=100.0,\n+            nice=0.0,\n+            system=50.0,\n+            idle=200.0,\n+            iowait=0.0,\n+            irq=0.0,\n+            softirq=0.0,\n+            steal=0.0,\n+            guest=0.0,\n+            guest_nice=0.0,\n+        )\n+        mock_cpu_count.return_value = 8\n+        mock_cpu_percent.return_value = 50.0\n+        mock_virtual_memory.return_value = MagicMock(percent=60.0)\n+\n+        mock_reason_responses = [\n+            MagicMock(msg=MagicMock(content=\"Initial reasoning trace\")),\n+            MagicMock(msg=MagicMock(content=\"Improved reasoning trace\")),\n+        ]\n+        mock_evaluate_responses = [\n+            MagicMock(\n+                msg=MagicMock(\n+                    parsed={\n+                        \"correctness\": 0.95,\n+                        \"clarity\": 0.9,\n+                        \"completeness\": 0.95,\n+                        \"feedback\": \"Excellent explanation\",\n+                    }\n+                )\n+            ),\n+            MagicMock(\n+                msg=MagicMock(\n+                    parsed={\n+                        \"correctness\": 0.98,\n+                        \"clarity\": 0.95,\n+                        \"completeness\": 0.98,\n+                        \"feedback\": \"Perfect explanation\",\n+                    }\n+                )\n+            ),\n+        ]\n+        self.mock_reason_agent.step.side_effect = mock_reason_responses\n+        self.mock_evaluate_agent.step.side_effect = mock_evaluate_responses\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=self.test_problems,\n+            output_path=\"test_output.json\",\n+            max_iterations=1,\n+            score_threshold=0.99,\n+        )\n+\n+        results = pipeline.generate()\n+\n+        # Verify the results structure\n+        self.assertIsInstance(results, list)\n+        self.assertEqual(len(results), 1)\n+        result = results[0]\n+        self.assertIn(\"problem\", result)\n+        self.assertIn(\"final_trace\", result)\n+        self.assertIn(\"improvement_history\", result)\n+\n+        # Verify output was written\n+        mock_dump.assert_called()\n+        args = mock_dump.call_args_list[-1][0]  # Get last call args\n+        expected_result = {\n+            \"traces\": [\n+                {\n+                    \"id\": \"problem_0\",\n+                    \"type\": \"arithmetic\",\n+                    \"problem\": \"If John has 5 apples and gives 2 to Mary, \"\n+                    \"how many does he have left?\",\n+                    \"solution\": \"3\",\n+                    \"final_trace\": \"Improved reasoning trace\",\n+                    \"agent_evaluate_success\": False,\n+                    \"boxed_answer_success\": False,\n+                    \"improvement_history\": [\n+                        {\n+                            \"iteration\": 0,\n+                            \"trace\": \"Initial reasoning trace\",\n+                            \"evaluation\": {\n+                                \"correctness\": 0.95,\n+                                \"clarity\": 0.9,\n+                                \"completeness\": 0.95,\n+                                \"feedback\": \"Excellent explanation\",\n+                            },\n+                        },\n+                        {\n+                            \"iteration\": 1,\n+                            \"trace\": \"Improved reasoning trace\",\n+                            \"evaluation\": {\n+                                \"correctness\": 0.98,\n+                                \"clarity\": 0.95,\n+                                \"completeness\": 0.98,\n+                                \"feedback\": \"Perfect explanation\",\n+                            },\n+                        },\n+                    ],\n+                }\n+            ]\n+        }\n+        self.assertEqual(args[0], expected_result)\n+\n+    def test_invalid_problem_format(self):\n+        test_cases = [\n+            (\n+                {\"id\": \"problem_0\", \"type\": \"arithmetic\"},\n+                \"Problem dictionary must contain 'problem' key.\",\n+            ),\n+            ({\"problem\": 123}, \"Problem 'problem' field must be a string.\"),\n+            (\n+                {\"problem\": \"test\", \"id\": []},\n+                \"Problem 'id' must be of type (<class 'str'>, <class 'int'>\"\n+                \", <class 'NoneType'>) if present.\",\n+            ),\n+            (\n+                {\"problem\": \"test\", \"type\": 123},\n+                \"Problem 'type' must be of type str if present.\",\n+            ),\n+            (\n+                {\"problem\": \"test\", \"solution\": 123},\n+                \"Problem 'solution' must be of type str if present.\",\n+            ),\n+        ]\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=[],\n+        )\n+\n+        for invalid_problem, expected_error in test_cases:\n+            with self.assertRaises(ValueError) as context:\n+                pipeline.validate_problem_format(invalid_problem)\n+            self.assertIn(expected_error, str(context.exception))\n+\n+    def test_batch_processing(self):\n+        # Test with multiple problems\n+        test_problems = [\n+            {\n+                \"id\": f\"problem_{i}\",\n+                \"problem\": f\"Test problem {i}\",\n+                \"type\": \"test\",\n+                \"solution\": str(i),\n+            }\n+            for i in range(3)\n+        ]\n+\n+        # Create enough mock responses for all iterations\n+        mock_reason_responses = [\n+            MagicMock(\n+                msg=MagicMock(\n+                    content=f\"Reasoning trace for {problem['problem']}\"\n+                )\n+            )\n+            for problem in test_problems\n+        ]\n+        mock_evaluate_responses = [\n+            MagicMock(\n+                msg=MagicMock(\n+                    parsed={\n+                        \"correctness\": 0.9,\n+                        \"clarity\": 0.9,\n+                        \"completeness\": 0.9,\n+                        \"feedback\": f\"Feedback for {problem['problem']}\",\n+                    }\n+                )\n+            )\n+            for problem in test_problems\n+        ]\n+\n+        self.mock_reason_agent.step.side_effect = mock_reason_responses\n+        self.mock_evaluate_agent.step.side_effect = mock_evaluate_responses\n+\n+        pipeline = SelfImprovingCoTPipeline(\n+            reason_agent=self.mock_reason_agent,\n+            evaluate_agent=self.mock_evaluate_agent,\n+            problems=test_problems,\n+            batch_size=2,  # Small batch size to test batching\n+            max_workers=2,\n+        )\n+\n+        results = pipeline.generate()\n+\n+        # Verify results\n+        self.assertEqual(len(results), 3)\n+\n+        # Create a map of problem text to expected trace\n+        expected_traces = {\n+            problem[\"problem\"]: f\"Reasoning trace for {problem['problem']}\"\n+            for problem in test_problems\n+        }\n+\n+        # Verify each result matches its corresponding problem\n+        for result in results:\n+            problem_text = result[\"problem\"]\n+            self.assertIn(problem_text, expected_traces)\n+            self.assertEqual(\n+                result[\"final_trace\"], expected_traces[problem_text]\n+            )\n+\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\ndiff --git a/test/utils/test_commons.py b/test/utils/test_commons.py\nindex 138a22235b..9a8e9cfff6 100644\n--- a/test/utils/test_commons.py\n+++ b/test/utils/test_commons.py\n@@ -18,11 +18,13 @@\n import pytest\n \n from camel.utils import (\n+    BatchProcessor,\n     api_keys_required,\n     dependencies_required,\n     get_system_information,\n     get_task_list,\n     is_docker_running,\n+    retry_on_error,\n     to_pascal,\n )\n \n@@ -230,3 +232,89 @@ def some_function(api_key_arg=None):\n             \"Missing or empty required API keys in environment \"\n             \"variables: API_KEY\" in str(context.exception)\n         )\n+\n+\n+class TestRetryOnError(TestCase):\n+    def test_successful_execution(self):\n+        @retry_on_error()\n+        def successful_func():\n+            return \"success\"\n+\n+        result = successful_func()\n+        self.assertEqual(result, \"success\")\n+\n+    def test_retry_on_failure(self):\n+        attempts = []\n+\n+        @retry_on_error(max_retries=2, initial_delay=0.1)\n+        def failing_func():\n+            attempts.append(1)\n+            if len(attempts) < 2:\n+                raise ValueError(\"Test error\")\n+            return \"success\"\n+\n+        result = failing_func()\n+        self.assertEqual(result, \"success\")\n+        self.assertEqual(len(attempts), 2)\n+\n+    def test_max_retries_exceeded(self):\n+        attempts = []\n+\n+        @retry_on_error(max_retries=2, initial_delay=0.1)\n+        def always_failing_func():\n+            attempts.append(1)\n+            raise ValueError(\"Test error\")\n+\n+        with self.assertRaises(ValueError):\n+            always_failing_func()\n+        self.assertEqual(len(attempts), 3)  # Initial attempt + 2 retries\n+\n+\n+class TestBatchProcessor(TestCase):\n+    def setUp(self):\n+        self.processor = BatchProcessor(\n+            max_workers=2,\n+            initial_batch_size=5,\n+            monitoring_interval=0.0,  # Set to 0 to force resource check\n+            cpu_threshold=90.0,\n+            memory_threshold=90.0,\n+        )\n+\n+    @patch('psutil.cpu_percent')\n+    @patch('psutil.virtual_memory')\n+    def test_resource_based_adjustment(self, mock_memory, mock_cpu):\n+        mock_cpu.return_value = 95.0\n+        mock_memory.return_value.percent = 95.0\n+\n+        self.assertEqual(self.processor.batch_size, 5)\n+\n+        self.processor.last_check_time = 0\n+\n+        self.processor.adjust_batch_size(True)\n+\n+        expected_size = int(5 * self.processor.backoff_factor)\n+        self.assertEqual(self.processor.batch_size, expected_size)\n+        self.assertEqual(self.processor.max_workers, 1)\n+\n+    def test_success_based_adjustment(self):\n+        initial_size = self.processor.batch_size\n+\n+        self.processor.adjust_batch_size(True)\n+        self.assertGreater(self.processor.batch_size, initial_size)\n+\n+        self.processor.adjust_batch_size(False)\n+        self.assertLess(\n+            self.processor.batch_size, self.processor.batch_size * 1.2\n+        )\n+\n+    def test_performance_metrics(self):\n+        self.processor.adjust_batch_size(True, 1.0)\n+        self.processor.adjust_batch_size(False, 2.0)\n+        self.processor.adjust_batch_size(True, 1.5)\n+\n+        metrics = self.processor.get_performance_metrics()\n+\n+        self.assertEqual(metrics['total_processed'], 3)\n+        self.assertAlmostEqual(metrics['error_rate'], 33.33333333333333)\n+        self.assertAlmostEqual(metrics['avg_processing_time'], 1.5)\n+        self.assertEqual(metrics['current_workers'], 2)\n",
        "problem_statement": "[Feature Request] Implement STaR: Bootstrapping Reasoning With Reasoning\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nImplement STaR: Bootstrapping Reasoning With Reasoning into CAMEL\r\n\r\nhttps://arxiv.org/abs/2203.14465\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "lead: @mohamadkav , support & review: @harryeqs @Asher-hss \nhey @Wendong-Fan, can you throw some light in describing this\nHey @GitHoobar ,\n\nthe target of this issue is to build a pipeline to implement the method proposed in the referenced paper: https://arxiv.org/abs/2203.14465 for data generation.\n\nWe implemented some other paper work before, here is the PR you can refer to:https://github.com/camel-ai/camel/pull/1276/files\n\nLet me know if you have any further question~",
        "created_at": "2025-01-21T17:33:34Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "test/utils/test_commons.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1469,
        "instance_id": "camel-ai__camel-1469",
        "issue_numbers": [
            "1238"
        ],
        "base_commit": "3824bd7815b5de0e15a14d74f2f6bf585fe0b649",
        "patch": "diff --git a/camel/messages/func_message.py b/camel/messages/func_message.py\nindex 2e10f25d41..3c1d2575c7 100644\n--- a/camel/messages/func_message.py\n+++ b/camel/messages/func_message.py\n@@ -129,7 +129,7 @@ def to_openai_assistant_message(self) -> OpenAIAssistantMessage:\n             \"content\": self.content or \"\",\n             \"tool_calls\": [\n                 {\n-                    \"id\": self.tool_call_id or \"\",\n+                    \"id\": self.tool_call_id or \"null\",\n                     \"type\": \"function\",\n                     \"function\": {\n                         \"name\": self.func_name,\n@@ -159,5 +159,5 @@ def to_openai_tool_message(self) -> OpenAIToolMessageParam:\n         return {\n             \"role\": \"tool\",\n             \"content\": result_content,\n-            \"tool_call_id\": self.tool_call_id or \"\",\n+            \"tool_call_id\": self.tool_call_id or \"null\",\n         }\ndiff --git a/camel/models/gemini_model.py b/camel/models/gemini_model.py\nindex 1e5b6b670a..2da873998b 100644\n--- a/camel/models/gemini_model.py\n+++ b/camel/models/gemini_model.py\n@@ -97,8 +97,17 @@ def run(\n                 `ChatCompletion` in the non-stream mode, or\n                 `Stream[ChatCompletionChunk]` in the stream mode.\n         \"\"\"\n+        # Process messages to ensure no empty content, it's not accepeted by\n+        # Gemini\n+        processed_messages = []\n+        for msg in messages:\n+            msg_copy = msg.copy()\n+            if 'content' in msg_copy and msg_copy['content'] == '':\n+                msg_copy['content'] = 'null'\n+            processed_messages.append(msg_copy)\n+\n         response = self._client.chat.completions.create(\n-            messages=messages,\n+            messages=processed_messages,\n             model=self.model_type,\n             **self.model_config_dict,\n         )\n",
        "test_patch": "diff --git a/test/messages/test_func_message.py b/test/messages/test_func_message.py\nindex fb6b17b0b3..c6e92bfaff 100644\n--- a/test/messages/test_func_message.py\n+++ b/test/messages/test_func_message.py\n@@ -92,7 +92,7 @@ def test_function_func_message(\n     msg_dict: Dict[str, str] = {\n         \"role\": \"tool\",\n         \"content\": json.dumps(3),\n-        \"tool_call_id\": \"\",\n+        \"tool_call_id\": \"null\",\n     }\n     assert function_result_message.to_openai_tool_message() == msg_dict\n \n@@ -103,7 +103,7 @@ def test_assistant_func_message_to_openai_tool_message(\n     expected_msg_dict: Dict[str, str] = {\n         \"role\": \"tool\",\n         \"content\": json.dumps(None),\n-        \"tool_call_id\": \"\",\n+        \"tool_call_id\": \"null\",\n     }\n \n     assert (\n",
        "problem_statement": "[BUG] Gemini model using OpenAI client doesn't support tool calling\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nissue raised to Gemini Team: https://discuss.ai.google.dev/t/invalid-argument-error-using-openai-compatible/51788\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2025-01-19T12:23:00Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "test/messages/test_func_message.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1466,
        "instance_id": "camel-ai__camel-1466",
        "issue_numbers": [
            "1326"
        ],
        "base_commit": "0198d23b17490d4687f7c80c38df244bf12bcc0f",
        "patch": "diff --git a/.env b/.env\nindex 8c4a715958..6b84096d88 100644\n--- a/.env\n+++ b/.env\n@@ -50,8 +50,8 @@\n # NVIDIA API (https://build.nvidia.com/explore/discover)\n # NVIDIA_API_KEY=\"Fill your API key here\"\n \n-# OpenBB Platform API (https://my.openbb.co/app/credentials)\n-# OPENBB_TOKEN=\"Fill your API key here\"\n+# InternLM API (https://internlm.intern-ai.org.cn/api/tokens)\n+# INTERNLM_API_KEY=\"Fill your API key here\"\n \n #===========================================\n # Tools & Services API\n@@ -87,3 +87,6 @@\n \n # Discord Bot API (https://discord.com/developers/applications)\n # DISCORD_BOT_TOKEN=\"Fill your API key here\"\n+\n+# OpenBB Platform API (https://my.openbb.co/app/credentials)\n+# OPENBB_TOKEN=\"Fill your API key here\"\ndiff --git a/.github/workflows/build_package.yml b/.github/workflows/build_package.yml\nindex 8d3d9d4a52..e062074a64 100644\n--- a/.github/workflows/build_package.yml\n+++ b/.github/workflows/build_package.yml\n@@ -78,6 +78,7 @@ jobs:\n           DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n           DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n           DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n+          INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n         run: |\n           source venv/bin/activate\n           pytest --fast-test-mode ./test\ndiff --git a/camel/configs/__init__.py b/camel/configs/__init__.py\nindex fcd9b7a9c4..2e6b30b3f1 100644\n--- a/camel/configs/__init__.py\n+++ b/camel/configs/__init__.py\n@@ -17,6 +17,7 @@\n from .deepseek_config import DEEPSEEK_API_PARAMS, DeepSeekConfig\n from .gemini_config import Gemini_API_PARAMS, GeminiConfig\n from .groq_config import GROQ_API_PARAMS, GroqConfig\n+from .internlm_config import INTERNLM_API_PARAMS, InternLMConfig\n from .litellm_config import LITELLM_API_PARAMS, LiteLLMConfig\n from .mistral_config import MISTRAL_API_PARAMS, MistralConfig\n from .nvidia_config import NVIDIA_API_PARAMS, NvidiaConfig\n@@ -76,4 +77,6 @@\n     'QWEN_API_PARAMS',\n     'DeepSeekConfig',\n     'DEEPSEEK_API_PARAMS',\n+    'InternLMConfig',\n+    'INTERNLM_API_PARAMS',\n ]\ndiff --git a/camel/configs/internlm_config.py b/camel/configs/internlm_config.py\nnew file mode 100644\nindex 0000000000..030f5c8ef2\n--- /dev/null\n+++ b/camel/configs/internlm_config.py\n@@ -0,0 +1,60 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+from typing import Optional, Union\n+\n+from camel.configs.base_config import BaseConfig\n+\n+\n+class InternLMConfig(BaseConfig):\n+    r\"\"\"Defines the parameters for generating chat completions using the\n+    InternLM API. You can refer to the following link for more details:\n+    https://internlm.intern-ai.org.cn/api/document\n+\n+    Args:\n+        stream (bool, optional): Whether to stream the response.\n+            (default: :obj:`False`)\n+        temperature (float, optional): Controls the diversity and focus of\n+            the generated results. Lower values make the output more focused,\n+            while higher values make it more diverse. (default: :obj:`0.3`)\n+        top_p (float, optional): Controls the diversity and focus of the\n+            generated results. Higher values make the output more diverse,\n+            while lower values make it more focused. (default: :obj:`0.9`)\n+        max_tokens (Union[int, NotGiven], optional): Allows the model to\n+            generate the maximum number of tokens.\n+            (default: :obj:`NOT_GIVEN`)\n+        tools (list, optional): Specifies an array of tools that the model can\n+            call. It can contain one or more tool objects. During a function\n+            call process, the model will select one tool from the array.\n+            (default: :obj:`None`)\n+        tool_choice (Union[dict[str, str], str], optional): Controls which (if\n+            any) tool is called by the model. :obj:`\"none\"` means the model\n+            will not call any tool and instead generates a message.\n+            :obj:`\"auto\"` means the model can pick between generating a\n+            message or calling one or more tools.  :obj:`\"required\"` means the\n+            model must call one or more tools. Specifying a particular tool\n+            via {\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}\n+            forces the model to call that tool. :obj:`\"none\"` is the default\n+            when no tools are present. :obj:`\"auto\"` is the default if tools\n+            are present.\n+    \"\"\"\n+\n+    stream: bool = False\n+    temperature: float = 0.8\n+    top_p: float = 0.9\n+    max_tokens: Optional[int] = None\n+    tool_choice: Optional[Union[dict[str, str], str]] = None\n+\n+\n+INTERNLM_API_PARAMS = {param for param in InternLMConfig.model_fields.keys()}\ndiff --git a/camel/models/__init__.py b/camel/models/__init__.py\nindex a80a80d924..6a4adc4c4c 100644\n--- a/camel/models/__init__.py\n+++ b/camel/models/__init__.py\n@@ -19,6 +19,7 @@\n from .fish_audio_model import FishAudioModel\n from .gemini_model import GeminiModel\n from .groq_model import GroqModel\n+from .internlm_model import InternLMModel\n from .litellm_model import LiteLLMModel\n from .mistral_model import MistralModel\n from .model_factory import ModelFactory\n@@ -68,4 +69,5 @@\n     'ModelProcessingError',\n     'DeepSeekModel',\n     'FishAudioModel',\n+    'InternLMModel',\n ]\ndiff --git a/camel/models/internlm_model.py b/camel/models/internlm_model.py\nnew file mode 100644\nindex 0000000000..a4a1be2d1d\n--- /dev/null\n+++ b/camel/models/internlm_model.py\n@@ -0,0 +1,143 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import os\n+from typing import Any, Dict, List, Optional, Union\n+\n+from openai import OpenAI, Stream\n+\n+from camel.configs import INTERNLM_API_PARAMS, InternLMConfig\n+from camel.messages import OpenAIMessage\n+from camel.models import BaseModelBackend\n+from camel.types import (\n+    ChatCompletion,\n+    ChatCompletionChunk,\n+    ModelType,\n+)\n+from camel.utils import (\n+    BaseTokenCounter,\n+    OpenAITokenCounter,\n+    api_keys_required,\n+)\n+\n+\n+class InternLMModel(BaseModelBackend):\n+    r\"\"\"InternLM API in a unified BaseModelBackend interface.\n+\n+    Args:\n+        model_type (Union[ModelType, str]): Model for which a backend is\n+            created, one of InternLM series.\n+        model_config_dict (Optional[Dict[str, Any]], optional): A dictionary\n+            that will be fed into:obj:`openai.ChatCompletion.create()`. If\n+            :obj:`None`, :obj:`InternLMConfig().as_dict()` will be used.\n+            (default: :obj:`None`)\n+        api_key (Optional[str], optional): The API key for authenticating with\n+            the InternLM service. (default: :obj:`None`)\n+        url (Optional[str], optional): The url to the InternLM service.\n+            (default: :obj:`https://internlm-chat.intern-ai.org.cn/puyu/api/v1`)\n+        token_counter (Optional[BaseTokenCounter], optional): Token counter to\n+            use for the model. If not provided, :obj:`OpenAITokenCounter(\n+            ModelType.GPT_4O_MINI)` will be used.\n+            (default: :obj:`None`)\n+    \"\"\"\n+\n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"INTERNLM_API_KEY\"),\n+        ]\n+    )\n+    def __init__(\n+        self,\n+        model_type: Union[ModelType, str],\n+        model_config_dict: Optional[Dict[str, Any]] = None,\n+        api_key: Optional[str] = None,\n+        url: Optional[str] = None,\n+        token_counter: Optional[BaseTokenCounter] = None,\n+    ) -> None:\n+        if model_config_dict is None:\n+            model_config_dict = InternLMConfig().as_dict()\n+        api_key = api_key or os.environ.get(\"INTERNLM_API_KEY\")\n+        url = url or os.environ.get(\n+            \"INTERNLM_API_BASE_URL\",\n+            \"https://internlm-chat.intern-ai.org.cn/puyu/api/v1\",\n+        )\n+        super().__init__(\n+            model_type, model_config_dict, api_key, url, token_counter\n+        )\n+        self._client = OpenAI(\n+            timeout=180,\n+            max_retries=3,\n+            api_key=self._api_key,\n+            base_url=self._url,\n+        )\n+\n+    def run(\n+        self,\n+        messages: List[OpenAIMessage],\n+    ) -> Union[ChatCompletion, Stream[ChatCompletionChunk]]:\n+        r\"\"\"Runs inference of InternLM chat completion.\n+\n+        Args:\n+            messages (List[OpenAIMessage]): Message list with the chat history\n+                in OpenAI API format.\n+\n+        Returns:\n+            Union[ChatCompletion, Stream[ChatCompletionChunk]]:\n+                `ChatCompletion` in the non-stream mode, or\n+                `Stream[ChatCompletionChunk]` in the stream mode.\n+        \"\"\"\n+        response = self._client.chat.completions.create(\n+            messages=messages,\n+            model=self.model_type,\n+            **self.model_config_dict,\n+        )\n+        return response\n+\n+    @property\n+    def token_counter(self) -> BaseTokenCounter:\n+        r\"\"\"Initialize the token counter for the model backend.\n+\n+        Returns:\n+            OpenAITokenCounter: The token counter following the model's\n+                tokenization style.\n+        \"\"\"\n+\n+        if not self._token_counter:\n+            self._token_counter = OpenAITokenCounter(ModelType.GPT_4O_MINI)\n+        return self._token_counter\n+\n+    def check_model_config(self):\n+        r\"\"\"Check whether the model configuration contains any\n+        unexpected arguments to InternLM API.\n+\n+        Raises:\n+            ValueError: If the model configuration dictionary contains any\n+                unexpected arguments to InternLM API.\n+        \"\"\"\n+        for param in self.model_config_dict:\n+            if param not in INTERNLM_API_PARAMS:\n+                raise ValueError(\n+                    f\"Unexpected argument `{param}` is \"\n+                    \"input into InternLM model backend.\"\n+                )\n+\n+    @property\n+    def stream(self) -> bool:\n+        r\"\"\"Returns whether the model is in stream mode, which sends partial\n+        results each time.\n+\n+        Returns:\n+            bool: Whether the model is in stream mode.\n+        \"\"\"\n+        return self.model_config_dict.get('stream', False)\ndiff --git a/camel/models/model_factory.py b/camel/models/model_factory.py\nindex 309c3dce67..c401ffd0aa 100644\n--- a/camel/models/model_factory.py\n+++ b/camel/models/model_factory.py\n@@ -20,6 +20,7 @@\n from camel.models.deepseek_model import DeepSeekModel\n from camel.models.gemini_model import GeminiModel\n from camel.models.groq_model import GroqModel\n+from camel.models.internlm_model import InternLMModel\n from camel.models.litellm_model import LiteLLMModel\n from camel.models.mistral_model import MistralModel\n from camel.models.nvidia_model import NvidiaModel\n@@ -124,6 +125,8 @@ def create(\n             model_class = QwenModel\n         elif model_platform.is_deepseek:\n             model_class = DeepSeekModel\n+        elif model_platform.is_internlm and model_type.is_internlm:\n+            model_class = InternLMModel\n         elif model_type == ModelType.STUB:\n             model_class = StubModel\n \ndiff --git a/camel/types/enums.py b/camel/types/enums.py\nindex 5e2a04474d..d11c2dbefa 100644\n--- a/camel/types/enums.py\n+++ b/camel/types/enums.py\n@@ -142,6 +142,12 @@ class ModelType(UnifiedModelType, Enum):\n     # DeepSeek models\n     DEEPSEEK_CHAT = \"deepseek-chat\"\n \n+    # InternLM models\n+    INTERNLM3_LATEST = \"internlm3-latest\"\n+    INTERNLM3_8B_INSTRUCT = \"internlm3-8b-instruct\"\n+    INTERNLM2_5_LATEST = \"internlm2.5-latest\"\n+    INTERNLM2_PRO_CHAT = \"internlm2-pro-chat\"\n+\n     def __str__(self):\n         return self.value\n \n@@ -353,6 +359,15 @@ def is_deepseek(self) -> bool:\n             ModelType.DEEPSEEK_CHAT,\n         }\n \n+    @property\n+    def is_internlm(self) -> bool:\n+        return self in {\n+            ModelType.INTERNLM3_LATEST,\n+            ModelType.INTERNLM3_8B_INSTRUCT,\n+            ModelType.INTERNLM2_5_LATEST,\n+            ModelType.INTERNLM2_PRO_CHAT,\n+        }\n+\n     @property\n     def token_limit(self) -> int:\n         r\"\"\"Returns the maximum token limit for a given model.\n@@ -411,6 +426,10 @@ def token_limit(self) -> int:\n             ModelType.NVIDIA_MISTRAL_LARGE,\n             ModelType.NVIDIA_MIXTRAL_8X7B,\n             ModelType.QWEN_QWQ_32B,\n+            ModelType.INTERNLM3_8B_INSTRUCT,\n+            ModelType.INTERNLM3_LATEST,\n+            ModelType.INTERNLM2_5_LATEST,\n+            ModelType.INTERNLM2_PRO_CHAT,\n         }:\n             return 32_768\n         elif self in {\n@@ -634,6 +653,7 @@ class ModelPlatformType(Enum):\n     NVIDIA = \"nvidia\"\n     DEEPSEEK = \"deepseek\"\n     SGLANG = \"sglang\"\n+    INTERNLM = \"internlm\"\n \n     @property\n     def is_openai(self) -> bool:\n@@ -736,6 +756,11 @@ def is_deepseek(self) -> bool:\n         r\"\"\"Returns whether this platform is DeepSeek.\"\"\"\n         return self is ModelPlatformType.DEEPSEEK\n \n+    @property\n+    def is_internlm(self) -> bool:\n+        r\"\"\"Returns whether this platform is InternLM.\"\"\"\n+        return self is ModelPlatformType.INTERNLM\n+\n \n class AudioModelType(Enum):\n     TTS_1 = \"tts-1\"\ndiff --git a/camel/types/unified_model_type.py b/camel/types/unified_model_type.py\nindex 631ab623cb..b4027cc6e5 100644\n--- a/camel/types/unified_model_type.py\n+++ b/camel/types/unified_model_type.py\n@@ -113,6 +113,11 @@ def is_qwen(self) -> bool:\n         r\"\"\"Returns whether the model is a Qwen model.\"\"\"\n         return True\n \n+    @property\n+    def is_internlm(self) -> bool:\n+        r\"\"\"Returns whether the model is a InternLM model.\"\"\"\n+        return True\n+\n     @property\n     def support_native_structured_output(self) -> bool:\n         r\"\"\"Returns whether the model supports native structured output.\"\"\"\ndiff --git a/docs/key_modules/models.md b/docs/key_modules/models.md\nindex 683e0968ad..45b20f3067 100644\n--- a/docs/key_modules/models.md\n+++ b/docs/key_modules/models.md\n@@ -71,6 +71,10 @@ The following table lists currently supported model platforms by CAMEL.\n | ZhipuAI | glm-4v | Y |\n | ZhipuAI | glm-4 | N |\n | ZhipuAI | glm-3-turbo | N |\n+| InternLM | internlm3-latest | N |\n+| InternLM | internlm3-8b-instruct | N |\n+| InternLM | internlm2.5-latest\t| N |\n+| InternLM | internlm2-pro-chat\t| N |\n | Reka | reka-core | Y |\n | Reka | reka-flash | Y |\n | Reka | reka-edge | Y |\ndiff --git a/examples/models/internlm_model_example.py b/examples/models/internlm_model_example.py\nnew file mode 100644\nindex 0000000000..13eaa42b56\n--- /dev/null\n+++ b/examples/models/internlm_model_example.py\n@@ -0,0 +1,46 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+from camel.agents import ChatAgent\n+from camel.configs import InternLMConfig\n+from camel.models import ModelFactory\n+from camel.types import ModelPlatformType, ModelType\n+\n+model = ModelFactory.create(\n+    model_platform=ModelPlatformType.INTERNLM,\n+    model_type=ModelType.INTERNLM3_LATEST,\n+    model_config_dict=InternLMConfig(temperature=0.2).as_dict(),\n+)\n+\n+# Define system message\n+sys_msg = \"You are a helpful assistant.\"\n+\n+# Set agent\n+camel_agent = ChatAgent(system_message=sys_msg, model=model)\n+\n+user_msg = \"\"\"Say hi to CAMEL AI, one open-source community\n+    dedicated to the study of autonomous and communicative agents.\"\"\"\n+\n+# Get response information\n+response = camel_agent.step(user_msg)\n+print(response.msgs[0].content)\n+\n+'''\n+===============================================================================\n+Hi CAMEL AI! It's great to meet you. As an open-source community dedicated to \n+the study of autonomous and communicative agents, we're excited to collaborate \n+and explore the exciting world of AI. Let's work together to advance our \n+understanding and applications in this fascinating field.\n+===============================================================================\n+'''\n",
        "test_patch": "diff --git a/.github/workflows/pytest_apps.yml b/.github/workflows/pytest_apps.yml\nindex 63d2cc6e73..e1cf0f0c01 100644\n--- a/.github/workflows/pytest_apps.yml\n+++ b/.github/workflows/pytest_apps.yml\n@@ -29,6 +29,7 @@ jobs:\n         GOOGLE_API_KEY: \"${{ secrets.GOOGLE_API_KEY }}\"\n         SEARCH_ENGINE_ID: \"${{ secrets.SEARCH_ENGINE_ID }}\"\n         COHERE_API_KEY: \"${{ secrets.COHERE_API_KEY }}\"\n+        INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n       run: poetry run pytest -v apps/\n \n   pytest_examples:\n@@ -47,4 +48,5 @@ jobs:\n         GOOGLE_API_KEY: \"${{ secrets.GOOGLE_API_KEY }}\"\n         SEARCH_ENGINE_ID: \"${{ secrets.SEARCH_ENGINE_ID }}\"\n         COHERE_API_KEY: \"${{ secrets.COHERE_API_KEY }}\"\n+        INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n       run: poetry run pytest -v examples/\ndiff --git a/.github/workflows/pytest_package.yml b/.github/workflows/pytest_package.yml\nindex b87e8c1d78..4dd092f659 100644\n--- a/.github/workflows/pytest_package.yml\n+++ b/.github/workflows/pytest_package.yml\n@@ -57,6 +57,7 @@ jobs:\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n+        INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n       run: poetry run pytest --fast-test-mode test/\n \n   pytest_package_llm_test:\n@@ -103,6 +104,7 @@ jobs:\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n+        INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n       run: poetry run pytest --llm-test-only test/\n \n   pytest_package_very_slow_test:\n@@ -149,4 +151,5 @@ jobs:\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n         DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n+        INTERNLM_API_KEY: \"${{ secrets.INTERNLM_API_KEY }}\"\n       run: poetry run pytest --very-slow-test-only test/\ndiff --git a/test/models/test_internlm_model.py b/test/models/test_internlm_model.py\nnew file mode 100644\nindex 0000000000..669cfc0a46\n--- /dev/null\n+++ b/test/models/test_internlm_model.py\n@@ -0,0 +1,56 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import re\n+\n+import pytest\n+\n+from camel.configs import InternLMConfig\n+from camel.models import InternLMModel\n+from camel.types import ModelType\n+\n+\n+@pytest.mark.model_backend\n+@pytest.mark.parametrize(\n+    \"model_type\",\n+    [\n+        ModelType.INTERNLM3_8B_INSTRUCT,\n+        ModelType.INTERNLM3_LATEST,\n+        ModelType.INTERNLM2_5_LATEST,\n+        ModelType.INTERNLM2_PRO_CHAT,\n+    ],\n+)\n+def test_internlm_model(model_type: ModelType):\n+    model = InternLMModel(model_type)\n+    assert model.model_type == model_type\n+    assert model.model_config_dict == InternLMConfig().as_dict()\n+    assert isinstance(model.model_type.value_for_tiktoken, str)\n+    assert isinstance(model.model_type.token_limit, int)\n+\n+\n+@pytest.mark.model_backend\n+def test_internlm_model_unexpected_argument():\n+    model_type = ModelType.INTERNLM3_LATEST\n+    model_config_dict = {\"model_path\": \"internlm-max\"}\n+\n+    with pytest.raises(\n+        ValueError,\n+        match=re.escape(\n+            (\n+                \"Unexpected argument `model_path` is \"\n+                \"input into InternLM model backend.\"\n+            )\n+        ),\n+    ):\n+        _ = InternLMModel(model_type, model_config_dict)\n",
        "problem_statement": "[Feature Request] Integrate InternLM via ModelScope platform\n### Required prerequisites\r\n\r\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\r\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\r\n\r\n### Motivation\r\n\r\nInternLM\r\nPre-training a bilingual 100B Foundation model on data with over a trillion tokens, the model exhibits excellent performance in scenarios such as Chinese, English, and coding due to the appropriate data ratio. Based on the foundation model, the application of high-quality human annotated dialogue data combined with RLHF technology enables the InternLM large language model to respond to complex commands during human interaction, while also demonstrating responses in line with human morality and values.\r\n\r\nhttps://modelscope.cn/models/Shanghai_AI_Laboratory/\r\nhttps://internlm.org/\r\nhttps://github.com/InternLM/InternLM\r\n\r\n### Solution\r\n\r\n_No response_\r\n\r\n### Alternatives\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n",
        "hints_text": "",
        "created_at": "2025-01-18T22:43:33Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            ".github/workflows/pytest_apps.yml",
            ".github/workflows/pytest_package.yml"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1439,
        "instance_id": "camel-ai__camel-1439",
        "issue_numbers": [
            "1333"
        ],
        "base_commit": "6bc9c05878c9a42374725c1727ab6c2d877d26f9",
        "patch": "diff --git a/apps/agents/agents.py b/apps/agents/agents.py\nindex eda55369ed..17b1ca0a44 100644\n--- a/apps/agents/agents.py\n+++ b/apps/agents/agents.py\n@@ -563,25 +563,33 @@ def change_society(society_name: str) -> Tuple[Dict, Dict, str]:\n         lambda v: gr.update(visible=v), task_specifier_cb, ts_word_limit_nb\n     )\n \n+    def start_chain():\n+        state = cleanup_on_launch(session_state.value)\n+        state, specified_task, task_prompt, chat, progress = (\n+            role_playing_start(\n+                state,\n+                society_dd.value,\n+                assistant_ta.value,\n+                user_ta.value,\n+                original_task_ta.value,\n+                num_messages_sl.value,\n+                task_specifier_cb.value,\n+                ts_word_limit_nb.value,\n+                language_ta.value,\n+            )\n+        )\n+        state, chat, progress = role_playing_chat_init(state)\n+        return (\n+            state,\n+            specified_task,\n+            task_prompt,\n+            chat,\n+            progress,\n+        )\n+\n     start_bn.click(\n-        cleanup_on_launch,\n-        session_state,\n-        [session_state, chatbot, start_bn],\n-        queue=False,\n-    ).then(\n-        role_playing_start,\n-        [\n-            session_state,\n-            society_dd,\n-            assistant_ta,\n-            user_ta,\n-            original_task_ta,\n-            num_messages_sl,\n-            task_specifier_cb,\n-            ts_word_limit_nb,\n-            language_ta,\n-        ],\n-        [\n+        fn=start_chain,\n+        outputs=[\n             session_state,\n             specified_task_ta,\n             task_prompt_ta,\n@@ -589,11 +597,6 @@ def change_society(society_name: str) -> Tuple[Dict, Dict, str]:\n             progress_sl,\n         ],\n         queue=False,\n-    ).then(\n-        role_playing_chat_init,\n-        session_state,\n-        [session_state, chatbot, progress_sl],\n-        queue=False,\n     )\n \n     blocks.load(\n",
        "test_patch": "diff --git a/apps/agents/test/test_agents.py b/apps/agents/test/test_agents.py\nindex 4abc4a9613..27068dd4ba 100644\n--- a/apps/agents/test/test_agents.py\n+++ b/apps/agents/test/test_agents.py\n@@ -26,7 +26,6 @@\n )\n \n \n-@pytest.mark.skip(reason=\"Skipping this test temporarily\")\n def test_construct_blocks():\n     blocks = construct_blocks(None)\n     assert isinstance(blocks, gr.Blocks)\n",
        "problem_statement": "[BUG] camel app AttributeError: 'dict' object has no attribute 'then'\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nFAILED apps/agents/test/test_agents.py::test_construct_blocks - AttributeError: 'dict' object has no attribute 'then'\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2025-01-12T23:08:00Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "apps/agents/test/test_agents.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1429,
        "instance_id": "camel-ai__camel-1429",
        "issue_numbers": [
            "1427"
        ],
        "base_commit": "a4820b7efa40a354f745d3369a29ee996298c780",
        "patch": "diff --git a/.env b/.env\nindex ff2e979ea7..8c4a715958 100644\n--- a/.env\n+++ b/.env\n@@ -80,7 +80,10 @@\n # CHUNKR_API_KEY=\"Fill your API key here\"\n \n # Meshy API (https://www.meshy.ai/api)\n-# MESHY_API_KEY=\"Fill your API key here\"\n+# MESHY_API_KEY=\"Fill your API key h    ere\"\n \n # Dappier API (https://api.dappier.com/)\n # DAPPIER_API_KEY=\"Fill your API key here\"\n+\n+# Discord Bot API (https://discord.com/developers/applications)\n+# DISCORD_BOT_TOKEN=\"Fill your API key here\"\ndiff --git a/.github/workflows/build_package.yml b/.github/workflows/build_package.yml\nindex 90513eb64e..8d3d9d4a52 100644\n--- a/.github/workflows/build_package.yml\n+++ b/.github/workflows/build_package.yml\n@@ -77,6 +77,7 @@ jobs:\n           GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n           DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n           DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n+          DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n         run: |\n           source venv/bin/activate\n           pytest --fast-test-mode ./test\ndiff --git a/camel/agents/chat_agent.py b/camel/agents/chat_agent.py\nindex 18a05638a4..5abe0cf915 100644\n--- a/camel/agents/chat_agent.py\n+++ b/camel/agents/chat_agent.py\n@@ -824,7 +824,7 @@ def _is_standard_response(self, response: Any) -> bool:\n             return True\n \n         if self.model_type.support_native_tool_calling:\n-            return response.choices[0].message.tool_calls is None\n+            return not response.choices[0].message.tool_calls\n \n         return \"</function>\" not in str(\n             response.choices[0].message.content or \"\"\ndiff --git a/camel/bots/discord/discord_app.py b/camel/bots/discord/discord_app.py\nindex 896f4f0e89..286a0a4f77 100644\n--- a/camel/bots/discord/discord_app.py\n+++ b/camel/bots/discord/discord_app.py\n@@ -21,7 +21,7 @@\n \n from camel.bots.discord.discord_installation import DiscordInstallation\n from camel.logger import get_logger\n-from camel.utils import dependencies_required\n+from camel.utils import api_keys_required, dependencies_required\n \n from .discord_store import DiscordBaseInstallationStore\n \n@@ -48,6 +48,11 @@ class DiscordApp:\n     \"\"\"\n \n     @dependencies_required('discord')\n+    @api_keys_required(\n+        [\n+            (\"token\", \"DISCORD_BOT_TOKEN\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         channel_ids: Optional[List[int]] = None,\n@@ -81,19 +86,13 @@ def __init__(\n                 (default: :obj:`None`)\n \n         Raises:\n-            ValueError: If the `DISCORD_TOKEN` is not found in environment\n+            ValueError: If the `DISCORD_BOT_TOKEN` is not found in environment\n                 variables.\n         \"\"\"\n         self.token = token or os.getenv(\"DISCORD_BOT_TOKEN\")\n         self.channel_ids = channel_ids\n         self.installation_store = installation_store\n \n-        if not self.token:\n-            raise ValueError(\n-                \"`DISCORD_TOKEN` not defined. Get it\"\n-                \" here: `https://discord.com/developers/applications`.\"\n-            )\n-\n         if not intents:\n             intents = discord.Intents.all()\n             intents.message_content = True\ndiff --git a/poetry.lock b/poetry.lock\nindex 9b1b82ac97..149e7efdfa 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -1,4 +1,4 @@\n-# This file is automatically @generated by Poetry 1.8.4 and should not be changed by hand.\n+# This file is automatically @generated by Poetry 1.8.5 and should not be changed by hand.\n \n [[package]]\n name = \"accelerate\"\n@@ -803,13 +803,13 @@ css = [\"tinycss2 (>=1.1.0,<1.5)\"]\n \n [[package]]\n name = \"botocore\"\n-version = \"1.35.94\"\n+version = \"1.35.96\"\n description = \"Low-level, data-driven core of boto 3.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"botocore-1.35.94-py3-none-any.whl\", hash = \"sha256:d784d944865d8279c79d2301fc09ac28b5221d4e7328fb4e23c642c253b9932c\"},\n-    {file = \"botocore-1.35.94.tar.gz\", hash = \"sha256:2b3309b356541faa4d88bb957dcac1d8004aa44953c0b7d4521a6cc5d3d5d6ba\"},\n+    {file = \"botocore-1.35.96-py3-none-any.whl\", hash = \"sha256:b5f4cf11372aeccf87bb0b6148a020212c4c42fb5bcdebb6590bb10f6612b98e\"},\n+    {file = \"botocore-1.35.96.tar.gz\", hash = \"sha256:385fd406ed14bdd624e082d3e15dd6575d490d5d7374fb02f0a798c3ca9ea802\"},\n ]\n \n [package.dependencies]\n@@ -2634,13 +2634,13 @@ grpcio-gcp = [\"grpcio-gcp (>=0.2.2,<1.0.dev0)\"]\n \n [[package]]\n name = \"google-api-python-client\"\n-version = \"2.157.0\"\n+version = \"2.158.0\"\n description = \"Google API Client Library for Python\"\n optional = true\n python-versions = \">=3.7\"\n files = [\n-    {file = \"google_api_python_client-2.157.0-py2.py3-none-any.whl\", hash = \"sha256:0b0231db106324c659bf8b85f390391c00da57a60ebc4271e33def7aac198c75\"},\n-    {file = \"google_api_python_client-2.157.0.tar.gz\", hash = \"sha256:2ee342d0967ad1cedec43ccd7699671d94bff151e1f06833ea81303f9a6d86fd\"},\n+    {file = \"google_api_python_client-2.158.0-py2.py3-none-any.whl\", hash = \"sha256:36f8c8d2e79e50f76790ca5946d2f3f8333e210dc8539a6c88e0742416474ad2\"},\n+    {file = \"google_api_python_client-2.158.0.tar.gz\", hash = \"sha256:b6664597a9955e04977a62752e33fe44cb35c580e190c1cb08a041893172bd67\"},\n ]\n \n [package.dependencies]\n@@ -4286,13 +4286,13 @@ test = [\"coverage\", \"pytest\", \"pytest-cov\"]\n \n [[package]]\n name = \"linkup-sdk\"\n-version = \"0.2.1\"\n+version = \"0.2.2\"\n description = \"A Python Client SDK for the Linkup API\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"linkup_sdk-0.2.1-py3-none-any.whl\", hash = \"sha256:bf50c88e659c6d9291cbd5e3e99b6a20a14c9b1eb2dc7acca763a3ae6f84b26e\"},\n-    {file = \"linkup_sdk-0.2.1.tar.gz\", hash = \"sha256:b00ba7cb0117358e975d50196501ac49b247509fd236121e40abe40e6a2a3e9a\"},\n+    {file = \"linkup_sdk-0.2.2-py3-none-any.whl\", hash = \"sha256:23b15e950e2c2023a5cf3c5c7c0188ed3f38889dd7b2e61e08494a953e30c31f\"},\n+    {file = \"linkup_sdk-0.2.2.tar.gz\", hash = \"sha256:00d9ff7e6d41a291314e8876affd66eeeaa3e623fcc9be1b3127ff8b744aa33d\"},\n ]\n \n [package.dependencies]\n@@ -4301,13 +4301,13 @@ pydantic = \"*\"\n \n [[package]]\n name = \"litellm\"\n-version = \"1.57.3\"\n+version = \"1.57.5\"\n description = \"Library to easily interface with LLM API providers\"\n optional = true\n python-versions = \"!=2.7.*,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,!=3.7.*,>=3.8\"\n files = [\n-    {file = \"litellm-1.57.3-py3-none-any.whl\", hash = \"sha256:24a1f2207b3abe8c14770da7d3f47cce4f39e748693a4febc8d58ea2b5de1b63\"},\n-    {file = \"litellm-1.57.3.tar.gz\", hash = \"sha256:5b93f94a453358ab7b937a8f85adee4cfe638d120f2761a5eb85d8f56eaa6283\"},\n+    {file = \"litellm-1.57.5-py3-none-any.whl\", hash = \"sha256:522ea3cbe0e348947bd9473897d0d28df35fb8b0dc5d7e3540c441c01b5ac821\"},\n+    {file = \"litellm-1.57.5.tar.gz\", hash = \"sha256:981461d67dc851ee4dd204c238e9528cbeffb3001a7e9cf2d5c32982373335af\"},\n ]\n \n [package.dependencies]\n@@ -4322,6 +4322,7 @@ pydantic = \">=2.0.0,<3.0.0\"\n python-dotenv = \">=0.2.0\"\n tiktoken = \">=0.7.0\"\n tokenizers = \"*\"\n+uvloop = \">=0.21.0,<0.22.0\"\n \n [package.extras]\n extra-proxy = [\"azure-identity (>=1.15.0,<2.0.0)\", \"azure-keyvault-secrets (>=4.8.0,<5.0.0)\", \"google-cloud-kms (>=2.21.3,<3.0.0)\", \"prisma (==0.11.0)\", \"resend (>=0.8.0,<0.9.0)\"]\n@@ -4594,13 +4595,13 @@ files = [\n \n [[package]]\n name = \"marshmallow\"\n-version = \"3.24.1\"\n+version = \"3.25.0\"\n description = \"A lightweight library for converting complex datatypes to and from native Python datatypes.\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"marshmallow-3.24.1-py3-none-any.whl\", hash = \"sha256:ddb5c9987017d37be351c184e4e867e7bf55f7331f4da730dedad6b7af662cdd\"},\n-    {file = \"marshmallow-3.24.1.tar.gz\", hash = \"sha256:efdcb656ac8788f0e3d1d938f8dc0f237bf1a99aff8f6dfbffa594981641cea0\"},\n+    {file = \"marshmallow-3.25.0-py3-none-any.whl\", hash = \"sha256:50894cd57c6b097a6c6ed2bf216af47d10146990a54db52d03e32edb0448c905\"},\n+    {file = \"marshmallow-3.25.0.tar.gz\", hash = \"sha256:5ba94a4eb68894ad6761a505eb225daf7e5cb7b4c32af62d4a45e9d42665bc31\"},\n ]\n \n [package.dependencies]\n@@ -4721,7 +4722,6 @@ python-versions = \">=3.7\"\n files = [\n     {file = \"milvus_lite-2.4.11-py3-none-macosx_10_9_x86_64.whl\", hash = \"sha256:9e563ae0dca1b41bfd76b90f06b2bcc474460fe4eba142c9bab18d2747ff843b\"},\n     {file = \"milvus_lite-2.4.11-py3-none-macosx_11_0_arm64.whl\", hash = \"sha256:d21472bd24eb327542817829ce7cb51878318e6173c4d62353c77421aecf98d6\"},\n-    {file = \"milvus_lite-2.4.11-py3-none-manylinux2014_aarch64.whl\", hash = \"sha256:8e6ef27f7f84976f9fd0047b675ede746db2e0cc581c44a916ac9e71e0cef05d\"},\n     {file = \"milvus_lite-2.4.11-py3-none-manylinux2014_x86_64.whl\", hash = \"sha256:551f56b49fcfbb330b658b4a3c56ed29ba9b692ec201edd1f2dade7f5e39957d\"},\n ]\n \n@@ -5721,13 +5721,13 @@ sympy = \"*\"\n \n [[package]]\n name = \"openai\"\n-version = \"1.59.5\"\n+version = \"1.59.6\"\n description = \"The official Python library for the openai API\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"openai-1.59.5-py3-none-any.whl\", hash = \"sha256:e646b44856b0dda9345d3c43639e056334d792d1690e99690313c0ef7ca4d8cc\"},\n-    {file = \"openai-1.59.5.tar.gz\", hash = \"sha256:9886e77c02dad9dc6a7b67a11ab372a56842a9b5d376aa476672175ab10e83a0\"},\n+    {file = \"openai-1.59.6-py3-none-any.whl\", hash = \"sha256:b28ed44eee3d5ebe1a3ea045ee1b4b50fea36ecd50741aaa5ce5a5559c900cb6\"},\n+    {file = \"openai-1.59.6.tar.gz\", hash = \"sha256:c7670727c2f1e4473f62fea6fa51475c8bc098c9ffb47bfb9eef5be23c747934\"},\n ]\n \n [package.dependencies]\n@@ -10090,72 +10090,72 @@ test = [\"pytest\"]\n \n [[package]]\n name = \"sqlalchemy\"\n-version = \"2.0.36\"\n+version = \"2.0.37\"\n description = \"Database Abstraction Library\"\n optional = true\n python-versions = \">=3.7\"\n files = [\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:59b8f3adb3971929a3e660337f5dacc5942c2cdb760afcabb2614ffbda9f9f72\"},\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:37350015056a553e442ff672c2d20e6f4b6d0b2495691fa239d8aa18bb3bc908\"},\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8318f4776c85abc3f40ab185e388bee7a6ea99e7fa3a30686580b209eaa35c08\"},\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c245b1fbade9c35e5bd3b64270ab49ce990369018289ecfde3f9c318411aaa07\"},\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:69f93723edbca7342624d09f6704e7126b152eaed3cdbb634cb657a54332a3c5\"},\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:f9511d8dd4a6e9271d07d150fb2f81874a3c8c95e11ff9af3a2dfc35fe42ee44\"},\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-win32.whl\", hash = \"sha256:c3f3631693003d8e585d4200730616b78fafd5a01ef8b698f6967da5c605b3fa\"},\n-    {file = \"SQLAlchemy-2.0.36-cp310-cp310-win_amd64.whl\", hash = \"sha256:a86bfab2ef46d63300c0f06936bd6e6c0105faa11d509083ba8f2f9d237fb5b5\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:fd3a55deef00f689ce931d4d1b23fa9f04c880a48ee97af488fd215cf24e2a6c\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:4f5e9cd989b45b73bd359f693b935364f7e1f79486e29015813c338450aa5a71\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d0ddd9db6e59c44875211bc4c7953a9f6638b937b0a88ae6d09eb46cced54eff\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2519f3a5d0517fc159afab1015e54bb81b4406c278749779be57a569d8d1bb0d\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:59b1ee96617135f6e1d6f275bbe988f419c5178016f3d41d3c0abb0c819f75bb\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:39769a115f730d683b0eb7b694db9789267bcd027326cccc3125e862eb03bfd8\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-win32.whl\", hash = \"sha256:66bffbad8d6271bb1cc2f9a4ea4f86f80fe5e2e3e501a5ae2a3dc6a76e604e6f\"},\n-    {file = \"SQLAlchemy-2.0.36-cp311-cp311-win_amd64.whl\", hash = \"sha256:23623166bfefe1487d81b698c423f8678e80df8b54614c2bf4b4cfcd7c711959\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:f7b64e6ec3f02c35647be6b4851008b26cff592a95ecb13b6788a54ef80bbdd4\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:46331b00096a6db1fdc052d55b101dbbfc99155a548e20a0e4a8e5e4d1362855\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fdf3386a801ea5aba17c6410dd1dc8d39cf454ca2565541b5ac42a84e1e28f53\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ac9dfa18ff2a67b09b372d5db8743c27966abf0e5344c555d86cc7199f7ad83a\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:90812a8933df713fdf748b355527e3af257a11e415b613dd794512461eb8a686\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:1bc330d9d29c7f06f003ab10e1eaced295e87940405afe1b110f2eb93a233588\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-win32.whl\", hash = \"sha256:79d2e78abc26d871875b419e1fd3c0bca31a1cb0043277d0d850014599626c2e\"},\n-    {file = \"SQLAlchemy-2.0.36-cp312-cp312-win_amd64.whl\", hash = \"sha256:b544ad1935a8541d177cb402948b94e871067656b3a0b9e91dbec136b06a2ff5\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:b5cc79df7f4bc3d11e4b542596c03826063092611e481fcf1c9dfee3c94355ef\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:3c01117dd36800f2ecaa238c65365b7b16497adc1522bf84906e5710ee9ba0e8\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9bc633f4ee4b4c46e7adcb3a9b5ec083bf1d9a97c1d3854b92749d935de40b9b\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9e46ed38affdfc95d2c958de328d037d87801cfcbea6d421000859e9789e61c2\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:b2985c0b06e989c043f1dc09d4fe89e1616aadd35392aea2844f0458a989eacf\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4a121d62ebe7d26fec9155f83f8be5189ef1405f5973ea4874a26fab9f1e262c\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-win32.whl\", hash = \"sha256:0572f4bd6f94752167adfd7c1bed84f4b240ee6203a95e05d1e208d488d0d436\"},\n-    {file = \"SQLAlchemy-2.0.36-cp313-cp313-win_amd64.whl\", hash = \"sha256:8c78ac40bde930c60e0f78b3cd184c580f89456dd87fc08f9e3ee3ce8765ce88\"},\n-    {file = \"SQLAlchemy-2.0.36-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:be9812b766cad94a25bc63bec11f88c4ad3629a0cec1cd5d4ba48dc23860486b\"},\n-    {file = \"SQLAlchemy-2.0.36-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:50aae840ebbd6cdd41af1c14590e5741665e5272d2fee999306673a1bb1fdb4d\"},\n-    {file = \"SQLAlchemy-2.0.36-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4557e1f11c5f653ebfdd924f3f9d5ebfc718283b0b9beebaa5dd6b77ec290971\"},\n-    {file = \"SQLAlchemy-2.0.36-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:07b441f7d03b9a66299ce7ccf3ef2900abc81c0db434f42a5694a37bd73870f2\"},\n-    {file = \"SQLAlchemy-2.0.36-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:28120ef39c92c2dd60f2721af9328479516844c6b550b077ca450c7d7dc68575\"},\n-    {file = \"SQLAlchemy-2.0.36-cp37-cp37m-win32.whl\", hash = \"sha256:b81ee3d84803fd42d0b154cb6892ae57ea6b7c55d8359a02379965706c7efe6c\"},\n-    {file = \"SQLAlchemy-2.0.36-cp37-cp37m-win_amd64.whl\", hash = \"sha256:f942a799516184c855e1a32fbc7b29d7e571b52612647866d4ec1c3242578fcb\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:3d6718667da04294d7df1670d70eeddd414f313738d20a6f1d1f379e3139a545\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:72c28b84b174ce8af8504ca28ae9347d317f9dba3999e5981a3cd441f3712e24\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b11d0cfdd2b095e7b0686cf5fabeb9c67fae5b06d265d8180715b8cfa86522e3\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e32092c47011d113dc01ab3e1d3ce9f006a47223b18422c5c0d150af13a00687\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:6a440293d802d3011028e14e4226da1434b373cbaf4a4bbb63f845761a708346\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:c54a1e53a0c308a8e8a7dffb59097bff7facda27c70c286f005327f21b2bd6b1\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-win32.whl\", hash = \"sha256:1e0d612a17581b6616ff03c8e3d5eff7452f34655c901f75d62bd86449d9750e\"},\n-    {file = \"SQLAlchemy-2.0.36-cp38-cp38-win_amd64.whl\", hash = \"sha256:8958b10490125124463095bbdadda5aa22ec799f91958e410438ad6c97a7b793\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:dc022184d3e5cacc9579e41805a681187650e170eb2fd70e28b86192a479dcaa\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:b817d41d692bf286abc181f8af476c4fbef3fd05e798777492618378448ee689\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a4e46a888b54be23d03a89be510f24a7652fe6ff660787b96cd0e57a4ebcb46d\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c4ae3005ed83f5967f961fd091f2f8c5329161f69ce8480aa8168b2d7fe37f06\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:03e08af7a5f9386a43919eda9de33ffda16b44eb11f3b313e6822243770e9763\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:3dbb986bad3ed5ceaf090200eba750b5245150bd97d3e67343a3cfed06feecf7\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-win32.whl\", hash = \"sha256:9fe53b404f24789b5ea9003fc25b9a3988feddebd7e7b369c8fac27ad6f52f28\"},\n-    {file = \"SQLAlchemy-2.0.36-cp39-cp39-win_amd64.whl\", hash = \"sha256:af148a33ff0349f53512a049c6406923e4e02bf2f26c5fb285f143faf4f0e46a\"},\n-    {file = \"SQLAlchemy-2.0.36-py3-none-any.whl\", hash = \"sha256:fddbe92b4760c6f5d48162aef14824add991aeda8ddadb3c31d56eb15ca69f8e\"},\n-    {file = \"sqlalchemy-2.0.36.tar.gz\", hash = \"sha256:7f2767680b6d2398aea7082e45a774b2b0767b5c8d8ffb9c8b683088ea9b29c5\"},\n-]\n-\n-[package.dependencies]\n-greenlet = {version = \"!=0.4.17\", markers = \"python_version < \\\"3.13\\\" and (platform_machine == \\\"aarch64\\\" or platform_machine == \\\"ppc64le\\\" or platform_machine == \\\"x86_64\\\" or platform_machine == \\\"amd64\\\" or platform_machine == \\\"AMD64\\\" or platform_machine == \\\"win32\\\" or platform_machine == \\\"WIN32\\\")\"}\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:da36c3b0e891808a7542c5c89f224520b9a16c7f5e4d6a1156955605e54aef0e\"},\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:e7402ff96e2b073a98ef6d6142796426d705addd27b9d26c3b32dbaa06d7d069\"},\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e6f5d254a22394847245f411a2956976401e84da4288aa70cbcd5190744062c1\"},\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:41296bbcaa55ef5fdd32389a35c710133b097f7b2609d8218c0eabded43a1d84\"},\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:bedee60385c1c0411378cbd4dc486362f5ee88deceea50002772912d798bb00f\"},\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:6c67415258f9f3c69867ec02fea1bf6508153709ecbd731a982442a590f2b7e4\"},\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-win32.whl\", hash = \"sha256:650dcb70739957a492ad8acff65d099a9586b9b8920e3507ca61ec3ce650bb72\"},\n+    {file = \"SQLAlchemy-2.0.37-cp310-cp310-win_amd64.whl\", hash = \"sha256:93d1543cd8359040c02b6614421c8e10cd7a788c40047dbc507ed46c29ae5636\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:78361be6dc9073ed17ab380985d1e45e48a642313ab68ab6afa2457354ff692c\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:b661b49d0cb0ab311a189b31e25576b7ac3e20783beb1e1817d72d9d02508bf5\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d57bafbab289e147d064ffbd5cca2d7b1394b63417c0636cea1f2e93d16eb9e8\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2fa2c0913f02341d25fb858e4fb2031e6b0813494cca1ba07d417674128ce11b\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:9df21b8d9e5c136ea6cde1c50d2b1c29a2b5ff2b1d610165c23ff250e0704087\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:db18ff6b8c0f1917f8b20f8eca35c28bbccb9f83afa94743e03d40203ed83de9\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-win32.whl\", hash = \"sha256:46954173612617a99a64aee103bcd3f078901b9a8dcfc6ae80cbf34ba23df989\"},\n+    {file = \"SQLAlchemy-2.0.37-cp311-cp311-win_amd64.whl\", hash = \"sha256:7b7e772dc4bc507fdec4ee20182f15bd60d2a84f1e087a8accf5b5b7a0dcf2ba\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:2952748ecd67ed3b56773c185e85fc084f6bdcdec10e5032a7c25a6bc7d682ef\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:3151822aa1db0eb5afd65ccfafebe0ef5cda3a7701a279c8d0bf17781a793bb4\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:eaa8039b6d20137a4e02603aba37d12cd2dde7887500b8855356682fc33933f4\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1cdba1f73b64530c47b27118b7053b8447e6d6f3c8104e3ac59f3d40c33aa9fd\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:1b2690456528a87234a75d1a1644cdb330a6926f455403c8e4f6cad6921f9098\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:cf5ae8a9dcf657fd72144a7fd01f243236ea39e7344e579a121c4205aedf07bb\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-win32.whl\", hash = \"sha256:ea308cec940905ba008291d93619d92edaf83232ec85fbd514dcb329f3192761\"},\n+    {file = \"SQLAlchemy-2.0.37-cp312-cp312-win_amd64.whl\", hash = \"sha256:635d8a21577341dfe4f7fa59ec394b346da12420b86624a69e466d446de16aff\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:8c4096727193762e72ce9437e2a86a110cf081241919ce3fab8e89c02f6b6658\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:e4fb5ac86d8fe8151966814f6720996430462e633d225497566b3996966b9bdb\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e56a139bfe136a22c438478a86f8204c1eb5eed36f4e15c4224e4b9db01cb3e4\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2f95fc8e3f34b5f6b3effb49d10ac97c569ec8e32f985612d9b25dd12d0d2e94\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:c505edd429abdfe3643fa3b2e83efb3445a34a9dc49d5f692dd087be966020e0\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:12b0f1ec623cccf058cf21cb544f0e74656618165b083d78145cafde156ea7b6\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-win32.whl\", hash = \"sha256:293f9ade06b2e68dd03cfb14d49202fac47b7bb94bffcff174568c951fbc7af2\"},\n+    {file = \"SQLAlchemy-2.0.37-cp313-cp313-win_amd64.whl\", hash = \"sha256:d70f53a0646cc418ca4853da57cf3ddddbccb8c98406791f24426f2dd77fd0e2\"},\n+    {file = \"SQLAlchemy-2.0.37-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:44f569d0b1eb82301b92b72085583277316e7367e038d97c3a1a899d9a05e342\"},\n+    {file = \"SQLAlchemy-2.0.37-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b2eae3423e538c10d93ae3e87788c6a84658c3ed6db62e6a61bb9495b0ad16bb\"},\n+    {file = \"SQLAlchemy-2.0.37-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dfff7be361048244c3aa0f60b5e63221c5e0f0e509f4e47b8910e22b57d10ae7\"},\n+    {file = \"SQLAlchemy-2.0.37-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:5bc3339db84c5fb9130ac0e2f20347ee77b5dd2596ba327ce0d399752f4fce39\"},\n+    {file = \"SQLAlchemy-2.0.37-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:84b9f23b0fa98a6a4b99d73989350a94e4a4ec476b9a7dfe9b79ba5939f5e80b\"},\n+    {file = \"SQLAlchemy-2.0.37-cp37-cp37m-win32.whl\", hash = \"sha256:51bc9cfef83e0ac84f86bf2b10eaccb27c5a3e66a1212bef676f5bee6ef33ebb\"},\n+    {file = \"SQLAlchemy-2.0.37-cp37-cp37m-win_amd64.whl\", hash = \"sha256:8e47f1af09444f87c67b4f1bb6231e12ba6d4d9f03050d7fc88df6d075231a49\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:6b788f14c5bb91db7f468dcf76f8b64423660a05e57fe277d3f4fad7b9dcb7ce\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:521ef85c04c33009166777c77e76c8a676e2d8528dc83a57836b63ca9c69dcd1\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:75311559f5c9881a9808eadbeb20ed8d8ba3f7225bef3afed2000c2a9f4d49b9\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cce918ada64c956b62ca2c2af59b125767097ec1dca89650a6221e887521bfd7\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:9d087663b7e1feabea8c578d6887d59bb00388158e8bff3a76be11aa3f748ca2\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:cf95a60b36997dad99692314c4713f141b61c5b0b4cc5c3426faad570b31ca01\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-win32.whl\", hash = \"sha256:d75ead7dd4d255068ea0f21492ee67937bd7c90964c8f3c2bea83c7b7f81b95f\"},\n+    {file = \"SQLAlchemy-2.0.37-cp38-cp38-win_amd64.whl\", hash = \"sha256:74bbd1d0a9bacf34266a7907d43260c8d65d31d691bb2356f41b17c2dca5b1d0\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:648ec5acf95ad59255452ef759054f2176849662af4521db6cb245263ae4aa33\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:35bd2df269de082065d4b23ae08502a47255832cc3f17619a5cea92ce478b02b\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4f581d365af9373a738c49e0c51e8b18e08d8a6b1b15cc556773bcd8a192fa8b\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:82df02816c14f8dc9f4d74aea4cb84a92f4b0620235daa76dde002409a3fbb5a\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:94b564e38b344d3e67d2e224f0aec6ba09a77e4582ced41e7bfd0f757d926ec9\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:955a2a765aa1bd81aafa69ffda179d4fe3e2a3ad462a736ae5b6f387f78bfeb8\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-win32.whl\", hash = \"sha256:03f0528c53ca0b67094c4764523c1451ea15959bbf0a8a8a3096900014db0278\"},\n+    {file = \"SQLAlchemy-2.0.37-cp39-cp39-win_amd64.whl\", hash = \"sha256:4b12885dc85a2ab2b7d00995bac6d967bffa8594123b02ed21e8eb2205a7584b\"},\n+    {file = \"SQLAlchemy-2.0.37-py3-none-any.whl\", hash = \"sha256:a8998bf9f8658bd3839cbc44ddbe982955641863da0c1efe5b00c1ab4f5c16b1\"},\n+    {file = \"sqlalchemy-2.0.37.tar.gz\", hash = \"sha256:12b28d99a9c14eaf4055810df1001557176716de0167b91026e648e65229bffb\"},\n+]\n+\n+[package.dependencies]\n+greenlet = {version = \"!=0.4.17\", markers = \"python_version < \\\"3.14\\\" and (platform_machine == \\\"aarch64\\\" or platform_machine == \\\"ppc64le\\\" or platform_machine == \\\"x86_64\\\" or platform_machine == \\\"amd64\\\" or platform_machine == \\\"AMD64\\\" or platform_machine == \\\"win32\\\" or platform_machine == \\\"WIN32\\\")\"}\n typing-extensions = \">=4.6.0\"\n \n [package.extras]\n@@ -10402,13 +10402,13 @@ blobfile = [\"blobfile (>=2)\"]\n \n [[package]]\n name = \"timm\"\n-version = \"1.0.12\"\n+version = \"1.0.13\"\n description = \"PyTorch Image Models\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"timm-1.0.12-py3-none-any.whl\", hash = \"sha256:6b2770674213f10b7f193be5598ce48bd010ab21cc8af77dba6aeef58b1298a1\"},\n-    {file = \"timm-1.0.12.tar.gz\", hash = \"sha256:9da490683bd06302ec40e1892f1ccf87985f033e41f3580887d886b9aee9449a\"},\n+    {file = \"timm-1.0.13-py3-none-any.whl\", hash = \"sha256:5f1dd811c7b1ebc2a6f3874f3cb49c6f26de1a42b9f76debe0414b9740f83669\"},\n+    {file = \"timm-1.0.13.tar.gz\", hash = \"sha256:39190337cff26a15d180b660374c901ac472b69d91d8cfc5a5bb47c600fb3716\"},\n ]\n \n [package.dependencies]\n@@ -11112,13 +11112,13 @@ urllib3 = \">=2\"\n \n [[package]]\n name = \"types-setuptools\"\n-version = \"75.6.0.20241223\"\n+version = \"75.8.0.20250110\"\n description = \"Typing stubs for setuptools\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"types_setuptools-75.6.0.20241223-py3-none-any.whl\", hash = \"sha256:7cbfd3bf2944f88bbcdd321b86ddd878232a277be95d44c78a53585d78ebc2f6\"},\n-    {file = \"types_setuptools-75.6.0.20241223.tar.gz\", hash = \"sha256:d9478a985057ed48a994c707f548e55aababa85fe1c9b212f43ab5a1fffd3211\"},\n+    {file = \"types_setuptools-75.8.0.20250110-py3-none-any.whl\", hash = \"sha256:a9f12980bbf9bcdc23ecd80755789085bad6bfce4060c2275bc2b4ca9f2bc480\"},\n+    {file = \"types_setuptools-75.8.0.20250110.tar.gz\", hash = \"sha256:96f7ec8bbd6e0a54ea180d66ad68ad7a1d7954e7281a710ea2de75e355545271\"},\n ]\n \n [[package]]\n@@ -11504,6 +11504,57 @@ typing-extensions = {version = \">=4.0\", markers = \"python_version < \\\"3.11\\\"\"}\n [package.extras]\n standard = [\"colorama (>=0.4)\", \"httptools (>=0.6.3)\", \"python-dotenv (>=0.13)\", \"pyyaml (>=5.1)\", \"uvloop (>=0.14.0,!=0.15.0,!=0.15.1)\", \"watchfiles (>=0.13)\", \"websockets (>=10.4)\"]\n \n+[[package]]\n+name = \"uvloop\"\n+version = \"0.21.0\"\n+description = \"Fast implementation of asyncio event loop on top of libuv\"\n+optional = true\n+python-versions = \">=3.8.0\"\n+files = [\n+    {file = \"uvloop-0.21.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ec7e6b09a6fdded42403182ab6b832b71f4edaf7f37a9a0e371a01db5f0cb45f\"},\n+    {file = \"uvloop-0.21.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:196274f2adb9689a289ad7d65700d37df0c0930fd8e4e743fa4834e850d7719d\"},\n+    {file = \"uvloop-0.21.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f38b2e090258d051d68a5b14d1da7203a3c3677321cf32a95a6f4db4dd8b6f26\"},\n+    {file = \"uvloop-0.21.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:87c43e0f13022b998eb9b973b5e97200c8b90823454d4bc06ab33829e09fb9bb\"},\n+    {file = \"uvloop-0.21.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:10d66943def5fcb6e7b37310eb6b5639fd2ccbc38df1177262b0640c3ca68c1f\"},\n+    {file = \"uvloop-0.21.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:67dd654b8ca23aed0a8e99010b4c34aca62f4b7fce88f39d452ed7622c94845c\"},\n+    {file = \"uvloop-0.21.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:c0f3fa6200b3108919f8bdabb9a7f87f20e7097ea3c543754cabc7d717d95cf8\"},\n+    {file = \"uvloop-0.21.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:0878c2640cf341b269b7e128b1a5fed890adc4455513ca710d77d5e93aa6d6a0\"},\n+    {file = \"uvloop-0.21.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b9fb766bb57b7388745d8bcc53a359b116b8a04c83a2288069809d2b3466c37e\"},\n+    {file = \"uvloop-0.21.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8a375441696e2eda1c43c44ccb66e04d61ceeffcd76e4929e527b7fa401b90fb\"},\n+    {file = \"uvloop-0.21.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:baa0e6291d91649c6ba4ed4b2f982f9fa165b5bbd50a9e203c416a2797bab3c6\"},\n+    {file = \"uvloop-0.21.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:4509360fcc4c3bd2c70d87573ad472de40c13387f5fda8cb58350a1d7475e58d\"},\n+    {file = \"uvloop-0.21.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:359ec2c888397b9e592a889c4d72ba3d6befba8b2bb01743f72fffbde663b59c\"},\n+    {file = \"uvloop-0.21.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:f7089d2dc73179ce5ac255bdf37c236a9f914b264825fdaacaded6990a7fb4c2\"},\n+    {file = \"uvloop-0.21.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:baa4dcdbd9ae0a372f2167a207cd98c9f9a1ea1188a8a526431eef2f8116cc8d\"},\n+    {file = \"uvloop-0.21.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:86975dca1c773a2c9864f4c52c5a55631038e387b47eaf56210f873887b6c8dc\"},\n+    {file = \"uvloop-0.21.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:461d9ae6660fbbafedd07559c6a2e57cd553b34b0065b6550685f6653a98c1cb\"},\n+    {file = \"uvloop-0.21.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:183aef7c8730e54c9a3ee3227464daed66e37ba13040bb3f350bc2ddc040f22f\"},\n+    {file = \"uvloop-0.21.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:bfd55dfcc2a512316e65f16e503e9e450cab148ef11df4e4e679b5e8253a5281\"},\n+    {file = \"uvloop-0.21.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:787ae31ad8a2856fc4e7c095341cccc7209bd657d0e71ad0dc2ea83c4a6fa8af\"},\n+    {file = \"uvloop-0.21.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5ee4d4ef48036ff6e5cfffb09dd192c7a5027153948d85b8da7ff705065bacc6\"},\n+    {file = \"uvloop-0.21.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f3df876acd7ec037a3d005b3ab85a7e4110422e4d9c1571d4fc89b0fc41b6816\"},\n+    {file = \"uvloop-0.21.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:bd53ecc9a0f3d87ab847503c2e1552b690362e005ab54e8a48ba97da3924c0dc\"},\n+    {file = \"uvloop-0.21.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a5c39f217ab3c663dc699c04cbd50c13813e31d917642d459fdcec07555cc553\"},\n+    {file = \"uvloop-0.21.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:17df489689befc72c39a08359efac29bbee8eee5209650d4b9f34df73d22e414\"},\n+    {file = \"uvloop-0.21.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:bc09f0ff191e61c2d592a752423c767b4ebb2986daa9ed62908e2b1b9a9ae206\"},\n+    {file = \"uvloop-0.21.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f0ce1b49560b1d2d8a2977e3ba4afb2414fb46b86a1b64056bc4ab929efdafbe\"},\n+    {file = \"uvloop-0.21.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e678ad6fe52af2c58d2ae3c73dc85524ba8abe637f134bf3564ed07f555c5e79\"},\n+    {file = \"uvloop-0.21.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:460def4412e473896ef179a1671b40c039c7012184b627898eea5072ef6f017a\"},\n+    {file = \"uvloop-0.21.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:10da8046cc4a8f12c91a1c39d1dd1585c41162a15caaef165c2174db9ef18bdc\"},\n+    {file = \"uvloop-0.21.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:c097078b8031190c934ed0ebfee8cc5f9ba9642e6eb88322b9958b649750f72b\"},\n+    {file = \"uvloop-0.21.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:46923b0b5ee7fc0020bef24afe7836cb068f5050ca04caf6b487c513dc1a20b2\"},\n+    {file = \"uvloop-0.21.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:53e420a3afe22cdcf2a0f4846e377d16e718bc70103d7088a4f7623567ba5fb0\"},\n+    {file = \"uvloop-0.21.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:88cb67cdbc0e483da00af0b2c3cdad4b7c61ceb1ee0f33fe00e09c81e3a6cb75\"},\n+    {file = \"uvloop-0.21.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:221f4f2a1f46032b403bf3be628011caf75428ee3cc204a22addf96f586b19fd\"},\n+    {file = \"uvloop-0.21.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:2d1f581393673ce119355d56da84fe1dd9d2bb8b3d13ce792524e1607139feff\"},\n+    {file = \"uvloop-0.21.0.tar.gz\", hash = \"sha256:3bf12b0fda68447806a7ad847bfa591613177275d35b6724b1ee573faa3704e3\"},\n+]\n+\n+[package.extras]\n+dev = [\"Cython (>=3.0,<4.0)\", \"setuptools (>=60)\"]\n+docs = [\"Sphinx (>=4.1.2,<4.2.0)\", \"sphinx-rtd-theme (>=0.5.2,<0.6.0)\", \"sphinxcontrib-asyncio (>=0.3.0,<0.4.0)\"]\n+test = [\"aiohttp (>=3.10.5)\", \"flake8 (>=5.0,<6.0)\", \"mypy (>=0.800)\", \"psutil\", \"pyOpenSSL (>=23.0.0,<23.1.0)\", \"pycodestyle (>=2.9.0,<2.10.0)\"]\n+\n [[package]]\n name = \"virtualenv\"\n version = \"20.28.1\"\n",
        "test_patch": "diff --git a/.github/workflows/pytest_package.yml b/.github/workflows/pytest_package.yml\nindex e4c884902c..b87e8c1d78 100644\n--- a/.github/workflows/pytest_package.yml\n+++ b/.github/workflows/pytest_package.yml\n@@ -56,6 +56,7 @@ jobs:\n         GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n+        DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n       run: poetry run pytest --fast-test-mode test/\n \n   pytest_package_llm_test:\n@@ -101,6 +102,7 @@ jobs:\n         GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n+        DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n       run: poetry run pytest --llm-test-only test/\n \n   pytest_package_very_slow_test:\n@@ -146,4 +148,5 @@ jobs:\n         GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n         DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n+        DISCORD_BOT_TOKEN: \"${{ secrets.DISCORD_BOT_TOKEN }}\"\n       run: poetry run pytest --very-slow-test-only test/\ndiff --git a/examples/test/bots/test_discord_app.py b/test/bots/test_discord_app.py\nsimilarity index 95%\nrename from examples/test/bots/test_discord_app.py\nrename to test/bots/test_discord_app.py\nindex 64a5f8a74c..de6617c578 100644\n--- a/examples/test/bots/test_discord_app.py\n+++ b/test/bots/test_discord_app.py\n@@ -21,12 +21,12 @@\n class TestDiscordApp(unittest.TestCase):\n     def setUp(self):\n         # Set environment variables to simulate the token\n-        os.environ['DISCORD_TOKEN'] = 'fake_token'\n+        os.environ['DISCORD_BOT_TOKEN'] = 'fake_token'\n \n     def tearDown(self):\n         # Clear the environment variable after the test\n-        if 'DISCORD_TOKEN' in os.environ:\n-            del os.environ['DISCORD_TOKEN']\n+        if 'DISCORD_BOT_TOKEN' in os.environ:\n+            del os.environ['DISCORD_BOT_TOKEN']\n \n     @patch('discord.Client')\n     def test_init_with_token_from_env(self, mock_discord_client):\n@@ -46,7 +46,7 @@ def test_init_with_provided_token(self, mock_discord_client):\n     @patch('discord.Client')\n     def test_init_raises_value_error_without_token(self, mock_discord_client):\n         # Test that ValueError is raised if no token is set\n-        del os.environ['DISCORD_TOKEN']  # Remove the environment variable\n+        del os.environ['DISCORD_BOT_TOKEN']  # Remove the environment variable\n         with self.assertRaises(ValueError):\n             DiscordApp()\n \ndiff --git a/examples/test/bots/test_slack_app.py b/test/bots/test_slack_app.py\nsimilarity index 100%\nrename from examples/test/bots/test_slack_app.py\nrename to test/bots/test_slack_app.py\ndiff --git a/examples/test/bots/test_telegram_bot.py b/test/bots/test_telegram_bot.py\nsimilarity index 100%\nrename from examples/test/bots/test_telegram_bot.py\nrename to test/bots/test_telegram_bot.py\n",
        "problem_statement": "[BUG] Infinite loop while using parse API in OpenAI\n### Required prerequisites\n\n- [X] I have read the documentation <https://camel-ai.github.io/camel/camel.html>.\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### What version of camel are you using?\n\n0.2.16\n\n### System information\n\n-\n\n### Problem description\n\nhttps://github.com/camel-ai/camel/blob/a4820b7efa40a354f745d3369a29ee996298c780/camel/agents/chat_agent.py#L826-L827\r\n\r\nIn this line of code it checked whether the `tool_calls` is `None` to determine if there is no tool calls requested. However, for parse api the `tool_calls` will be `[]` if no tools are requested, which will then lead to an infinite loop.\n\n### Reproducible example code\n\n```python\r\nfrom pydantic import BaseModel\r\n\r\nfrom camel.agents.chat_agent import ChatAgent\r\nfrom camel.toolkits import SearchToolkit\r\n\r\n\r\nclass TempResponse(BaseModel):\r\n    celsius: float\r\n    fahrenheit: float\r\n\r\n\r\nagent = ChatAgent(\r\n    \"you are a helpful assistant\",\r\n    tools=[SearchToolkit().search_google],\r\n)\r\n\r\nrespnse = agent.step(\r\n    \"At what temperature does water boil?\",\r\n    response_format=TempResponse,\r\n)\r\n\r\nprint(respnse.msg.content)\r\n```\r\n\n\n### Traceback\n\n_No response_\n\n### Expected behavior\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2025-01-10T07:31:11Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            ".github/workflows/pytest_package.yml",
            "test/bots/test_discord_app.py",
            "test/bots/test_slack_app.py",
            "test/bots/test_telegram_bot.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1393,
        "instance_id": "camel-ai__camel-1393",
        "issue_numbers": [
            "1384"
        ],
        "base_commit": "675284069d2a38ed2eca754c98dd83e5ed16ce5d",
        "patch": "diff --git a/.env b/.env\nindex 1a1136e346..ff2e979ea7 100644\n--- a/.env\n+++ b/.env\n@@ -81,3 +81,6 @@\n \n # Meshy API (https://www.meshy.ai/api)\n # MESHY_API_KEY=\"Fill your API key here\"\n+\n+# Dappier API (https://api.dappier.com/)\n+# DAPPIER_API_KEY=\"Fill your API key here\"\ndiff --git a/.github/workflows/build_package.yml b/.github/workflows/build_package.yml\nindex 60d1649010..90513eb64e 100644\n--- a/.github/workflows/build_package.yml\n+++ b/.github/workflows/build_package.yml\n@@ -76,6 +76,7 @@ jobs:\n           QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n           GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n           DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n+          DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n         run: |\n           source venv/bin/activate\n           pytest --fast-test-mode ./test\ndiff --git a/camel/toolkits/__init__.py b/camel/toolkits/__init__.py\nindex 29aaca3d2a..30909f9f4d 100644\n--- a/camel/toolkits/__init__.py\n+++ b/camel/toolkits/__init__.py\n@@ -44,6 +44,7 @@\n from .human_toolkit import HumanToolkit\n from .stripe_toolkit import StripeToolkit\n from .video_toolkit import VideoDownloaderToolkit\n+from .dappier_toolkit import DappierToolkit\n \n __all__ = [\n     'BaseToolkit',\n@@ -75,4 +76,5 @@\n     'StripeToolkit',\n     'MeshyToolkit',\n     'OpenBBToolkit',\n+    'DappierToolkit',\n ]\ndiff --git a/camel/toolkits/dappier_toolkit.py b/camel/toolkits/dappier_toolkit.py\nnew file mode 100644\nindex 0000000000..6eb0c814ed\n--- /dev/null\n+++ b/camel/toolkits/dappier_toolkit.py\n@@ -0,0 +1,197 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import os\n+from typing import Dict, List, Literal, Optional, Union\n+\n+from camel.toolkits.base import BaseToolkit\n+from camel.toolkits.function_tool import FunctionTool\n+from camel.utils import api_keys_required, dependencies_required\n+\n+\n+class DappierToolkit(BaseToolkit):\n+    r\"\"\"A class representing a toolkit for interacting with the Dappier API.\n+\n+    This class provides methods for searching real time data and fetching\n+    ai recommendations across key verticals like News, Finance, Stock Market,\n+    Sports, Weather and more.\n+    \"\"\"\n+\n+    @dependencies_required(\"dappier\")\n+    @api_keys_required(\n+        [\n+            (None, \"DAPPIER_API_KEY\"),\n+        ]\n+    )\n+    def __init__(self):\n+        r\"\"\"Initialize the DappierTookit with API clients.The API keys and\n+        credentials are retrieved from environment variables.\n+        \"\"\"\n+        from dappier import Dappier\n+\n+        dappier_api_key = os.environ.get(\"DAPPIER_API_KEY\")\n+\n+        self.dappier_client = Dappier(dappier_api_key)\n+\n+    def search_real_time_data(\n+        self, query: str, ai_model_id: str = \"am_01j06ytn18ejftedz6dyhz2b15\"\n+    ) -> str:\n+        r\"\"\"Search real-time data using an AI model.\n+\n+        This function accesses real-time information using the specified\n+        AI model based on the given query. Depending on the AI model ID,\n+        the data retrieved can vary between general web search results or\n+        financial news and stock prices.\n+\n+        Supported AI Models:\n+            - `am_01j06ytn18ejftedz6dyhz2b15`:\n+            Access real-time Google web search results, including the latest\n+            news, weather updates, travel details, deals, and more.\n+            - `am_01j749h8pbf7ns8r1bq9s2evrh`:\n+            Access real-time financial news, stock prices, and trades from\n+            polygon.io, with AI-powered insights and up-to-the-minute updates.\n+\n+        Note:\n+            Multiple AI model IDs are available, which can be found at:\n+            https://marketplace.dappier.com/marketplace\n+\n+        Args:\n+            query (str): The user-provided query. Examples include:\n+                - \"How is the weather today in Austin, TX?\"\n+                - \"What is the latest news for Meta?\"\n+                - \"What is the stock price for AAPL?\"\n+            ai_model_id (str, optional): The AI model ID to use for the query.\n+                Defaults to \"am_01j06ytn18ejftedz6dyhz2b15\". The AI model ID\n+                always starts with the prefix \"am_\".\n+\n+        Returns:\n+            str: The search result corresponding to the provided query and\n+                AI model ID. This may include real time search data,\n+                depending on the selected AI model.\n+        \"\"\"\n+        try:\n+            response = self.dappier_client.search_real_time_data(\n+                query=query, ai_model_id=ai_model_id\n+            )\n+\n+            if response is None:\n+                return \"An unknown error occurred\"\n+\n+            return response.message\n+\n+        except Exception as e:\n+            return f\"An unexpected error occurred: {e}\"\n+\n+    def get_ai_recommendations(\n+        self,\n+        query: str,\n+        data_model_id: str = \"dm_01j0pb465keqmatq9k83dthx34\",\n+        similarity_top_k: int = 9,\n+        ref: Optional[str] = None,\n+        num_articles_ref: int = 0,\n+        search_algorithm: Literal[\n+            \"most_recent\", \"semantic\", \"most_recent_semantic\", \"trending\"\n+        ] = \"most_recent\",\n+    ) -> Union[List[Dict[str, str]], Dict[str, str]]:\n+        r\"\"\"Retrieve AI-powered recommendations based on the provided query\n+            and data model.\n+\n+        This function fetches real-time AI-generated recommendations using the\n+        specified data model and search algorithm. The results include\n+        personalized content based on the query and, optionally, relevance\n+        to a specific reference domain.\n+\n+        Supported Data Models:\n+            - `dm_01j0pb465keqmatq9k83dthx34`:\n+            Real-time news, updates, and personalized content from top sports\n+            sources such as Sportsnaut, Forever Blueshirts, Minnesota Sports\n+            Fan, LAFB Network, Bounding Into Sports, and Ringside Intel.\n+            - `dm_01j0q82s4bfjmsqkhs3ywm3x6y`:\n+            Real-time updates, analysis, and personalized content from top\n+            sources like The Mix, Snipdaily, Nerdable, and Familyproof.\n+\n+        Note:\n+            Multiple data model IDs are available and can be found at:\n+            https://marketplace.dappier.com/marketplace\n+\n+        Args:\n+            query (str): The user query for retrieving recommendations.\n+            data_model_id (str, optional): The data model ID to use for\n+            recommendations.\n+                Defaults to \"dm_01j0pb465keqmatq9k83dthx34\". Data model IDs\n+                always start with the prefix \"dm_\".\n+            similarity_top_k (int, optional): The number of top documents to\n+                retrieve based on similarity. Defaults to 9.\n+            ref (Optional[str], optional): The site domain where AI\n+                recommendations should be displayed. Defaults to None.\n+            num_articles_ref (int, optional): The minimum number of articles\n+                to return from the specified reference domain (`ref`).\n+                The remaining articles will come from other sites in the RAG\n+                model. Defaults to 0.\n+            search_algorithm (Literal[\n+                \"most_recent\",\n+                \"semantic\",\n+                \"most_recent_semantic\",\n+                \"trending\"\n+            ], optional): The search algorithm to use for retrieving articles.\n+                Defaults to \"most_recent\".\n+\n+        Returns:\n+            List[Dict[str, str]]: A list of recommended articles or content\n+            based on the specified parameters, query, and data model.\n+        \"\"\"\n+        try:\n+            response = self.dappier_client.get_ai_recommendations(\n+                query=query,\n+                data_model_id=data_model_id,\n+                similarity_top_k=similarity_top_k,\n+                ref=ref,\n+                num_articles_ref=num_articles_ref,\n+                search_algorithm=search_algorithm,\n+            )\n+\n+            if response is None or response.status != \"success\":\n+                return {\"error\": \"An unknown error occurred.\"}\n+\n+            # Collect only relevant information from the response.\n+            results = [\n+                {\n+                    \"author\": result.author,\n+                    \"image_url\": result.image_url,\n+                    \"pubdate\": result.pubdate,\n+                    \"source_url\": result.source_url,\n+                    \"summary\": result.summary,\n+                    \"title\": result.title,\n+                }\n+                for result in (\n+                    getattr(response.response, \"results\", None) or []\n+                )\n+            ]\n+\n+            return results\n+\n+        except Exception as e:\n+            return {\"error\": f\"An unexpected error occurred: {e!s}\"}\n+\n+    def get_tools(self) -> List[FunctionTool]:\n+        r\"\"\"Returns a list of FunctionTool objects representing the functions\n+            in the toolkit.\n+\n+        Returns:\n+            List[FunctionTool]: A list of FunctionTool objects representing\n+            the functions in the toolkit.\n+        \"\"\"\n+        return [\n+            FunctionTool(self.search_real_time_data),\n+            FunctionTool(self.get_ai_recommendations),\n+        ]\ndiff --git a/examples/toolkits/dappier_toolkit.py b/examples/toolkits/dappier_toolkit.py\nnew file mode 100644\nindex 0000000000..735a7c5e2f\n--- /dev/null\n+++ b/examples/toolkits/dappier_toolkit.py\n@@ -0,0 +1,136 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+from camel.agents import ChatAgent\n+from camel.toolkits import DappierToolkit, FunctionTool\n+\n+real_time_data_response = DappierToolkit().search_real_time_data(\n+    query=\"camel-ai\"\n+)\n+\n+print(real_time_data_response)\n+\"\"\"\n+CAMEL-AI is pretty cool! It's the first LLM (Large Language Model) multi-agent \n+framework and an open-source community focused on exploring the scaling laws \n+of agents. \ud83c\udf1f\n+\n+Here are some highlights:\n+\n+- **Purpose**: It aims to create highly customizable intelligent agents and \n+    build multi-agent systems for real-world applications.\n+- **Features**: CAMEL provides a role-playing approach and inception prompting\n+    to help chat agents complete tasks aligned with human intentions.\n+- **Use Cases**: You can turn your database into an AI-powered data analyst,\n+    allowing you to ask questions in plain English and get instant insights.\n+    \ud83d\udcca\ud83e\udd16\n+- **Community**: It's an open-source initiative, so developers can contribute\n+    and collaborate on building and using LLM-based agents.\n+\n+If you want to dive deeper, check out their website:\n+[CAMEL-AI.org](https://www.camel-ai.org) \ud83d\ude80!\n+\"\"\"\n+\n+# Use a different AI model which has access to real-time financial news.\n+real_time_data_response = DappierToolkit().search_real_time_data(\n+    query=\"Could you please provide the stock price for Google on 05/03/24?\",\n+    ai_model_id=\"am_01j749h8pbf7ns8r1bq9s2evrh\",\n+)\n+print(real_time_data_response)\n+\"\"\"\n+The stock price for Google (GOOGL) on May 3rd, 2024, was $167.10.\n+\"\"\"\n+\n+# Example with ChatAgent using the Real Time Search.\n+agent = ChatAgent(\n+    system_message=\"\"\"You are a helpful assistant that can use brave search \n+        engine to answer questions.\"\"\",\n+    tools=[FunctionTool(DappierToolkit().search_real_time_data)],\n+)\n+\n+usr_msg = \"What is the temperature in Tokyo?\"\n+\n+response = agent.step(input_message=usr_msg, response_format=None)\n+\n+print(response.msgs[0].content)\n+\"\"\"\n+The current temperature in Tokyo is 50\u00b0F (about 10\u00b0C). It's a bit chilly, \n+so you might want to grab a jacket! \ud83e\udde5\ud83c\udf2c\ufe0f\n+\"\"\"\n+\n+ai_recommendations_response = DappierToolkit().get_ai_recommendations(\n+    query=\"latest sports news\",\n+    data_model_id=\"dm_01j0pb465keqmatq9k83dthx34\",\n+    similarity_top_k=3,\n+    ref=\"sportsnaut.com\",\n+    num_articles_ref=2,\n+    search_algorithm=\"most_recent\",\n+)\n+print(ai_recommendations_response)\n+\"\"\"\n+{'author': 'Andrew Buller-Russ', \n+'image_url': 'https://images.dappier.com/dm_01j0pb465keqmatq9k83dthx34/\n+Syndication-Detroit-Free-Press-25087075_.jpg?width=428&height=321', \n+'pubdate': 'Thu, 02 Jan 2025 03:12:06 +0000', \n+'source_url': 'https://sportsnaut.com/nick-bosa-detroit-lions-trade-rumors-49ers/', \n+'summary': 'In a thrilling Monday night game, the Detroit Lions triumphed \n+over the San Francisco 49ers 40-34, solidifying their status as a top NFL \n+team. Despite a strong performance from Nick Bosa, who recorded eight tackles \n+and two sacks, the 49ers\\' playoff hopes were dashed. Bosa praised the Lions\\' \n+competitive spirit and resilience under Coach Dan Campbell, sparking \n+about his interest in joining the team, although he remains under contract \n+with the 49ers for four more seasons. Bosa\\'s admiration for the Lions \n+highlights the stark contrast between the two franchises\\' fortunes, \n+with the Lions celebrating a significant victory while the 49ers struggle.\n+Having experienced playoff success with the 49ers, Bosa values strong \n+leadership from both Campbell and his own coach, Kyle Shanahan. His comments \n+reflect a broader sentiment in the NFL about the importance of winning and \n+the positive environment it fosters for players.', \n+'title': 'Nick Bosa gushes about Detroit Lions, sparking 49ers trade rumors'}\n+\n+{'author': 'Andrew Buller-Russ', \n+'image_url': 'https://images.dappier.com/dm_01j0pb465keqmatq9k83dthx34/\n+Baseball-World-Baseball-Classic-Semifinal-Japan-vs-Mexico-20279015_.jpg?width=428&height=321', \n+'pubdate': 'Thu, 02 Jan 2025 02:43:38 +0000', \n+'source_url': 'https://www.lafbnetwork.com/los-angeles-dodgers/\n+los-angeles-dodgers-news/los-angeles-dodgers-meeting-roki-sasaki/', \n+'summary': 'Roki Sasaki, a talented 23-year-old Japanese pitcher, is \n+approaching a decision on his MLB free agency, with the Los Angeles Dodgers \n+among the frontrunners to sign him. They are competing against teams like \n+the Chicago Cubs, New York Mets, and others. The Dodgers are set to meet \n+with Sasaki, emphasizing his signing as a top priority despite facing \n+competition from around 20 other teams. Sasaki\\'s status as a minor-league \n+posting player may allow him to be signed at a more affordable price, \n+increasing his appeal. As he gathers information and prepares for a second\n+round of meetings, the Dodgers are keen to secure him before the posting \n+window closes on January 24, with the international signing period beginning \n+on January 15.', 'title': 'Los Angeles Dodgers Take Another Step Toward \n+Signing Roki Sasaki'}\n+\n+{'author': 'Andrew Buller-Russ', \n+'image_url': 'https://images.dappier.com/dm_01j0pb465keqmatq9k83dthx34/\n+NFL-Detroit-Lions-at-Kansas-City-Chiefs-24020812_.jpg?width=428&height=321', \n+'pubdate': 'Thu, 02 Jan 2025 02:08:34 +0000', \n+'source_url': 'https://sportsnaut.com/detroit-lions-cut-jamal-adams/', \n+'summary': 'The Detroit Lions, with a strong 14-2 record, have released \n+former All-Pro safety Jamal Adams from their practice squad ahead of a crucial \n+Week 18 game against the Minnesota Vikings. Adams, who joined the Lions on \n+December 1, 2024, played in two games but recorded only three tackles in \n+20 defensive snaps, representing a mere 17% of the team\\'s defensive plays. \n+This marks Adams\\' second release this season, having previously been cut \n+by the Tennessee Titans after three appearances. The Lions\\' decision to part \n+ways with Adams comes as they focus on their playoff positioning for the \n+upcoming game.', \n+'title': 'Detroit Lions cut bait with All-Pro ahead of Week 18 matchup with \n+Vikings'}\n+\"\"\"\ndiff --git a/poetry.lock b/poetry.lock\nindex 7a417e68bc..677503f993 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -530,6 +530,19 @@ files = [\n     {file = \"async_timeout-5.0.1.tar.gz\", hash = \"sha256:d9321a7a3d5a6a5e187e824d2fa0793ce379a202935782d555d6e9d2735677d3\"},\n ]\n \n+[[package]]\n+name = \"asyncio\"\n+version = \"3.4.3\"\n+description = \"reference implementation of PEP 3156\"\n+optional = true\n+python-versions = \"*\"\n+files = [\n+    {file = \"asyncio-3.4.3-cp33-none-win32.whl\", hash = \"sha256:b62c9157d36187eca799c378e572c969f0da87cd5fc42ca372d92cdb06e7e1de\"},\n+    {file = \"asyncio-3.4.3-cp33-none-win_amd64.whl\", hash = \"sha256:c46a87b48213d7464f22d9a497b9eef8c1928b68320a2fa94240f969f6fec08c\"},\n+    {file = \"asyncio-3.4.3-py3-none-any.whl\", hash = \"sha256:c4d18b22701821de07bd6aea8b53d21449ec0ec5680645e5317062ea21817d2d\"},\n+    {file = \"asyncio-3.4.3.tar.gz\", hash = \"sha256:83360ff8bc97980e4ff25c964c7bd3923d333d177aa4f7fb736b019f26c7cb41\"},\n+]\n+\n [[package]]\n name = \"attrs\"\n version = \"24.3.0\"\n@@ -1466,6 +1479,22 @@ files = [\n docs = [\"ipython\", \"matplotlib\", \"numpydoc\", \"sphinx\"]\n tests = [\"pytest\", \"pytest-cov\", \"pytest-xdist\"]\n \n+[[package]]\n+name = \"dappier\"\n+version = \"0.3.3\"\n+description = \"The Dappier Python SDK provides an easy-to-use interface for interacting with the Dappier API.\"\n+optional = true\n+python-versions = \"<4.0,>=3.9\"\n+files = [\n+    {file = \"dappier-0.3.3-py3-none-any.whl\", hash = \"sha256:05390cca61235d592aacc35b521cc5eb927a9954b786b390d1d7609a6ef79f20\"},\n+    {file = \"dappier-0.3.3.tar.gz\", hash = \"sha256:0e0e1e9ce91f550e20d9e2d86a6121c1497f1004ab72bc85222f49bb3ac5d6e0\"},\n+]\n+\n+[package.dependencies]\n+asyncio = \">=3.4.3,<4.0.0\"\n+httpx = \">=0.23.0,<0.29.0\"\n+pydantic = \">=1.9,<3.0.0\"\n+\n [[package]]\n name = \"dataclasses-json\"\n version = \"0.6.7\"\n@@ -7371,6 +7400,7 @@ description = \"Pure-Python implementation of ASN.1 types and DER/BER/CER codecs\n optional = true\n python-versions = \">=3.8\"\n files = [\n+    {file = \"pyasn1-0.6.1-py3-none-any.whl\", hash = \"sha256:0d632f46f2ba09143da3a8afe9e33fb6f92fa2320ab7e886e2d0f7672af84629\"},\n     {file = \"pyasn1-0.6.1.tar.gz\", hash = \"sha256:6f580d2bdd84365380830acf45550f2511469f673cb4a5ae3857a3170128b034\"},\n ]\n \n@@ -7381,6 +7411,7 @@ description = \"A collection of ASN.1-based protocols modules\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n+    {file = \"pyasn1_modules-0.4.1-py3-none-any.whl\", hash = \"sha256:49bfa96b45a292b711e986f222502c1c9a5e1f4e568fc30e2574a6c7d07838fd\"},\n     {file = \"pyasn1_modules-0.4.1.tar.gz\", hash = \"sha256:c28e2dbf9c06ad61c71a075c7e0f9fd0f1b0bb2d2ad4377f240d33ac2ab60a7c\"},\n ]\n \n@@ -7738,6 +7769,7 @@ python-versions = \">=3.9\"\n files = [\n     {file = \"pymupdf-1.25.1-cp39-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:793f9f6d51029e97851c711b3f6d9fe912313d95a306fbe8b1866f301d0e2bd3\"},\n     {file = \"pymupdf-1.25.1-cp39-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:15e6f4013ad0a029a2221920f9d2081f56dc43259dabfdf5cad7fbf1cee4b5a7\"},\n+    {file = \"pymupdf-1.25.1-cp39-abi3-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:a39afbd80381f43e30d6eb2ec4613f465f507ac2b76070abdd2da8724f32ef36\"},\n     {file = \"pymupdf-1.25.1-cp39-abi3-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:b63f8e9e65b0bda48f9217efd4d2a8c6d7a739dd28baf460c1ae78439b9af489\"},\n     {file = \"pymupdf-1.25.1-cp39-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:a687bd387589e30abd810a78a23341f57f43fa16a4d8d8c0b870bb6d89607343\"},\n     {file = \"pymupdf-1.25.1-cp39-abi3-win32.whl\", hash = \"sha256:fc7dbc1aa9e298a4c81084e389c9623c26fcaa232c71efaa073af150069e2221\"},\n@@ -8924,6 +8956,7 @@ files = [\n     {file = \"ruamel.yaml.clib-0.2.12-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f66efbc1caa63c088dead1c4170d148eabc9b80d95fb75b6c92ac0aad2437d76\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:22353049ba4181685023b25b5b51a574bce33e7f51c759371a7422dcae5402a6\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:932205970b9f9991b34f55136be327501903f7c66830e9760a8ffb15b07f05cd\"},\n+    {file = \"ruamel.yaml.clib-0.2.12-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:a52d48f4e7bf9005e8f0a89209bf9a73f7190ddf0489eee5eb51377385f59f2a\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp310-cp310-win32.whl\", hash = \"sha256:3eac5a91891ceb88138c113f9db04f3cebdae277f5d44eaa3651a4f573e6a5da\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp310-cp310-win_amd64.whl\", hash = \"sha256:ab007f2f5a87bd08ab1499bdf96f3d5c6ad4dcfa364884cb4549aa0154b13a28\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp311-cp311-macosx_13_0_arm64.whl\", hash = \"sha256:4a6679521a58256a90b0d89e03992c15144c5f3858f40d7c18886023d7943db6\"},\n@@ -8932,6 +8965,7 @@ files = [\n     {file = \"ruamel.yaml.clib-0.2.12-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:811ea1594b8a0fb466172c384267a4e5e367298af6b228931f273b111f17ef52\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:cf12567a7b565cbf65d438dec6cfbe2917d3c1bdddfce84a9930b7d35ea59642\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:7dd5adc8b930b12c8fc5b99e2d535a09889941aa0d0bd06f4749e9a9397c71d2\"},\n+    {file = \"ruamel.yaml.clib-0.2.12-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:1492a6051dab8d912fc2adeef0e8c72216b24d57bd896ea607cb90bb0c4981d3\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp311-cp311-win32.whl\", hash = \"sha256:bd0a08f0bab19093c54e18a14a10b4322e1eacc5217056f3c063bd2f59853ce4\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp311-cp311-win_amd64.whl\", hash = \"sha256:a274fb2cb086c7a3dea4322ec27f4cb5cc4b6298adb583ab0e211a4682f241eb\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp312-cp312-macosx_14_0_arm64.whl\", hash = \"sha256:20b0f8dc160ba83b6dcc0e256846e1a02d044e13f7ea74a3d1d56ede4e48c632\"},\n@@ -8940,6 +8974,7 @@ files = [\n     {file = \"ruamel.yaml.clib-0.2.12-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:749c16fcc4a2b09f28843cda5a193e0283e47454b63ec4b81eaa2242f50e4ccd\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:bf165fef1f223beae7333275156ab2022cffe255dcc51c27f066b4370da81e31\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:32621c177bbf782ca5a18ba4d7af0f1082a3f6e517ac2a18b3974d4edf349680\"},\n+    {file = \"ruamel.yaml.clib-0.2.12-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:b82a7c94a498853aa0b272fd5bc67f29008da798d4f93a2f9f289feb8426a58d\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp312-cp312-win32.whl\", hash = \"sha256:e8c4ebfcfd57177b572e2040777b8abc537cdef58a2120e830124946aa9b42c5\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp312-cp312-win_amd64.whl\", hash = \"sha256:0467c5965282c62203273b838ae77c0d29d7638c8a4e3a1c8bdd3602c10904e4\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp313-cp313-macosx_14_0_arm64.whl\", hash = \"sha256:4c8c5d82f50bb53986a5e02d1b3092b03622c02c2eb78e29bec33fd9593bae1a\"},\n@@ -8948,6 +8983,7 @@ files = [\n     {file = \"ruamel.yaml.clib-0.2.12-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:96777d473c05ee3e5e3c3e999f5d23c6f4ec5b0c38c098b3a5229085f74236c6\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp313-cp313-musllinux_1_1_i686.whl\", hash = \"sha256:3bc2a80e6420ca8b7d3590791e2dfc709c88ab9152c00eeb511c9875ce5778bf\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:e188d2699864c11c36cdfdada94d781fd5d6b0071cd9c427bceb08ad3d7c70e1\"},\n+    {file = \"ruamel.yaml.clib-0.2.12-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4f6f3eac23941b32afccc23081e1f50612bdbe4e982012ef4f5797986828cd01\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp313-cp313-win32.whl\", hash = \"sha256:6442cb36270b3afb1b4951f060eccca1ce49f3d087ca1ca4563a6eb479cb3de6\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp313-cp313-win_amd64.whl\", hash = \"sha256:e5b8daf27af0b90da7bb903a876477a9e6d7270be6146906b276605997c7e9a3\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp39-cp39-macosx_12_0_arm64.whl\", hash = \"sha256:fc4b630cd3fa2cf7fce38afa91d7cfe844a9f75d7f0f36393fa98815e911d987\"},\n@@ -8956,6 +8992,7 @@ files = [\n     {file = \"ruamel.yaml.clib-0.2.12-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e2f1c3765db32be59d18ab3953f43ab62a761327aafc1594a2a1fbe038b8b8a7\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:d85252669dc32f98ebcd5d36768f5d4faeaeaa2d655ac0473be490ecdae3c285\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:e143ada795c341b56de9418c58d028989093ee611aa27ffb9b7f609c00d813ed\"},\n+    {file = \"ruamel.yaml.clib-0.2.12-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:2c59aa6170b990d8d2719323e628aaf36f3bfbc1c26279c0eeeb24d05d2d11c7\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp39-cp39-win32.whl\", hash = \"sha256:beffaed67936fbbeffd10966a4eb53c402fafd3d6833770516bf7314bc6ffa12\"},\n     {file = \"ruamel.yaml.clib-0.2.12-cp39-cp39-win_amd64.whl\", hash = \"sha256:040ae85536960525ea62868b642bdb0c2cc6021c9f9d507810c0c604e66f5a7b\"},\n     {file = \"ruamel.yaml.clib-0.2.12.tar.gz\", hash = \"sha256:6c8fbb13ec503f99a91901ab46e0b07ae7941cd527393187039aec586fdfd36f\"},\n@@ -11830,7 +11867,7 @@ test = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\",\n type = [\"pytest-mypy\"]\n \n [extras]\n-all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"fish-audio-sdk\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"linkup-sdk\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"openbb\", \"opencv-python\", \"outlines\", \"pandas\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"tree-sitter\", \"tree-sitter-python\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"dappier\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"fish-audio-sdk\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"linkup-sdk\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"openbb\", \"opencv-python\", \"outlines\", \"pandas\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"tree-sitter\", \"tree-sitter-python\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n encoders = [\"sentence-transformers\"]\n graph-storages = [\"nebula3-python\", \"neo4j\"]\n huggingface-agent = [\"accelerate\", \"datasets\", \"diffusers\", \"opencv-python\", \"sentencepiece\", \"soundfile\", \"torch\", \"torch\", \"transformers\"]\n@@ -11842,10 +11879,10 @@ retrievers = [\"cohere\", \"rank-bm25\"]\n runtime = [\"docker\"]\n search-tools = [\"duckduckgo-search\", \"linkup-sdk\", \"tavily-python\", \"wikipedia\", \"wolframalpha\"]\n test = [\"mock\", \"pytest\", \"pytest-asyncio\"]\n-tools = [\"PyMuPDF\", \"agentops\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"beautifulsoup4\", \"datacommons\", \"datacommons_pandas\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"linkup-sdk\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"openbb\", \"outlines\", \"pandas\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pyowm\", \"pyyaml\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"slack-bolt\", \"slack-sdk\", \"stripe\", \"textblob\", \"tree-sitter\", \"tree-sitter-python\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+tools = [\"PyMuPDF\", \"agentops\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"beautifulsoup4\", \"dappier\", \"datacommons\", \"datacommons_pandas\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"linkup-sdk\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"openbb\", \"outlines\", \"pandas\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pyowm\", \"pyyaml\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"slack-bolt\", \"slack-sdk\", \"stripe\", \"textblob\", \"tree-sitter\", \"tree-sitter-python\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n vector-databases = [\"pymilvus\", \"qdrant-client\"]\n \n [metadata]\n lock-version = \"2.0\"\n python-versions = \">=3.10,<3.13\"\n-content-hash = \"e92f9809dc76a8d3caae0850a9ea62614f1398ab681e54ccca3da97ba71c1f0b\"\n+content-hash = \"9ba5d2649fb404e582277f30008318b9879556503662b1b931cb08a3dedd9ece\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 24063e2eca..9de508c056 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -91,6 +91,7 @@ pygithub = { version = \"^2.3.0\", optional = true }\n imageio = { extras = [\"pyav\"], version = \"^2.34.2\", optional = true }\n e2b-code-interpreter = { version = \"^1.0.3\", optional = true }\n pyTelegramBotAPI = { version = \"^4.18.0\", optional = true }\n+dappier = { version = \"^0.3.3\", optional = true }\n \"discord.py\" = { version = \"^2.3.2\", optional = true }\n docker = { version = \"^7.1.0\", optional = true }\n agentops = { version = \"^0.3.21\", optional = true }\n@@ -220,6 +221,7 @@ tools = [\n     \"pydub\",\n     \"pygithub\",\n     \"pyTelegramBotAPI\",\n+    \"dappier\",\n     \"discord.py\",\n     \"docker\",\n     \"jupyter_client\",\n@@ -290,6 +292,7 @@ all = [\n     \"docx2txt\",\n     \"pygithub\",\n     \"pyTelegramBotAPI\",\n+    \"dappier\",\n     \"discord.py\",\n     \"PyMuPDF\",\n     \"wikipedia\",\n@@ -498,6 +501,7 @@ module = [\n     \"pygithub\",\n     \"litellm\",\n     \"pyTelegramBotAPI\",\n+    \"dappier\",\n     \"discord.py\",\n     \"docker.*\",\n     \"google.*\",\n",
        "test_patch": "diff --git a/.github/workflows/pytest_package.yml b/.github/workflows/pytest_package.yml\nindex b22e960462..e4c884902c 100644\n--- a/.github/workflows/pytest_package.yml\n+++ b/.github/workflows/pytest_package.yml\n@@ -55,6 +55,7 @@ jobs:\n         QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n         GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n+        DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n       run: poetry run pytest --fast-test-mode test/\n \n   pytest_package_llm_test:\n@@ -99,6 +100,7 @@ jobs:\n         QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n         GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n+        DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n       run: poetry run pytest --llm-test-only test/\n \n   pytest_package_very_slow_test:\n@@ -143,4 +145,5 @@ jobs:\n         QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n         GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n         DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n+        DAPPIER_API_KEY: \"${{ secrets.DAPPIER_API_KEY }}\"\n       run: poetry run pytest --very-slow-test-only test/\ndiff --git a/test/toolkits/test_dappier_function.py b/test/toolkits/test_dappier_function.py\nnew file mode 100644\nindex 0000000000..8a987f7162\n--- /dev/null\n+++ b/test/toolkits/test_dappier_function.py\n@@ -0,0 +1,145 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import os\n+import unittest\n+from unittest.mock import MagicMock, patch\n+\n+from camel.toolkits.dappier_toolkit import DappierToolkit\n+\n+\n+class TestDappierToolkit(unittest.TestCase):\n+    @patch.dict(\n+        os.environ,\n+        {\"DAPPIER_API_KEY\": \"fake_api_key\"},\n+    )\n+    @patch(\"dappier.Dappier\")\n+    def setUp(self, MockDappierSDK):\n+        # Setup for tests\n+        self.mock_sdk = MockDappierSDK.return_value\n+        self.toolkit = DappierToolkit()\n+\n+    def test_search_real_time_data_success(self):\n+        # Mock the API response for a successful search_real_time_data call\n+        mock_response = MagicMock()\n+        mock_response.message = \"latest tech news\"\n+        self.mock_sdk.search_real_time_data.return_value = mock_response\n+\n+        result = self.toolkit.search_real_time_data(query=\"test query\")\n+\n+        self.assertEqual(result, \"latest tech news\")\n+        self.mock_sdk.search_real_time_data.assert_called_once_with(\n+            query=\"test query\", ai_model_id=\"am_01j06ytn18ejftedz6dyhz2b15\"\n+        )\n+\n+    def test_search_real_time_data_failure(self):\n+        # Test handling of an exception in search_real_time_data\n+        self.mock_sdk.search_real_time_data.side_effect = Exception(\"Error\")\n+        result = self.toolkit.search_real_time_data(query=\"test query\")\n+        self.assertEqual(result, \"An unexpected error occurred: Error\")\n+\n+    def test_get_ai_recommendations_success(self):\n+        # Mock the API response for a successful get_ai_recommendations call\n+        mock_result = MagicMock()\n+        mock_result.return_value = [\n+            MagicMock(\n+                author=\"John Doe\",\n+                image_url=\"https://example.com/image1.jpg\",\n+                pubdate=\"Mon, 01 Jan 2025 10:00:00 +0000\",\n+                source_url=\"https://example1.com/article1\",\n+                summary=\"Summary of article 1.\",\n+                title=\"Article Title 1\",\n+            ),\n+            MagicMock(\n+                author=\"Jane Smith\",\n+                image_url=\"https://example.com/image2.jpg\",\n+                pubdate=\"Tue, 02 Jan 2025 12:00:00 +0000\",\n+                source_url=\"https://example2.com/article2\",\n+                summary=\"Summary of article 2.\",\n+                title=\"Article Title 2\",\n+            ),\n+            MagicMock(\n+                author=\"Alice Johnson\",\n+                image_url=\"https://example.com/image3.jpg\",\n+                pubdate=\"Wed, 03 Jan 2025 14:00:00 +0000\",\n+                source_url=\"https://example3.com/article3\",\n+                summary=\"Summary of article 3.\",\n+                title=\"Article Title 3\",\n+            ),\n+        ]\n+        mock_response = MagicMock()\n+        mock_response.status = \"success\"\n+        mock_response.response.query = \"test query\"\n+        mock_response.response.results = mock_result()\n+\n+        self.mock_sdk.get_ai_recommendations.return_value = mock_response\n+\n+        result = self.toolkit.get_ai_recommendations(\n+            query=\"test query\", similarity_top_k=3\n+        )\n+\n+        expected_result = [\n+            {\n+                \"author\": \"John Doe\",\n+                \"image_url\": \"https://example.com/image1.jpg\",\n+                \"pubdate\": \"Mon, 01 Jan 2025 10:00:00 +0000\",\n+                \"source_url\": \"https://example1.com/article1\",\n+                \"summary\": \"Summary of article 1.\",\n+                \"title\": \"Article Title 1\",\n+            },\n+            {\n+                \"author\": \"Jane Smith\",\n+                \"image_url\": \"https://example.com/image2.jpg\",\n+                \"pubdate\": \"Tue, 02 Jan 2025 12:00:00 +0000\",\n+                \"source_url\": \"https://example2.com/article2\",\n+                \"summary\": \"Summary of article 2.\",\n+                \"title\": \"Article Title 2\",\n+            },\n+            {\n+                \"author\": \"Alice Johnson\",\n+                \"image_url\": \"https://example.com/image3.jpg\",\n+                \"pubdate\": \"Wed, 03 Jan 2025 14:00:00 +0000\",\n+                \"source_url\": \"https://example3.com/article3\",\n+                \"summary\": \"Summary of article 3.\",\n+                \"title\": \"Article Title 3\",\n+            },\n+        ]\n+\n+        self.assertEqual(result, expected_result)\n+        self.mock_sdk.get_ai_recommendations.assert_called_once_with(\n+            query=\"test query\",\n+            data_model_id=\"dm_01j0pb465keqmatq9k83dthx34\",\n+            similarity_top_k=3,\n+            ref=None,\n+            num_articles_ref=0,\n+            search_algorithm=\"most_recent\",\n+        )\n+\n+    def test_get_ai_recommendations_failure(self):\n+        # Test handling of an exception in get_ai_recommendations\n+        self.mock_sdk.get_ai_recommendations.side_effect = Exception(\n+            \"API Error\"\n+        )\n+        result = self.toolkit.get_ai_recommendations(query=\"test query\")\n+        self.assertEqual(\n+            result, {\"error\": \"An unexpected error occurred: API Error\"}\n+        )\n+\n+    def test_get_ai_recommendations_failure_when_status_failure(self):\n+        # Test handling of an exception in get_ai_recommendations\n+        mock_response = MagicMock()\n+        mock_response.status = \"failure\"\n+        mock_response.response.query = \"test query\"\n+        mock_response.response.results = None\n+        result = self.toolkit.get_ai_recommendations(query=\"test query\")\n+        self.assertEqual(result, {\"error\": \"An unknown error occurred.\"})\n",
        "problem_statement": "[Feature Request] Create and add a new toolkit - Dappier\n### Required prerequisites\r\n\r\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\r\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\r\n\r\n### Motivation\r\n\r\nI think it would be great, if we could implement a Dappier toolkit inside camel to help it interact with Dappier APIs. We have several ai models and data models which you can find over here - https://marketplace.dappier.com/marketplace\r\n\r\n### Solution\r\n\r\n_No response_\r\n\r\n### Alternatives\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n",
        "hints_text": "I'm currently working on this.",
        "created_at": "2025-01-03T16:32:19Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            ".github/workflows/pytest_package.yml"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1368,
        "instance_id": "camel-ai__camel-1368",
        "issue_numbers": [
            "1345"
        ],
        "base_commit": "471ad810817f82d53be2e7aea673938db652c85c",
        "patch": "diff --git a/camel/toolkits/search_toolkit.py b/camel/toolkits/search_toolkit.py\nindex 3e6f62cd15..8441e4199d 100644\n--- a/camel/toolkits/search_toolkit.py\n+++ b/camel/toolkits/search_toolkit.py\n@@ -13,9 +13,10 @@\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n import os\n import xml.etree.ElementTree as ET\n-from typing import Any, Dict, List, Optional, TypeAlias, Union\n+from typing import Any, Dict, List, Literal, Optional, Type, TypeAlias, Union\n \n import requests\n+from pydantic import BaseModel\n \n from camel.toolkits.base import BaseToolkit\n from camel.toolkits.function_tool import FunctionTool\n@@ -63,6 +64,78 @@ def search_wiki(self, entity: str) -> str:\n \n         return result\n \n+    @dependencies_required(\"linkup\")\n+    @api_keys_required(\"LINKUP_API_KEY\")\n+    def search_linkup(\n+        self,\n+        query: str,\n+        depth: Literal[\"standard\", \"deep\"] = \"standard\",\n+        output_type: Literal[\n+            \"searchResults\", \"sourcedAnswer\", \"structured\"\n+        ] = \"searchResults\",\n+        structured_output_schema: Union[Type[BaseModel], str, None] = None,\n+    ) -> Dict[str, Any]:\n+        r\"\"\"Search for a query in the Linkup API and return results in various\n+        formats.\n+\n+        Args:\n+            query (str): The search query.\n+            depth (Literal[\"standard\", \"deep\"]): The depth of the search.\n+                \"standard\" for a straightforward search, \"deep\" for a more\n+                comprehensive search.\n+            output_type (Literal[\"searchResults\", \"sourcedAnswer\",\n+                \"structured\"]): The type of output:\n+                - \"searchResults\" for raw search results,\n+                - \"sourcedAnswer\" for an answer with supporting sources,\n+                - \"structured\" for output based on a provided schema.\n+            structured_output_schema (Union[Type[BaseModel], str, None]): If\n+                `output_type` is \"structured\",specify the schema of the\n+                output. Can be a Pydantic BaseModel or a JSON schema string.\n+\n+        Returns:\n+            Dict[str, Any]: A dictionary representing the search result. The\n+                structure depends on the `output_type`. If an error occurs,\n+                returns an error message.\n+        \"\"\"\n+        try:\n+            from linkup import LinkupClient\n+\n+            # Initialize the Linkup client with the API key\n+            LINKUP_API_KEY = os.getenv(\"LINKUP_API_KEY\")\n+            client = LinkupClient(api_key=LINKUP_API_KEY)\n+\n+            # Perform the search using the specified output_type\n+            response = client.search(\n+                query=query,\n+                depth=depth,\n+                output_type=output_type,\n+                structured_output_schema=structured_output_schema,\n+            )\n+\n+            if output_type == \"searchResults\":\n+                results = [\n+                    item.__dict__\n+                    for item in response.__dict__.get('results', [])\n+                ]\n+                return {\"results\": results}\n+\n+            elif output_type == \"sourcedAnswer\":\n+                answer = response.__dict__.get('answer', '')\n+                sources = [\n+                    item.__dict__\n+                    for item in response.__dict__.get('sources', [])\n+                ]\n+                return {\"answer\": answer, \"sources\": sources}\n+\n+            elif output_type == \"structured\" and structured_output_schema:\n+                return response.__dict__\n+\n+            else:\n+                return {\"error\": f\"Invalid output_type: {output_type}\"}\n+\n+        except Exception as e:\n+            return {\"error\": f\"An unexpected error occurred: {e!s}\"}\n+\n     @dependencies_required(\"duckduckgo_search\")\n     def search_duckduckgo(\n         self, query: str, source: str = \"text\", max_results: int = 5\n@@ -618,6 +691,7 @@ def get_tools(self) -> List[FunctionTool]:\n         \"\"\"\n         return [\n             FunctionTool(self.search_wiki),\n+            FunctionTool(self.search_linkup),\n             FunctionTool(self.search_google),\n             FunctionTool(self.search_duckduckgo),\n             FunctionTool(self.query_wolfram_alpha),\ndiff --git a/examples/toolkits/search_toolkit.py b/examples/toolkits/search_toolkit.py\nindex b79ef4b52f..2d29a830cb 100644\n--- a/examples/toolkits/search_toolkit.py\n+++ b/examples/toolkits/search_toolkit.py\n@@ -12,6 +12,8 @@\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n \n+from pydantic import BaseModel\n+\n from camel.agents import ChatAgent\n from camel.toolkits import FunctionTool, SearchToolkit\n \n@@ -87,3 +89,127 @@\n You can visit these links to get the most up-to-date temperature and weather \n conditions in Tokyo.\n '''\n+\n+search_linkup_response = SearchToolkit().search_linkup(\n+    query=\"Can you tell me which women were awared the Physics Nobel Prize\",\n+    depth=\"standard\",\n+    output_type=\"searchResults\",\n+)\n+\n+print(search_linkup_response)\n+\"\"\"\n+{'results': [{'type': 'text', 'name': 'Physics Nobel Prizes awarded to women | \n+Scientia News', 'url': 'https://www.scientianews.org/\n+physics-nobel-prize-winners', 'content': 'The next female Nobel Prize in \n+Physics award winner wouldn't be until another half-century later, with Donna \n+Strickland. Strickland was awarded the Prize for her work on chirped pulse \n+amplification and its applications. Although the research itself was published \n+in 1985, she didn't receive the award until 2018.'}, {'type': 'text', 'name': \n+'The 60 Women Who Have Won the Nobel Prize - Stacker', 'url': 'https://stacker.\n+com/history/60-women-who-have-won-nobel-prize', 'content': '- Award: Nobel \n+Prize in Physics - Year: 1963. Maria Goeppert-Mayer was born in Germany. After \n+she married, she migrated to America, where she worked on an American atom \n+bomb project during World War II. Her work uncovered important discoveries \n+about nuclear structure, and Goeppert-Mayer is one of only four women to win \n+the Nobel Prize in physics.'}, {'type': 'text', 'name': 'Nobel Prize awarded \n+women - NobelPrize.org', 'url': 'https://www.nobelprize.org/prizes/lists/\n+nobel-prize-awarded-women/', 'content': 'The Nobel Prize and the Sveriges \n+Riksbank Prize in Economic Sciences in Memory of Alfred Nobel have been \n+awarded to women 66 times between 1901 and 2024. Only one woman, Marie Curie, \n+has been honoured twice, with the Nobel Prize in Physics 1903 and the Nobel \n+Prize in Chemistry 1911. This means that 65 women in total have been awarded \n+the Nobel ...'}, {'type': 'text', 'name': 'Women who changed science - The \n+Nobel Prize', 'url': 'https://www.nobelprize.org/womenwhochangedscience/\n+stories', 'content': 'Nobel Prize in Physics 1903 Nobel Prize in Chemistry \n+1911. MARIE CURIE. Read her story. Nobel Prize in Physiology or Medicine 1988. \n+GERTRUDE B. ELION. Read her story. Nobel Prize in Physiology or Medicine 1988. \n+GERTRUDE B. ELION. Read her story. Nobel Prize in Physics 1963. MARIA GOEPPERT \n+MAYER. Read her story.'}, {'type': 'text', 'name': 'List of female Nobel \n+laureates - Wikipedia', 'url': 'https://en.wikipedia.org/wiki/\n+List_of_female_Nobel_laureates', 'content': \"The most recent women to be \n+awarded a Nobel Prize were Han Kang in Literature (2024), Claudia Goldin in \n+Economics, Narges Mohammadi for Peace, Anne L'Huillier in Physics and Katalin \n+Karik\u00f3 in Physiology or Medicine (2023), Annie Ernaux in Literature and \n+Carolyn R. Bertozzi for Chemistry (2022), Maria Ressa for Peace (2021), Louise \n+Gl\u00fcck in ...\"}, {'type': 'text', 'name': 'Only 5 women have won the Nobel \n+Prize in physics\u2014recent winners share ...', 'url': 'https://phys.org/news/\n+2024-10-women-won-nobel-prize-physics.html', 'content': 'Out of 225 people \n+awarded the Nobel Prize in physics, only five have been women. This is a very \n+small number, and certainly smaller than 50%\u2014the percent of women in the human \n+population.'}, {'type': 'text', 'name': 'All These Women Won Science Nobel \n+Prizes - The Stemettes Zine', 'url': 'https://stemettes.org/zine/articles/\n+nobel-prize-women/', 'content': 'Currently, only 17% of Nobel Prize winners \n+are women in the Science categories. So here we are celebrating all the \n+amazing women who have Nobel Prizes for their Science research. ... & Physics \n+(1903) Marie and her husband were awarded the Nobel Prize for Physics in 1903, \n+for their study into the spontaneous radiation discovered by Becquerel. In ...\n+'}, {'type': 'text', 'name': 'These Are the 57 Women Who Have Won the Nobel \n+Prize', 'url': 'https://www.newsweek.com/\n+these-are-57-women-who-have-won-nobel-prize-1538702', 'content': 'Getty Images/\n+Hulton-Deutsch Collection/CORBIS Marie Curie (born Sk\u0142odowska) - Award: Nobel \n+Prize in Physics - Year: 1903. Marie Curie, who was the first woman to win a \n+Nobel Prize, coined the ...'}, {'type': 'text', 'name': 'Anne L'Huillier - \n+Banquet speech - NobelPrize.org', 'url': 'https://www.nobelprize.org/prizes/\n+physics/2023/lhuillier/speech/', 'content': 'The Nobel Prize in Physics 2023 \n+was awarded to Pierre Agostini, Ferenc Krausz and Anne L'Huillier \"for \n+experimental methods that generate attosecond pulses of light for the study of \n+electron dynamics in matter\" ... 120 years ago, Marie Sk\u0142odowska Curie was the \n+first woman to be awarded the Nobel Prize in Physics. I am the fifth. For \n+more ...'}, {'type': 'text', 'name': 'Facts on the Nobel Prize in Physics - \n+NobelPrize.org', 'url': 'https://www.nobelprize.org/prizes/facts/\n+facts-on-the-nobel-prize-in-physics/', 'content': 'List of all female Nobel \n+Prize laureates. Multiple Nobel Prize laureates in physics. John Bardeen is \n+the only person who has received the Nobel Prize in Physics twice, year 1956 \n+and 1972 . Marie Curie was awarded the Nobel Prize twice, once in physics 1903 \n+and once in chemistry 1911.. See the list of multiple Nobel Prize laureates \n+within other Nobel Prize categories here'}]}\n+\"\"\"\n+\n+search_linkup_response = SearchToolkit().search_linkup(\n+    query=\"Can you tell me which women were awared the Physics Nobel Prize\",\n+    depth=\"standard\",\n+    output_type=\"sourcedAnswer\",\n+)\n+\n+print(search_linkup_response)\n+\"\"\"\n+{'answer': \"The women who have been awarded the Nobel Prize in Physics are: 1. \n+Marie Curie - 1903 2. Maria Goeppert Mayer - 1963 3. Donna Strickland - 2018 \n+4. Anne L'Huillier - 2023\", 'sources': [{'name': 'Nobel Prize awarded women - \n+NobelPrize.org', 'url': 'https://www.nobelprize.org/prizes/lists/\n+nobel-prize-awarded-women/', 'snippet': 'The Nobel Prize and the Sveriges \n+Riksbank Prize in Economic Sciences in Memory of Alfred Nobel have been \n+awarded to women 66 times between 1901 and 2024.'}, {'name': 'Physics Nobel \n+Prizes awarded to women | Scientia News', 'url': 'https://www.scientianews.org/\n+physics-nobel-prize-winners', 'snippet': 'The next female Nobel Prize in \n+Physics award winner wouldn't be until another half-century later, with Donna \n+Strickland.'}, {'name': 'List of female Nobel laureates - Wikipedia', 'url': \n+'https://en.wikipedia.org/wiki/List_of_female_Nobel_laureates', 'snippet': \n+\"The most recent women to be awarded a Nobel Prize were Han Kang in Literature \n+(2024), Claudia Goldin in Economics, Narges Mohammadi for Peace, Anne \n+L'Huillier in Physics and Katalin Karik\u00f3 in Physiology or Medicine (2023).\"}]}\n+(camel-ai-py3.10) ruihan@RuideMac-mini camel % \n+\"\"\"\n+\n+\n+class PersonInfo(BaseModel):\n+    # Basic company information\n+    name: str = \"\"  # Company name\n+    description: str = \"\"\n+\n+\n+search_linkup_response = SearchToolkit().search_linkup(\n+    query=\"Can you tell me which women were awared the Physics Nobel Prize\",\n+    depth=\"standard\",\n+    output_type=\"structured\",\n+    structured_output_schema=PersonInfo,\n+)\n+print(search_linkup_response)\n+\n+\"\"\"\n+{'name': 'Female Nobel Prize Winners in Physics', 'description': 'The women \n+awarded the Nobel Prize in Physics include: 1. Marie Curie (1903) 2. Maria \n+Goeppert-Mayer (1963) 3. Donna Strickland (2018) 4. (4th winner not mentioned \n+in the provided data) 5. (5th winner not mentioned in the provided data). Less \n+than 5 women have won the Nobel Prize in Physics out of 225 total laureates.'}\n+\"\"\"\ndiff --git a/poetry.lock b/poetry.lock\nindex 00d3d41906..8eace9753f 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -675,13 +675,13 @@ css = [\"tinycss2 (>=1.1.0,<1.5)\"]\n \n [[package]]\n name = \"botocore\"\n-version = \"1.35.86\"\n+version = \"1.35.90\"\n description = \"Low-level, data-driven core of boto 3.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"botocore-1.35.86-py3-none-any.whl\", hash = \"sha256:77cb4b445e4f424f956c68c688bd3ad527f4d214d51d67ffc8e245f4476d7de0\"},\n-    {file = \"botocore-1.35.86.tar.gz\", hash = \"sha256:951e944eb30284b4593d4da98f70f7b5292ea237e4de0c5a2852946a549b8347\"},\n+    {file = \"botocore-1.35.90-py3-none-any.whl\", hash = \"sha256:51dcbe1b32e2ac43dac17091f401a00ce5939f76afe999081802009cce1e92e4\"},\n+    {file = \"botocore-1.35.90.tar.gz\", hash = \"sha256:f007f58e8e3c1ad0412a6ddfae40ed92a7bca571c068cb959902bcf107f2ae48\"},\n ]\n \n [package.dependencies]\n@@ -817,116 +817,103 @@ files = [\n \n [[package]]\n name = \"charset-normalizer\"\n-version = \"3.4.0\"\n+version = \"3.4.1\"\n description = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\n optional = false\n-python-versions = \">=3.7.0\"\n+python-versions = \">=3.7\"\n files = [\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:4f9fc98dad6c2eaa32fc3af1417d95b5e3d08aff968df0cd320066def971f9a6\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0de7b687289d3c1b3e8660d0741874abe7888100efe14bd0f9fd7141bcbda92b\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:5ed2e36c3e9b4f21dd9422f6893dec0abf2cca553af509b10cd630f878d3eb99\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:40d3ff7fc90b98c637bda91c89d51264a3dcf210cade3a2c6f838c7268d7a4ca\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1110e22af8ca26b90bd6364fe4c763329b0ebf1ee213ba32b68c73de5752323d\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:86f4e8cca779080f66ff4f191a685ced73d2f72d50216f7112185dc02b90b9b7\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7f683ddc7eedd742e2889d2bfb96d69573fde1d92fcb811979cdb7165bb9c7d3\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:27623ba66c183eca01bf9ff833875b459cad267aeeb044477fedac35e19ba907\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f606a1881d2663630ea5b8ce2efe2111740df4b687bd78b34a8131baa007f79b\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:0b309d1747110feb25d7ed6b01afdec269c647d382c857ef4663bbe6ad95a912\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:136815f06a3ae311fae551c3df1f998a1ebd01ddd424aa5603a4336997629e95\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:14215b71a762336254351b00ec720a8e85cada43b987da5a042e4ce3e82bd68e\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:79983512b108e4a164b9c8d34de3992f76d48cadc9554c9e60b43f308988aabe\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-win32.whl\", hash = \"sha256:c94057af19bc953643a33581844649a7fdab902624d2eb739738a30e2b3e60fc\"},\n-    {file = \"charset_normalizer-3.4.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:55f56e2ebd4e3bc50442fbc0888c9d8c94e4e06a933804e2af3e89e2f9c1c749\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:0d99dd8ff461990f12d6e42c7347fd9ab2532fb70e9621ba520f9e8637161d7c\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:c57516e58fd17d03ebe67e181a4e4e2ccab1168f8c2976c6a334d4f819fe5944\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:6dba5d19c4dfab08e58d5b36304b3f92f3bd5d42c1a3fa37b5ba5cdf6dfcbcee\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf4475b82be41b07cc5e5ff94810e6a01f276e37c2d55571e3fe175e467a1a1c\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ce031db0408e487fd2775d745ce30a7cd2923667cf3b69d48d219f1d8f5ddeb6\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8ff4e7cdfdb1ab5698e675ca622e72d58a6fa2a8aa58195de0c0061288e6e3ea\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3710a9751938947e6327ea9f3ea6332a09bf0ba0c09cae9cb1f250bd1f1549bc\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:82357d85de703176b5587dbe6ade8ff67f9f69a41c0733cf2425378b49954de5\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:47334db71978b23ebcf3c0f9f5ee98b8d65992b65c9c4f2d34c2eaf5bcaf0594\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:8ce7fd6767a1cc5a92a639b391891bf1c268b03ec7e021c7d6d902285259685c\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f1a2f519ae173b5b6a2c9d5fa3116ce16e48b3462c8b96dfdded11055e3d6365\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:63bc5c4ae26e4bc6be6469943b8253c0fd4e4186c43ad46e713ea61a0ba49129\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:bcb4f8ea87d03bc51ad04add8ceaf9b0f085ac045ab4d74e73bbc2dc033f0236\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-win32.whl\", hash = \"sha256:9ae4ef0b3f6b41bad6366fb0ea4fc1d7ed051528e113a60fa2a65a9abb5b1d99\"},\n-    {file = \"charset_normalizer-3.4.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:cee4373f4d3ad28f1ab6290684d8e2ebdb9e7a1b74fdc39e4c211995f77bec27\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:0713f3adb9d03d49d365b70b84775d0a0d18e4ab08d12bc46baa6132ba78aaf6\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:de7376c29d95d6719048c194a9cf1a1b0393fbe8488a22008610b0361d834ecf\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:4a51b48f42d9358460b78725283f04bddaf44a9358197b889657deba38f329db\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b295729485b06c1a0683af02a9e42d2caa9db04a373dc38a6a58cdd1e8abddf1\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ee803480535c44e7f5ad00788526da7d85525cfefaf8acf8ab9a310000be4b03\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3d59d125ffbd6d552765510e3f31ed75ebac2c7470c7274195b9161a32350284\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8cda06946eac330cbe6598f77bb54e690b4ca93f593dee1568ad22b04f347c15\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:07afec21bbbbf8a5cc3651aa96b980afe2526e7f048fdfb7f1014d84acc8b6d8\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6b40e8d38afe634559e398cc32b1472f376a4099c75fe6299ae607e404c033b2\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:b8dcd239c743aa2f9c22ce674a145e0a25cb1566c495928440a181ca1ccf6719\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:84450ba661fb96e9fd67629b93d2941c871ca86fc38d835d19d4225ff946a631\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:44aeb140295a2f0659e113b31cfe92c9061622cadbc9e2a2f7b8ef6b1e29ef4b\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:1db4e7fefefd0f548d73e2e2e041f9df5c59e178b4c72fbac4cc6f535cfb1565\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-win32.whl\", hash = \"sha256:5726cf76c982532c1863fb64d8c6dd0e4c90b6ece9feb06c9f202417a31f7dd7\"},\n-    {file = \"charset_normalizer-3.4.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:b197e7094f232959f8f20541ead1d9862ac5ebea1d58e9849c1bf979255dfac9\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:dd4eda173a9fcccb5f2e2bd2a9f423d180194b1bf17cf59e3269899235b2a114\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e9e3c4c9e1ed40ea53acf11e2a386383c3304212c965773704e4603d589343ed\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:92a7e36b000bf022ef3dbb9c46bfe2d52c047d5e3f3343f43204263c5addc250\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54b6a92d009cbe2fb11054ba694bc9e284dad30a26757b1e372a1fdddaf21920\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1ffd9493de4c922f2a38c2bf62b831dcec90ac673ed1ca182fe11b4d8e9f2a64\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:35c404d74c2926d0287fbd63ed5d27eb911eb9e4a3bb2c6d294f3cfd4a9e0c23\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4796efc4faf6b53a18e3d46343535caed491776a22af773f366534056c4e1fbc\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e7fdd52961feb4c96507aa649550ec2a0d527c086d284749b2f582f2d40a2e0d\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:92db3c28b5b2a273346bebb24857fda45601aef6ae1c011c0a997106581e8a88\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:ab973df98fc99ab39080bfb0eb3a925181454d7c3ac8a1e695fddfae696d9e90\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4b67fdab07fdd3c10bb21edab3cbfe8cf5696f453afce75d815d9d7223fbe88b\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:aa41e526a5d4a9dfcfbab0716c7e8a1b215abd3f3df5a45cf18a12721d31cb5d\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:ffc519621dce0c767e96b9c53f09c5d215578e10b02c285809f76509a3931482\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-win32.whl\", hash = \"sha256:f19c1585933c82098c2a520f8ec1227f20e339e33aca8fa6f956f6691b784e67\"},\n-    {file = \"charset_normalizer-3.4.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:707b82d19e65c9bd28b81dde95249b07bf9f5b90ebe1ef17d9b57473f8a64b7b\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:dbe03226baf438ac4fda9e2d0715022fd579cb641c4cf639fa40d53b2fe6f3e2\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dd9a8bd8900e65504a305bf8ae6fa9fbc66de94178c420791d0293702fce2df7\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b8831399554b92b72af5932cdbbd4ddc55c55f631bb13ff8fe4e6536a06c5c51\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a14969b8691f7998e74663b77b4c36c0337cb1df552da83d5c9004a93afdb574\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dcaf7c1524c0542ee2fc82cc8ec337f7a9f7edee2532421ab200d2b920fc97cf\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:425c5f215d0eecee9a56cdb703203dda90423247421bf0d67125add85d0c4455\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:d5b054862739d276e09928de37c79ddeec42a6e1bfc55863be96a36ba22926f6\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:f3e73a4255342d4eb26ef6df01e3962e73aa29baa3124a8e824c5d3364a65748\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:2f6c34da58ea9c1a9515621f4d9ac379871a8f21168ba1b5e09d74250de5ad62\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:f09cb5a7bbe1ecae6e87901a2eb23e0256bb524a79ccc53eb0b7629fbe7677c4\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:0099d79bdfcf5c1f0c2c72f91516702ebf8b0b8ddd8905f97a8aecf49712c621\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-win32.whl\", hash = \"sha256:9c98230f5042f4945f957d006edccc2af1e03ed5e37ce7c373f00a5a4daa6149\"},\n-    {file = \"charset_normalizer-3.4.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:62f60aebecfc7f4b82e3f639a7d1433a20ec32824db2199a11ad4f5e146ef5ee\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:af73657b7a68211996527dbfeffbb0864e043d270580c5aef06dc4b659a4b578\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:cab5d0b79d987c67f3b9e9c53f54a61360422a5a0bc075f43cab5621d530c3b6\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:9289fd5dddcf57bab41d044f1756550f9e7cf0c8e373b8cdf0ce8773dc4bd417\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6b493a043635eb376e50eedf7818f2f322eabbaa974e948bd8bdd29eb7ef2a51\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9fa2566ca27d67c86569e8c85297aaf413ffab85a8960500f12ea34ff98e4c41\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a8e538f46104c815be19c975572d74afb53f29650ea2025bbfaef359d2de2f7f\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6fd30dc99682dc2c603c2b315bded2799019cea829f8bf57dc6b61efde6611c8\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2006769bd1640bdf4d5641c69a3d63b71b81445473cac5ded39740a226fa88ab\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:dc15e99b2d8a656f8e666854404f1ba54765871104e50c8e9813af8a7db07f12\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:ab2e5bef076f5a235c3774b4f4028a680432cded7cad37bba0fd90d64b187d19\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4ec9dd88a5b71abfc74e9df5ebe7921c35cbb3b641181a531ca65cdb5e8e4dea\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:43193c5cda5d612f247172016c4bb71251c784d7a4d9314677186a838ad34858\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:aa693779a8b50cd97570e5a0f343538a8dbd3e496fa5dcb87e29406ad0299654\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-win32.whl\", hash = \"sha256:7706f5850360ac01d80c89bcef1640683cc12ed87f42579dab6c5d3ed6888613\"},\n-    {file = \"charset_normalizer-3.4.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:c3e446d253bd88f6377260d07c895816ebf33ffffd56c1c792b13bff9c3e1ade\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:980b4f289d1d90ca5efcf07958d3eb38ed9c0b7676bf2831a54d4f66f9c27dfa\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:f28f891ccd15c514a0981f3b9db9aa23d62fe1a99997512b0491d2ed323d229a\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8aacce6e2e1edcb6ac625fb0f8c3a9570ccc7bfba1f63419b3769ccf6a00ed0\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bd7af3717683bea4c87acd8c0d3d5b44d56120b26fd3f8a692bdd2d5260c620a\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5ff2ed8194587faf56555927b3aa10e6fb69d931e33953943bc4f837dfee2242\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e91f541a85298cf35433bf66f3fab2a4a2cff05c127eeca4af174f6d497f0d4b\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:309a7de0a0ff3040acaebb35ec45d18db4b28232f21998851cfa709eeff49d62\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:285e96d9d53422efc0d7a17c60e59f37fbf3dfa942073f666db4ac71e8d726d0\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:5d447056e2ca60382d460a604b6302d8db69476fd2015c81e7c35417cfabe4cd\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:20587d20f557fe189b7947d8e7ec5afa110ccf72a3128d61a2a387c3313f46be\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:130272c698667a982a5d0e626851ceff662565379baf0ff2cc58067b81d4f11d\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:ab22fbd9765e6954bc0bcff24c25ff71dcbfdb185fcdaca49e81bac68fe724d3\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7782afc9b6b42200f7362858f9e73b1f8316afb276d316336c0ec3bd73312742\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-win32.whl\", hash = \"sha256:2de62e8801ddfff069cd5c504ce3bc9672b23266597d4e4f50eda28846c322f2\"},\n-    {file = \"charset_normalizer-3.4.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:95c3c157765b031331dd4db3c775e58deaee050a3042fcad72cbc4189d7c8dca\"},\n-    {file = \"charset_normalizer-3.4.0-py3-none-any.whl\", hash = \"sha256:fe9f97feb71aa9896b81973a7bbada8c49501dc73e58a10fcef6663af95e5079\"},\n-    {file = \"charset_normalizer-3.4.0.tar.gz\", hash = \"sha256:223217c3d4f82c3ac5e29032b3f1c2eb0fb591b72161f86d93f5719079dae93e\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:91b36a978b5ae0ee86c394f5a54d6ef44db1de0815eb43de826d41d21e4af3de\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7461baadb4dc00fd9e0acbe254e3d7d2112e7f92ced2adc96e54ef6501c5f176\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e218488cd232553829be0664c2292d3af2eeeb94b32bea483cf79ac6a694e037\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:80ed5e856eb7f30115aaf94e4a08114ccc8813e6ed1b5efa74f9f82e8509858f\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b010a7a4fd316c3c484d482922d13044979e78d1861f0e0650423144c616a46a\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4532bff1b8421fd0a320463030c7520f56a79c9024a4e88f01c537316019005a\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:d973f03c0cb71c5ed99037b870f2be986c3c05e63622c017ea9816881d2dd247\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:3a3bd0dcd373514dcec91c411ddb9632c0d7d92aed7093b8c3bbb6d69ca74408\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d9c3cdf5390dcd29aa8056d13e8e99526cda0305acc038b96b30352aff5ff2bb\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:2bdfe3ac2e1bbe5b59a1a63721eb3b95fc9b6817ae4a46debbb4e11f6232428d\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:eab677309cdb30d047996b36d34caeda1dc91149e4fdca0b1a039b3f79d9a807\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-win32.whl\", hash = \"sha256:c0429126cf75e16c4f0ad00ee0eae4242dc652290f940152ca8c75c3a4b6ee8f\"},\n+    {file = \"charset_normalizer-3.4.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:9f0b8b1c6d84c8034a44893aba5e767bf9c7a211e313a9605d9c617d7083829f\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:8bfa33f4f2672964266e940dd22a195989ba31669bd84629f05fab3ef4e2d125\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:28bf57629c75e810b6ae989f03c0828d64d6b26a5e205535585f96093e405ed1\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f08ff5e948271dc7e18a35641d2f11a4cd8dfd5634f55228b691e62b37125eb3\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:234ac59ea147c59ee4da87a0c0f098e9c8d169f4dc2a159ef720f1a61bbe27cd\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fd4ec41f914fa74ad1b8304bbc634b3de73d2a0889bd32076342a573e0779e00\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:eea6ee1db730b3483adf394ea72f808b6e18cf3cb6454b4d86e04fa8c4327a12\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:c96836c97b1238e9c9e3fe90844c947d5afbf4f4c92762679acfe19927d81d77\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:4d86f7aff21ee58f26dcf5ae81a9addbd914115cdebcbb2217e4f0ed8982e146\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:09b5e6733cbd160dcc09589227187e242a30a49ca5cefa5a7edd3f9d19ed53fd\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:5777ee0881f9499ed0f71cc82cf873d9a0ca8af166dfa0af8ec4e675b7df48e6\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:237bdbe6159cff53b4f24f397d43c6336c6b0b42affbe857970cefbb620911c8\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-win32.whl\", hash = \"sha256:8417cb1f36cc0bc7eaba8ccb0e04d55f0ee52df06df3ad55259b9a323555fc8b\"},\n+    {file = \"charset_normalizer-3.4.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:d7f50a1f8c450f3925cb367d011448c39239bb3eb4117c36a6d354794de4ce76\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:73d94b58ec7fecbc7366247d3b0b10a21681004153238750bb67bd9012414545\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dad3e487649f498dd991eeb901125411559b22e8d7ab25d3aeb1af367df5efd7\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c30197aa96e8eed02200a83fba2657b4c3acd0f0aa4bdc9f6c1af8e8962e0757\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2369eea1ee4a7610a860d88f268eb39b95cb588acd7235e02fd5a5601773d4fa\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc2722592d8998c870fa4e290c2eec2c1569b87fe58618e67d38b4665dfa680d\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ffc9202a29ab3920fa812879e95a9e78b2465fd10be7fcbd042899695d75e616\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:804a4d582ba6e5b747c625bf1255e6b1507465494a40a2130978bda7b932c90b\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:0f55e69f030f7163dffe9fd0752b32f070566451afe180f99dbeeb81f511ad8d\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c4c3e6da02df6fa1410a7680bd3f63d4f710232d3139089536310d027950696a\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:5df196eb874dae23dcfb968c83d4f8fdccb333330fe1fc278ac5ceeb101003a9\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:e358e64305fe12299a08e08978f51fc21fac060dcfcddd95453eabe5b93ed0e1\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-win32.whl\", hash = \"sha256:9b23ca7ef998bc739bf6ffc077c2116917eabcc901f88da1b9856b210ef63f35\"},\n+    {file = \"charset_normalizer-3.4.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:6ff8a4a60c227ad87030d76e99cd1698345d4491638dfa6673027c48b3cd395f\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:aabfa34badd18f1da5ec1bc2715cadc8dca465868a4e73a0173466b688f29dda\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:22e14b5d70560b8dd51ec22863f370d1e595ac3d024cb8ad7d308b4cd95f8313\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8436c508b408b82d87dc5f62496973a1805cd46727c34440b0d29d8a2f50a6c9\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2d074908e1aecee37a7635990b2c6d504cd4766c7bc9fc86d63f9c09af3fa11b\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:955f8851919303c92343d2f66165294848d57e9bba6cf6e3625485a70a038d11\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:44ecbf16649486d4aebafeaa7ec4c9fed8b88101f4dd612dcaf65d5e815f837f\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0924e81d3d5e70f8126529951dac65c1010cdf117bb75eb02dd12339b57749dd\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2967f74ad52c3b98de4c3b32e1a44e32975e008a9cd2a8cc8966d6a5218c5cb2\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c75cb2a3e389853835e84a2d8fb2b81a10645b503eca9bcb98df6b5a43eb8886\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:09b26ae6b1abf0d27570633b2b078a2a20419c99d66fb2823173d73f188ce601\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:fa88b843d6e211393a37219e6a1c1df99d35e8fd90446f1118f4216e307e48cd\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-win32.whl\", hash = \"sha256:eb8178fe3dba6450a3e024e95ac49ed3400e506fd4e9e5c32d30adda88cbd407\"},\n+    {file = \"charset_normalizer-3.4.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:b1ac5992a838106edb89654e0aebfc24f5848ae2547d22c2c3f66454daa11971\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f30bf9fd9be89ecb2360c7d94a711f00c09b976258846efe40db3d05828e8089\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:97f68b8d6831127e4787ad15e6757232e14e12060bec17091b85eb1486b91d8d\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7974a0b5ecd505609e3b19742b60cee7aa2aa2fb3151bc917e6e2646d7667dcf\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fc54db6c8593ef7d4b2a331b58653356cf04f67c960f584edb7c3d8c97e8f39e\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:311f30128d7d333eebd7896965bfcfbd0065f1716ec92bd5638d7748eb6f936a\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:7d053096f67cd1241601111b698f5cad775f97ab25d81567d3f59219b5f1adbd\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:807f52c1f798eef6cf26beb819eeb8819b1622ddfeef9d0977a8502d4db6d534\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:dccbe65bd2f7f7ec22c4ff99ed56faa1e9f785482b9bbd7c717e26fd723a1d1e\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:2fb9bd477fdea8684f78791a6de97a953c51831ee2981f8e4f583ff3b9d9687e\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:01732659ba9b5b873fc117534143e4feefecf3b2078b0a6a2e925271bb6f4cfa\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-win32.whl\", hash = \"sha256:7a4f97a081603d2050bfaffdefa5b02a9ec823f8348a572e39032caa8404a487\"},\n+    {file = \"charset_normalizer-3.4.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:7b1bef6280950ee6c177b326508f86cad7ad4dff12454483b51d8b7d673a2c5d\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:ecddf25bee22fe4fe3737a399d0d177d72bc22be6913acfab364b40bce1ba83c\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8c60ca7339acd497a55b0ea5d506b2a2612afb2826560416f6894e8b5770d4a9\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b7b2d86dd06bfc2ade3312a83a5c364c7ec2e3498f8734282c6c3d4b07b346b8\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:dd78cfcda14a1ef52584dbb008f7ac81c1328c0f58184bf9a84c49c605002da6\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6e27f48bcd0957c6d4cb9d6fa6b61d192d0b13d5ef563e5f2ae35feafc0d179c\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:01ad647cdd609225c5350561d084b42ddf732f4eeefe6e678765636791e78b9a\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:619a609aa74ae43d90ed2e89bdd784765de0a25ca761b93e196d938b8fd1dbbd\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:89149166622f4db9b4b6a449256291dc87a99ee53151c74cbd82a53c8c2f6ccd\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7709f51f5f7c853f0fb938bcd3bc59cdfdc5203635ffd18bf354f6967ea0f824\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:345b0426edd4e18138d6528aed636de7a9ed169b4aaf9d61a8c19e39d26838ca\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:0907f11d019260cdc3f94fbdb23ff9125f6b5d1039b76003b5b0ac9d6a6c9d5b\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-win32.whl\", hash = \"sha256:ea0d8d539afa5eb2728aa1932a988a9a7af94f18582ffae4bc10b3fbdad0626e\"},\n+    {file = \"charset_normalizer-3.4.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:329ce159e82018d646c7ac45b01a430369d526569ec08516081727a20e9e4af4\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b97e690a2118911e39b4042088092771b4ae3fc3aa86518f84b8cf6888dbdb41\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:78baa6d91634dfb69ec52a463534bc0df05dbd546209b79a3880a34487f4b84f\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1a2bc9f351a75ef49d664206d51f8e5ede9da246602dc2d2726837620ea034b2\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:75832c08354f595c760a804588b9357d34ec00ba1c940c15e31e96d902093770\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0af291f4fe114be0280cdd29d533696a77b5b49cfde5467176ecab32353395c4\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0167ddc8ab6508fe81860a57dd472b2ef4060e8d378f0cc555707126830f2537\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:2a75d49014d118e4198bcee5ee0a6f25856b29b12dbf7cd012791f8a6cc5c496\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:363e2f92b0f0174b2f8238240a1a30142e3db7b957a5dd5689b0e75fb717cc78\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ab36c8eb7e454e34e60eb55ca5d241a5d18b2c6244f6827a30e451c42410b5f7\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:4c0907b1928a36d5a998d72d64d8eaa7244989f7aaaf947500d3a800c83a3fd6\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:04432ad9479fa40ec0f387795ddad4437a2b50417c69fa275e212933519ff294\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-win32.whl\", hash = \"sha256:3bed14e9c89dcb10e8f3a29f9ccac4955aebe93c71ae803af79265c9ca5644c5\"},\n+    {file = \"charset_normalizer-3.4.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:49402233c892a461407c512a19435d1ce275543138294f7ef013f0b63d5d3765\"},\n+    {file = \"charset_normalizer-3.4.1-py3-none-any.whl\", hash = \"sha256:d98b1668f06378c6dbefec3b92299716b931cd4e6061f3c875a71ced1780ab85\"},\n+    {file = \"charset_normalizer-3.4.1.tar.gz\", hash = \"sha256:44251f18cd68a75b56585dd00dae26183e102cd5e0f9f1466e6df5da2ed64ea3\"},\n ]\n \n [[package]]\n@@ -1097,73 +1084,73 @@ test-no-images = [\"pytest\", \"pytest-cov\", \"pytest-rerunfailures\", \"pytest-xdist\"\n \n [[package]]\n name = \"coverage\"\n-version = \"7.6.9\"\n+version = \"7.6.10\"\n description = \"Code coverage measurement for Python\"\n optional = false\n python-versions = \">=3.9\"\n files = [\n-    {file = \"coverage-7.6.9-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:85d9636f72e8991a1706b2b55b06c27545448baf9f6dbf51c4004609aacd7dcb\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:608a7fd78c67bee8936378299a6cb9f5149bb80238c7a566fc3e6717a4e68710\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:96d636c77af18b5cb664ddf12dab9b15a0cfe9c0bde715da38698c8cea748bfa\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d75cded8a3cff93da9edc31446872d2997e327921d8eed86641efafd350e1df1\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f7b15f589593110ae767ce997775d645b47e5cbbf54fd322f8ebea6277466cec\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:44349150f6811b44b25574839b39ae35291f6496eb795b7366fef3bd3cf112d3\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:d891c136b5b310d0e702e186d70cd16d1119ea8927347045124cb286b29297e5\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:db1dab894cc139f67822a92910466531de5ea6034ddfd2b11c0d4c6257168073\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-win32.whl\", hash = \"sha256:41ff7b0da5af71a51b53f501a3bac65fb0ec311ebed1632e58fc6107f03b9198\"},\n-    {file = \"coverage-7.6.9-cp310-cp310-win_amd64.whl\", hash = \"sha256:35371f8438028fdccfaf3570b31d98e8d9eda8bb1d6ab9473f5a390969e98717\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:932fc826442132dde42ee52cf66d941f581c685a6313feebed358411238f60f9\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:085161be5f3b30fd9b3e7b9a8c301f935c8313dcf928a07b116324abea2c1c2c\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ccc660a77e1c2bf24ddbce969af9447a9474790160cfb23de6be4fa88e3951c7\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c69e42c892c018cd3c8d90da61d845f50a8243062b19d228189b0224150018a9\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0824a28ec542a0be22f60c6ac36d679e0e262e5353203bea81d44ee81fe9c6d4\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:4401ae5fc52ad8d26d2a5d8a7428b0f0c72431683f8e63e42e70606374c311a1\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:98caba4476a6c8d59ec1eb00c7dd862ba9beca34085642d46ed503cc2d440d4b\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:ee5defd1733fd6ec08b168bd4f5387d5b322f45ca9e0e6c817ea6c4cd36313e3\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-win32.whl\", hash = \"sha256:f2d1ec60d6d256bdf298cb86b78dd715980828f50c46701abc3b0a2b3f8a0dc0\"},\n-    {file = \"coverage-7.6.9-cp311-cp311-win_amd64.whl\", hash = \"sha256:0d59fd927b1f04de57a2ba0137166d31c1a6dd9e764ad4af552912d70428c92b\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:99e266ae0b5d15f1ca8d278a668df6f51cc4b854513daab5cae695ed7b721cf8\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:9901d36492009a0a9b94b20e52ebfc8453bf49bb2b27bca2c9706f8b4f5a554a\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:abd3e72dd5b97e3af4246cdada7738ef0e608168de952b837b8dd7e90341f015\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ff74026a461eb0660366fb01c650c1d00f833a086b336bdad7ab00cc952072b3\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:65dad5a248823a4996724a88eb51d4b31587aa7aa428562dbe459c684e5787ae\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:22be16571504c9ccea919fcedb459d5ab20d41172056206eb2994e2ff06118a4\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:0f957943bc718b87144ecaee70762bc2bc3f1a7a53c7b861103546d3a403f0a6\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:0ae1387db4aecb1f485fb70a6c0148c6cdaebb6038f1d40089b1fc84a5db556f\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-win32.whl\", hash = \"sha256:1a330812d9cc7ac2182586f6d41b4d0fadf9be9049f350e0efb275c8ee8eb692\"},\n-    {file = \"coverage-7.6.9-cp312-cp312-win_amd64.whl\", hash = \"sha256:b12c6b18269ca471eedd41c1b6a1065b2f7827508edb9a7ed5555e9a56dcfc97\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:899b8cd4781c400454f2f64f7776a5d87bbd7b3e7f7bda0cb18f857bb1334664\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:61f70dc68bd36810972e55bbbe83674ea073dd1dcc121040a08cdf3416c5349c\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8a289d23d4c46f1a82d5db4abeb40b9b5be91731ee19a379d15790e53031c014\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7e216d8044a356fc0337c7a2a0536d6de07888d7bcda76febcb8adc50bdbbd00\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3c026eb44f744acaa2bda7493dad903aa5bf5fc4f2554293a798d5606710055d\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:e77363e8425325384f9d49272c54045bbed2f478e9dd698dbc65dbc37860eb0a\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:777abfab476cf83b5177b84d7486497e034eb9eaea0d746ce0c1268c71652077\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:447af20e25fdbe16f26e84eb714ba21d98868705cb138252d28bc400381f6ffb\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-win32.whl\", hash = \"sha256:d872ec5aeb086cbea771c573600d47944eea2dcba8be5f3ee649bfe3cb8dc9ba\"},\n-    {file = \"coverage-7.6.9-cp313-cp313-win_amd64.whl\", hash = \"sha256:fd1213c86e48dfdc5a0cc676551db467495a95a662d2396ecd58e719191446e1\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:ba9e7484d286cd5a43744e5f47b0b3fb457865baf07bafc6bee91896364e1419\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:e5ea1cf0872ee455c03e5674b5bca5e3e68e159379c1af0903e89f5eba9ccc3a\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2d10e07aa2b91835d6abec555ec8b2733347956991901eea6ffac295f83a30e4\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:13a9e2d3ee855db3dd6ea1ba5203316a1b1fd8eaeffc37c5b54987e61e4194ae\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9c38bf15a40ccf5619fa2fe8f26106c7e8e080d7760aeccb3722664c8656b030\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:d5275455b3e4627c8e7154feaf7ee0743c2e7af82f6e3b561967b1cca755a0be\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:8f8770dfc6e2c6a2d4569f411015c8d751c980d17a14b0530da2d7f27ffdd88e\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:8d2dfa71665a29b153a9681edb1c8d9c1ea50dfc2375fb4dac99ea7e21a0bcd9\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-win32.whl\", hash = \"sha256:5e6b86b5847a016d0fbd31ffe1001b63355ed309651851295315031ea7eb5a9b\"},\n-    {file = \"coverage-7.6.9-cp313-cp313t-win_amd64.whl\", hash = \"sha256:97ddc94d46088304772d21b060041c97fc16bdda13c6c7f9d8fcd8d5ae0d8611\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:adb697c0bd35100dc690de83154627fbab1f4f3c0386df266dded865fc50a902\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:be57b6d56e49c2739cdf776839a92330e933dd5e5d929966fbbd380c77f060be\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f1592791f8204ae9166de22ba7e6705fa4ebd02936c09436a1bb85aabca3e599\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4e12ae8cc979cf83d258acb5e1f1cf2f3f83524d1564a49d20b8bec14b637f08\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bb5555cff66c4d3d6213a296b360f9e1a8e323e74e0426b6c10ed7f4d021e464\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:b9389a429e0e5142e69d5bf4a435dd688c14478a19bb901735cdf75e57b13845\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:592ac539812e9b46046620341498caf09ca21023c41c893e1eb9dbda00a70cbf\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:a27801adef24cc30871da98a105f77995e13a25a505a0161911f6aafbd66e678\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-win32.whl\", hash = \"sha256:8e3c3e38930cfb729cb8137d7f055e5a473ddaf1217966aa6238c88bd9fd50e6\"},\n-    {file = \"coverage-7.6.9-cp39-cp39-win_amd64.whl\", hash = \"sha256:e28bf44afa2b187cc9f41749138a64435bf340adfcacb5b2290c070ce99839d4\"},\n-    {file = \"coverage-7.6.9-pp39.pp310-none-any.whl\", hash = \"sha256:f3ca78518bc6bc92828cd11867b121891d75cae4ea9e908d72030609b996db1b\"},\n-    {file = \"coverage-7.6.9.tar.gz\", hash = \"sha256:4a8d8977b0c6ef5aeadcb644da9e69ae0dcfe66ec7f368c89c72e058bd71164d\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:5c912978f7fbf47ef99cec50c4401340436d200d41d714c7a4766f377c5b7b78\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:a01ec4af7dfeb96ff0078ad9a48810bb0cc8abcb0115180c6013a6b26237626c\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a3b204c11e2b2d883946fe1d97f89403aa1811df28ce0447439178cc7463448a\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:32ee6d8491fcfc82652a37109f69dee9a830e9379166cb73c16d8dc5c2915165\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:675cefc4c06e3b4c876b85bfb7c59c5e2218167bbd4da5075cbe3b5790a28988\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f4f620668dbc6f5e909a0946a877310fb3d57aea8198bde792aae369ee1c23b5\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:4eea95ef275de7abaef630c9b2c002ffbc01918b726a39f5a4353916ec72d2f3\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:e2f0280519e42b0a17550072861e0bc8a80a0870de260f9796157d3fca2733c5\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-win32.whl\", hash = \"sha256:bc67deb76bc3717f22e765ab3e07ee9c7a5e26b9019ca19a3b063d9f4b874244\"},\n+    {file = \"coverage-7.6.10-cp310-cp310-win_amd64.whl\", hash = \"sha256:0f460286cb94036455e703c66988851d970fdfd8acc2a1122ab7f4f904e4029e\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:ea3c8f04b3e4af80e17bab607c386a830ffc2fb88a5484e1df756478cf70d1d3\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:507a20fc863cae1d5720797761b42d2d87a04b3e5aeb682ef3b7332e90598f43\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d37a84878285b903c0fe21ac8794c6dab58150e9359f1aaebbeddd6412d53132\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a534738b47b0de1995f85f582d983d94031dffb48ab86c95bdf88dc62212142f\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0d7a2bf79378d8fb8afaa994f91bfd8215134f8631d27eba3e0e2c13546ce994\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:6713ba4b4ebc330f3def51df1d5d38fad60b66720948112f114968feb52d3f99\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:ab32947f481f7e8c763fa2c92fd9f44eeb143e7610c4ca9ecd6a36adab4081bd\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:7bbd8c8f1b115b892e34ba66a097b915d3871db7ce0e6b9901f462ff3a975377\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-win32.whl\", hash = \"sha256:299e91b274c5c9cdb64cbdf1b3e4a8fe538a7a86acdd08fae52301b28ba297f8\"},\n+    {file = \"coverage-7.6.10-cp311-cp311-win_amd64.whl\", hash = \"sha256:489a01f94aa581dbd961f306e37d75d4ba16104bbfa2b0edb21d29b73be83609\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:27c6e64726b307782fa5cbe531e7647aee385a29b2107cd87ba7c0105a5d3853\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:c56e097019e72c373bae32d946ecf9858fda841e48d82df7e81c63ac25554078\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c7827a5bc7bdb197b9e066cdf650b2887597ad124dd99777332776f7b7c7d0d0\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:204a8238afe787323a8b47d8be4df89772d5c1e4651b9ffa808552bdf20e1d50\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e67926f51821b8e9deb6426ff3164870976fe414d033ad90ea75e7ed0c2e5022\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:e78b270eadb5702938c3dbe9367f878249b5ef9a2fcc5360ac7bff694310d17b\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:714f942b9c15c3a7a5fe6876ce30af831c2ad4ce902410b7466b662358c852c0\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:abb02e2f5a3187b2ac4cd46b8ced85a0858230b577ccb2c62c81482ca7d18852\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-win32.whl\", hash = \"sha256:55b201b97286cf61f5e76063f9e2a1d8d2972fc2fcfd2c1272530172fd28c359\"},\n+    {file = \"coverage-7.6.10-cp312-cp312-win_amd64.whl\", hash = \"sha256:e4ae5ac5e0d1e4edfc9b4b57b4cbecd5bc266a6915c500f358817a8496739247\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:05fca8ba6a87aabdd2d30d0b6c838b50510b56cdcfc604d40760dae7153b73d9\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:9e80eba8801c386f72e0712a0453431259c45c3249f0009aff537a517b52942b\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a372c89c939d57abe09e08c0578c1d212e7a678135d53aa16eec4430adc5e690\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ec22b5e7fe7a0fa8509181c4aac1db48f3dd4d3a566131b313d1efc102892c18\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:26bcf5c4df41cad1b19c84af71c22cbc9ea9a547fc973f1f2cc9a290002c8b3c\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4e4630c26b6084c9b3cb53b15bd488f30ceb50b73c35c5ad7871b869cb7365fd\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2396e8116db77789f819d2bc8a7e200232b7a282c66e0ae2d2cd84581a89757e\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:79109c70cc0882e4d2d002fe69a24aa504dec0cc17169b3c7f41a1d341a73694\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-win32.whl\", hash = \"sha256:9e1747bab246d6ff2c4f28b4d186b205adced9f7bd9dc362051cc37c4a0c7bd6\"},\n+    {file = \"coverage-7.6.10-cp313-cp313-win_amd64.whl\", hash = \"sha256:254f1a3b1eef5f7ed23ef265eaa89c65c8c5b6b257327c149db1ca9d4a35f25e\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:2ccf240eb719789cedbb9fd1338055de2761088202a9a0b73032857e53f612fe\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:0c807ca74d5a5e64427c8805de15b9ca140bba13572d6d74e262f46f50b13273\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2bcfa46d7709b5a7ffe089075799b902020b62e7ee56ebaed2f4bdac04c508d8\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4e0de1e902669dccbf80b0415fb6b43d27edca2fbd48c74da378923b05316098\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3f7b444c42bbc533aaae6b5a2166fd1a797cdb5eb58ee51a92bee1eb94a1e1cb\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:b330368cb99ef72fcd2dc3ed260adf67b31499584dc8a20225e85bfe6f6cfed0\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:9a7cfb50515f87f7ed30bc882f68812fd98bc2852957df69f3003d22a2aa0abf\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:6f93531882a5f68c28090f901b1d135de61b56331bba82028489bc51bdd818d2\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-win32.whl\", hash = \"sha256:89d76815a26197c858f53c7f6a656686ec392b25991f9e409bcef020cd532312\"},\n+    {file = \"coverage-7.6.10-cp313-cp313t-win_amd64.whl\", hash = \"sha256:54a5f0f43950a36312155dae55c505a76cd7f2b12d26abeebbe7a0b36dbc868d\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:656c82b8a0ead8bba147de9a89bda95064874c91a3ed43a00e687f23cc19d53a\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ccc2b70a7ed475c68ceb548bf69cec1e27305c1c2606a5eb7c3afff56a1b3b27\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a5e37dc41d57ceba70956fa2fc5b63c26dba863c946ace9705f8eca99daecdc4\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0aa9692b4fdd83a4647eeb7db46410ea1322b5ed94cd1715ef09d1d5922ba87f\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:aa744da1820678b475e4ba3dfd994c321c5b13381d1041fe9c608620e6676e25\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:c0b1818063dc9e9d838c09e3a473c1422f517889436dd980f5d721899e66f315\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:59af35558ba08b758aec4d56182b222976330ef8d2feacbb93964f576a7e7a90\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7ed2f37cfce1ce101e6dffdfd1c99e729dd2ffc291d02d3e2d0af8b53d13840d\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-win32.whl\", hash = \"sha256:4bcc276261505d82f0ad426870c3b12cb177752834a633e737ec5ee79bbdff18\"},\n+    {file = \"coverage-7.6.10-cp39-cp39-win_amd64.whl\", hash = \"sha256:457574f4599d2b00f7f637a0700a6422243b3565509457b2dbd3f50703e11f59\"},\n+    {file = \"coverage-7.6.10-pp39.pp310-none-any.whl\", hash = \"sha256:fd34e7b3405f0cc7ab03d54a334c17a9e802897580d964bd8c2001f4b9fd488f\"},\n+    {file = \"coverage-7.6.10.tar.gz\", hash = \"sha256:7fb105327c8f8f0682e29843e2ff96af9dcbe5bab8eeb4b398c6a33a16d80a23\"},\n ]\n \n [package.dependencies]\n@@ -1439,13 +1426,13 @@ dev = [\"PyTest\", \"PyTest-Cov\", \"bump2version (<1)\", \"jinja2 (>=3.0.3,<3.1.0)\", \"\n \n [[package]]\n name = \"diffusers\"\n-version = \"0.31.0\"\n+version = \"0.32.1\"\n description = \"State-of-the-art diffusion in PyTorch and JAX.\"\n optional = true\n python-versions = \">=3.8.0\"\n files = [\n-    {file = \"diffusers-0.31.0-py3-none-any.whl\", hash = \"sha256:cbc498ae63f4abfc7c3a07649cdcbee229ef2f9a9a1f0d19c9bbaf22f8d30c1f\"},\n-    {file = \"diffusers-0.31.0.tar.gz\", hash = \"sha256:b1d01a73e45d43a0630c299173915dddd69fc50f2ae8f2ab5de4fd245eaed72f\"},\n+    {file = \"diffusers-0.32.1-py3-none-any.whl\", hash = \"sha256:ab2ed6efe9dd2364db55b94fae453ff149dc06693ec99702cadfbeeaaa00c9c1\"},\n+    {file = \"diffusers-0.32.1.tar.gz\", hash = \"sha256:d48c19a4bce612d225f857e2e5d4f6ee003b88234af46b44c20119ee23f1568c\"},\n ]\n \n [package.dependencies]\n@@ -1459,12 +1446,12 @@ requests = \"*\"\n safetensors = \">=0.3.1\"\n \n [package.extras]\n-dev = [\"GitPython (<3.1.19)\", \"Jinja2\", \"accelerate (>=0.31.0)\", \"compel (==0.1.8)\", \"datasets\", \"flax (>=0.4.1)\", \"hf-doc-builder (>=0.3.0)\", \"invisible-watermark (>=0.2.0)\", \"isort (>=5.5.4)\", \"jax (>=0.4.1)\", \"jaxlib (>=0.4.1)\", \"k-diffusion (>=0.0.12)\", \"librosa\", \"parameterized\", \"peft (>=0.6.0)\", \"protobuf (>=3.20.3,<4)\", \"pytest\", \"pytest-timeout\", \"pytest-xdist\", \"requests-mock (==1.10.0)\", \"ruff (==0.1.5)\", \"safetensors (>=0.3.1)\", \"scipy\", \"sentencepiece (>=0.1.91,!=0.1.92)\", \"tensorboard\", \"torch (>=1.4,<2.5.0)\", \"torchvision\", \"transformers (>=4.41.2)\", \"urllib3 (<=2.0.0)\"]\n+dev = [\"GitPython (<3.1.19)\", \"Jinja2\", \"accelerate (>=0.31.0)\", \"compel (==0.1.8)\", \"datasets\", \"flax (>=0.4.1)\", \"hf-doc-builder (>=0.3.0)\", \"invisible-watermark (>=0.2.0)\", \"isort (>=5.5.4)\", \"jax (>=0.4.1)\", \"jaxlib (>=0.4.1)\", \"k-diffusion (>=0.0.12)\", \"librosa\", \"parameterized\", \"peft (>=0.6.0)\", \"protobuf (>=3.20.3,<4)\", \"pytest\", \"pytest-timeout\", \"pytest-xdist\", \"requests-mock (==1.10.0)\", \"ruff (==0.1.5)\", \"safetensors (>=0.3.1)\", \"scipy\", \"sentencepiece (>=0.1.91,!=0.1.92)\", \"tensorboard\", \"torch (>=1.4)\", \"torchvision\", \"transformers (>=4.41.2)\", \"urllib3 (<=2.0.0)\"]\n docs = [\"hf-doc-builder (>=0.3.0)\"]\n flax = [\"flax (>=0.4.1)\", \"jax (>=0.4.1)\", \"jaxlib (>=0.4.1)\"]\n quality = [\"hf-doc-builder (>=0.3.0)\", \"isort (>=5.5.4)\", \"ruff (==0.1.5)\", \"urllib3 (<=2.0.0)\"]\n test = [\"GitPython (<3.1.19)\", \"Jinja2\", \"compel (==0.1.8)\", \"datasets\", \"invisible-watermark (>=0.2.0)\", \"k-diffusion (>=0.0.12)\", \"librosa\", \"parameterized\", \"pytest\", \"pytest-timeout\", \"pytest-xdist\", \"requests-mock (==1.10.0)\", \"safetensors (>=0.3.1)\", \"scipy\", \"sentencepiece (>=0.1.91,!=0.1.92)\", \"torchvision\", \"transformers (>=4.41.2)\"]\n-torch = [\"accelerate (>=0.31.0)\", \"torch (>=1.4,<2.5.0)\"]\n+torch = [\"accelerate (>=0.31.0)\", \"torch (>=1.4)\"]\n training = [\"Jinja2\", \"accelerate (>=0.31.0)\", \"datasets\", \"peft (>=0.6.0)\", \"protobuf (>=3.20.3,<4)\", \"tensorboard\"]\n \n [[package]]\n@@ -1939,13 +1926,13 @@ pydantic = \">=2.9.1\"\n \n [[package]]\n name = \"flatbuffers\"\n-version = \"24.3.25\"\n+version = \"24.12.23\"\n description = \"The FlatBuffers serialization format for Python\"\n optional = true\n python-versions = \"*\"\n files = [\n-    {file = \"flatbuffers-24.3.25-py2.py3-none-any.whl\", hash = \"sha256:8dbdec58f935f3765e4f7f3cf635ac3a77f83568138d6a2311f524ec96364812\"},\n-    {file = \"flatbuffers-24.3.25.tar.gz\", hash = \"sha256:de2ec5b203f21441716617f38443e0a8ebf3d25bf0d9c0bb0ce68fa00ad546a4\"},\n+    {file = \"flatbuffers-24.12.23-py2.py3-none-any.whl\", hash = \"sha256:c418e0d48890f4142b92fd3e343e73a48f194e1f80075ddcc5793779b3585444\"},\n+    {file = \"flatbuffers-24.12.23.tar.gz\", hash = \"sha256:2910b0bc6ae9b6db78dd2b18d0b7a0709ba240fb5585f286a3a2b30785c22dac\"},\n ]\n \n [[package]]\n@@ -3365,125 +3352,91 @@ files = [\n \n [[package]]\n name = \"kiwisolver\"\n-version = \"1.4.7\"\n+version = \"1.4.8\"\n description = \"A fast implementation of the Cassowary constraint solver\"\n optional = false\n-python-versions = \">=3.8\"\n+python-versions = \">=3.10\"\n files = [\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:8a9c83f75223d5e48b0bc9cb1bf2776cf01563e00ade8775ffe13b0b6e1af3a6\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:58370b1ffbd35407444d57057b57da5d6549d2d854fa30249771775c63b5fe17\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:aa0abdf853e09aff551db11fce173e2177d00786c688203f52c87ad7fcd91ef9\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:8d53103597a252fb3ab8b5845af04c7a26d5e7ea8122303dd7a021176a87e8b9\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:88f17c5ffa8e9462fb79f62746428dd57b46eb931698e42e990ad63103f35e6c\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:88a9ca9c710d598fd75ee5de59d5bda2684d9db36a9f50b6125eaea3969c2599\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f4d742cb7af1c28303a51b7a27aaee540e71bb8e24f68c736f6f2ffc82f2bf05\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e28c7fea2196bf4c2f8d46a0415c77a1c480cc0724722f23d7410ffe9842c407\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:e968b84db54f9d42046cf154e02911e39c0435c9801681e3fc9ce8a3c4130278\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:0c18ec74c0472de033e1bebb2911c3c310eef5649133dd0bedf2a169a1b269e5\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:8f0ea6da6d393d8b2e187e6a5e3fb81f5862010a40c3945e2c6d12ae45cfb2ad\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:f106407dda69ae456dd1227966bf445b157ccc80ba0dff3802bb63f30b74e895\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:84ec80df401cfee1457063732d90022f93951944b5b58975d34ab56bb150dfb3\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-win32.whl\", hash = \"sha256:71bb308552200fb2c195e35ef05de12f0c878c07fc91c270eb3d6e41698c3bcc\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-win_amd64.whl\", hash = \"sha256:44756f9fd339de0fb6ee4f8c1696cfd19b2422e0d70b4cefc1cc7f1f64045a8c\"},\n-    {file = \"kiwisolver-1.4.7-cp310-cp310-win_arm64.whl\", hash = \"sha256:78a42513018c41c2ffd262eb676442315cbfe3c44eed82385c2ed043bc63210a\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:d2b0e12a42fb4e72d509fc994713d099cbb15ebf1103545e8a45f14da2dfca54\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:2a8781ac3edc42ea4b90bc23e7d37b665d89423818e26eb6df90698aa2287c95\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:46707a10836894b559e04b0fd143e343945c97fd170d69a2d26d640b4e297935\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ef97b8df011141c9b0f6caf23b29379f87dd13183c978a30a3c546d2c47314cb\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3ab58c12a2cd0fc769089e6d38466c46d7f76aced0a1f54c77652446733d2d02\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:803b8e1459341c1bb56d1c5c010406d5edec8a0713a0945851290a7930679b51\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f9a9e8a507420fe35992ee9ecb302dab68550dedc0da9e2880dd88071c5fb052\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:18077b53dc3bb490e330669a99920c5e6a496889ae8c63b58fbc57c3d7f33a18\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:6af936f79086a89b3680a280c47ea90b4df7047b5bdf3aa5c524bbedddb9e545\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:3abc5b19d24af4b77d1598a585b8a719beb8569a71568b66f4ebe1fb0449460b\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:933d4de052939d90afbe6e9d5273ae05fb836cc86c15b686edd4b3560cc0ee36\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:65e720d2ab2b53f1f72fb5da5fb477455905ce2c88aaa671ff0a447c2c80e8e3\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:3bf1ed55088f214ba6427484c59553123fdd9b218a42bbc8c6496d6754b1e523\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-win32.whl\", hash = \"sha256:4c00336b9dd5ad96d0a558fd18a8b6f711b7449acce4c157e7343ba92dd0cf3d\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-win_amd64.whl\", hash = \"sha256:929e294c1ac1e9f615c62a4e4313ca1823ba37326c164ec720a803287c4c499b\"},\n-    {file = \"kiwisolver-1.4.7-cp311-cp311-win_arm64.whl\", hash = \"sha256:e33e8fbd440c917106b237ef1a2f1449dfbb9b6f6e1ce17c94cd6a1e0d438376\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:5360cc32706dab3931f738d3079652d20982511f7c0ac5711483e6eab08efff2\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:942216596dc64ddb25adb215c3c783215b23626f8d84e8eff8d6d45c3f29f75a\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:48b571ecd8bae15702e4f22d3ff6a0f13e54d3d00cd25216d5e7f658242065ee\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ad42ba922c67c5f219097b28fae965e10045ddf145d2928bfac2eb2e17673640\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:612a10bdae23404a72941a0fc8fa2660c6ea1217c4ce0dbcab8a8f6543ea9e7f\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9e838bba3a3bac0fe06d849d29772eb1afb9745a59710762e4ba3f4cb8424483\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:22f499f6157236c19f4bbbd472fa55b063db77a16cd74d49afe28992dff8c258\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:693902d433cf585133699972b6d7c42a8b9f8f826ebcaf0132ff55200afc599e\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:4e77f2126c3e0b0d055f44513ed349038ac180371ed9b52fe96a32aa071a5107\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:657a05857bda581c3656bfc3b20e353c232e9193eb167766ad2dc58b56504948\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4bfa75a048c056a411f9705856abfc872558e33c055d80af6a380e3658766038\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:34ea1de54beef1c104422d210c47c7d2a4999bdecf42c7b5718fbe59a4cac383\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:90da3b5f694b85231cf93586dad5e90e2d71b9428f9aad96952c99055582f520\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-win32.whl\", hash = \"sha256:18e0cca3e008e17fe9b164b55735a325140a5a35faad8de92dd80265cd5eb80b\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-win_amd64.whl\", hash = \"sha256:58cb20602b18f86f83a5c87d3ee1c766a79c0d452f8def86d925e6c60fbf7bfb\"},\n-    {file = \"kiwisolver-1.4.7-cp312-cp312-win_arm64.whl\", hash = \"sha256:f5a8b53bdc0b3961f8b6125e198617c40aeed638b387913bf1ce78afb1b0be2a\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:2e6039dcbe79a8e0f044f1c39db1986a1b8071051efba3ee4d74f5b365f5226e\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:a1ecf0ac1c518487d9d23b1cd7139a6a65bc460cd101ab01f1be82ecf09794b6\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:7ab9ccab2b5bd5702ab0803676a580fffa2aa178c2badc5557a84cc943fcf750\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f816dd2277f8d63d79f9c8473a79fe54047bc0467754962840782c575522224d\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cf8bcc23ceb5a1b624572a1623b9f79d2c3b337c8c455405ef231933a10da379\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:dea0bf229319828467d7fca8c7c189780aa9ff679c94539eed7532ebe33ed37c\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7c06a4c7cf15ec739ce0e5971b26c93638730090add60e183530d70848ebdd34\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:913983ad2deb14e66d83c28b632fd35ba2b825031f2fa4ca29675e665dfecbe1\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:5337ec7809bcd0f424c6b705ecf97941c46279cf5ed92311782c7c9c2026f07f\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:4c26ed10c4f6fa6ddb329a5120ba3b6db349ca192ae211e882970bfc9d91420b\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c619b101e6de2222c1fcb0531e1b17bbffbe54294bfba43ea0d411d428618c27\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:073a36c8273647592ea332e816e75ef8da5c303236ec0167196793eb1e34657a\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:3ce6b2b0231bda412463e152fc18335ba32faf4e8c23a754ad50ffa70e4091ee\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-win32.whl\", hash = \"sha256:f4c9aee212bc89d4e13f58be11a56cc8036cabad119259d12ace14b34476fd07\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-win_amd64.whl\", hash = \"sha256:8a3ec5aa8e38fc4c8af308917ce12c536f1c88452ce554027e55b22cbbfbff76\"},\n-    {file = \"kiwisolver-1.4.7-cp313-cp313-win_arm64.whl\", hash = \"sha256:76c8094ac20ec259471ac53e774623eb62e6e1f56cd8690c67ce6ce4fcb05650\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:5d5abf8f8ec1f4e22882273c423e16cae834c36856cac348cfbfa68e01c40f3a\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:aeb3531b196ef6f11776c21674dba836aeea9d5bd1cf630f869e3d90b16cfade\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:b7d755065e4e866a8086c9bdada157133ff466476a2ad7861828e17b6026e22c\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:08471d4d86cbaec61f86b217dd938a83d85e03785f51121e791a6e6689a3be95\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7bbfcb7165ce3d54a3dfbe731e470f65739c4c1f85bb1018ee912bae139e263b\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5d34eb8494bea691a1a450141ebb5385e4b69d38bb8403b5146ad279f4b30fa3\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:9242795d174daa40105c1d86aba618e8eab7bf96ba8c3ee614da8302a9f95503\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl\", hash = \"sha256:a0f64a48bb81af7450e641e3fe0b0394d7381e342805479178b3d335d60ca7cf\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:8e045731a5416357638d1700927529e2b8ab304811671f665b225f8bf8d8f933\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:4322872d5772cae7369f8351da1edf255a604ea7087fe295411397d0cfd9655e\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:e1631290ee9271dffe3062d2634c3ecac02c83890ada077d225e081aca8aab89\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:edcfc407e4eb17e037bca59be0e85a2031a2ac87e4fed26d3e9df88b4165f92d\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:4d05d81ecb47d11e7f8932bd8b61b720bf0b41199358f3f5e36d38e28f0532c5\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-win32.whl\", hash = \"sha256:b38ac83d5f04b15e515fd86f312479d950d05ce2368d5413d46c088dda7de90a\"},\n-    {file = \"kiwisolver-1.4.7-cp38-cp38-win_amd64.whl\", hash = \"sha256:d83db7cde68459fc803052a55ace60bea2bae361fc3b7a6d5da07e11954e4b09\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:3f9362ecfca44c863569d3d3c033dbe8ba452ff8eed6f6b5806382741a1334bd\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:e8df2eb9b2bac43ef8b082e06f750350fbbaf2887534a5be97f6cf07b19d9583\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:f32d6edbc638cde7652bd690c3e728b25332acbadd7cad670cc4a02558d9c417\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:e2e6c39bd7b9372b0be21456caab138e8e69cc0fc1190a9dfa92bd45a1e6e904\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:dda56c24d869b1193fcc763f1284b9126550eaf84b88bbc7256e15028f19188a\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:79849239c39b5e1fd906556c474d9b0439ea6792b637511f3fe3a41158d89ca8\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5e3bc157fed2a4c02ec468de4ecd12a6e22818d4f09cde2c31ee3226ffbefab2\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3da53da805b71e41053dc670f9a820d1157aae77b6b944e08024d17bcd51ef88\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:8705f17dfeb43139a692298cb6637ee2e59c0194538153e83e9ee0c75c2eddde\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:82a5c2f4b87c26bb1a0ef3d16b5c4753434633b83d365cc0ddf2770c93829e3c\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ce8be0466f4c0d585cdb6c1e2ed07232221df101a4c6f28821d2aa754ca2d9e2\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:409afdfe1e2e90e6ee7fc896f3df9a7fec8e793e58bfa0d052c8a82f99c37abb\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:5b9c3f4ee0b9a439d2415012bd1b1cc2df59e4d6a9939f4d669241d30b414327\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-win32.whl\", hash = \"sha256:a79ae34384df2b615eefca647a2873842ac3b596418032bef9a7283675962644\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-win_amd64.whl\", hash = \"sha256:cf0438b42121a66a3a667de17e779330fc0f20b0d97d59d2f2121e182b0505e4\"},\n-    {file = \"kiwisolver-1.4.7-cp39-cp39-win_arm64.whl\", hash = \"sha256:764202cc7e70f767dab49e8df52c7455e8de0df5d858fa801a11aa0d882ccf3f\"},\n-    {file = \"kiwisolver-1.4.7-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:94252291e3fe68001b1dd747b4c0b3be12582839b95ad4d1b641924d68fd4643\"},\n-    {file = \"kiwisolver-1.4.7-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:5b7dfa3b546da08a9f622bb6becdb14b3e24aaa30adba66749d38f3cc7ea9706\"},\n-    {file = \"kiwisolver-1.4.7-pp310-pypy310_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:bd3de6481f4ed8b734da5df134cd5a6a64fe32124fe83dde1e5b5f29fe30b1e6\"},\n-    {file = \"kiwisolver-1.4.7-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a91b5f9f1205845d488c928e8570dcb62b893372f63b8b6e98b863ebd2368ff2\"},\n-    {file = \"kiwisolver-1.4.7-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:40fa14dbd66b8b8f470d5fc79c089a66185619d31645f9b0773b88b19f7223c4\"},\n-    {file = \"kiwisolver-1.4.7-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:eb542fe7933aa09d8d8f9d9097ef37532a7df6497819d16efe4359890a2f417a\"},\n-    {file = \"kiwisolver-1.4.7-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:bfa1acfa0c54932d5607e19a2c24646fb4c1ae2694437789129cf099789a3b00\"},\n-    {file = \"kiwisolver-1.4.7-pp38-pypy38_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:eee3ea935c3d227d49b4eb85660ff631556841f6e567f0f7bda972df6c2c9935\"},\n-    {file = \"kiwisolver-1.4.7-pp38-pypy38_pp73-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:f3160309af4396e0ed04db259c3ccbfdc3621b5559b5453075e5de555e1f3a1b\"},\n-    {file = \"kiwisolver-1.4.7-pp38-pypy38_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:a17f6a29cf8935e587cc8a4dbfc8368c55edc645283db0ce9801016f83526c2d\"},\n-    {file = \"kiwisolver-1.4.7-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:10849fb2c1ecbfae45a693c070e0320a91b35dd4bcf58172c023b994283a124d\"},\n-    {file = \"kiwisolver-1.4.7-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:ac542bf38a8a4be2dc6b15248d36315ccc65f0743f7b1a76688ffb6b5129a5c2\"},\n-    {file = \"kiwisolver-1.4.7-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:8b01aac285f91ca889c800042c35ad3b239e704b150cfd3382adfc9dcc780e39\"},\n-    {file = \"kiwisolver-1.4.7-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:48be928f59a1f5c8207154f935334d374e79f2b5d212826307d072595ad76a2e\"},\n-    {file = \"kiwisolver-1.4.7-pp39-pypy39_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f37cfe618a117e50d8c240555331160d73d0411422b59b5ee217843d7b693608\"},\n-    {file = \"kiwisolver-1.4.7-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:599b5c873c63a1f6ed7eead644a8a380cfbdf5db91dcb6f85707aaab213b1674\"},\n-    {file = \"kiwisolver-1.4.7-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:801fa7802e5cfabe3ab0c81a34c323a319b097dfb5004be950482d882f3d7225\"},\n-    {file = \"kiwisolver-1.4.7-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:0c6c43471bc764fad4bc99c5c2d6d16a676b1abf844ca7c8702bdae92df01ee0\"},\n-    {file = \"kiwisolver-1.4.7.tar.gz\", hash = \"sha256:9893ff81bd7107f7b685d3017cc6583daadb4fc26e4a888350df530e41980a60\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:88c6f252f6816a73b1f8c904f7bbe02fd67c09a69f7cb8a0eecdbf5ce78e63db\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:c72941acb7b67138f35b879bbe85be0f6c6a70cab78fe3ef6db9c024d9223e5b\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:ce2cf1e5688edcb727fdf7cd1bbd0b6416758996826a8be1d958f91880d0809d\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl\", hash = \"sha256:c8bf637892dc6e6aad2bc6d4d69d08764166e5e3f69d469e55427b6ac001b19d\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:034d2c891f76bd3edbdb3ea11140d8510dca675443da7304205a2eaa45d8334c\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d47b28d1dfe0793d5e96bce90835e17edf9a499b53969b03c6c47ea5985844c3\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:eb158fe28ca0c29f2260cca8c43005329ad58452c36f0edf298204de32a9a3ed\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d5536185fce131780ebd809f8e623bf4030ce1b161353166c49a3c74c287897f\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:369b75d40abedc1da2c1f4de13f3482cb99e3237b38726710f4a793432b1c5ff\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:641f2ddf9358c80faa22e22eb4c9f54bd3f0e442e038728f500e3b978d00aa7d\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d561d2d8883e0819445cfe58d7ddd673e4015c3c57261d7bdcd3710d0d14005c\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:1732e065704b47c9afca7ffa272f845300a4eb959276bf6970dc07265e73b605\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:bcb1ebc3547619c3b58a39e2448af089ea2ef44b37988caf432447374941574e\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-win_amd64.whl\", hash = \"sha256:89c107041f7b27844179ea9c85d6da275aa55ecf28413e87624d033cf1f6b751\"},\n+    {file = \"kiwisolver-1.4.8-cp310-cp310-win_arm64.whl\", hash = \"sha256:b5773efa2be9eb9fcf5415ea3ab70fc785d598729fd6057bea38d539ead28271\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:a4d3601908c560bdf880f07d94f31d734afd1bb71e96585cace0e38ef44c6d84\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:856b269c4d28a5c0d5e6c1955ec36ebfd1651ac00e1ce0afa3e28da95293b561\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c2b9a96e0f326205af81a15718a9073328df1173a2619a68553decb7097fd5d7\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c5020c83e8553f770cb3b5fc13faac40f17e0b205bd237aebd21d53d733adb03\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dace81d28c787956bfbfbbfd72fdcef014f37d9b48830829e488fdb32b49d954\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:11e1022b524bd48ae56c9b4f9296bce77e15a2e42a502cceba602f804b32bb79\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3b9b4d2892fefc886f30301cdd80debd8bb01ecdf165a449eb6e78f79f0fabd6\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3a96c0e790ee875d65e340ab383700e2b4891677b7fcd30a699146f9384a2bb0\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:23454ff084b07ac54ca8be535f4174170c1094a4cff78fbae4f73a4bcc0d4dab\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:87b287251ad6488e95b4f0b4a79a6d04d3ea35fde6340eb38fbd1ca9cd35bbbc\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b21dbe165081142b1232a240fc6383fd32cdd877ca6cc89eab93e5f5883e1c25\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:768cade2c2df13db52475bd28d3a3fac8c9eff04b0e9e2fda0f3760f20b3f7fc\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:d47cfb2650f0e103d4bf68b0b5804c68da97272c84bb12850d877a95c056bd67\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-win_amd64.whl\", hash = \"sha256:ed33ca2002a779a2e20eeb06aea7721b6e47f2d4b8a8ece979d8ba9e2a167e34\"},\n+    {file = \"kiwisolver-1.4.8-cp311-cp311-win_arm64.whl\", hash = \"sha256:16523b40aab60426ffdebe33ac374457cf62863e330a90a0383639ce14bf44b2\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:d6af5e8815fd02997cb6ad9bbed0ee1e60014438ee1a5c2444c96f87b8843502\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:bade438f86e21d91e0cf5dd7c0ed00cda0f77c8c1616bd83f9fc157fa6760d31\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:b83dc6769ddbc57613280118fb4ce3cd08899cc3369f7d0e0fab518a7cf37fdb\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:111793b232842991be367ed828076b03d96202c19221b5ebab421ce8bcad016f\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:257af1622860e51b1a9d0ce387bf5c2c4f36a90594cb9514f55b074bcc787cfc\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:69b5637c3f316cab1ec1c9a12b8c5f4750a4c4b71af9157645bf32830e39c03a\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:782bb86f245ec18009890e7cb8d13a5ef54dcf2ebe18ed65f795e635a96a1c6a\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cc978a80a0db3a66d25767b03688f1147a69e6237175c0f4ffffaaedf744055a\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:36dbbfd34838500a31f52c9786990d00150860e46cd5041386f217101350f0d3\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:eaa973f1e05131de5ff3569bbba7f5fd07ea0595d3870ed4a526d486fe57fa1b\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:a66f60f8d0c87ab7f59b6fb80e642ebb29fec354a4dfad687ca4092ae69d04f4\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:858416b7fb777a53f0c59ca08190ce24e9abbd3cffa18886a5781b8e3e26f65d\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:085940635c62697391baafaaeabdf3dd7a6c3643577dde337f4d66eba021b2b8\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-win_amd64.whl\", hash = \"sha256:01c3d31902c7db5fb6182832713d3b4122ad9317c2c5877d0539227d96bb2e50\"},\n+    {file = \"kiwisolver-1.4.8-cp312-cp312-win_arm64.whl\", hash = \"sha256:a3c44cb68861de93f0c4a8175fbaa691f0aa22550c331fefef02b618a9dcb476\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:1c8ceb754339793c24aee1c9fb2485b5b1f5bb1c2c214ff13368431e51fc9a09\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:54a62808ac74b5e55a04a408cda6156f986cefbcf0ada13572696b507cc92fa1\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:68269e60ee4929893aad82666821aaacbd455284124817af45c11e50a4b42e3c\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:34d142fba9c464bc3bbfeff15c96eab0e7310343d6aefb62a79d51421fcc5f1b\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3ddc373e0eef45b59197de815b1b28ef89ae3955e7722cc9710fb91cd77b7f47\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:77e6f57a20b9bd4e1e2cedda4d0b986ebd0216236f0106e55c28aea3d3d69b16\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:08e77738ed7538f036cd1170cbed942ef749137b1311fa2bbe2a7fda2f6bf3cc\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a5ce1e481a74b44dd5e92ff03ea0cb371ae7a0268318e202be06c8f04f4f1246\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:fc2ace710ba7c1dfd1a3b42530b62b9ceed115f19a1656adefce7b1782a37794\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:3452046c37c7692bd52b0e752b87954ef86ee2224e624ef7ce6cb21e8c41cc1b\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7e9a60b50fe8b2ec6f448fe8d81b07e40141bfced7f896309df271a0b92f80f3\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:918139571133f366e8362fa4a297aeba86c7816b7ecf0bc79168080e2bd79957\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e063ef9f89885a1d68dd8b2e18f5ead48653176d10a0e324e3b0030e3a69adeb\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-win_amd64.whl\", hash = \"sha256:a17b7c4f5b2c51bb68ed379defd608a03954a1845dfed7cc0117f1cc8a9b7fd2\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313-win_arm64.whl\", hash = \"sha256:3cd3bc628b25f74aedc6d374d5babf0166a92ff1317f46267f12d2ed54bc1d30\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:370fd2df41660ed4e26b8c9d6bbcad668fbe2560462cba151a721d49e5b6628c\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:84a2f830d42707de1d191b9490ac186bf7997a9495d4e9072210a1296345f7dc\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:7a3ad337add5148cf51ce0b55642dc551c0b9d6248458a757f98796ca7348712\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7506488470f41169b86d8c9aeff587293f530a23a23a49d6bc64dab66bedc71e\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2f0121b07b356a22fb0414cec4666bbe36fd6d0d759db3d37228f496ed67c880\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d6d6bd87df62c27d4185de7c511c6248040afae67028a8a22012b010bc7ad062\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:291331973c64bb9cce50bbe871fb2e675c4331dab4f31abe89f175ad7679a4d7\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:893f5525bb92d3d735878ec00f781b2de998333659507d29ea4466208df37bed\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:b47a465040146981dc9db8647981b8cb96366fbc8d452b031e4f8fdffec3f26d\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:99cea8b9dd34ff80c521aef46a1dddb0dcc0283cf18bde6d756f1e6f31772165\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-musllinux_1_2_ppc64le.whl\", hash = \"sha256:151dffc4865e5fe6dafce5480fab84f950d14566c480c08a53c663a0020504b6\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-musllinux_1_2_s390x.whl\", hash = \"sha256:577facaa411c10421314598b50413aa1ebcf5126f704f1e5d72d7e4e9f020d90\"},\n+    {file = \"kiwisolver-1.4.8-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:be4816dc51c8a471749d664161b434912eee82f2ea66bd7628bd14583a833e85\"},\n+    {file = \"kiwisolver-1.4.8-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:e7a019419b7b510f0f7c9dceff8c5eae2392037eae483a7f9162625233802b0a\"},\n+    {file = \"kiwisolver-1.4.8-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:286b18e86682fd2217a48fc6be6b0f20c1d0ed10958d8dc53453ad58d7be0bf8\"},\n+    {file = \"kiwisolver-1.4.8-pp310-pypy310_pp73-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4191ee8dfd0be1c3666ccbac178c5a05d5f8d689bbe3fc92f3c4abec817f8fe0\"},\n+    {file = \"kiwisolver-1.4.8-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7cd2785b9391f2873ad46088ed7599a6a71e762e1ea33e87514b1a441ed1da1c\"},\n+    {file = \"kiwisolver-1.4.8-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c07b29089b7ba090b6f1a669f1411f27221c3662b3a1b7010e67b59bb5a6f10b\"},\n+    {file = \"kiwisolver-1.4.8-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:65ea09a5a3faadd59c2ce96dc7bf0f364986a315949dc6374f04396b0d60e09b\"},\n+    {file = \"kiwisolver-1.4.8.tar.gz\", hash = \"sha256:23d5f023bdc8c7e54eb65f03ca5d5bb25b601eac4d7f1a042888a1f45237987e\"},\n ]\n \n [[package]]\n@@ -3613,15 +3566,30 @@ dev = [\"black\", \"flake8\", \"isort\", \"pre-commit\", \"pyproject-flake8\"]\n doc = [\"myst-parser\", \"sphinx\", \"sphinx-book-theme\"]\n test = [\"coverage\", \"pytest\", \"pytest-cov\"]\n \n+[[package]]\n+name = \"linkup-sdk\"\n+version = \"0.2.1\"\n+description = \"A Python Client SDK for the Linkup API\"\n+optional = true\n+python-versions = \">=3.9\"\n+files = [\n+    {file = \"linkup_sdk-0.2.1-py3-none-any.whl\", hash = \"sha256:bf50c88e659c6d9291cbd5e3e99b6a20a14c9b1eb2dc7acca763a3ae6f84b26e\"},\n+    {file = \"linkup_sdk-0.2.1.tar.gz\", hash = \"sha256:b00ba7cb0117358e975d50196501ac49b247509fd236121e40abe40e6a2a3e9a\"},\n+]\n+\n+[package.dependencies]\n+httpx = \"*\"\n+pydantic = \"*\"\n+\n [[package]]\n name = \"litellm\"\n-version = \"1.55.9\"\n+version = \"1.56.4\"\n description = \"Library to easily interface with LLM API providers\"\n optional = true\n python-versions = \"!=2.7.*,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,!=3.7.*,>=3.8\"\n files = [\n-    {file = \"litellm-1.55.9-py3-none-any.whl\", hash = \"sha256:5ea931bee64535090d49a54e6b9842883fa6cabd6849c3c9674c12b166145da0\"},\n-    {file = \"litellm-1.55.9.tar.gz\", hash = \"sha256:861be3447552db32da05abff8af4945d1dd84df2f4b10985f97120dca5c07a42\"},\n+    {file = \"litellm-1.56.4-py3-none-any.whl\", hash = \"sha256:699a8db46f7de045069a77c435e13244b5fdaf5df1c8cb5e6ad675ef7e104ccd\"},\n+    {file = \"litellm-1.56.4.tar.gz\", hash = \"sha256:2808ca21878d200f7676a3d11e5bf2b5e3349ae504628f279cd7297c7dbd2038\"},\n ]\n \n [package.dependencies]\n@@ -3634,13 +3602,12 @@ jsonschema = \">=4.22.0,<5.0.0\"\n openai = \">=1.55.3\"\n pydantic = \">=2.0.0,<3.0.0\"\n python-dotenv = \">=0.2.0\"\n-requests = \">=2.31.0,<3.0.0\"\n tiktoken = \">=0.7.0\"\n tokenizers = \"*\"\n \n [package.extras]\n extra-proxy = [\"azure-identity (>=1.15.0,<2.0.0)\", \"azure-keyvault-secrets (>=4.8.0,<5.0.0)\", \"google-cloud-kms (>=2.21.3,<3.0.0)\", \"prisma (==0.11.0)\", \"resend (>=0.8.0,<0.9.0)\"]\n-proxy = [\"PyJWT (>=2.8.0,<3.0.0)\", \"apscheduler (>=3.10.4,<4.0.0)\", \"backoff\", \"cryptography (>=42.0.5,<43.0.0)\", \"fastapi (>=0.111.0,<0.112.0)\", \"fastapi-sso (>=0.10.0,<0.11.0)\", \"gunicorn (>=22.0.0,<23.0.0)\", \"orjson (>=3.9.7,<4.0.0)\", \"pynacl (>=1.5.0,<2.0.0)\", \"python-multipart (>=0.0.9,<0.0.10)\", \"pyyaml (>=6.0.1,<7.0.0)\", \"rq\", \"uvicorn (>=0.22.0,<0.23.0)\"]\n+proxy = [\"PyJWT (>=2.8.0,<3.0.0)\", \"apscheduler (>=3.10.4,<4.0.0)\", \"backoff\", \"cryptography (>=43.0.1,<44.0.0)\", \"fastapi (>=0.115.5,<0.116.0)\", \"fastapi-sso (>=0.16.0,<0.17.0)\", \"gunicorn (>=22.0.0,<23.0.0)\", \"orjson (>=3.9.7,<4.0.0)\", \"pynacl (>=1.5.0,<2.0.0)\", \"python-multipart (>=0.0.18,<0.0.19)\", \"pyyaml (>=6.0.1,<7.0.0)\", \"rq\", \"uvicorn (>=0.22.0,<0.23.0)\"]\n \n [[package]]\n name = \"lxml\"\n@@ -4343,17 +4310,17 @@ testing-docutils = [\"pygments\", \"pytest (>=8,<9)\", \"pytest-param-files (>=0.6.0,\n \n [[package]]\n name = \"narwhals\"\n-version = \"1.19.0\"\n+version = \"1.19.1\"\n description = \"Extremely lightweight compatibility layer between dataframe libraries\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"narwhals-1.19.0-py3-none-any.whl\", hash = \"sha256:517eca140103dbf61e4513fe462885a06bc21b565521a5ac0b79a7e31f152efe\"},\n-    {file = \"narwhals-1.19.0.tar.gz\", hash = \"sha256:a1a03bf922548ed1da5426acc954327a94c02c3a08558b65a0937dbd3b77fb48\"},\n+    {file = \"narwhals-1.19.1-py3-none-any.whl\", hash = \"sha256:72476dcc95f1d3f2c0c1f047cdd4879346b2871fe13d1223025466d8a3dcaea4\"},\n+    {file = \"narwhals-1.19.1.tar.gz\", hash = \"sha256:e597e7ed9da42ffb2c80b21e174817b27592a8570edea8c46c90a726e3b796af\"},\n ]\n \n [package.extras]\n-cudf = [\"cudf (>=23.08.00)\"]\n+cudf = [\"cudf (>=24.12.0)\"]\n dask = [\"dask[dataframe] (>=2024.7)\"]\n dev = [\"covdefaults\", \"dask[dataframe]\", \"duckdb\", \"hypothesis\", \"hypothesis[numpy]\", \"pandas\", \"polars\", \"pyarrow\", \"pyarrow-stubs\", \"pyspark\", \"pytest\", \"pytest-cov\", \"pytest-env\", \"pytest-randomly\", \"scikit-learn\", \"tqdm\", \"typing-extensions\"]\n docs = [\"black\", \"duckdb\", \"jinja2\", \"markdown-exec[ansi]\", \"mkdocs\", \"mkdocs-autorefs\", \"mkdocs-material\", \"mkdocstrings[python]\", \"pandas\", \"polars (>=1.0.0)\", \"pyarrow\"]\n@@ -4445,13 +4412,13 @@ test = [\"pep440\", \"pre-commit\", \"pytest\", \"testpath\"]\n \n [[package]]\n name = \"nbsphinx\"\n-version = \"0.9.5\"\n+version = \"0.9.6\"\n description = \"Jupyter Notebook Tools for Sphinx\"\n optional = false\n python-versions = \">=3.6\"\n files = [\n-    {file = \"nbsphinx-0.9.5-py3-none-any.whl\", hash = \"sha256:d82f71084425db1f48e72515f15c25b4de8652ceaab513ee462ac05f1b8eae0a\"},\n-    {file = \"nbsphinx-0.9.5.tar.gz\", hash = \"sha256:736916e7b0dab28fc904f4a9ae3b53a9a50c29fccc6329c052fcc7485abcf2b7\"},\n+    {file = \"nbsphinx-0.9.6-py3-none-any.whl\", hash = \"sha256:336b0b557945a7678ec7449b16449f854bc852a435bb53b8a72e6b5dc740d992\"},\n+    {file = \"nbsphinx-0.9.6.tar.gz\", hash = \"sha256:c2b28a2d702f1159a95b843831798e86e60a17fc647b9bff9ba1585355de54e3\"},\n ]\n \n [package.dependencies]\n@@ -5960,20 +5927,20 @@ virtualenv = \">=20.10.0\"\n \n [[package]]\n name = \"primp\"\n-version = \"0.9.1\"\n+version = \"0.9.2\"\n description = \"HTTP client that can impersonate web browsers, mimicking their headers and `TLS/JA3/JA4/HTTP2` fingerprints\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"primp-0.9.1-cp38-abi3-macosx_10_12_x86_64.whl\", hash = \"sha256:4204cd36454168c2fb50cfbc124eb08abc8dd54a70be31522aa0f83aec1c1df9\"},\n-    {file = \"primp-0.9.1-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:bdc7c77edd51e3da675f58a7c6c1e2d6c80a72bc519529143a27f45e24de7759\"},\n-    {file = \"primp-0.9.1-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:eb93dd24f1b96ebf94501a4e5d2ee74c53b7a24fd25fc72806453cdd62116094\"},\n-    {file = \"primp-0.9.1-cp38-abi3-manylinux_2_34_aarch64.whl\", hash = \"sha256:035e134b33195e6a4b8e46ad56c929543ab758c3f373d5277017eb53ba60101d\"},\n-    {file = \"primp-0.9.1-cp38-abi3-manylinux_2_34_armv7l.whl\", hash = \"sha256:d38c29116c87d71951214fbd06b9f61c55a8ab0c62b7ea926565f8de7fbcdd87\"},\n-    {file = \"primp-0.9.1-cp38-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:9eaa20ff6c0157aa9d2925decbf09fc915b2084fc0e8c2eeba125b2f99ac2a41\"},\n-    {file = \"primp-0.9.1-cp38-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:8b4fdc844e096025fa36c175390c298b71bd9495e9a1c4986afb198557793b54\"},\n-    {file = \"primp-0.9.1-cp38-abi3-win_amd64.whl\", hash = \"sha256:36996df75c24b8fca669041d0d636e84c8d67cad86c8e94ccb80884f08b2984b\"},\n-    {file = \"primp-0.9.1.tar.gz\", hash = \"sha256:961b4791b855d30673d68891c574928a585794c5c1fd4474e5429988d74866cc\"},\n+    {file = \"primp-0.9.2-cp38-abi3-macosx_10_12_x86_64.whl\", hash = \"sha256:a3179640e633be843ed5daba5c4e3086ad91f77c7bb40a9db06326f28d56b12b\"},\n+    {file = \"primp-0.9.2-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:94a5da8ba25f74152b43bc16a7591dfb5d7d30a5827dc0a0f96a956f7d3616be\"},\n+    {file = \"primp-0.9.2-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0668c0abb6d56fc8b0a918179b1d0f68e7267c1dc632e2b683c618317e13143f\"},\n+    {file = \"primp-0.9.2-cp38-abi3-manylinux_2_34_aarch64.whl\", hash = \"sha256:a9c29a4b8eabfc28a1746d2fe93d33b9fcf2e81e642dd0e3eaecede60cc36b7d\"},\n+    {file = \"primp-0.9.2-cp38-abi3-manylinux_2_34_armv7l.whl\", hash = \"sha256:04d499308a101b06b40f5fda1bdc795db5731cd0dfbb1a8873f4acd07c085b1d\"},\n+    {file = \"primp-0.9.2-cp38-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:4cd5daf39034a0a8c96cdc0c4c306184c6f2b1b2a0b39dc3294d79ed28a6f7fe\"},\n+    {file = \"primp-0.9.2-cp38-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:8d14653434837eb431b3cf7ca006647d7a196906e48bba96bb600ba2ba70bcdc\"},\n+    {file = \"primp-0.9.2-cp38-abi3-win_amd64.whl\", hash = \"sha256:80d9f07564dc9b25b1a9676df770561418557c124fedecae84f6491a1974b61d\"},\n+    {file = \"primp-0.9.2.tar.gz\", hash = \"sha256:5b95666c25b9107eab3c05a89cb7b1748d5122e57c57b25bfc3249d525c45300\"},\n ]\n \n [package.extras]\n@@ -6571,13 +6538,13 @@ tests = [\"coverage[toml] (==5.0.4)\", \"pytest (>=6.0.0,<7.0.0)\"]\n \n [[package]]\n name = \"pymilvus\"\n-version = \"2.5.0\"\n+version = \"2.5.2\"\n description = \"Python Sdk for Milvus\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"pymilvus-2.5.0-py3-none-any.whl\", hash = \"sha256:a0e8653d8fe78019abfda79b3404ef7423f312501e8cbd7dc728051ce8732652\"},\n-    {file = \"pymilvus-2.5.0.tar.gz\", hash = \"sha256:4da14a3bd957a4921166f9355fd1f1ac5c5e4e80b46f12f64d9c9a6dcb8cb395\"},\n+    {file = \"pymilvus-2.5.2-py3-none-any.whl\", hash = \"sha256:a162a6a27c11322333dfddc37e055b3c76625032985bae2c985b7c7a0838fce7\"},\n+    {file = \"pymilvus-2.5.2.tar.gz\", hash = \"sha256:f54aa42f0ed10fa58dafa8c309e9b0add21abe8b1cda684a9560fc4960dfbe61\"},\n ]\n \n [package.dependencies]\n@@ -7186,13 +7153,13 @@ cffi = {version = \"*\", markers = \"implementation_name == \\\"pypy\\\"\"}\n \n [[package]]\n name = \"qdrant-client\"\n-version = \"1.12.1\"\n+version = \"1.12.2\"\n description = \"Client library for the Qdrant vector search engine\"\n optional = true\n-python-versions = \">=3.8\"\n+python-versions = \">=3.9\"\n files = [\n-    {file = \"qdrant_client-1.12.1-py3-none-any.whl\", hash = \"sha256:b2d17ce18e9e767471368380dd3bbc4a0e3a0e2061fedc9af3542084b48451e0\"},\n-    {file = \"qdrant_client-1.12.1.tar.gz\", hash = \"sha256:35e8e646f75b7b883b3d2d0ee4c69c5301000bba41c82aa546e985db0f1aeb72\"},\n+    {file = \"qdrant_client-1.12.2-py3-none-any.whl\", hash = \"sha256:a0ae500a46a679ff3521ba3f1f1cf3d72b57090a768cec65fc317066bcbac1e6\"},\n+    {file = \"qdrant_client-1.12.2.tar.gz\", hash = \"sha256:2777e09b3e89bb22bb490384d8b1fa8140f3915287884f18984f7031a346aba5\"},\n ]\n \n [package.dependencies]\n@@ -7200,16 +7167,16 @@ grpcio = \">=1.41.0\"\n grpcio-tools = \">=1.41.0\"\n httpx = {version = \">=0.20.0\", extras = [\"http2\"]}\n numpy = [\n-    {version = \">=1.26\", markers = \"python_version >= \\\"3.12\\\"\"},\n-    {version = \">=1.21\", markers = \"python_version >= \\\"3.8\\\" and python_version < \\\"3.12\\\"\"},\n+    {version = \">=1.26\", markers = \"python_version >= \\\"3.12\\\" and python_version < \\\"3.13\\\"\"},\n+    {version = \">=1.21\", markers = \"python_version >= \\\"3.10\\\" and python_version < \\\"3.12\\\"\"},\n ]\n portalocker = \">=2.7.0,<3.0.0\"\n pydantic = \">=1.10.8\"\n urllib3 = \">=1.26.14,<3\"\n \n [package.extras]\n-fastembed = [\"fastembed (==0.3.6)\"]\n-fastembed-gpu = [\"fastembed-gpu (==0.3.6)\"]\n+fastembed = [\"fastembed (==0.5.0)\"]\n+fastembed-gpu = [\"fastembed-gpu (==0.5.0)\"]\n \n [[package]]\n name = \"rank-bm25\"\n@@ -8292,13 +8259,13 @@ type = [\"importlib_metadata (>=7.0.2)\", \"jaraco.develop (>=7.21)\", \"mypy (>=1.12\n \n [[package]]\n name = \"sglang\"\n-version = \"0.4.0.post2\"\n+version = \"0.4.1.post1\"\n description = \"SGLang is yet another fast serving framework for large language models and vision language models.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"sglang-0.4.0.post2-py3-none-any.whl\", hash = \"sha256:67c13c603e35e81c93899cf5eeed2f2eee62950449ebf1e3d5f712b437c74e0c\"},\n-    {file = \"sglang-0.4.0.post2.tar.gz\", hash = \"sha256:32a61e1da1991d8d35deeec756dfe0392a983797be0ba32e05ef66d6b4b6d6df\"},\n+    {file = \"sglang-0.4.1.post1-py3-none-any.whl\", hash = \"sha256:84addac9ef78b1df32dc23b6fa943af68bc54a5245763a8ddb8635be7934cf9d\"},\n+    {file = \"sglang-0.4.1.post1.tar.gz\", hash = \"sha256:b2463febb5e67b812523b0f55a2c21da60bf13d393534af0e51702a3ba0eae80\"},\n ]\n \n [package.dependencies]\n@@ -8320,8 +8287,8 @@ dev-hpu = [\"sglang[all-hpu]\", \"sglang[test]\"]\n dev-xpu = [\"sglang[all-xpu]\", \"sglang[test]\"]\n litellm = [\"litellm (>=1.0.0)\"]\n openai = [\"openai (>=1.0)\", \"tiktoken\"]\n-runtime-common = [\"aiohttp\", \"decord\", \"fastapi\", \"gemlite\", \"hf_transfer\", \"huggingface_hub\", \"interegular\", \"modelscope\", \"orjson\", \"outlines (>=0.0.44,<0.1.0)\", \"packaging\", \"pillow\", \"prometheus-client (>=0.20.0)\", \"psutil\", \"pydantic\", \"python-multipart\", \"pyzmq (>=25.1.2)\", \"torchao (>=0.7.0)\", \"uvicorn\", \"uvloop\", \"xgrammar (>=0.1.6)\"]\n-srt = [\"cuda-python\", \"flashinfer (==0.1.6)\", \"sglang[runtime-common]\", \"torch\", \"vllm (>=0.6.3.post1,<=0.6.4.post1)\"]\n+runtime-common = [\"aiohttp\", \"decord\", \"fastapi\", \"hf_transfer\", \"huggingface_hub\", \"interegular\", \"modelscope\", \"orjson\", \"outlines (>=0.0.44,<0.1.0)\", \"packaging\", \"pillow\", \"prometheus-client (>=0.20.0)\", \"psutil\", \"pydantic\", \"python-multipart\", \"pyzmq (>=25.1.2)\", \"torchao (>=0.7.0)\", \"uvicorn\", \"uvloop\", \"xgrammar (>=0.1.6)\"]\n+srt = [\"cuda-python\", \"flashinfer (==0.1.6)\", \"sgl-kernel (>=0.0.2.post10)\", \"sglang[runtime-common]\", \"torch\", \"vllm (>=0.6.3.post1,<=0.6.4.post1)\"]\n srt-hip = [\"sglang[runtime-common]\", \"torch\", \"vllm (==0.6.3.dev13)\"]\n srt-hpu = [\"sglang[runtime-common]\"]\n srt-xpu = [\"sglang[runtime-common]\"]\n@@ -9279,13 +9246,13 @@ vision = [\"Pillow (>=10.0.1,<=15.0)\"]\n \n [[package]]\n name = \"trio\"\n-version = \"0.27.0\"\n+version = \"0.28.0\"\n description = \"A friendly Python library for async concurrency and I/O\"\n optional = true\n-python-versions = \">=3.8\"\n+python-versions = \">=3.9\"\n files = [\n-    {file = \"trio-0.27.0-py3-none-any.whl\", hash = \"sha256:68eabbcf8f457d925df62da780eff15ff5dc68fd6b367e2dde59f7aaf2a0b884\"},\n-    {file = \"trio-0.27.0.tar.gz\", hash = \"sha256:1dcc95ab1726b2da054afea8fd761af74bad79bd52381b84eae408e983c76831\"},\n+    {file = \"trio-0.28.0-py3-none-any.whl\", hash = \"sha256:56d58977acc1635735a96581ec70513cc781b8b6decd299c487d3be2a721cd94\"},\n+    {file = \"trio-0.28.0.tar.gz\", hash = \"sha256:4e547896fe9e8a5658e54e4c7c5fa1db748cbbbaa7c965e7d40505b928c73c05\"},\n ]\n \n [package.dependencies]\n@@ -9443,13 +9410,13 @@ urllib3 = \">=2\"\n \n [[package]]\n name = \"types-setuptools\"\n-version = \"75.6.0.20241126\"\n+version = \"75.6.0.20241223\"\n description = \"Typing stubs for setuptools\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"types_setuptools-75.6.0.20241126-py3-none-any.whl\", hash = \"sha256:aaae310a0e27033c1da8457d4d26ac673b0c8a0de7272d6d4708e263f2ea3b9b\"},\n-    {file = \"types_setuptools-75.6.0.20241126.tar.gz\", hash = \"sha256:7bf25ad4be39740e469f9268b6beddda6e088891fa5a27e985c6ce68bf62ace0\"},\n+    {file = \"types_setuptools-75.6.0.20241223-py3-none-any.whl\", hash = \"sha256:7cbfd3bf2944f88bbcdd321b86ddd878232a277be95d44c78a53585d78ebc2f6\"},\n+    {file = \"types_setuptools-75.6.0.20241223.tar.gz\", hash = \"sha256:d9478a985057ed48a994c707f548e55aababa85fe1c9b212f43ab5a1fffd3211\"},\n ]\n \n [[package]]\n@@ -10338,13 +10305,13 @@ propcache = \">=0.2.0\"\n \n [[package]]\n name = \"yt-dlp\"\n-version = \"2024.12.13\"\n+version = \"2024.12.23\"\n description = \"A feature-rich command-line audio/video downloader\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"yt_dlp-2024.12.13-py3-none-any.whl\", hash = \"sha256:5a16b7511e8500cbb13ff0babc9c6deb1e049dc1c854a51738aad2529167fcdf\"},\n-    {file = \"yt_dlp-2024.12.13.tar.gz\", hash = \"sha256:77e15afb9d460ecb7294a39bb5e39dc9f4e8a65f3a37ef4db58800b94d095511\"},\n+    {file = \"yt_dlp-2024.12.23-py3-none-any.whl\", hash = \"sha256:2fc08a5221a0379628ac4e7324c6c69a95b9fdfa7a7ca3187444b3b7451e38be\"},\n+    {file = \"yt_dlp-2024.12.23.tar.gz\", hash = \"sha256:ac0e72b5a9017ba104b4258546201a7cedc38e8bd20727e0c63b77c829b425e9\"},\n ]\n \n [package.extras]\n@@ -10377,7 +10344,7 @@ test = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\",\n type = [\"pytest-mypy\"]\n \n [extras]\n-all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"fish-audio-sdk\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"fish-audio-sdk\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"linkup-sdk\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n encoders = [\"sentence-transformers\"]\n graph-storages = [\"nebula3-python\", \"neo4j\"]\n huggingface-agent = [\"accelerate\", \"datasets\", \"diffusers\", \"opencv-python\", \"sentencepiece\", \"soundfile\", \"torch\", \"torch\", \"transformers\"]\n@@ -10387,12 +10354,12 @@ object-storages = [\"azure-storage-blob\", \"botocore\", \"google-cloud-storage\"]\n rag = [\"cohere\", \"nebula3-python\", \"neo4j\", \"pymilvus\", \"qdrant-client\", \"rank-bm25\", \"sentence-transformers\", \"unstructured\"]\n retrievers = [\"cohere\", \"rank-bm25\"]\n runtime = [\"docker\"]\n-search-tools = [\"duckduckgo-search\", \"tavily-python\", \"wikipedia\", \"wolframalpha\"]\n+search-tools = [\"duckduckgo-search\", \"linkup-sdk\", \"tavily-python\", \"wikipedia\", \"wolframalpha\"]\n test = [\"mock\", \"pytest\", \"pytest-asyncio\"]\n-tools = [\"PyMuPDF\", \"agentops\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"beautifulsoup4\", \"datacommons\", \"datacommons_pandas\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pyowm\", \"pyyaml\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"slack-bolt\", \"slack-sdk\", \"stripe\", \"textblob\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+tools = [\"PyMuPDF\", \"agentops\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"beautifulsoup4\", \"datacommons\", \"datacommons_pandas\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"linkup-sdk\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pyowm\", \"pyyaml\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"slack-bolt\", \"slack-sdk\", \"stripe\", \"textblob\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n vector-databases = [\"pymilvus\", \"qdrant-client\"]\n \n [metadata]\n lock-version = \"2.0\"\n python-versions = \">=3.10,<3.13\"\n-content-hash = \"56d1af3058f812df37cf34b43e59fbeb24cc9719f02c528cf171622ecd847375\"\n+content-hash = \"be45429126e441b443a151800aef185ff0961142c0a1224421b4c6a1fb808f70\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex ce0f6bb306..977280d0fc 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -73,6 +73,7 @@ beautifulsoup4 = { version = \"^4\", optional = true }\n docx2txt = { version = \"^0.8\", optional = true }\n PyMuPDF = { version = \"^1.22.5\", optional = true }\n wikipedia = { version = \"^1\", optional = true }\n+linkup-sdk = { version = \"^0.2.1\", optional = true }\n duckduckgo-search = { version = \"^6.3.5\", optional = true }\n newspaper3k = { version = \"^0.2.8\", optional = true }\n wolframalpha = { version = \"^5.0.0\", optional = true }\n@@ -155,6 +156,7 @@ rag = [\n search_tools = [\n     \"duckduckgo-search\",\n     \"wikipedia\",\n+    \"linkup-sdk\",\n     \"wolframalpha\",\n     \"tavily-python\",\n ]\n@@ -191,6 +193,7 @@ tools = [\n     \"functools\",\n     \"PyMuPDF\",\n     \"wikipedia\",\n+    \"linkup-sdk\",\n     \"duckduckgo-search\",\n     \"newspaper3k\",\n     \"wolframalpha\",\n@@ -282,6 +285,7 @@ all = [\n     \"discord.py\",\n     \"PyMuPDF\",\n     \"wikipedia\",\n+    \"linkup-sdk\",\n     \"duckduckgo-search\",\n     \"newspaper3k\",\n     \"wolframalpha\",\n@@ -451,6 +455,7 @@ module = [\n     \"huggingface_hub.utils._errors\",\n     \"huggingface_hub.errors\",\n     \"wikipedia\",\n+    \"linkup-sdk\",\n     \"duckduckgo_search\",\n     \"newspaper\",\n     \"wolframalpha\",\n",
        "test_patch": "diff --git a/test/toolkits/test_search_functions.py b/test/toolkits/test_search_functions.py\nindex 94be2e9e77..12c746b0dd 100644\n--- a/test/toolkits/test_search_functions.py\n+++ b/test/toolkits/test_search_functions.py\n@@ -323,3 +323,82 @@ def test_get_wolframalpha_step_by_step_solution(mock_get):\n     assert (\n         result == expected_steps\n     ), f\"Expected {expected_steps}, but got {result}\"\n+\n+\n+class MockSearchResult:\n+    def __init__(self, **kwargs):\n+        self.__dict__.update(kwargs)\n+\n+\n+def test_search_linkup_search_results(search_toolkit):\n+    with patch('linkup.LinkupClient') as mock_client:\n+        mock_instance = mock_client.return_value\n+        mock_result = MockSearchResult(\n+            title='Test Title', url='http://test.com'\n+        )\n+        mock_response = MockSearchResult(results=[mock_result])\n+        mock_instance.search.return_value = mock_response\n+\n+        with patch.dict(os.environ, {'LINKUP_API_KEY': 'test_key'}):\n+            result = search_toolkit.search_linkup(\n+                query=\"test query\", output_type=\"searchResults\"\n+            )\n+\n+        assert result == {\n+            'results': [{'title': 'Test Title', 'url': 'http://test.com'}]\n+        }\n+        mock_instance.search.assert_called_once_with(\n+            query=\"test query\",\n+            depth=\"standard\",\n+            output_type=\"searchResults\",\n+            structured_output_schema=None,\n+        )\n+\n+\n+def test_search_linkup_sourced_answer(search_toolkit):\n+    with patch('linkup.LinkupClient') as mock_client:\n+        mock_instance = mock_client.return_value\n+        mock_source = MockSearchResult(\n+            title='Source Title', url='http://source.com'\n+        )\n+        mock_response = MockSearchResult(\n+            answer='Test answer', sources=[mock_source]\n+        )\n+        mock_instance.search.return_value = mock_response\n+\n+        with patch.dict(os.environ, {'LINKUP_API_KEY': 'test_key'}):\n+            result = search_toolkit.search_linkup(\n+                query=\"test query\", output_type=\"sourcedAnswer\"\n+            )\n+\n+        assert result == {\n+            'answer': 'Test answer',\n+            'sources': [{'title': 'Source Title', 'url': 'http://source.com'}],\n+        }\n+\n+\n+def test_search_linkup_structured_output(search_toolkit):\n+    with patch('linkup.LinkupClient') as mock_client:\n+        mock_instance = mock_client.return_value\n+        mock_response = MockSearchResult(structured_data={'key': 'value'})\n+        mock_instance.search.return_value = mock_response\n+\n+        with patch.dict(os.environ, {'LINKUP_API_KEY': 'test_key'}):\n+            result = search_toolkit.search_linkup(\n+                query=\"test query\",\n+                output_type=\"structured\",\n+                structured_output_schema=\"test_schema\",\n+            )\n+\n+        assert result == {'structured_data': {'key': 'value'}}\n+\n+\n+def test_search_linkup_error(search_toolkit):\n+    with patch('linkup.LinkupClient') as mock_client:\n+        mock_instance = mock_client.return_value\n+        mock_instance.search.side_effect = Exception(\"Test error\")\n+\n+        with patch.dict(os.environ, {'LINKUP_API_KEY': 'test_key'}):\n+            result = search_toolkit.search_linkup(query=\"test query\")\n+\n+        assert result == {\"error\": \"An unexpected error occurred: Test error\"}\n",
        "problem_statement": "[Feature Request] Integrate Linkup\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nhttps://docs.linkup.so/pages/get-started/quickstart\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-12-28T08:02:15Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "test/toolkits/test_search_functions.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1363,
        "instance_id": "camel-ai__camel-1363",
        "issue_numbers": [
            "1347"
        ],
        "base_commit": "8d7aaa4b5db4e38637b3ba8d229b1bd0a29cbd61",
        "patch": "diff --git a/camel/loaders/firecrawl_reader.py b/camel/loaders/firecrawl_reader.py\nindex 27b02019e0..645df3f782 100644\n--- a/camel/loaders/firecrawl_reader.py\n+++ b/camel/loaders/firecrawl_reader.py\n@@ -77,36 +77,6 @@ def crawl(\n         except Exception as e:\n             raise RuntimeError(f\"Failed to crawl the URL: {e}\")\n \n-    def markdown_crawl(self, url: str) -> str:\n-        r\"\"\"Crawl a URL and all accessible subpages and return the content in\n-        Markdown format.\n-\n-        Args:\n-            url (str): The URL to crawl.\n-\n-        Returns:\n-            str: The content of the URL in Markdown format.\n-\n-        Raises:\n-            RuntimeError: If the crawling process fails.\n-        \"\"\"\n-\n-        try:\n-            crawl_result = self.app.crawl_url(\n-                url,\n-                {'formats': ['markdown']},\n-            )\n-            if not isinstance(crawl_result, list):\n-                raise ValueError(\"Unexpected response format\")\n-            markdown_contents = [\n-                result.get('markdown', '') for result in crawl_result\n-            ]\n-            return '\\n'.join(markdown_contents)\n-        except Exception as e:\n-            raise RuntimeError(\n-                f\"Failed to crawl the URL and retrieve markdown: {e}\"\n-            )\n-\n     def check_crawl_job(self, job_id: str) -> Dict:\n         r\"\"\"Check the status of a crawl job.\n \n",
        "test_patch": "diff --git a/test/loaders/test_firecrawl.py b/test/loaders/test_firecrawl.py\nindex 503eb8eb90..1702996aec 100644\n--- a/test/loaders/test_firecrawl.py\n+++ b/test/loaders/test_firecrawl.py\n@@ -61,35 +61,6 @@ def test_crawl_failure():\n             assert 'Failed to crawl the URL' in str(e)\n \n \n-def test_markdown_crawl_success():\n-    with patch('firecrawl.FirecrawlApp') as MockFirecrawlApp:\n-        mock_app = MockFirecrawlApp.return_value\n-        firecrawl = Firecrawl(\n-            api_key='test_api_key', api_url='https://api.test.com'\n-        )\n-        url = 'https://example.com'\n-        response = [{'markdown': 'Markdown content'}]\n-        mock_app.crawl_url.return_value = response\n-\n-        result = firecrawl.markdown_crawl(url)\n-        assert result == 'Markdown content'\n-\n-\n-def test_markdown_crawl_failure():\n-    with patch('firecrawl.FirecrawlApp') as MockFirecrawlApp:\n-        mock_app = MockFirecrawlApp.return_value\n-        firecrawl = Firecrawl(\n-            api_key='test_api_key', api_url='https://api.test.com'\n-        )\n-        url = 'https://example.com'\n-        mock_app.crawl_url.side_effect = Exception('Error')\n-\n-        try:\n-            firecrawl.markdown_crawl(url)\n-        except RuntimeError as e:\n-            assert 'Failed to crawl the URL and retrieve markdown' in str(e)\n-\n-\n def test_check_crawl_job_success():\n     with patch('firecrawl.FirecrawlApp') as MockFirecrawlApp:\n         mock_app = MockFirecrawlApp.return_value\n",
        "problem_statement": "[BUG] Exception in method invocation in the Firecrawl module.\n### Required prerequisites\n\n- [X] I have read the documentation <https://camel-ai.github.io/camel/camel.html>.\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [X] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### What version of camel are you using?\n\n0.2.13\n\n### System information\n\nirrelevant\n\n### Problem description\n\nRecent changes have been made to the Firecrawl documentation. Perform a review of the Firecrawl component based on the updated documentation.\n\n### Reproducible example code\n\nThe Python snippets:\r\n\r\n```python\r\n\r\n```\r\n\r\nCommand lines:\r\n\r\n```bash\r\n\r\n```\r\n\r\nExtra dependencies:\r\n\r\n```text\r\n\r\n```\r\n\r\nSteps to reproduce:\r\n\r\n1.\r\n2.\r\n3.\r\n \n\n### Traceback\n\n_No response_\n\n### Expected behavior\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-12-26T22:07:07Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "test/loaders/test_firecrawl.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1287,
        "instance_id": "camel-ai__camel-1287",
        "issue_numbers": [
            "1283"
        ],
        "base_commit": "70df478685be2dec851028a3b29cbbcfb721c274",
        "patch": "diff --git a/camel/agents/chat_agent.py b/camel/agents/chat_agent.py\nindex ddbf0233ad..bfc975b9b5 100644\n--- a/camel/agents/chat_agent.py\n+++ b/camel/agents/chat_agent.py\n@@ -1042,7 +1042,7 @@ def _step_get_info(\n             num_tokens (int): The number of tokens used in this step.\n             external_tool_request (Optional[ChatCompletionMessageToolCall]):\n                 Any external tool request made during this step.\n-                (default::obj:`None`)\n+                (default: :obj:`None`)\n \n         Returns:\n             Dict[str, Any]: A dictionary containing information about the chat\ndiff --git a/camel/messages/base.py b/camel/messages/base.py\nindex c9b11f4af1..2dc7540126 100644\n--- a/camel/messages/base.py\n+++ b/camel/messages/base.py\n@@ -52,15 +52,15 @@ class BaseMessage:\n             for the message.\n         content (str): The content of the message.\n         video_bytes (Optional[bytes]): Optional bytes of a video associated\n-            with the message. (default::obj:`None`)\n+            with the message. (default: :obj:`None`)\n         image_list (Optional[List[Image.Image]]): Optional list of PIL Image\n-            objects associated with the message. (default::obj:`None`)\n+            objects associated with the message. (default: :obj:`None`)\n         image_detail (Literal[\"auto\", \"low\", \"high\"]): Detail level of the\n-            images associated with the message. (default::obj:`auto`)\n+            images associated with the message. (default: :obj:`auto`)\n         video_detail (Literal[\"auto\", \"low\", \"high\"]): Detail level of the\n-            videos associated with the message. (default::obj:`low`)\n+            videos associated with the message. (default: :obj:`low`)\n         parsed: Optional[Union[Type[BaseModel], dict]]: Optional object which\n-            is parsed from the content. (default::obj:`None`)\n+            is parsed from the content. (default: :obj:`None`)\n     \"\"\"\n \n     role_name: str\ndiff --git a/camel/models/__init__.py b/camel/models/__init__.py\nindex 94fc012bfa..a80a80d924 100644\n--- a/camel/models/__init__.py\n+++ b/camel/models/__init__.py\n@@ -16,6 +16,7 @@\n from .base_model import BaseModelBackend\n from .cohere_model import CohereModel\n from .deepseek_model import DeepSeekModel\n+from .fish_audio_model import FishAudioModel\n from .gemini_model import GeminiModel\n from .groq_model import GroqModel\n from .litellm_model import LiteLLMModel\n@@ -66,4 +67,5 @@\n     'QwenModel',\n     'ModelProcessingError',\n     'DeepSeekModel',\n+    'FishAudioModel',\n ]\ndiff --git a/camel/models/anthropic_model.py b/camel/models/anthropic_model.py\nindex 970093999f..0b1e1827e9 100644\n--- a/camel/models/anthropic_model.py\n+++ b/camel/models/anthropic_model.py\n@@ -35,7 +35,7 @@ class AnthropicModel(BaseModelBackend):\n         model_config_dict (Optional[Dict[str, Any]], optional): A dictionary\n             that will be fed into Anthropic.messages.create().  If\n             :obj:`None`, :obj:`AnthropicConfig().as_dict()` will be used.\n-            (default::obj:`None`)\n+            (default: :obj:`None`)\n         api_key (Optional[str], optional): The API key for authenticating with\n             the Anthropic service. (default: :obj:`None`)\n         url (Optional[str], optional): The url to the Anthropic service.\ndiff --git a/camel/models/fish_audio_model.py b/camel/models/fish_audio_model.py\nnew file mode 100644\nindex 0000000000..8c550dc438\n--- /dev/null\n+++ b/camel/models/fish_audio_model.py\n@@ -0,0 +1,146 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import os\n+from typing import Any, Optional\n+\n+\n+class FishAudioModel:\n+    r\"\"\"Provides access to FishAudio's Text-to-Speech (TTS) and Speech_to_Text\n+    (STT) models.\n+    \"\"\"\n+\n+    def __init__(\n+        self,\n+        api_key: Optional[str] = None,\n+        url: Optional[str] = None,\n+    ) -> None:\n+        r\"\"\"Initialize an instance of FishAudioModel.\n+\n+        Args:\n+            api_key (Optional[str]): API key for FishAudio service. If not\n+                provided, the environment variable `FISHAUDIO_API_KEY` will be\n+                used.\n+            url (Optional[str]): Base URL for FishAudio API. If not provided,\n+                the environment variable `FISHAUDIO_API_BASE_URL` will be used.\n+        \"\"\"\n+        from fish_audio_sdk import Session\n+\n+        self._api_key = api_key or os.environ.get(\"FISHAUDIO_API_KEY\")\n+        self._url = url or os.environ.get(\n+            \"FISHAUDIO_API_BASE_URL\", \"https://api.fish.audio\"\n+        )\n+        self.session = Session(apikey=self._api_key, base_url=self._url)\n+\n+    def text_to_speech(\n+        self,\n+        input: str,\n+        storage_path: str,\n+        reference_id: Optional[str] = None,\n+        reference_audio: Optional[str] = None,\n+        reference_audio_text: Optional[str] = None,\n+        **kwargs: Any,\n+    ) -> Any:\n+        r\"\"\"Convert text to speech and save the output to a file.\n+\n+        Args:\n+            input_text (str): The text to convert to speech.\n+            storage_path (str): The file path where the resulting speech will\n+                be saved.\n+            reference_id (Optional[str]): An optional reference ID to\n+                associate with the request. (default: :obj:`None`)\n+            reference_audio (Optional[str]): Path to an audio file for\n+                reference speech. (default: :obj:`None`)\n+            reference_audio_text (Optional[str]): Text for the reference audio.\n+                (default: :obj:`None`)\n+            **kwargs (Any): Additional parameters to pass to the TTS request.\n+\n+        Raises:\n+            FileNotFoundError: If the reference audio file cannot be found.\n+        \"\"\"\n+        from fish_audio_sdk import ReferenceAudio, TTSRequest\n+\n+        directory = os.path.dirname(storage_path)\n+        if directory and not os.path.exists(directory):\n+            os.makedirs(directory)\n+\n+        if not reference_audio:\n+            with open(f\"{storage_path}\", \"wb\") as f:\n+                for chunk in self.session.tts(\n+                    TTSRequest(reference_id=reference_id, text=input, **kwargs)\n+                ):\n+                    f.write(chunk)\n+        else:\n+            if not os.path.exists(reference_audio):\n+                raise FileNotFoundError(\n+                    f\"Reference audio file not found: {reference_audio}\"\n+                )\n+            if not reference_audio_text:\n+                raise ValueError(\"reference_audio_text should be provided\")\n+            with open(f\"{reference_audio}\", \"rb\") as audio_file:\n+                with open(f\"{storage_path}\", \"wb\") as f:\n+                    for chunk in self.session.tts(\n+                        TTSRequest(\n+                            text=input,\n+                            references=[\n+                                ReferenceAudio(\n+                                    audio=audio_file.read(),\n+                                    text=reference_audio_text,\n+                                )\n+                            ],\n+                            **kwargs,\n+                        )\n+                    ):\n+                        f.write(chunk)\n+\n+    def speech_to_text(\n+        self,\n+        audio_file_path: str,\n+        language: Optional[str] = None,\n+        ignore_timestamps: Optional[bool] = None,\n+        **kwargs: Any,\n+    ) -> str:\n+        r\"\"\"Convert speech to text from an audio file.\n+\n+        Args:\n+            audio_file_path (str): The path to the audio file to transcribe.\n+            language (Optional[str]): The language of the audio. (default:\n+                :obj:`None`)\n+            ignore_timestamps (Optional[bool]): Whether to ignore timestamps.\n+                (default: :obj:`None`)\n+            **kwargs (Any): Additional parameters to pass to the STT request.\n+\n+        Returns:\n+            str: The transcribed text from the audio.\n+\n+        Raises:\n+            FileNotFoundError: If the audio file cannot be found.\n+        \"\"\"\n+        from fish_audio_sdk import ASRRequest\n+\n+        if not os.path.exists(audio_file_path):\n+            raise FileNotFoundError(f\"Audio file not found: {audio_file_path}\")\n+\n+        with open(f\"{audio_file_path}\", \"rb\") as audio_file:\n+            audio_data = audio_file.read()\n+\n+        response = self.session.asr(\n+            ASRRequest(\n+                audio=audio_data,\n+                language=language,\n+                ignore_timestamps=ignore_timestamps,\n+                **kwargs,\n+            )\n+        )\n+        return response.text\ndiff --git a/camel/runtime/configs.py b/camel/runtime/configs.py\nindex 2ff6943899..c286011b18 100644\n--- a/camel/runtime/configs.py\n+++ b/camel/runtime/configs.py\n@@ -21,23 +21,23 @@ class TaskConfig(BaseModel):\n \n     Arttributes:\n         cmd (str or list): Command to be executed\n-        stdout (bool): Attach to stdout. (default::obj: `True`)\n-        stderr (bool): Attach to stderr. (default::obj: `True`)\n-        stdin (bool): Attach to stdin. (default::obj: `False`)\n-        tty (bool): Allocate a pseudo-TTY. (default::obj: `False`)\n-        privileged (bool): Run as privileged. (default::obj: `False`)\n-        user (str): User to execute command as. (default::obj: `\"\"`)\n+        stdout (bool): Attach to stdout. (default: :obj: `True`)\n+        stderr (bool): Attach to stderr. (default: :obj: `True`)\n+        stdin (bool): Attach to stdin. (default: :obj: `False`)\n+        tty (bool): Allocate a pseudo-TTY. (default: :obj: `False`)\n+        privileged (bool): Run as privileged. (default: :obj: `False`)\n+        user (str): User to execute command as. (default: :obj: `\"\"`)\n         detach (bool): If true, detach from the exec command.\n-            (default::obj: `False`)\n-        stream (bool): Stream response data. (default::obj: `False`)\n+            (default: :obj: `False`)\n+        stream (bool): Stream response data. (default: :obj: `False`)\n         socket (bool): Return the connection socket to allow custom\n-            read/write operations. (default::obj: `False`)\n+            read/write operations. (default: :obj: `False`)\n         environment (dict or list): A dictionary or a list of strings in\n             the following format ``[\"PASSWORD=xxx\"]`` or\n-            ``{\"PASSWORD\": \"xxx\"}``. (default::obj: `None`)\n+            ``{\"PASSWORD\": \"xxx\"}``. (default: :obj: `None`)\n         workdir (str): Path to working directory for this exec session.\n-            (default::obj: `None`)\n-        demux (bool): Return stdout and stderr separately. (default::obj:\n+            (default: :obj: `None`)\n+        demux (bool): Return stdout and stderr separately. (default: :obj:\n             `False`)\n     \"\"\"\n \ndiff --git a/camel/runtime/docker_runtime.py b/camel/runtime/docker_runtime.py\nindex 370899cf63..c0a38a2693 100644\n--- a/camel/runtime/docker_runtime.py\n+++ b/camel/runtime/docker_runtime.py\n@@ -42,10 +42,10 @@ class DockerRuntime(BaseRuntime):\n \n     Args:\n         image (str): The name of the Docker image to use for the runtime.\n-        port (int): The port number to use for the runtime API. (default::obj:\n+        port (int): The port number to use for the runtime API. (default: :obj:\n             `8000`)\n         remove (bool): Whether to remove the container after stopping it. '\n-            (default::obj: `True`)\n+            (default: :obj: `True`)\n         kwargs (dict): Additional keyword arguments to pass to the\n             Docker client.\n     \"\"\"\n@@ -170,7 +170,7 @@ def build(self, time_out: int = 15) -> \"DockerRuntime\":\n \n         Args:\n             time_out (int): The number of seconds to wait for the container to\n-                start. (default::obj: `15`)\n+                start. (default: :obj: `15`)\n \n         Returns:\n             DockerRuntime: The DockerRuntime instance.\n@@ -259,9 +259,9 @@ def add(  # type: ignore[override]\n                 list of functions to add.\n             entrypoint (str): The entrypoint for the function.\n             redirect_stdout (bool): Whether to return the stdout of\n-                the function. (default::obj: `False`)\n+                the function. (default: :obj: `False`)\n             arguments (Optional[Dict[str, Any]]): The arguments for the\n-                function. (default::obj: `None`)\n+                function. (default: :obj: `None`)\n \n         Returns:\n             DockerRuntime: The DockerRuntime instance.\n@@ -330,7 +330,7 @@ def stop(self, remove: Optional[bool] = None) -> \"DockerRuntime\":\n \n         Args:\n             remove (Optional[bool]): Whether to remove the container\n-                after stopping it. (default::obj: `None`)\n+                after stopping it. (default: :obj: `None`)\n \n         Returns:\n             DockerRuntime: The DockerRuntime instance.\n@@ -366,7 +366,7 @@ def wait(self, timeout: int = 10) -> bool:\n         r\"\"\"Wait for the API Server to be ready.\n \n         Args:\n-            timeout (int): The number of seconds to wait. (default::obj: `10`)\n+            timeout (int): The number of seconds to wait. (default: :obj: `10`)\n \n         Returns:\n             bool: Whether the API Server is ready.\ndiff --git a/camel/runtime/llm_guard_runtime.py b/camel/runtime/llm_guard_runtime.py\nindex 20b136fa1e..a6d672fdab 100644\n--- a/camel/runtime/llm_guard_runtime.py\n+++ b/camel/runtime/llm_guard_runtime.py\n@@ -68,9 +68,9 @@ class LLMGuardRuntime(BaseRuntime):\n     Arguments:\n         prompt (str): The prompt to use for the language model. (default:\n             :obj:`GUARDPROMPT`)\n-        model (BaseModelBackend): The language model to use. (default::obj:\n+        model (BaseModelBackend): The language model to use. (default: :obj:\n             `None`)\n-        verbose (bool): Whether to print verbose output. (default::obj:\n+        verbose (bool): Whether to print verbose output. (default: :obj:\n             `False`)\n     \"\"\"\n \n@@ -114,7 +114,7 @@ def add(  # type: ignore[override]\n             funcs (FunctionTool or List[FunctionTool]): The function or\n                 list of functions to add.\n             threshold (int): The risk threshold for functions.\n-                (default::obj:`2`)\n+                (default: :obj:`2`)\n \n         Returns:\n             LLMGuardRuntime: The current runtime.\ndiff --git a/camel/runtime/remote_http_runtime.py b/camel/runtime/remote_http_runtime.py\nindex ef34773aa2..d3fff2c5e4 100644\n--- a/camel/runtime/remote_http_runtime.py\n+++ b/camel/runtime/remote_http_runtime.py\n@@ -36,9 +36,9 @@ class RemoteHttpRuntime(BaseRuntime):\n \n     Args:\n         host (str): The host of the remote server.\n-        port (int): The port of the remote server. (default::obj: `8000`)\n+        port (int): The port of the remote server. (default: :obj: `8000`)\n         python_exec (str): The python executable to run the API server.\n-            (default::obj: `python3`)\n+            (default: :obj: `python3`)\n     \"\"\"\n \n     def __init__(\n@@ -90,9 +90,9 @@ def add(  # type: ignore[override]\n                 list of functions to add.\n             entrypoint (str): The entrypoint for the function.\n             redirect_stdout (bool): Whether to return the stdout of\n-                the function. (default::obj: `False`)\n+                the function. (default: :obj: `False`)\n             arguments (Optional[Dict[str, Any]]): The arguments for the\n-                function. (default::obj: `None`)\n+                function. (default: :obj: `None`)\n \n         Returns:\n             RemoteHttpRuntime: The current runtime.\n@@ -162,7 +162,7 @@ def wait(self, timeout: int = 10) -> bool:\n         r\"\"\"Wait for the API Server to be ready.\n \n         Args:\n-            timeout (int): The number of seconds to wait. (default::obj: `10`)\n+            timeout (int): The number of seconds to wait. (default: :obj: `10`)\n \n         Returns:\n             bool: Whether the API Server is ready.\ndiff --git a/camel/runtime/utils/function_risk_toolkit.py b/camel/runtime/utils/function_risk_toolkit.py\nindex 3ea7300d2c..f00ef2dd21 100644\n--- a/camel/runtime/utils/function_risk_toolkit.py\n+++ b/camel/runtime/utils/function_risk_toolkit.py\n@@ -22,7 +22,7 @@ class FunctionRiskToolkit(BaseToolkit):\n \n     Args:\n         verbose (Optional[bool]): Whether to print verbose output.\n-            (default::obj:`False`)\n+            (default: :obj:`False`)\n     \"\"\"\n \n     def __init__(self, verbose: Optional[bool] = False):\ndiff --git a/camel/runtime/utils/ignore_risk_toolkit.py b/camel/runtime/utils/ignore_risk_toolkit.py\nindex f195ed6173..e21c2d2747 100644\n--- a/camel/runtime/utils/ignore_risk_toolkit.py\n+++ b/camel/runtime/utils/ignore_risk_toolkit.py\n@@ -22,9 +22,9 @@ class IgnoreRiskToolkit(BaseToolkit):\n \n     Args:\n         function_names (Optional[List[str]]): A list of function names to\n-            ignore risks for. (default::obj:`None`)\n+            ignore risks for. (default: :obj:`None`)\n         verbose (Optional[bool]): Whether to print verbose output.\n-            (default::obj:`False`)\n+            (default: :obj:`False`)\n     \"\"\"\n \n     def __init__(\ndiff --git a/camel/toolkits/arxiv_toolkit.py b/camel/toolkits/arxiv_toolkit.py\nindex 2ff96eedfa..7912aea8f5 100644\n--- a/camel/toolkits/arxiv_toolkit.py\n+++ b/camel/toolkits/arxiv_toolkit.py\n@@ -44,9 +44,9 @@ def _get_search_results(\n             query (str): The search query string used to search for papers on\n                 arXiv.\n             paper_ids (List[str], optional): A list of specific arXiv paper\n-                IDs to search for. (default::obj: `None`)\n+                IDs to search for. (default: :obj: `None`)\n             max_results (int, optional): The maximum number of search results\n-                to retrieve. (default::obj: `5`)\n+                to retrieve. (default: :obj: `5`)\n \n         Returns:\n             Generator: A generator that yields results from the arXiv search\n@@ -75,9 +75,9 @@ def search_papers(\n         Args:\n             query (str): The search query string.\n             paper_ids (List[str], optional): A list of specific arXiv paper\n-                IDs to search for. (default::obj: `None`)\n+                IDs to search for. (default: :obj: `None`)\n             max_results (int, optional): The maximum number of search results\n-                to return. (default::obj: `5`)\n+                to return. (default: :obj: `5`)\n \n         Returns:\n             List[Dict[str, str]]: A list of dictionaries, each containing\n@@ -119,9 +119,9 @@ def download_papers(\n         Args:\n             query (str): The search query string.\n             paper_ids (List[str], optional): A list of specific arXiv paper\n-                IDs to download. (default::obj: `None`)\n+                IDs to download. (default: :obj: `None`)\n             max_results (int, optional): The maximum number of search results\n-                to download. (default::obj: `5`)\n+                to download. (default: :obj: `5`)\n             output_dir (str, optional): The directory to save the downloaded\n                 PDFs. Defaults to the current directory.\n \ndiff --git a/camel/toolkits/ask_news_toolkit.py b/camel/toolkits/ask_news_toolkit.py\nindex a5c7bc6b2f..c0aff1bfff 100644\n--- a/camel/toolkits/ask_news_toolkit.py\n+++ b/camel/toolkits/ask_news_toolkit.py\n@@ -228,7 +228,7 @@ def search_reddit(\n                 return value. (default: :obj:`\"string\"`)\n             method (Literal[\"nl\", \"kw\"]): The search method, either \"nl\" for\n                 natural language or \"kw\" for keyword search.\n-                (default::obj:`\"kw\"`)\n+                (default: :obj:`\"kw\"`)\n \n         Returns:\n             Union[str, dict, Tuple[str, dict]]: The Reddit search\n@@ -523,7 +523,7 @@ async def search_reddit(\n                 return value. (default: :obj:\"string\")\n             method (Literal[\"nl\", \"kw\"]): The search method, either \"nl\" for\n                 natural language or \"kw\" for keyword search.\n-                (default::obj:\"kw\")\n+                (default: :obj:\"kw\")\n \n         Returns:\n             Union[str, dict, Tuple[str, dict]]: The Reddit search\ndiff --git a/camel/toolkits/github_toolkit.py b/camel/toolkits/github_toolkit.py\nindex 316e911d50..2ebfb6d721 100644\n--- a/camel/toolkits/github_toolkit.py\n+++ b/camel/toolkits/github_toolkit.py\n@@ -139,7 +139,7 @@ def get_issue_list(\n \n         Args:\n             state (Literal[\"open\", \"closed\", \"all\"]): The state of pull\n-                requests to retrieve. (default::obj: `all`)\n+                requests to retrieve. (default: :obj: `all`)\n                 Options are:\n                 - \"open\": Retrieve only open pull requests.\n                 - \"closed\": Retrieve only closed pull requests.\n@@ -179,7 +179,7 @@ def get_pull_request_list(\n \n         Args:\n             state (Literal[\"open\", \"closed\", \"all\"]): The state of pull\n-                requests to retrieve. (default::obj: `all`)\n+                requests to retrieve. (default: :obj: `all`)\n                 Options are:\n                 - \"open\": Retrieve only open pull requests.\n                 - \"closed\": Retrieve only closed pull requests.\n@@ -254,7 +254,7 @@ def get_all_file_paths(self, path: str = \"\") -> List[str]:\n         Args:\n             path (str): The repository path to start the traversal from.\n                 empty string means starts from the root directory.\n-                (default::obj: `\"\"`)\n+                (default: :obj: `\"\"`)\n \n         Returns:\n             List[str]: A list of file paths within the specified directory\ndiff --git a/camel/toolkits/meshy_toolkit.py b/camel/toolkits/meshy_toolkit.py\nindex cf49e01f91..3987b2dbdc 100644\n--- a/camel/toolkits/meshy_toolkit.py\n+++ b/camel/toolkits/meshy_toolkit.py\n@@ -117,9 +117,9 @@ def wait_for_task_completion(\n         Args:\n             task_id (str): The ID of the task to monitor.\n             polling_interval (int): Seconds to wait between status checks.\n-                (default::obj:`10`)\n+                (default: :obj:`10`)\n             timeout (int): Maximum seconds to wait before timing out.\n-                (default::obj:`3600`)\n+                (default: :obj:`3600`)\n \n         Returns:\n             Dict[str, Any]: Final response from the API when task completes.\ndiff --git a/camel/toolkits/search_toolkit.py b/camel/toolkits/search_toolkit.py\nindex ef40f70239..3e6f62cd15 100644\n--- a/camel/toolkits/search_toolkit.py\n+++ b/camel/toolkits/search_toolkit.py\n@@ -181,7 +181,7 @@ def search_brave(\n             country (str): The search query country where results come from.\n                 The country string is limited to 2 character country codes of\n                 supported countries. For a list of supported values, see\n-                Country Codes. (default::obj:`US `)\n+                Country Codes. (default: :obj:`US `)\n             search_lang (str): The search language preference. The 2 or more\n                 character language code for which search results are provided.\n                 For a list of possible values, see Language Codes.\n@@ -416,7 +416,7 @@ def query_wolfram_alpha(\n             query (str): The query to send to Wolfram Alpha.\n             is_detailed (bool): Whether to include additional details\n                 including step by step information in the result.\n-                (default::obj:`False`)\n+                (default: :obj:`False`)\n \n         Returns:\n             Union[str, Dict[str, Any]]: The result from Wolfram Alpha.\ndiff --git a/examples/models/fish_audio_model_example.py b/examples/models/fish_audio_model_example.py\nnew file mode 100644\nindex 0000000000..0d68d8488b\n--- /dev/null\n+++ b/examples/models/fish_audio_model_example.py\n@@ -0,0 +1,51 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+from camel.models import FishAudioModel\n+\n+audio_models = FishAudioModel()\n+\n+# Set example input\n+input = \"\"\"CAMEL-AI.org is an open-source community dedicated to the study of \n+autonomous and communicative agents. We believe that studying these agents on \n+a large scale offers valuable insights into their behaviors, capabilities, and \n+potential risks. To facilitate research in this field, we provide, implement, \n+and support various types of agents, tasks, prompts, models, datasets, and \n+simulated environments.\n+\n+Join us via Slack, Discord, or WeChat in pushing the boundaries of building AI \n+Society.\"\"\"\n+\n+# Set example local path to store the file\n+storage_path = \"examples/fish_audio_models/example_audio.mp3\"\n+\n+# Convert the example input into audio and store it locally\n+audio_models.text_to_speech(input=input, storage_path=storage_path)\n+\n+# Convert the saved audio back to text\n+converted_text = audio_models.speech_to_text(audio_file_path=storage_path)\n+\n+# Print the converted text\n+print(converted_text)\n+'''\n+===============================================================================\n+CammelaiI.org is an open source community dedicated to the study of autonomous \n+and communicative agents. We believe that studying these agents on a large \n+scale offers valuable insights into their behaviors, capabilities and \n+potential risks to facilitate research in this field, we provide implement and \n+support various types of agents, tasks, prompts, models, datas and simulated \n+environments. Jo us via Slack Discord or Wechat in pushing the boundaries of \n+building AI society.\n+===============================================================================\n+'''\ndiff --git a/poetry.lock b/poetry.lock\nindex 2059894467..75b5962168 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -1891,6 +1891,23 @@ python-dotenv = \"*\"\n requests = \"*\"\n websockets = \"*\"\n \n+[[package]]\n+name = \"fish-audio-sdk\"\n+version = \"2024.12.5\"\n+description = \"fish.audio platform api sdk\"\n+optional = true\n+python-versions = \">=3.10\"\n+files = [\n+    {file = \"fish_audio_sdk-2024.12.5-py3-none-any.whl\", hash = \"sha256:a4ce81c6609c239d5518cc1d78c7a0699da50797e0af4d6b3758a8fb5c12384e\"},\n+    {file = \"fish_audio_sdk-2024.12.5.tar.gz\", hash = \"sha256:d7d2b5be0da323ca9c7b8f0d5ce3450f190a112af985c3283cb7ce330fd51e70\"},\n+]\n+\n+[package.dependencies]\n+httpx = \">=0.27.2\"\n+httpx-ws = \">=0.6.2\"\n+ormsgpack = \">=1.5.0\"\n+pydantic = \">=2.9.1\"\n+\n [[package]]\n name = \"flatbuffers\"\n version = \"24.3.25\"\n@@ -2740,6 +2757,23 @@ files = [\n     {file = \"httpx_sse-0.4.0-py3-none-any.whl\", hash = \"sha256:f329af6eae57eaa2bdfd962b42524764af68075ea87370a2de920af5341e318f\"},\n ]\n \n+[[package]]\n+name = \"httpx-ws\"\n+version = \"0.7.0\"\n+description = \"WebSockets support for HTTPX\"\n+optional = true\n+python-versions = \">=3.9\"\n+files = [\n+    {file = \"httpx_ws-0.7.0-py3-none-any.whl\", hash = \"sha256:4e888b8f662862cfafc3bbcf7d851105da4a6d50088d3168909c209762b6ea32\"},\n+    {file = \"httpx_ws-0.7.0.tar.gz\", hash = \"sha256:352843c3a37bd7d807bb3fd63130d30f8f7d533bfc921a409bd25edd00d26029\"},\n+]\n+\n+[package.dependencies]\n+anyio = \">=4\"\n+httpcore = \">=1.0.4\"\n+httpx = \">=0.23.1\"\n+wsproto = \"*\"\n+\n [[package]]\n name = \"huggingface-hub\"\n version = \"0.27.0\"\n@@ -5110,6 +5144,41 @@ files = [\n     {file = \"orjson-3.10.12.tar.gz\", hash = \"sha256:0a78bbda3aea0f9f079057ee1ee8a1ecf790d4f1af88dd67493c6b8ee52506ff\"},\n ]\n \n+[[package]]\n+name = \"ormsgpack\"\n+version = \"1.7.0\"\n+description = \"Fast, correct Python msgpack library supporting dataclasses, datetimes, and numpy\"\n+optional = true\n+python-versions = \">=3.9\"\n+files = [\n+    {file = \"ormsgpack-1.7.0-cp310-cp310-macosx_10_12_x86_64.macosx_11_0_arm64.macosx_10_12_universal2.whl\", hash = \"sha256:a0ca6a64d47073f22ecc1dd96b384e44f98796d3f88ee383e92dfbcdf18c2efd\"},\n+    {file = \"ormsgpack-1.7.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e8385181bf195af80fc270e64fd477f1c414ffb05837320382e2ec9ca34be0ec\"},\n+    {file = \"ormsgpack-1.7.0-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:ca4d35b694f32112eb33ac0b733cb903dbbc59f019d05ca3d74f6ad2f587b0bf\"},\n+    {file = \"ormsgpack-1.7.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e86124cdbc8ed249806347c2fba96843e8941122b161b429139a0c973d270de4\"},\n+    {file = \"ormsgpack-1.7.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:6d114652dadd81802b8a35a49e07a3e9ef2a47aed6123fb5031f2220d1c8e434\"},\n+    {file = \"ormsgpack-1.7.0-cp311-cp311-macosx_10_12_x86_64.macosx_11_0_arm64.macosx_10_12_universal2.whl\", hash = \"sha256:2c22c62a6bc93bcb194b7f91864ca0b39455b2cbbfc1538a3da0f9ec3c11d184\"},\n+    {file = \"ormsgpack-1.7.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f9967a7f3647ad118751abf090f8397fda3e4bca6833340cab95a3f2bec598cd\"},\n+    {file = \"ormsgpack-1.7.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:91ebb7d3609db249cdff629ffef83ec3d025b1384749a297cf3b6a8240cf22ac\"},\n+    {file = \"ormsgpack-1.7.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c683071bf4527ffa7b6cfcf28f750d1a82eb77846d106743c09261ab1b79b193\"},\n+    {file = \"ormsgpack-1.7.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:90aabfd816db60dadab1100d583d061e0238209015bf684f8170c0fca4eb445a\"},\n+    {file = \"ormsgpack-1.7.0-cp312-cp312-macosx_10_12_x86_64.macosx_11_0_arm64.macosx_10_12_universal2.whl\", hash = \"sha256:77bc2ea387d85cfad045b9bcb8040bae43ad32dafe9363360f732cc19d489bbe\"},\n+    {file = \"ormsgpack-1.7.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5ec763096d978d35eedcef0af13991a10741717c2e236b26f4c2047b0740ea7b\"},\n+    {file = \"ormsgpack-1.7.0-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:22418a4d399027a72fb2e6b873559b1886cf2e63323ca7afc17b222c454413b7\"},\n+    {file = \"ormsgpack-1.7.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:97723786755a7df85fcf6e68d7b5359dacea98d5c26b1d9af219a3cc05df4734\"},\n+    {file = \"ormsgpack-1.7.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:7e6ada21f5c7a20ff7cf9b061c44e3814352f819947a12022ad8cb52a9f2a809\"},\n+    {file = \"ormsgpack-1.7.0-cp313-cp313-macosx_10_12_x86_64.macosx_11_0_arm64.macosx_10_12_universal2.whl\", hash = \"sha256:462089a419dbde654915ccb0b859c0dbe3c178b0ac580018e82befea6ccd73f4\"},\n+    {file = \"ormsgpack-1.7.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4b353204e99b56c1d33f1cf4767bd1fe1195596181a1cc789f25aa26c0b50f3d\"},\n+    {file = \"ormsgpack-1.7.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:a5e12b51a590be47ccef67907905653e679fc2f920854b456edc216690ecc09c\"},\n+    {file = \"ormsgpack-1.7.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3a6a97937d2cf21496d7689b90a43df83c5062bbe846aaa39197cc9ad73eaa7b\"},\n+    {file = \"ormsgpack-1.7.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:8d301e47565fe0e52a60052e730a9bb7669dfbd2a94643b8be925e3928c64c15\"},\n+    {file = \"ormsgpack-1.7.0-cp39-cp39-macosx_10_12_x86_64.macosx_11_0_arm64.macosx_10_12_universal2.whl\", hash = \"sha256:a8fbe7bb50ee8381df030823d9366984fac718447947c2327969405d1d799b95\"},\n+    {file = \"ormsgpack-1.7.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5fefa1ca842dbba258401ea958113fe62c6b70a7a4d46edac440113f68dc431e\"},\n+    {file = \"ormsgpack-1.7.0-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:9b0945523ccc75aa6907f38f2240d36818618baccb8633923bd7740a5a929e67\"},\n+    {file = \"ormsgpack-1.7.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:65525438b4a8b3b64ccfcda25e758ea3db392d1c206b5e09ef70efbbafa6dbf9\"},\n+    {file = \"ormsgpack-1.7.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:0d88307ab45d95416ce4071b1b99326ca31362af01c3d206f15a0551a7a874bd\"},\n+    {file = \"ormsgpack-1.7.0.tar.gz\", hash = \"sha256:6b4c98839cb7fc2a212037d2258f3a22857155249eb293d45c45cb974cfba834\"},\n+]\n+\n [[package]]\n name = \"outcome\"\n version = \"1.3.0.post0\"\n@@ -10044,12 +10113,12 @@ test = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\",\n type = [\"pytest-mypy\"]\n \n [extras]\n-all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"nltk\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"fish-audio-sdk\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"nltk\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n encoders = [\"sentence-transformers\"]\n graph-storages = [\"nebula3-python\", \"neo4j\"]\n huggingface-agent = [\"accelerate\", \"datasets\", \"diffusers\", \"opencv-python\", \"sentencepiece\", \"soundfile\", \"torch\", \"torch\", \"transformers\"]\n kv-stroages = [\"redis\"]\n-model-platforms = [\"anthropic\", \"cohere\", \"google-generativeai\", \"litellm\", \"mistralai\", \"reka-api\", \"sglang\"]\n+model-platforms = [\"anthropic\", \"cohere\", \"fish-audio-sdk\", \"google-generativeai\", \"litellm\", \"mistralai\", \"reka-api\", \"sglang\"]\n object-storages = [\"azure-storage-blob\", \"botocore\", \"google-cloud-storage\"]\n rag = [\"cohere\", \"nebula3-python\", \"neo4j\", \"pymilvus\", \"qdrant-client\", \"rank-bm25\", \"sentence-transformers\", \"unstructured\"]\n retrievers = [\"cohere\", \"rank-bm25\"]\n@@ -10062,4 +10131,4 @@ vector-databases = [\"pymilvus\", \"qdrant-client\"]\n [metadata]\n lock-version = \"2.0\"\n python-versions = \">=3.10,<3.13\"\n-content-hash = \"3a8d5ec69ff26fdd80011354e8fb9c46aea056e582b0e4af8a6b500489a7d76c\"\n+content-hash = \"f789be494b3da60bc0305c54a92b9bdbeb6ed0f054c559ae10e3f9104af6e7b1\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex fb4c6f3f38..a761207754 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -50,6 +50,7 @@ mistralai = { version = \"^1.1.0\", optional = true }\n reka-api = { version = \"^3.0.8\", optional = true }\n anthropic = { version = \"^0.40.0\", optional = true }\n cohere = { version = \"^5.11.0\", optional = true }\n+fish-audio-sdk = { version = \"^2024.12.5\", optional = true }\n sglang = { version = \"^0.4.0\", optional = true }\n \n # huggingface-agent\n@@ -164,6 +165,7 @@ model-platforms = [\n     \"reka-api\",\n     \"anthropic\",\n     \"cohere\",\n+    \"fish-audio-sdk\",\n     'sglang',\n ]\n \n@@ -332,6 +334,7 @@ all = [\n     \"litellm\",\n     \"mistralai\",\n     \"cohere\",\n+    \"fish-audio-sdk\",\n     \"google-generativeai\",\n     \"anthropic\",\n     \"reka-api\",\n@@ -463,6 +466,7 @@ module = [\n     \"imageio\",\n     \"rank_bm25\",\n     \"cohere\",\n+    \"fish_audio_sdk\",\n     \"sentence_transformers.*\",\n     \"pymilvus\",\n     \"pillow\",\n@@ -478,6 +482,7 @@ module = [\n     \"google_generativeai\",\n     \"mistralai\",\n     \"cohere\",\n+    \"fish-audio-sdk\",\n     \"reka-api\",\n     \"sglang\",\n     \"agentops\",\n",
        "test_patch": "diff --git a/test/models/test_fish_audio_model.py b/test/models/test_fish_audio_model.py\nnew file mode 100644\nindex 0000000000..4cb9367920\n--- /dev/null\n+++ b/test/models/test_fish_audio_model.py\n@@ -0,0 +1,122 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import os\n+from unittest.mock import MagicMock, patch\n+\n+from camel.models import FishAudioModel\n+\n+\n+def test_fish_audio_model_init():\n+    r\"\"\"Test initialization of FishAudioModel.\"\"\"\n+    # Test with no API key or URL, should use environment variables\n+    with patch.dict(\n+        os.environ,\n+        {\n+            \"FISHAUDIO_API_KEY\": \"test_api_key\",\n+            \"FISHAUDIO_API_BASE_URL\": \"https://api.fish.audio\",\n+        },\n+    ):\n+        model = FishAudioModel()\n+        assert model._api_key == \"test_api_key\"\n+        assert model._url == \"https://api.fish.audio\"\n+\n+\n+def test_fish_audio_model_text_to_speech_no_reference_audio():\n+    r\"\"\"Test text_to_speech with no reference audio.\"\"\"\n+    # Mock the session's TTS method to avoid actual API calls\n+    with patch(\"fish_audio_sdk.Session\") as MockSession:\n+        mock_session = MagicMock()\n+        MockSession.return_value = mock_session\n+        mock_session.tts.return_value = [b\"audio_data\"]\n+\n+        model = FishAudioModel(\n+            api_key=\"test_api_key\", url=\"https://api.fish.audio\"\n+        )\n+\n+        with patch(\"builtins.open\") as mock_file:\n+            mock_file.return_value.__enter__.return_value.write = MagicMock()\n+\n+            model.text_to_speech(\"Hello\", \"output_path.wav\")\n+\n+            mock_session.tts.assert_called_once()\n+            mock_file.return_value.__enter__.return_value.write.assert_called_once_with(\n+                b\"audio_data\"\n+            )\n+\n+\n+def test_fish_audio_model_text_to_speech_with_reference_audio():\n+    r\"\"\"Test text_to_speech with reference audio.\"\"\"\n+    with patch(\"fish_audio_sdk.Session\") as MockSession:\n+        mock_session = MagicMock()\n+        MockSession.return_value = mock_session\n+        mock_session.tts.return_value = [b\"audio_data\"]\n+\n+        with (\n+            patch(\"os.path.exists\", return_value=True),\n+            patch(\"builtins.open\", patch_open := MagicMock()),\n+        ):\n+            patch_open.return_value.__enter__.return_value.read = MagicMock(\n+                return_value=b\"reference_audio_data\"\n+            )\n+\n+            model = FishAudioModel(\n+                api_key=\"test_api_key\", url=\"https://api.fish.audio\"\n+            )\n+\n+            model.text_to_speech(\n+                \"Hello\",\n+                \"output_path.wav\",\n+                reference_audio=\"reference_audio.wav\",\n+                reference_audio_text=\"Reference text\",\n+            )\n+\n+            mock_session.tts.assert_called_once()\n+\n+\n+def test_fish_audio_model_speech_to_text():\n+    r\"\"\"Test speech_to_text method.\"\"\"\n+    with patch(\"fish_audio_sdk.Session\") as MockSession:\n+        mock_session = MagicMock()\n+        MockSession.return_value = mock_session\n+        mock_session.asr.return_value = MagicMock(text=\"Hello world\")\n+\n+        with patch(\"builtins.open\", patch_open := MagicMock()):\n+            patch_open.return_value.__enter__.return_value.read = MagicMock(\n+                return_value=b\"audio_data\"\n+            )\n+            with patch(\"os.path.exists\", return_value=True):\n+                model = FishAudioModel(\n+                    api_key=\"test_api_key\", url=\"https://api.fish.audio\"\n+                )\n+\n+                result = model.speech_to_text(\"audio_file.wav\")\n+\n+                assert result == \"Hello world\"\n+                mock_session.asr.assert_called_once()\n+\n+\n+def test_fish_audio_model_speech_to_text_file_not_found():\n+    r\"\"\"Test speech_to_text raises FileNotFoundError.\"\"\"\n+    # Create instance of FishAudioModel\n+    model = FishAudioModel(\n+        api_key=\"test_api_key\", url=\"https://api.fish.audio\"\n+    )\n+\n+    # Test that the method raises FileNotFoundError if file doesn't exist\n+    with patch(\"os.path.exists\", return_value=False):\n+        try:\n+            model.speech_to_text(\"non_existent_file.wav\")\n+        except FileNotFoundError as e:\n+            assert str(e) == \"Audio file not found: non_existent_file.wav\"\n",
        "problem_statement": "[Feature Request] Integrate Fishaudio\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nhttps://github.com/fishaudio/fish-speech\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-12-06T09:35:24Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": []
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1277,
        "instance_id": "camel-ai__camel-1277",
        "issue_numbers": [
            "1273"
        ],
        "base_commit": "4c27173e0e877660f5c26415d373d1ef4bca5346",
        "patch": "diff --git a/.github/workflows/build_package.yml b/.github/workflows/build_package.yml\nindex 38a56e3011..60d1649010 100644\n--- a/.github/workflows/build_package.yml\n+++ b/.github/workflows/build_package.yml\n@@ -70,6 +70,12 @@ jobs:\n           ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n           CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n           MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n+          YI_API_KEY: \"${{ secrets.YI_API_KEY }}\"\n+          TOGETHER_API_KEY: \"${{ secrets.TOGETHER_API_KEY }}\"\n+          SAMBA_API_KEY: \"${{ secrets.SAMBA_API_KEY }}\"\n+          QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n+          GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n+          DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n         run: |\n           source venv/bin/activate\n           pytest --fast-test-mode ./test\ndiff --git a/camel/datahubs/huggingface.py b/camel/datahubs/huggingface.py\nindex 3ababc8887..0e2d956d8a 100644\n--- a/camel/datahubs/huggingface.py\n+++ b/camel/datahubs/huggingface.py\n@@ -35,7 +35,11 @@ class HuggingFaceDatasetManager(BaseDatasetManager):\n             will be read from the environment variable `HUGGING_FACE_TOKEN`.\n     \"\"\"\n \n-    @api_keys_required(\"HUGGING_FACE_TOKEN\")\n+    @api_keys_required(\n+        [\n+            (\"token\", \"HUGGING_FACE_TOKEN\"),\n+        ]\n+    )\n     @dependencies_required('huggingface_hub')\n     def __init__(self, token: Optional[str] = None):\n         from huggingface_hub import HfApi\ndiff --git a/camel/embeddings/mistral_embedding.py b/camel/embeddings/mistral_embedding.py\nindex 526e01088e..24c80e372d 100644\n--- a/camel/embeddings/mistral_embedding.py\n+++ b/camel/embeddings/mistral_embedding.py\n@@ -37,6 +37,11 @@ class MistralEmbedding(BaseEmbedding[str]):\n         RuntimeError: If an unsupported model type is specified.\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'MISTRAL_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: EmbeddingModelType = (EmbeddingModelType.MISTRAL_EMBED),\n@@ -56,7 +61,6 @@ def __init__(\n         self._api_key = api_key or os.environ.get(\"MISTRAL_API_KEY\")\n         self._client = Mistral(api_key=self._api_key)\n \n-    @api_keys_required(\"MISTRAL_API_KEY\")\n     def embed_list(\n         self,\n         objs: list[str],\ndiff --git a/camel/embeddings/openai_compatible_embedding.py b/camel/embeddings/openai_compatible_embedding.py\nindex a01e1cd010..59f2187030 100644\n--- a/camel/embeddings/openai_compatible_embedding.py\n+++ b/camel/embeddings/openai_compatible_embedding.py\n@@ -32,6 +32,12 @@ class OpenAICompatibleEmbedding(BaseEmbedding[str]):\n         url (str): The url to the model service.\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'OPENAI_COMPATIBILIY_API_KEY'),\n+            (\"url\", 'OPENAI_COMPATIBILIY_API_BASE_URL'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: str,\n@@ -52,7 +58,6 @@ def __init__(\n             base_url=self._url,\n         )\n \n-    @api_keys_required(\"OPENAI_COMPATIBILIY_API_KEY\")\n     def embed_list(\n         self,\n         objs: list[str],\ndiff --git a/camel/embeddings/openai_embedding.py b/camel/embeddings/openai_embedding.py\nindex b068504824..94da48d7f4 100644\n--- a/camel/embeddings/openai_embedding.py\n+++ b/camel/embeddings/openai_embedding.py\n@@ -39,6 +39,11 @@ class OpenAIEmbedding(BaseEmbedding[str]):\n         RuntimeError: If an unsupported model type is specified.\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'OPENAI_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: EmbeddingModelType = (\n@@ -58,7 +63,6 @@ def __init__(\n         self._api_key = api_key or os.environ.get(\"OPENAI_API_KEY\")\n         self.client = OpenAI(timeout=180, max_retries=3, api_key=self._api_key)\n \n-    @api_keys_required(\"OPENAI_API_KEY\")\n     def embed_list(\n         self,\n         objs: list[str],\ndiff --git a/camel/interpreters/e2b_interpreter.py b/camel/interpreters/e2b_interpreter.py\nindex d09321444a..881dd604ba 100644\n--- a/camel/interpreters/e2b_interpreter.py\n+++ b/camel/interpreters/e2b_interpreter.py\n@@ -43,7 +43,11 @@ class E2BInterpreter(BaseInterpreter):\n         \"r\": \"r\",\n     }\n \n-    @api_keys_required(\"E2B_API_KEY\")\n+    @api_keys_required(\n+        [\n+            (None, \"E2B_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         require_confirm: bool = True,\ndiff --git a/camel/loaders/apify_reader.py b/camel/loaders/apify_reader.py\nindex 6224ce60c0..038e1fb078 100644\n--- a/camel/loaders/apify_reader.py\n+++ b/camel/loaders/apify_reader.py\n@@ -27,7 +27,11 @@ class Apify:\n         api_key (Optional[str]): API key for authenticating with the Apify API.\n     \"\"\"\n \n-    @api_keys_required(\"APIFY_API_KEY\")\n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"APIFY_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         api_key: Optional[str] = None,\ndiff --git a/camel/loaders/chunkr_reader.py b/camel/loaders/chunkr_reader.py\nindex ae29078599..e61a99d1dc 100644\n--- a/camel/loaders/chunkr_reader.py\n+++ b/camel/loaders/chunkr_reader.py\n@@ -40,7 +40,11 @@ class ChunkrReader:\n         **kwargs (Any): Additional keyword arguments for request headers.\n     \"\"\"\n \n-    @api_keys_required(\"CHUNKR_API_KEY\")\n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"CHUNKR_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         api_key: Optional[str] = None,\ndiff --git a/camel/logger.py b/camel/logger.py\nindex 793bf19dc9..83e9b64965 100644\n--- a/camel/logger.py\n+++ b/camel/logger.py\n@@ -31,7 +31,7 @@ def _configure_library_logging():\n             stream=sys.stdout,\n         )\n         logging.setLoggerClass(logging.Logger)\n-        _logger.info(\"Camel library logging has been configured.\")\n+        _logger.info(\"CAMEL library logging has been configured.\")\n     else:\n         _logger.debug(\"Existing logger configuration found, using that.\")\n \ndiff --git a/camel/models/anthropic_model.py b/camel/models/anthropic_model.py\nindex 0b1e1827e9..27d5ff16a2 100644\n--- a/camel/models/anthropic_model.py\n+++ b/camel/models/anthropic_model.py\n@@ -45,6 +45,11 @@ class AnthropicModel(BaseModelBackend):\n             will be used. (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"ANTHROPIC_API_KEY\"),\n+        ]\n+    )\n     @dependencies_required('anthropic')\n     def __init__(\n         self,\n@@ -118,7 +123,6 @@ def count_tokens_from_prompt(\n             model=self.model_type,\n         ).input_tokens\n \n-    @api_keys_required(\"ANTHROPIC_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/azure_openai_model.py b/camel/models/azure_openai_model.py\nindex afe9a63208..1a87b4bea0 100644\n--- a/camel/models/azure_openai_model.py\n+++ b/camel/models/azure_openai_model.py\n@@ -24,7 +24,7 @@\n     ChatCompletionChunk,\n     ModelType,\n )\n-from camel.utils import BaseTokenCounter, OpenAITokenCounter, api_keys_required\n+from camel.utils import BaseTokenCounter, OpenAITokenCounter\n \n \n class AzureOpenAIModel(BaseModelBackend):\n@@ -107,7 +107,6 @@ def token_counter(self) -> BaseTokenCounter:\n             self._token_counter = OpenAITokenCounter(self.model_type)\n         return self._token_counter\n \n-    @api_keys_required(\"AZURE_OPENAI_API_KEY\", \"AZURE_API_VERSION\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/cohere_model.py b/camel/models/cohere_model.py\nindex 8376f42f7e..53757ce205 100644\n--- a/camel/models/cohere_model.py\n+++ b/camel/models/cohere_model.py\n@@ -43,6 +43,11 @@\n class CohereModel(BaseModelBackend):\n     r\"\"\"Cohere API in a unified BaseModelBackend interface.\"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'COHERE_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -210,7 +215,6 @@ def token_counter(self) -> BaseTokenCounter:\n             )\n         return self._token_counter\n \n-    @api_keys_required(\"COHERE_API_KEY\")\n     def run(self, messages: List[OpenAIMessage]) -> ChatCompletion:\n         r\"\"\"Runs inference of Cohere chat completion.\n \ndiff --git a/camel/models/deepseek_model.py b/camel/models/deepseek_model.py\nindex bfa6483cde..b00078df2d 100644\n--- a/camel/models/deepseek_model.py\n+++ b/camel/models/deepseek_model.py\n@@ -50,6 +50,11 @@ class DeepSeekModel(BaseModelBackend):\n         https://api-docs.deepseek.com/\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"DEEPSEEK_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -90,7 +95,6 @@ def token_counter(self) -> BaseTokenCounter:\n             )\n         return self._token_counter\n \n-    @api_keys_required(\"DEEPSEEK_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/gemini_model.py b/camel/models/gemini_model.py\nindex bc255bd1a3..1e5b6b670a 100644\n--- a/camel/models/gemini_model.py\n+++ b/camel/models/gemini_model.py\n@@ -52,6 +52,11 @@ class GeminiModel(BaseModelBackend):\n             (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'GEMINI_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -77,7 +82,6 @@ def __init__(\n             base_url=self._url,\n         )\n \n-    @api_keys_required(\"GEMINI_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/groq_model.py b/camel/models/groq_model.py\nindex 7eb0a477fd..f00eac3b24 100644\n--- a/camel/models/groq_model.py\n+++ b/camel/models/groq_model.py\n@@ -51,6 +51,11 @@ class GroqModel(BaseModelBackend):\n             (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"GROQ_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -89,7 +94,6 @@ def token_counter(self) -> BaseTokenCounter:\n             self._token_counter = OpenAITokenCounter(ModelType.GPT_4O_MINI)\n         return self._token_counter\n \n-    @api_keys_required(\"GROQ_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/mistral_model.py b/camel/models/mistral_model.py\nindex d95aa992b2..76d5fdb13b 100644\n--- a/camel/models/mistral_model.py\n+++ b/camel/models/mistral_model.py\n@@ -59,6 +59,11 @@ class MistralModel(BaseModelBackend):\n             be used. (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"MISTRAL_API_KEY\"),\n+        ]\n+    )\n     @dependencies_required('mistralai')\n     def __init__(\n         self,\n@@ -200,7 +205,6 @@ def token_counter(self) -> BaseTokenCounter:\n             )\n         return self._token_counter\n \n-    @api_keys_required(\"MISTRAL_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/nemotron_model.py b/camel/models/nemotron_model.py\nindex dbc6d504b8..cc787ea93c 100644\n--- a/camel/models/nemotron_model.py\n+++ b/camel/models/nemotron_model.py\n@@ -40,6 +40,11 @@ class NemotronModel(BaseModelBackend):\n         Nemotron model doesn't support additional model config like OpenAI.\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"NVIDIA_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -58,7 +63,6 @@ def __init__(\n             api_key=self._api_key,\n         )\n \n-    @api_keys_required(\"NVIDIA_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/nvidia_model.py b/camel/models/nvidia_model.py\nindex 47f071b508..732fb2ae2f 100644\n--- a/camel/models/nvidia_model.py\n+++ b/camel/models/nvidia_model.py\n@@ -48,6 +48,11 @@ class NvidiaModel(BaseModelBackend):\n             (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"NVIDIA_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -72,7 +77,6 @@ def __init__(\n             base_url=self._url,\n         )\n \n-    @api_keys_required(\"NVIDIA_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/openai_model.py b/camel/models/openai_model.py\nindex e991bae4ad..a9f3308cb3 100644\n--- a/camel/models/openai_model.py\n+++ b/camel/models/openai_model.py\n@@ -52,6 +52,11 @@ class OpenAIModel(BaseModelBackend):\n             be used. (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"OPENAI_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -86,7 +91,6 @@ def token_counter(self) -> BaseTokenCounter:\n             self._token_counter = OpenAITokenCounter(self.model_type)\n         return self._token_counter\n \n-    @api_keys_required(\"OPENAI_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/qwen_model.py b/camel/models/qwen_model.py\nindex 9135fa270a..6c4c484f0f 100644\n--- a/camel/models/qwen_model.py\n+++ b/camel/models/qwen_model.py\n@@ -52,6 +52,11 @@ class QwenModel(BaseModelBackend):\n             (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"QWEN_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -77,7 +82,6 @@ def __init__(\n             base_url=self._url,\n         )\n \n-    @api_keys_required(\"QWEN_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/reka_model.py b/camel/models/reka_model.py\nindex e182fd05ba..d2026da05a 100644\n--- a/camel/models/reka_model.py\n+++ b/camel/models/reka_model.py\n@@ -56,6 +56,11 @@ class RekaModel(BaseModelBackend):\n             be used. (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"REKA_API_KEY\"),\n+        ]\n+    )\n     @dependencies_required('reka')\n     def __init__(\n         self,\n@@ -168,7 +173,6 @@ def token_counter(self) -> BaseTokenCounter:\n             )\n         return self._token_counter\n \n-    @api_keys_required(\"REKA_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/reward/nemotron_model.py b/camel/models/reward/nemotron_model.py\nindex 9dd22df4b4..4c1bc6192c 100644\n--- a/camel/models/reward/nemotron_model.py\n+++ b/camel/models/reward/nemotron_model.py\n@@ -53,7 +53,11 @@ def __init__(\n             api_key=self.api_key,\n         )\n \n-    @api_keys_required(\"NVIDIA_API_KEY\")\n+    @api_keys_required(\n+        [\n+            (None, \"NVIDIA_API_KEY\"),\n+        ]\n+    )\n     def evaluate(self, messages: List[Dict[str, str]]) -> Dict[str, float]:\n         r\"\"\"Evaluate the messages using the Nemotron model.\n \ndiff --git a/camel/models/samba_model.py b/camel/models/samba_model.py\nindex 1f4db42972..4a5347b972 100644\n--- a/camel/models/samba_model.py\n+++ b/camel/models/samba_model.py\n@@ -74,6 +74,11 @@ class SambaModel(BaseModelBackend):\n             ModelType.GPT_4O_MINI)` will be used.\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'SAMBA_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -143,7 +148,6 @@ def check_model_config(self):\n                 \" SambaNova service\"\n             )\n \n-    @api_keys_required(\"SAMBA_API_KEY\")\n     def run(  # type: ignore[misc]\n         self, messages: List[OpenAIMessage]\n     ) -> Union[ChatCompletion, Stream[ChatCompletionChunk]]:\ndiff --git a/camel/models/togetherai_model.py b/camel/models/togetherai_model.py\nindex 2fe5efd3c9..824942f300 100644\n--- a/camel/models/togetherai_model.py\n+++ b/camel/models/togetherai_model.py\n@@ -53,6 +53,11 @@ class TogetherAIModel(BaseModelBackend):\n             ModelType.GPT_4O_MINI)` will be used.\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'TOGETHER_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -78,7 +83,6 @@ def __init__(\n             base_url=self._url,\n         )\n \n-    @api_keys_required(\"TOGETHER_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/yi_model.py b/camel/models/yi_model.py\nindex 5b195bb5cb..96758d7d76 100644\n--- a/camel/models/yi_model.py\n+++ b/camel/models/yi_model.py\n@@ -52,6 +52,11 @@ class YiModel(BaseModelBackend):\n             (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'YI_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -76,7 +81,6 @@ def __init__(\n             base_url=self._url,\n         )\n \n-    @api_keys_required(\"YI_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/models/zhipuai_model.py b/camel/models/zhipuai_model.py\nindex b360f67be0..0be8a6f392 100644\n--- a/camel/models/zhipuai_model.py\n+++ b/camel/models/zhipuai_model.py\n@@ -52,6 +52,11 @@ class ZhipuAIModel(BaseModelBackend):\n             (default: :obj:`None`)\n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", 'ZHIPUAI_API_KEY'),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: Union[ModelType, str],\n@@ -76,7 +81,6 @@ def __init__(\n             base_url=self._url,\n         )\n \n-    @api_keys_required(\"ZHIPUAI_API_KEY\")\n     def run(\n         self,\n         messages: List[OpenAIMessage],\ndiff --git a/camel/schemas/openai_converter.py b/camel/schemas/openai_converter.py\nindex e534b1e5e4..1421cabb54 100644\n--- a/camel/schemas/openai_converter.py\n+++ b/camel/schemas/openai_converter.py\n@@ -53,6 +53,11 @@ class OpenAISchemaConverter(BaseConverter):\n \n     \"\"\"\n \n+    @api_keys_required(\n+        [\n+            (\"api_key\", \"OPENAI_API_KEY\"),\n+        ]\n+    )\n     def __init__(\n         self,\n         model_type: ModelType = ModelType.GPT_4O_MINI,\n@@ -69,7 +74,6 @@ def __init__(\n         )._client\n         super().__init__()\n \n-    @api_keys_required(\"OPENAI_API_KEY\")\n     def convert(  # type: ignore[override]\n         self,\n         content: str,\ndiff --git a/camel/toolkits/meshy_toolkit.py b/camel/toolkits/meshy_toolkit.py\nindex 3987b2dbdc..42cbebd5b2 100644\n--- a/camel/toolkits/meshy_toolkit.py\n+++ b/camel/toolkits/meshy_toolkit.py\n@@ -33,7 +33,11 @@ class MeshyToolkit(BaseToolkit):\n     https://docs.meshy.ai/api-text-to-3d-beta#create-a-text-to-3d-preview-task\n     \"\"\"\n \n-    @api_keys_required(\"MESHY_API_KEY\")\n+    @api_keys_required(\n+        [\n+            (None, 'MESHY_API_KEY'),\n+        ]\n+    )\n     def __init__(self):\n         r\"\"\"Initializes the MeshyToolkit with the API key from the\n         environment.\ndiff --git a/camel/toolkits/search_toolkit.py b/camel/toolkits/search_toolkit.py\nindex 8441e4199d..de5d755e69 100644\n--- a/camel/toolkits/search_toolkit.py\n+++ b/camel/toolkits/search_toolkit.py\n@@ -224,7 +224,11 @@ def search_duckduckgo(\n         # If no answer found, return an empty list\n         return responses\n \n-    @api_keys_required(\"BRAVE_API_KEY\")\n+    @api_keys_required(\n+        [\n+            (None, 'BRAVE_API_KEY'),\n+        ]\n+    )\n     def search_brave(\n         self,\n         q: str,\n@@ -370,7 +374,12 @@ def search_brave(\n         data = response.json()[\"web\"]\n         return data\n \n-    @api_keys_required(\"GOOGLE_API_KEY\", \"SEARCH_ENGINE_ID\")\n+    @api_keys_required(\n+        [\n+            (None, 'GOOGLE_API_KEY'),\n+            (None, 'SEARCH_ENGINE_ID'),\n+        ]\n+    )\n     def search_google(\n         self, query: str, num_result_pages: int = 5\n     ) -> List[Dict[str, Any]]:\n@@ -502,8 +511,7 @@ def query_wolfram_alpha(\n         if not WOLFRAMALPHA_APP_ID:\n             raise ValueError(\n                 \"`WOLFRAMALPHA_APP_ID` not found in environment \"\n-                \"variables. Get `WOLFRAMALPHA_APP_ID` here: \"\n-                \"`https://products.wolframalpha.com/api/`.\"\n+                \"variables. Get `WOLFRAMALPHA_APP_ID` here: `https://products.wolframalpha.com/api/`.\"\n             )\n \n         try:\ndiff --git a/camel/toolkits/stripe_toolkit.py b/camel/toolkits/stripe_toolkit.py\nindex 07ca9f1933..f31fff8d51 100644\n--- a/camel/toolkits/stripe_toolkit.py\n+++ b/camel/toolkits/stripe_toolkit.py\n@@ -36,7 +36,11 @@ class StripeToolkit(BaseToolkit):\n         logger (Logger): a logger to write logs.\n     \"\"\"\n \n-    @api_keys_required(\"STRIPE_API_KEY\")\n+    @api_keys_required(\n+        [\n+            (None, \"STRIPE_API_KEY\"),\n+        ]\n+    )\n     def __init__(self, retries: int = 3):\n         r\"\"\"Initializes the StripeToolkit with the specified number of\n         retries.\ndiff --git a/camel/toolkits/twitter_toolkit.py b/camel/toolkits/twitter_toolkit.py\nindex 286ea3d09d..d3ae237f74 100644\n--- a/camel/toolkits/twitter_toolkit.py\n+++ b/camel/toolkits/twitter_toolkit.py\n@@ -31,10 +31,12 @@\n \n \n @api_keys_required(\n-    \"TWITTER_CONSUMER_KEY\",\n-    \"TWITTER_CONSUMER_SECRET\",\n-    \"TWITTER_ACCESS_TOKEN\",\n-    \"TWITTER_ACCESS_TOKEN_SECRET\",\n+    [\n+        (None, \"TWITTER_CONSUMER_KEY\"),\n+        (None, \"TWITTER_CONSUMER_SECRET\"),\n+        (None, \"TWITTER_ACCESS_TOKEN\"),\n+        (None, \"TWITTER_ACCESS_TOKEN_SECRET\"),\n+    ]\n )\n def create_tweet(\n     text: str,\n@@ -132,10 +134,12 @@ def create_tweet(\n \n \n @api_keys_required(\n-    \"TWITTER_CONSUMER_KEY\",\n-    \"TWITTER_CONSUMER_SECRET\",\n-    \"TWITTER_ACCESS_TOKEN\",\n-    \"TWITTER_ACCESS_TOKEN_SECRET\",\n+    [\n+        (None, \"TWITTER_CONSUMER_KEY\"),\n+        (None, \"TWITTER_CONSUMER_SECRET\"),\n+        (None, \"TWITTER_ACCESS_TOKEN\"),\n+        (None, \"TWITTER_ACCESS_TOKEN_SECRET\"),\n+    ]\n )\n def delete_tweet(tweet_id: str) -> str:\n     r\"\"\"Deletes a tweet with the specified ID for an authorized user.\n@@ -187,10 +191,12 @@ def delete_tweet(tweet_id: str) -> str:\n \n \n @api_keys_required(\n-    \"TWITTER_CONSUMER_KEY\",\n-    \"TWITTER_CONSUMER_SECRET\",\n-    \"TWITTER_ACCESS_TOKEN\",\n-    \"TWITTER_ACCESS_TOKEN_SECRET\",\n+    [\n+        (None, \"TWITTER_CONSUMER_KEY\"),\n+        (None, \"TWITTER_CONSUMER_SECRET\"),\n+        (None, \"TWITTER_ACCESS_TOKEN\"),\n+        (None, \"TWITTER_ACCESS_TOKEN_SECRET\"),\n+    ]\n )\n def get_my_user_profile() -> str:\n     r\"\"\"Retrieves the authenticated user's Twitter profile info.\n@@ -214,10 +220,12 @@ def get_my_user_profile() -> str:\n \n \n @api_keys_required(\n-    \"TWITTER_CONSUMER_KEY\",\n-    \"TWITTER_CONSUMER_SECRET\",\n-    \"TWITTER_ACCESS_TOKEN\",\n-    \"TWITTER_ACCESS_TOKEN_SECRET\",\n+    [\n+        (None, \"TWITTER_CONSUMER_KEY\"),\n+        (None, \"TWITTER_CONSUMER_SECRET\"),\n+        (None, \"TWITTER_ACCESS_TOKEN\"),\n+        (None, \"TWITTER_ACCESS_TOKEN_SECRET\"),\n+    ]\n )\n def get_user_by_username(username: str) -> str:\n     r\"\"\"Retrieves one user's Twitter profile info by username (handle).\ndiff --git a/camel/utils/commons.py b/camel/utils/commons.py\nindex 3dca5de90f..a131f41770 100644\n--- a/camel/utils/commons.py\n+++ b/camel/utils/commons.py\n@@ -30,6 +30,7 @@\n     Mapping,\n     Optional,\n     Set,\n+    Tuple,\n     Type,\n     TypeVar,\n     cast,\n@@ -232,41 +233,79 @@ def is_module_available(module_name: str) -> bool:\n         return False\n \n \n-def api_keys_required(*required_keys: str) -> Callable[[F], F]:\n-    r\"\"\"A decorator to check if the required API keys are\n-    presented in the environment variables or as an instance attribute.\n+def api_keys_required(\n+    param_env_list: List[Tuple[Optional[str], str]],\n+) -> Callable[[F], F]:\n+    r\"\"\"A decorator to check if the required API keys are provided in the\n+    environment variables or as function arguments.\n \n     Args:\n-        required_keys (str): The required API keys to be checked.\n+        param_env_list (List[Tuple[Optional[str], str]]): A list of tuples\n+            where each tuple contains a function argument name (as the first\n+            element, or None) and the corresponding environment variable name\n+            (as the second element) that holds the API key.\n \n     Returns:\n-        Callable[[F], F]: The original function with the added check\n-            for required API keys.\n+        Callable[[F], F]: The original function wrapped with the added check\n+            for the required API keys.\n \n     Raises:\n-        ValueError: If any of the required API keys are missing in the\n-            environment variables and the instance attribute.\n+        ValueError: If any of the required API keys are missing, either\n+            from the function arguments or environment variables.\n \n     Example:\n         ::\n \n-            @api_keys_required('API_KEY_1', 'API_KEY_2')\n-            def some_api_function():\n-                # Function implementation...\n+            @api_keys_required([\n+                ('api_key_arg', 'API_KEY_1'),\n+                ('another_key_arg', 'API_KEY_2'),\n+                (None, 'API_KEY_3'),\n+            ])\n+            def some_api_function(api_key_arg=None, another_key_arg=None):\n+                # Function implementation that requires API keys\n     \"\"\"\n+    import inspect\n \n     def decorator(func: F) -> F:\n         @wraps(func)\n         def wrapper(*args: Any, **kwargs: Any) -> Any:\n-            missing_environment_keys = [\n-                k for k in required_keys if k not in os.environ\n-            ]\n-            if (\n-                not (args and getattr(args[0], '_api_key', None))\n-                and missing_environment_keys\n-            ):\n+            signature = inspect.signature(func)\n+            bound_arguments = signature.bind(*args, **kwargs)\n+            bound_arguments.apply_defaults()\n+            arguments = bound_arguments.arguments\n+\n+            missing_keys = []\n+            for param_name, env_var_name in param_env_list:\n+                if not isinstance(env_var_name, str):\n+                    raise TypeError(\n+                        f\"Environment variable name must be a string, got\"\n+                        f\" {type(env_var_name)}\"\n+                    )\n+\n+                value = None\n+                if (\n+                    param_name\n+                ):  # If param_name is provided, check function argument first\n+                    if not isinstance(param_name, str):\n+                        raise TypeError(\n+                            f\"Parameter name must be a string, \"\n+                            f\"got {type(param_name)}\"\n+                        )\n+                    value = arguments.get(param_name)\n+                    # If we found a valid value in arguments, continue to next\n+                    # item\n+                    if value:\n+                        continue\n+\n+                # Check environment variable if no valid value found yet\n+                value = os.environ.get(env_var_name)\n+                if not value or value.strip() == \"\":\n+                    missing_keys.append(env_var_name)\n+\n+            if missing_keys:\n                 raise ValueError(\n-                    f\"Missing API keys: {', '.join(missing_environment_keys)}\"\n+                    \"Missing or empty required API keys in \"\n+                    f\"environment variables: {', '.join(missing_keys)}\"\n                 )\n             return func(*args, **kwargs)\n \n",
        "test_patch": "diff --git a/.github/workflows/pytest_package.yml b/.github/workflows/pytest_package.yml\nindex a515fc064f..b22e960462 100644\n--- a/.github/workflows/pytest_package.yml\n+++ b/.github/workflows/pytest_package.yml\n@@ -49,6 +49,12 @@ jobs:\n         ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n         CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n         MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n+        YI_API_KEY: \"${{ secrets.YI_API_KEY }}\"\n+        TOGETHER_API_KEY: \"${{ secrets.TOGETHER_API_KEY }}\"\n+        SAMBA_API_KEY: \"${{ secrets.SAMBA_API_KEY }}\"\n+        QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n+        GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n+        DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n       run: poetry run pytest --fast-test-mode test/\n \n   pytest_package_llm_test:\n@@ -87,6 +93,12 @@ jobs:\n         ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n         CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n         MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n+        YI_API_KEY: \"${{ secrets.YI_API_KEY }}\"\n+        TOGETHER_API_KEY: \"${{ secrets.TOGETHER_API_KEY }}\"\n+        SAMBA_API_KEY: \"${{ secrets.SAMBA_API_KEY }}\"\n+        QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n+        GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n+        DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n       run: poetry run pytest --llm-test-only test/\n \n   pytest_package_very_slow_test:\n@@ -125,4 +137,10 @@ jobs:\n         ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n         CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n         MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n+        YI_API_KEY: \"${{ secrets.YI_API_KEY }}\"\n+        TOGETHER_API_KEY: \"${{ secrets.TOGETHER_API_KEY }}\"\n+        SAMBA_API_KEY: \"${{ secrets.SAMBA_API_KEY }}\"\n+        QWEN_API_KEY: \"${{ secrets.QWEN_API_KEY }}\"\n+        GEMINI_API_KEY: \"${{ secrets.GEMINI_API_KEY }}\"\n+        DEEPSEEK_API_KEY: \"${{ secrets.DEEPSEEK_API_KEY }}\"\n       run: poetry run pytest --very-slow-test-only test/\ndiff --git a/test/utils/test_commons.py b/test/utils/test_commons.py\nindex 0703a33183..138a22235b 100644\n--- a/test/utils/test_commons.py\n+++ b/test/utils/test_commons.py\n@@ -12,6 +12,7 @@\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n import os\n+from unittest import TestCase\n from unittest.mock import patch\n \n import pytest\n@@ -68,65 +69,6 @@ def mock_dependencies_not_present():\n     assert \"Missing required modules: some_module_not_exist\" in str(exc.value)\n \n \n-@pytest.fixture\n-def setup_env_vars():\n-    original_env = os.environ.copy()\n-    os.environ['API_KEY_1'] = 'API_KEY_1_VALUE'\n-    os.environ['API_KEY_2'] = 'API_KEY_2_VALUE'\n-    yield\n-    os.environ.clear()\n-    os.environ.update(original_env)\n-\n-\n-def test_api_keys_required(setup_env_vars):\n-    class MockClass:\n-        @api_keys_required('API_KEY_1', 'API_KEY_2')\n-        def mock_api_keys_exist(self):\n-            return True\n-\n-        @api_keys_required('API_KEY_1', 'API_KEY_2', 'API_KEY_3')\n-        def mock_api_keys_not_exist(self):\n-            return True\n-\n-    mock_instance = MockClass()\n-\n-    # Test case where all required API keys are present\n-    assert mock_instance.mock_api_keys_exist() is True\n-\n-    # Test case where some required API keys are missing\n-    with pytest.raises(ValueError) as exc:\n-        mock_instance.mock_api_keys_not_exist()\n-    assert \"Missing API keys: API_KEY_3\" in str(exc.value)\n-\n-    # Test case with no API keys set\n-    os.environ.clear()\n-    with pytest.raises(ValueError) as exc:\n-        mock_instance.mock_api_keys_exist()\n-    assert \"Missing API keys: API_KEY_1, API_KEY_2\" in str(exc.value)\n-\n-\n-def test_api_keys_required_empty(setup_env_vars):\n-    class MockClass:\n-        @api_keys_required()\n-        def mock_no_keys_required(self):\n-            return True\n-\n-    mock_instance = MockClass()\n-    assert mock_instance.mock_no_keys_required() is True\n-\n-\n-def test_api_keys_required_non_existent(setup_env_vars):\n-    class MockClass:\n-        @api_keys_required('NON_EXISTENT_KEY')\n-        def mock_non_existent_key(self):\n-            return True\n-\n-    mock_instance = MockClass()\n-    with pytest.raises(ValueError) as exc:\n-        mock_instance.mock_non_existent_key()\n-    assert \"Missing API keys: NON_EXISTENT_KEY\" in str(exc.value)\n-\n-\n def test_get_system_information():\n     # Call the function\n     sys_info = get_system_information()\n@@ -201,3 +143,90 @@ def test_is_docker_running(mock_subprocess_run):\n \n     mock_subprocess_run.side_effect = FileNotFoundError\n     assert not is_docker_running()\n+\n+\n+class TestApiKeysRequired(TestCase):\n+    @patch.dict(os.environ, {}, clear=True)\n+    def test_missing_keys(self):\n+        @api_keys_required([('api_key_arg', 'API_KEY')])\n+        def some_function(api_key_arg=None):\n+            return \"Function called\"\n+\n+        with self.assertRaises(ValueError) as context:\n+            some_function()\n+\n+        assert (\n+            \"Missing or empty required API keys in environment variables\"\n+            \": API_KEY\" in str(context.exception)\n+        )\n+\n+    @patch.dict(os.environ, {'API_KEY': 'secret_environment_key'}, clear=True)\n+    def test_keys_in_environment(self):\n+        @api_keys_required([('api_key_arg', 'API_KEY')])\n+        def some_function(api_key_arg=None):\n+            return f\"Function called with api_key_arg={api_key_arg}\"\n+\n+        result = some_function()\n+        assert result == \"Function called with api_key_arg=None\"\n+\n+    def test_keys_in_arguments(self):\n+        @api_keys_required([('api_key_arg', 'API_KEY')])\n+        def some_function(api_key_arg=None):\n+            return f\"Function called with api_key_arg={api_key_arg}\"\n+\n+        result = some_function(api_key_arg='secret_argument_key')\n+        assert result == \"Function called with api_key_arg=secret_argument_key\"\n+\n+    @patch.dict(os.environ, {'API_KEY': 'secret_environment_key'}, clear=True)\n+    def test_keys_in_both(self):\n+        @api_keys_required([('api_key_arg', 'API_KEY')])\n+        def some_function(api_key_arg=None):\n+            return f\"Function called with api_key_arg={api_key_arg}\"\n+\n+        result = some_function(api_key_arg='secret_argument_key')\n+        assert result == \"Function called with api_key_arg=secret_argument_key\"\n+\n+    def test_invalid_env_var_name_type(self):\n+        with self.assertRaises(TypeError) as context:\n+\n+            @api_keys_required(\n+                [('api_key_arg', 123)]\n+            )  # Non-string environment variable name\n+            def some_function(api_key_arg=None):\n+                return \"Function called\"\n+\n+            # Call the function to trigger the validation\n+            some_function()\n+\n+        self.assertIn(\n+            \"Environment variable name must be a string\",\n+            str(context.exception),\n+        )\n+\n+    def test_invalid_param_name_type(self):\n+        with self.assertRaises(TypeError) as context:\n+\n+            @api_keys_required([(123, 'API_KEY')])  # Non-string parameter name\n+            def some_function(api_key_arg=None):\n+                return \"Function called\"\n+\n+            # Call the function to trigger the validation\n+            some_function()\n+\n+        self.assertIn(\n+            \"Parameter name must be a string\", str(context.exception)\n+        )\n+\n+    @patch.dict(os.environ, {'API_KEY': ' '}, clear=True)\n+    def test_empty_env_var(self):\n+        @api_keys_required([('api_key_arg', 'API_KEY')])\n+        def some_function(api_key_arg=None):\n+            return \"Function called\"\n+\n+        with self.assertRaises(ValueError) as context:\n+            some_function()\n+\n+        assert (\n+            \"Missing or empty required API keys in environment \"\n+            \"variables: API_KEY\" in str(context.exception)\n+        )\n",
        "problem_statement": "[BUG] api_keys_required() is not compatible with the method of directly setting api_key\n### Required prerequisites\n\n- [X] I have read the documentation <https://camel-ai.github.io/camel/camel.html>.\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### What version of camel are you using?\n\n0.2.10\n\n### System information\n\n3.10.10 (tags/v3.10.10:aad5f6a, Feb  7 2023, 17:20:36) [MSC v.1929 64 bit (AMD64)] win32\r\n\r\n0.2.9\n\n### Problem description\n\n```python\r\nfrom camel.utils import api_keys_required\r\n\r\n\r\nclass DummyClass:\r\n    @api_keys_required(\"DUMMY_TOKEN\")\r\n    def __init__(self, api_key: str):\r\n        self._api_key = api_key\r\n\r\n\r\ndc = DummyClass(api_key=\"xxxxx\")\r\n```\r\n\r\n```bash\r\n$ python test_api_keys.py\r\nTraceback (most recent call last):\r\n  File \"path\\to\\test_api_keys.py\", line 10, in <module>\r\n    dc = DummyClass(api_key=\"xxxxx\")\r\n  File \"path\\to\\camel\\utils\\commons.py\", line 268, in wrapper\r\n    raise ValueError(\r\nValueError: Missing API keys: DUMMY_TOKEN\r\n```\r\n\r\n`api_keys_required()` currently only supports setting the value of `\"DUMMY_TOKEN\"` in the environment variable, but does not support directly calling `DummyClass(api_key=\"xxxx\")`.\r\n\r\nI saw that in the implementation of the decorator, it is detected whether the `_api_key` of the class has a value, but when the decorator is used in `__init__()`, the decorator acts before the `__init__()` call, so it is actually `_api_key` has no value, `(args and getattr(args[0], '_api_key', None))` is always `False`.\r\n\r\nI guess the implementation of this step is actually to be compatible with direct assignment? The parameters passed in will exist in `args[1:]` or `kwargs`.\r\n\r\n```python\r\nfrom camel.utils import api_keys_required\r\n\r\n\r\nclass DummyClass:\r\n    @api_keys_required(\"DUMMY_TOKEN\")\r\n    def __init__(self, api_key: str):\r\n        self._api_key = api_key\r\n\r\n\r\ndc = DummyClass(api_key=\"xxxxx\")\r\n\"\"\"\r\npython examples\\test_api_keys.py\r\nargs=(<__main__.DummyClass object at 0x000001F70381A9B0>,), kwargs={'api_key': 'xxxxx'}\r\n\"\"\"\r\n# or\r\ndc = DummyClass(\"xxxxx\")\r\nargs=(<__main__.DummyClass object at 0x0000020D5C6DA9B0>, 'xxxxx'), kwargs={}\r\n```\r\n\r\n---\r\nI believe the above issues can be easily solved. we need to think about the following issues:\r\n`api_keys_required()` is designed for multiple api_keys, so it is impossible to uniformly determine one `_api_key` to use. If multiple API Keys exist, does it mean it can only use environment variables to assign values?\r\n\r\n---\r\nThe above question is based on my guess that `api_keys_required()` is compatible with the two assignment tokens of environment variables and `__init__()`. If there is any deviation, please clarify and discuss it.\n\n### Reproducible example code\n\n```python\r\nfrom camel.utils import api_keys_required\r\n\r\n\r\nclass DummyClass:\r\n    @api_keys_required(\"DUMMY_TOKEN\")\r\n    def __init__(self, api_key: str):\r\n        self._api_key = api_key\r\n\r\n\r\ndc = DummyClass(api_key=\"xxxxx\")\n\n### Traceback\n\n_No response_\n\n### Expected behavior\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-12-04T14:50:54Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            ".github/workflows/pytest_package.yml",
            "test/utils/test_commons.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1276,
        "instance_id": "camel-ai__camel-1276",
        "issue_numbers": [
            "1214"
        ],
        "base_commit": "1d5c85956500ea8daefe89dc033a336397eeaf5a",
        "patch": "diff --git a/camel/synthetic_datagen/__init__.py b/camel/synthetic_datagen/__init__.py\nnew file mode 100644\nindex 0000000000..78357c081c\n--- /dev/null\n+++ b/camel/synthetic_datagen/__init__.py\n@@ -0,0 +1,18 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from .self_instruct import SelfInstructPipeline\n+\n+__all__ = [\n+    \"SelfInstructPipeline\",\n+]\ndiff --git a/camel/synthetic_datagen/self_instruct/__init__.py b/camel/synthetic_datagen/self_instruct/__init__.py\nnew file mode 100644\nindex 0000000000..8aa32e461c\n--- /dev/null\n+++ b/camel/synthetic_datagen/self_instruct/__init__.py\n@@ -0,0 +1,36 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from .filter import (\n+    FILTER_REGISTRY,\n+    FilterFunction,\n+    InstructionFilter,\n+    KeywordFilter,\n+    LengthFilter,\n+    NonEnglishFilter,\n+    PunctuationFilter,\n+    RougeSimilarityFilter,\n+)\n+from .self_instruct import SelfInstructPipeline\n+\n+__all__ = [\n+    'SelfInstructPipeline',\n+    'InstructionFilter',\n+    'NonEnglishFilter',\n+    'PunctuationFilter',\n+    'RougeSimilarityFilter',\n+    'FilterFunction',\n+    'KeywordFilter',\n+    'LengthFilter',\n+    'FILTER_REGISTRY',\n+]\ndiff --git a/camel/synthetic_datagen/self_instruct/filter/__init__.py b/camel/synthetic_datagen/self_instruct/filter/__init__.py\nnew file mode 100644\nindex 0000000000..5dc4b7b01e\n--- /dev/null\n+++ b/camel/synthetic_datagen/self_instruct/filter/__init__.py\n@@ -0,0 +1,34 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from .filter_function import (\n+    FilterFunction,\n+    KeywordFilter,\n+    LengthFilter,\n+    NonEnglishFilter,\n+    PunctuationFilter,\n+    RougeSimilarityFilter,\n+)\n+from .filter_registry import FILTER_REGISTRY\n+from .instruction_filter import InstructionFilter\n+\n+__all__ = [\n+    \"LengthFilter\",\n+    \"NonEnglishFilter\",\n+    \"PunctuationFilter\",\n+    \"RougeSimilarityFilter\",\n+    \"FilterFunction\",\n+    \"KeywordFilter\",\n+    \"InstructionFilter\",\n+    \"FILTER_REGISTRY\",\n+]\ndiff --git a/camel/synthetic_datagen/self_instruct/filter/filter_function.py b/camel/synthetic_datagen/self_instruct/filter/filter_function.py\nnew file mode 100644\nindex 0000000000..4e7cf39935\n--- /dev/null\n+++ b/camel/synthetic_datagen/self_instruct/filter/filter_function.py\n@@ -0,0 +1,208 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import re\n+from abc import ABC, abstractmethod\n+from typing import List\n+\n+from rouge import Rouge\n+\n+from camel.models.reward import BaseRewardModel\n+\n+\n+class FilterFunction(ABC):\n+    r\"\"\"A base abstract class for filter functions.\n+\n+    Subclasses must implement the `apply` method, which determines whether\n+    a given instruction passes the filter criteria.\n+    \"\"\"\n+\n+    @abstractmethod\n+    def apply(self, instruction: str) -> bool:\n+        r\"\"\"Evaluate the given instruction based on the filter's criteria.\n+\n+        Args:\n+            instruction (str): The instruction to evaluate.\n+\n+        Returns:\n+            bool: True if the instruction passes the filter, False otherwise.\n+        \"\"\"\n+        pass\n+\n+\n+class LengthFilter(FilterFunction):\n+    r\"\"\"Filters instructions based on their word count.\n+\n+    Args:\n+        min_len (int): The minimum word count required for an instruction.\n+            (default::obj:`5`)\n+        max_len (int): The maximum word count allowed for an instruction.\n+            (default::obj:`200`)\n+    \"\"\"\n+\n+    def __init__(self, min_len: int = 5, max_len: int = 200):\n+        self.min_len = min_len\n+        self.max_len = max_len\n+\n+    def apply(self, instruction: str) -> bool:\n+        r\"\"\"Filter the instruction\n+\n+        Args:\n+            instruction (str): the instruction to be filtered.\n+\n+        Returns:\n+            bool: True if the length of the instruction is within the range\n+                of [min_len, max_len]\n+        \"\"\"\n+        word_count = len(instruction.split())\n+        return self.min_len <= word_count <= self.max_len\n+\n+\n+class KeywordFilter(FilterFunction):\n+    r\"\"\"Filters instructions that contain specific undesirable keywords.\n+\n+    Args:\n+        keywords (List[str]): A list of keywords to filter out.\n+    \"\"\"\n+\n+    def __init__(self, keywords: List[str]):\n+        self.keywords = [keyword.lower() for keyword in keywords]\n+\n+    def apply(self, instruction: str) -> bool:\n+        r\"\"\"Filter the instruction\n+\n+        Args:\n+            instruction (str): the instruction to be filtered.\n+\n+        Returns:\n+            bool: True Instruction must NOT contain any of the keywords.\n+        \"\"\"\n+        lower_instr = instruction.lower()\n+        return not any(keyword in lower_instr for keyword in self.keywords)\n+\n+\n+class PunctuationFilter(FilterFunction):\n+    r\"\"\"Filters instructions that begin with a non-alphanumeric character.\"\"\"\n+\n+    def apply(self, instruction: str) -> bool:\n+        r\"\"\"Filter the instruction\n+\n+        Args:\n+            instruction (str): the instruction to be filtered.\n+\n+        Returns:\n+            bool: True if the instruction does not start with punctuation.\n+        \"\"\"\n+        return not re.match(r'^[^\\w\\s]', instruction)\n+\n+\n+class NonEnglishFilter(FilterFunction):\n+    r\"\"\"Filters instructions that do not begin with English letters.\"\"\"\n+\n+    def apply(self, instruction: str) -> bool:\n+        r\"\"\"Filter the instruction\n+\n+        Args:\n+            instruction (str): the instruction to be filtered.\n+\n+        Returns:\n+            bool: True if the instruction starts with an English letter.\n+        \"\"\"\n+        return bool(re.match(r'^[A-Za-z]', instruction))\n+\n+\n+class RougeSimilarityFilter(FilterFunction):\n+    r\"\"\"Filters instructions that are too similar to existing instructions\n+    based on ROUGE scores.\n+\n+    Args:\n+        existing_instructions (List[str]): A list of existing instructions to\n+            compare against.\n+        threshold (float): The similarity threshold for filtering.\n+            (default::obj:`0.7`)\n+    \"\"\"\n+\n+    def __init__(\n+        self, existing_instructions: List[str], threshold: float = 0.7\n+    ):\n+        self.existing_instructions = existing_instructions\n+        self.threshold = threshold\n+        self.rouge = Rouge()\n+\n+    def apply(self, instruction: str) -> bool:\n+        r\"\"\"Filter the instruction\n+\n+        Args:\n+            instruction (str): the instruction to be filtered.\n+\n+        Returns:\n+            bool: True if the instruction's similarity to any existing\n+                instruction is below the threshold.\n+        \"\"\"\n+        if not self.existing_instructions:\n+            return True\n+\n+        for existing_instr in self.existing_instructions:\n+            scores = self.rouge.get_scores(instruction, existing_instr)\n+            score = scores[0]['rouge-l']['f']\n+            if score > self.threshold:\n+                return False\n+\n+        return True\n+\n+\n+class RewardModelFilter(FilterFunction):\n+    r\"\"\"Filters instructions based on scores provided by a reward model.\n+\n+    Args:\n+        reward_model (BaseRewardModel): The reward model used to evaluate\n+            the instructions.\n+        threshold (float): The minimum score required for an instruction\n+            to pass the filter.\n+    \"\"\"\n+\n+    def __init__(self, reward_model: BaseRewardModel, threshold: float = 0.5):\n+        self.reward_model = reward_model\n+        self.threshold = threshold\n+\n+    def apply(self, instruction: str) -> bool:\n+        r\"\"\"Filter the instruction\n+\n+        Args:\n+            instruction (str): The instruction to be filtered.\n+\n+        Returns:\n+            bool: True if the instruction's score is above the threshold.\n+\n+        Raises:\n+            ValueError: ValueError: If `score_types` is empty or if the\n+                required score is not found in `scores`.\n+        \"\"\"\n+\n+        messages = [{\"role\": \"user\", \"content\": instruction}]\n+        scores = self.reward_model.evaluate(messages)\n+        score_types = self.reward_model.get_scores_types()\n+        if not score_types:\n+            raise ValueError(\"No score types available from the reward model.\")\n+\n+        score_type = score_types[0]\n+        score = scores.get(score_type, None)\n+\n+        if score is None:\n+            raise ValueError(\n+                f\"Score type '{score_type}' is not found in the \"\n+                \"evaluation scores.\"\n+            )\n+\n+        return score >= self.threshold\ndiff --git a/camel/synthetic_datagen/self_instruct/filter/filter_registry.py b/camel/synthetic_datagen/self_instruct/filter/filter_registry.py\nnew file mode 100644\nindex 0000000000..ae3e156db6\n--- /dev/null\n+++ b/camel/synthetic_datagen/self_instruct/filter/filter_registry.py\n@@ -0,0 +1,56 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from typing import Any, Callable, Dict\n+\n+from .filter_function import (\n+    FilterFunction,\n+    KeywordFilter,\n+    LengthFilter,\n+    NonEnglishFilter,\n+    PunctuationFilter,\n+    RewardModelFilter,\n+    RougeSimilarityFilter,\n+)\n+\n+FILTER_REGISTRY: Dict[str, Callable[[Dict[str, Any]], FilterFunction]] = {\n+    \"length\": lambda kwargs: LengthFilter(\n+        min_len=kwargs.get(\"min_len\", 5), max_len=kwargs.get(\"max_len\", 200)\n+    ),\n+    \"keyword\": lambda kwargs: KeywordFilter(\n+        keywords=kwargs.get(\"keywords\", [\"image\", \"data\"])\n+    ),\n+    \"punctuation\": lambda kwargs: PunctuationFilter(),\n+    \"non_english\": lambda kwargs: NonEnglishFilter(),\n+    \"rouge_similarity\": lambda kwargs: RougeSimilarityFilter(\n+        existing_instructions=kwargs.get(\"existing_instructions\", []),\n+        threshold=kwargs.get(\"threshold\", 0.7),\n+    ),\n+    \"reward\": lambda kwargs: RewardModelFilter(\n+        reward_model=kwargs.get(\"reward_model\"),  # type:ignore[arg-type]\n+        threshold=kwargs.get(\"threshold\", 0.7),\n+    ),\n+}\n+\n+\n+def register_filter(\n+    name: str, constructor: Callable[[Dict[str, Any]], FilterFunction]\n+):\n+    r\"\"\"Registers a new filter constructor in FILTER_REGISTRY.\n+\n+    Args:\n+        name (str): Unique name of the filter.\n+        constructor (Callable[[Dict[str, Any]], FilterFunction]): Function to\n+            create the filter using a dictionary of parameters.\n+    \"\"\"\n+    FILTER_REGISTRY[name] = constructor\ndiff --git a/camel/synthetic_datagen/self_instruct/filter/instruction_filter.py b/camel/synthetic_datagen/self_instruct/filter/instruction_filter.py\nnew file mode 100644\nindex 0000000000..a1ea8726ff\n--- /dev/null\n+++ b/camel/synthetic_datagen/self_instruct/filter/instruction_filter.py\n@@ -0,0 +1,76 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from typing import Any, Dict, List\n+\n+from .filter_function import FilterFunction\n+from .filter_registry import FILTER_REGISTRY\n+\n+\n+class InstructionFilter:\n+    def __init__(self, filters_config: Dict[str, Dict[str, Any]]):\n+        r\"\"\"Initialize the InstructionFilter with a dictionary of filter\n+            configurations.\n+\n+        Args:\n+            filters_config(Dict[str, Dict[str, Any]]):\n+                Example filters_config:\n+                {\n+                    \"length\": {\"min_len\": 5, \"max_len\": 100},\n+                    \"keyword\": {\"keywords\": [\"image\", \"video\"]},\n+                    \"non_english\": {},\n+                    \"rouge_similarity\": {\n+                        \"existing_instructions\": [\"Some existing text\"],\n+                        \"threshold\": 0.6\n+                    }\n+                }\n+                Each key in filters_config corresponds to a filter name\n+                    (registered in FILTER_REGISTRY).\n+                Each value is a dict of parameters for that filter.\n+        \"\"\"\n+        self.filters: List[FilterFunction] = []\n+        for filter_name, params in filters_config.items():\n+            if filter_name not in FILTER_REGISTRY:\n+                raise ValueError(f\"Unknown filter function: {filter_name}\")\n+            self.filters.append(FILTER_REGISTRY[filter_name](params))\n+\n+    def add_filter(self, filter_function: FilterFunction):\n+        r\"\"\"Add a custom filter function to the InstructionFilter.\n+        This allows adding filters that are not in the registry.\n+\n+        Args:\n+            filter_function (FilterFunction): The filter function to be added\n+        \"\"\"\n+        self.filters.append(filter_function)\n+\n+    def filter(self, instruction: str, return_details: bool = False):\n+        r\"\"\"Check if the given instruction passes all filter functions.\n+\n+        Args:\n+            instruction (str): The instruction to evaluate.\n+            return_details (bool): If True, returns a tuple (bool, List[str])\n+                where the list contains the names of filters that failed.\n+                (default::obj:`False`)\n+\n+        Returns:\n+            bool: True if the instruction passes all filters, False otherwise.\n+                OR (bool, List[str]) if return_details is True.\n+        \"\"\"\n+        failed_filters = []\n+        for f in self.filters:\n+            if not f.apply(instruction):\n+                failed_filters.append(type(f).__name__)\n+\n+        if return_details:\n+            return len(failed_filters) == 0, failed_filters\n+        return len(failed_filters) == 0\ndiff --git a/camel/synthetic_datagen/self_instruct/self_instruct.py b/camel/synthetic_datagen/self_instruct/self_instruct.py\nnew file mode 100644\nindex 0000000000..d292eb52c7\n--- /dev/null\n+++ b/camel/synthetic_datagen/self_instruct/self_instruct.py\n@@ -0,0 +1,393 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import json\n+import os\n+import random\n+from typing import Any, Dict, List, Optional\n+\n+from pydantic import BaseModel, Field\n+\n+from camel.agents import ChatAgent\n+\n+from .filter import RougeSimilarityFilter\n+from .filter.instruction_filter import InstructionFilter\n+from .templates import SelfInstructTemplates\n+\n+\n+class SelfInstructPipeline:\n+    r\"\"\"A pipeline to generate and manage machine-generated instructions for\n+    tasks, combining human and machine task samples.\n+\n+    Args:\n+        agent (ChatAgent): The agent used to interact and generate\n+            instructions.\n+        seed (str): The path to the human-written instructions.\n+        num_machine_instructions (int): Number of machine-generated\n+            instructions to generate. (default::obj:`5`)\n+        data_output_path (Optional[str]): Path to save the generated data.\n+            (default::obj:`./data_output.json`)\n+        human_to_machine_ratio (tuple): Ratio of human to machine tasks used\n+            for instruction generation. (default::obj:`(6, 2)`)\n+        instruction_filter (InstructionFilter): A filter to validate\n+            generated instructions. (default::obj:`None`)\n+        filter_config (Optional[Dict[str, Dict[str, Any]]]): configuration\n+            for the filter functions registered in FILE_REGISTRY.\n+            (default::obj:`None`)\n+    \"\"\"\n+\n+    def __init__(\n+        self,\n+        agent: ChatAgent,\n+        seed: str,\n+        num_machine_instructions: int = 5,\n+        data_output_path: Optional[str] = './data_output.json',\n+        human_to_machine_ratio: tuple = (6, 2),\n+        instruction_filter: Optional[InstructionFilter] = None,\n+        filter_config: Optional[Dict[str, Dict[str, Any]]] = None,\n+    ):\n+        self.agent = agent\n+        self.num_machine_instructions = num_machine_instructions\n+        self.data_output_path = data_output_path\n+        self.human_to_machine_ratio = human_to_machine_ratio\n+        self.human_tasks: List[Dict] = []\n+        self.machine_tasks: List[Dict] = []\n+        self.load_seed(seed)\n+        default_config: Dict[str, Dict[str, Any]] = {\n+            \"length\": {},\n+            \"keyword\": {},\n+            \"punctuation\": {},\n+            \"non_english\": {},\n+            \"rouge_similarity\": {},\n+        }\n+\n+        if instruction_filter is not None:\n+            # custom\n+            self.instruction_filter = instruction_filter\n+        else:\n+            # default\n+            config_to_use = (\n+                filter_config if filter_config is not None else default_config\n+            )\n+            self.instruction_filter = InstructionFilter(config_to_use)\n+\n+    def load_seed(self, path: str):\n+        r\"\"\"Load seed tasks from a file. Defaults to a predefined seed file if\n+        no path is provided.\n+\n+        Args:\n+            path (str): Path to the seed file.\n+\n+        Raises:\n+            FileNotFoundError: If the seed file does not exist.\n+        \"\"\"\n+\n+        if os.path.exists(path):\n+            with open(path, 'r') as f:\n+                for line in f:\n+                    line = line.strip()\n+                    if line:\n+                        self.human_tasks.append(json.loads(line))\n+        else:\n+            raise FileNotFoundError(f\"Seed file not found at path: {path}\")\n+\n+    def sample_human_tasks(self, count: int) -> List[dict]:\n+        r\"\"\"Sample a specified number of human tasks from the loaded seed.\n+\n+        Args:\n+            count (int): Number of human tasks to sample.\n+\n+        Returns:\n+            List[dict]: A list of sampled human tasks.\n+        \"\"\"\n+        return random.sample(\n+            self.human_tasks, min(count, len(self.human_tasks))\n+        )\n+\n+    def sample_machine_tasks(self, count: int) -> List[dict]:\n+        r\"\"\"Sample a specified number of machine tasks.\n+\n+        Args:\n+            count (int): Number of machine tasks to sample.\n+\n+        Returns:\n+            List[dict]: A list of sampled machine tasks, with placeholders if\n+                insufficient tasks are available.\n+        \"\"\"\n+        available_machine_tasks = len(self.machine_tasks)\n+        if available_machine_tasks < count:\n+            sampled_tasks = self.machine_tasks.copy()\n+            placeholders_needed = count - available_machine_tasks\n+            sampled_tasks.extend(\n+                [{'instruction': \"\"} for _ in range(placeholders_needed)]\n+            )\n+            return sampled_tasks\n+\n+        return random.sample(self.machine_tasks, count)\n+\n+    def generate_machine_instruction(self) -> str:\n+        r\"\"\"Generate a machine instruction using the agent.\n+\n+        Combines human and machine tasks based on the configured ratio to\n+            create a prompt for instruction generation.\n+\n+        Returns:\n+            str: A machine-generated instruction.\n+        \"\"\"\n+\n+        sampled_human_tasks = self.sample_human_tasks(\n+            self.human_to_machine_ratio[0]\n+        )\n+        sampled_machine_tasks = self.sample_machine_tasks(\n+            self.human_to_machine_ratio[1]\n+        )\n+        prompt = \"Below are some tasks:\\n\\n\"\n+\n+        for idx, task in enumerate(sampled_human_tasks, 1):\n+            prompt += f\"Task {idx}: {task['instruction']}\\n\"\n+\n+        current_task_number = len(sampled_human_tasks) + 1\n+        for idx, task in enumerate(sampled_machine_tasks, current_task_number):\n+            prompt += f\"Task {idx}: {task['instruction']}\\n\"\n+\n+        task_num = len(sampled_human_tasks) + len(sampled_machine_tasks) + 1\n+        prompt += f\"Task {task_num}:\"\n+        prompt += (\n+            \"\\nNow, please produce exactly one new task that fits the \"\n+            \"style of the ones above.\\n Do not include any task numbering or \"\n+            \"labels like 'Task X:'. Just write the task itself.\\n\"\n+            \"The task should be a single sentence.\\n\\n\"\n+        )\n+\n+        response = self.agent.step(prompt)\n+        generated_tasks = [\n+            line.strip()\n+            for line in response.msgs[0].content.split(\"\\n\")\n+            if line.strip()\n+        ]\n+        return generated_tasks[0]\n+\n+    def identify_instruction(self, instruction: str) -> bool:\n+        r\"\"\"Determine if the given instruction is a classification task.\n+\n+        Args:\n+            instruction (str): The instruction to classify.\n+\n+        Returns:\n+            bool: True if the instruction is a classification task,\n+                otherwise False.\n+        \"\"\"\n+        clf_prompt = (\n+            SelfInstructTemplates.clf_template\n+            + f\"Task: {instruction}\\nIs it classification?\"\n+            + \"\\nRespond in the following structured format:\"\n+            \"\\n{\\n  \\\"answer\\\": true\\n}\\n\"\n+            \"or\\n\"\n+            \"{\\n  \\\"answer\\\": false\\n}\\n\"\n+        )\n+        response = self.agent.step(clf_prompt)\n+        try:\n+            structured_response = AgentResponse.parse_raw(\n+                response.msgs[0].content.strip()\n+            )\n+            return structured_response.answer\n+        except ValueError as e:\n+            print(f\"Error parsing agent response: {e}\")\n+            return False\n+\n+    def generate_machine_instances(self):\n+        r\"\"\"Generate instances for each machine task based on its\n+        classification status.\n+        \"\"\"\n+        for instruction in self.machine_tasks:\n+            instance = self.generate_machine_instance(\n+                instruction['instruction'], instruction['is_classification']\n+            )\n+            instruction['instances'] = instance\n+\n+    def generate_machine_instance(\n+        self, instruction: str, classification: bool\n+    ) -> list[dict]:\n+        r\"\"\"Generate instances for a given instruction.\n+\n+        Args:\n+            instruction (str): The instruction to create instances for.\n+            classification (bool): Whether the instruction is a classification\n+                task.\n+\n+        Returns:\n+            List[dict]: A list of generated instances in input-output format.\n+        \"\"\"\n+        if classification:\n+            prompt = (\n+                SelfInstructTemplates.output_first_template_for_clf.format(\n+                    instruction=instruction\n+                )\n+            )\n+        else:\n+            prompt = SelfInstructTemplates.input_first_template_for_gen.format(\n+                instruction=instruction\n+            )\n+\n+        response = self.agent.step(prompt)\n+        generated_text = response.msgs[0].content.strip()\n+\n+        if classification:\n+            return self.parse_classification_output(generated_text)\n+        else:\n+            return self.parse_non_classification_output(generated_text)\n+\n+    def parse_classification_output(\n+        self, generated_text: str\n+    ) -> List[Dict[str, str]]:\n+        r\"\"\"Parse the generated text for classification tasks into input-output\n+        pairs.\n+\n+        Args:\n+            generated_text (str): The raw text generated by the agent for\n+                classification tasks.\n+\n+        Returns:\n+            List[Dict[str, str]]: A list of dictionaries with 'input' and\n+                'output' keys.\n+        \"\"\"\n+        instances = []\n+        lines = generated_text.split(\"\\n\")\n+        current_label = None\n+        current_input = None\n+\n+        for line in lines:\n+            line = line.strip()\n+            if not line:\n+                continue\n+\n+            if line.startswith(\"Class label:\"):\n+                if current_label and current_input:\n+                    instances.append(\n+                        {\n+                            \"input\": current_input.strip(),\n+                            \"output\": current_label.strip(),\n+                        }\n+                    )\n+\n+                current_label = line[len(\"Class label:\") :].strip()\n+                current_input = None\n+            else:\n+                if current_input is None:\n+                    current_input = line\n+                else:\n+                    current_input += f\"\\n{line}\"\n+        if current_label and current_input:\n+            instances.append(\n+                {\n+                    \"input\": current_input.strip(),\n+                    \"output\": current_label.strip(),\n+                }\n+            )\n+\n+        return instances\n+\n+    def parse_non_classification_output(\n+        self, generated_text: str\n+    ) -> List[Dict[str, str]]:\n+        r\"\"\"Parse the generated text for non-classification tasks into\n+        input-output pairs.\n+\n+        Args:\n+            generated_text (str): The raw text generated by the agent for\n+                non-classification tasks.\n+\n+        Returns:\n+            List[Dict[str, str]]: A list of dictionaries with 'input' and\n+                'output' keys.\n+        \"\"\"\n+        instances = []\n+        prev = 0\n+        lines = generated_text.split(\"\\n\")\n+        i = 0\n+\n+        while i < len(lines):\n+            line = lines[i].strip()\n+\n+            if line.startswith(\"Example \"):\n+                prev = i + 1\n+\n+            elif line.startswith(\"Output:\"):\n+                instance_input = '\\n'.join(lines[prev:i]).strip()\n+                if instance_input.startswith(\"Input: \"):\n+                    instance_input = instance_input[len(\"Input: \") :].strip()\n+                else:\n+                    instance_input = instance_input.strip()\n+\n+                instance_output = line[len(\"Output:\") :].strip()\n+                i += 1\n+                while i < len(lines) and not lines[i].strip().startswith(\n+                    \"Example \"\n+                ):\n+                    instance_output += '\\n' + lines[i].strip()\n+                    i += 1\n+                i -= 1\n+\n+                instance_output = instance_output.strip()\n+\n+                instances.append(\n+                    {\"input\": instance_input, \"output\": instance_output}\n+                )\n+\n+                prev = i + 1\n+            i += 1\n+\n+        if not instances:\n+            instances.append({\"input\": \"\", \"output\": \"No valid output found.\"})\n+\n+        return instances\n+\n+    def construct_data(self):\n+        r\"\"\"Save the machine-generated tasks to the specified output path\n+        in JSON format.\n+        \"\"\"\n+        with open(self.data_output_path, 'w') as f:\n+            json.dump(self.machine_tasks, f, indent=4)\n+\n+    def generate(self):\n+        r\"\"\"Execute the entire pipeline to generate machine instructions\n+        and instances.\n+        \"\"\"\n+        while len(self.machine_tasks) < self.num_machine_instructions:\n+            existing_instructions = [\n+                t[\"instruction\"] for t in self.human_tasks\n+            ] + [t[\"instruction\"] for t in self.machine_tasks]\n+            for f in self.instruction_filter.filters:\n+                if isinstance(f, RougeSimilarityFilter):\n+                    f.existing_instructions = existing_instructions\n+            instruction = self.generate_machine_instruction()\n+            if self.instruction_filter.filter(instruction):\n+                instruction_dict = {\n+                    \"id\": f\"machine_task_{len(self.machine_tasks) + 1}\",\n+                    \"instruction\": instruction,\n+                    \"is_classification\": self.identify_instruction(\n+                        instruction\n+                    ),\n+                }\n+                self.machine_tasks.append(instruction_dict)\n+        self.generate_machine_instances()\n+        self.construct_data()\n+\n+\n+class AgentResponse(BaseModel):\n+    answer: bool = Field(\n+        ...,\n+        description=\"Indicates whether the task is \"\n+        \"classification (True/False).\",\n+    )\ndiff --git a/camel/synthetic_datagen/self_instruct/templates.py b/camel/synthetic_datagen/self_instruct/templates.py\nnew file mode 100644\nindex 0000000000..3fa2ec2e9f\n--- /dev/null\n+++ b/camel/synthetic_datagen/self_instruct/templates.py\n@@ -0,0 +1,384 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from dataclasses import dataclass\n+\n+\n+# flake8: noqa\n+@dataclass(frozen=True)\n+class SelfInstructTemplates:\n+    r\"\"\"Contains templates prompts for self-instruct data generation\"\"\"\n+\n+    clf_template = \"\"\" '''Can the following task be regarded as a classification task with finite output labels?\n+\n+    Task: Given my personality and the job, tell me if I would be suitable.\n+    Is it classification? Yes\n+    \n+    Task: Give me an example of a time when you had to use your sense of humor.\n+    Is it classification? No\n+    \n+    Task: Replace the placeholders in the given text with appropriate named entities.\n+    Is it classification? No\n+    \n+    Task: Fact checking - tell me if the statement is true, false, or unknown, based on your knowledge and common sense.\n+    Is it classification? Yes\n+    \n+    Task: Return the SSN number for the person.\n+    Is it classification? No\n+    \n+    Task: Detect if the Reddit thread contains hate speech.\n+    Is it classification? Yes\n+    \n+    Task: Analyze the sentences below to identify biases.\n+    Is it classification? No\n+    \n+    Task: Select the longest sentence in terms of the number of words in the paragraph, output the sentence index.\n+    Is it classification? Yes\n+    \n+    Task: Find out the toxic word or phrase in the sentence.\n+    Is it classification? No\n+    \n+    Task: Rank these countries by their population.\n+    Is it classification? No\n+    \n+    Task: You are provided with a news article, and you need to identify all the categories that this article belongs to. Possible categories include: Music, Sports, Politics, Tech, Finance, Basketball, Soccer, Tennis, Entertainment, Digital Game, World News. Output its categories one by one, seperated by comma.\n+    Is it classification? Yes\n+    \n+    Task: Given the name of an exercise, explain how to do it.\n+    Is it classification? No\n+    \n+    Task: Select the oldest person from the list.\n+    Is it classification? Yes\n+    \n+    Task: Find the four smallest perfect numbers.\n+    Is it classification? No\n+    \n+    Task: Does the information in the document supports the claim? You can answer \"Support\" or \"Unsupport\".\n+    Is it classification? Yes\n+    \n+    Task: Create a detailed budget for the given hypothetical trip.\n+    Is it classification? No\n+    \n+    Task: Given a sentence, detect if there is any potential stereotype in it. If so, you should explain the stereotype. Else, output no.\n+    Is it classification? No\n+    \n+    Task: Explain the following idiom to me, and try to give me some examples.\n+    Is it classification? No\n+    \n+    Task: Is there anything I can eat for a breakfast that doesn't include eggs, yet includes protein, and has roughly 700-1000 calories?\n+    Is it classification? No\n+    \n+    Task: Answer the following multiple choice question. Select A, B, C, or D for the final answer.\n+    Is it classification? Yes\n+    \n+    Task: Decide whether the syllogism is logically sound.\n+    Is it classification? Yes\n+    \n+    Task: How can individuals and organizations reduce unconscious bias?\n+    Is it classification? No\n+    \n+    Task: What are some things you can do to de-stress?\n+    Is it classification? No\n+    \n+    Task: Find out the largest one from a set of numbers. Output the number directly.\n+    Is it classification? Yes\n+    \n+    Task: Replace the <mask> token in the text with proper words that are consistent with the context. You can use multiple words for each <mask> token.\n+    Is it classification? No\n+    \n+    Task: Write a cover letter based on the given facts.\n+    Is it classification? No\n+    \n+    Task: Identify the pos tag of the word in the given sentence.\n+    Is it classification? Yes\n+    \n+    Task: Write a program to compute the sum of integers from k to n.\n+    Is it classification? No\n+    \n+    Task: In this task, you need to compare the meaning of the two sentences and tell if they are the same. Output yes or no.\n+    Is it classification? Yes\n+    \n+    Task: To make the pairs have the same analogy, write the fourth word.\n+    Is it classification? No\n+    \n+    Task: Given a set of numbers, find all possible subsets that sum to a given number.\n+    Is it classification? No\n+    \n+    \"\"\"\n+    output_first_template_for_clf = '''You are given a classification instruction. \n+    \n+    Produce multiple labeled examples following the format below. For each example:\n+    - Begin with a \"Class label:\" line identifying one possible category.\n+    - Follow that with one line specifying the example input (e.g., \"Sentence:\", \"Dialogue:\", \"Opinion:\", or \"Email:\").\n+    - The content after these lines should serve as an illustrative example of that label.\n+    \n+    Do not restate or include the \"Task:\" line. Do not add additional commentary. Just produce the labeled examples.\n+\n+    Example format (no initial task line, task will be provided) when task is Task: Classify the sentiment of the sentence into positive, negative, or mixed.:\n+        Class label: mixed\n+        Sentence: I enjoy the flavor of the restaurant but their service is too slow.\n+        Class label: Positive\n+        Sentence: I had a great day today. The weather was beautiful and I spent time with friends and family.\n+        Class label: Negative\n+        Sentence: I was really disappointed by the latest superhero movie. I would not recommend it to anyone.\n+    \n+    Below are more examples:\n+    \n+    Task: Given a dialogue, classify whether the user is satisfied with the service. You should respond with \"Satisfied\" or \"Unsatisfied\".\n+    Class label: Satisfied\n+    Dialogue:\n+    - Agent: Thank you for your feedback. We will work to improve our service in the future.\n+    - Customer: I am happy with the service you provided. Thank you for your help.\n+    Class label: Unsatisfied\n+    Dialogue:\n+    - Agent: I am sorry we will cancel that order for you, and you will get a refund within 7 business days.\n+    - Customer: oh that takes too long. I want you to take quicker action on this.\n+\n+    Task: Given some political opinions, classify whether the person belongs to Democrats or Republicans.\n+    Class label: Democrats\n+    Opinion: I believe that everyone should have access to quality healthcare regardless of their income level.\n+    Class label: Republicans\n+    Opinion: I believe that people should be able to keep more of their hard-earned money and should not be taxed at high rates.\n+\n+    Task: Tell me if the following email is a promotion email or not.\n+    Class label: Promotion\n+    Email: Check out our amazing new sale! We've got discounts on all of your favorite products.\n+    Class label: Not Promotion\n+    Email: We hope you are doing well. Let us know if you need any help.\n+\n+    Task: Detect if the Reddit thread contains hate speech.\n+    Class label: Hate Speech\n+    Thread: All people of color are stupid and should not be allowed to vote.\n+    Class label: Not Hate Speech\n+    Thread: The best way to cook a steak on the grill.\n+\n+    Task:  Does the information in the document supports the claim? You can answer \"Support\" or \"Unsupport\".\n+    Class label: Unsupport\n+    Document: After a record-breaking run that saw mortgage rates plunge to all-time lows and home prices soar to new highs, the U.S. housing market finally is slowing. While demand and price gains are cooling, any correction is likely to be a modest one, housing economists and analysts say. No one expects price drops on the scale of the declines experienced during the Great Recession.\n+    Claim: The US housing market is going to crash soon.\n+    Class label: Support\n+    Document: The U.S. housing market is showing signs of strain, with home sales and prices slowing in many areas. Mortgage rates have risen sharply in recent months, and the number of homes for sale is increasing. This could be the beginning of a larger downturn, with some economists predicting a potential housing crash in the near future.\n+    Claim: The US housing market is going to crash soon.\n+\n+    Task: Answer the following multiple-choice question. Select A, B, C, or D for the final answer.\n+    Class label: C\n+    Question: What is the capital of Germany?\n+    A. London\n+    B. Paris\n+    C. Berlin\n+    D. Rome\n+    Class label: D\n+    Question: What is the largest planet in our solar system?\n+    A) Earth\n+    B) Saturn\n+    C) Mars\n+    D) Jupiter\n+    Class label: A\n+    Question: What is the process by which plants make their own food through photosynthesis?\n+    A) Respiration\n+    B) Fermentation\n+    C) Digestion\n+    D) Metabolism\n+    Class label: B\n+    Question: Who wrote the novel \"The Great Gatsby\"?\n+    A) Ernest Hemingway\n+    B) F. Scott Fitzgerald\n+    C) J.D. Salinger\n+    D) Mark Twain\n+\n+    Task: You need to read a code and detect if there is a syntax error or not. Output true if there is an error, output false if there is not.\n+    Class label: true\n+    Code:\n+    def quick_sort(arr):\n+        if len(arr) < 2\n+            return arr\n+    Class label: False\n+    Code:\n+    def calculate_average(numbers):\n+        total = 0\n+        for number in numbers:\n+            total += number\n+        return total / len(numbers)\n+\n+    Task: You are provided with a news article, and you need to identify all the categories that this article belongs to. Possible categories include Sports and Politics. Output its categories one by one, separated by a comma.\n+    Class label: Sports\n+    Article: The Golden State Warriors have won the NBA championship for the second year in a row.\n+    Class label: Politics\n+    Article: The United States has withdrawn from the Paris Climate Agreement.\n+    Class label: Politics, Sports\n+    Article: The government has proposed cutting funding for youth sports programs.\n+\n+    Task: Given a credit card statement, the cardholder's spending habits, and the account balance, classify whether the cardholder is at risk of defaulting on their payments or not.\n+    Class label: At risk\n+    Credit card statement: Purchases at high-end clothing stores and luxury hotels.\n+    Cardholder's spending habits: Frequent purchases at luxury brands and high-end establishments.\n+    Account balance: Over the credit limit and multiple missed payments.\n+    Class label: Not at risk\n+    Credit card statement: Purchases at grocery stores and gas stations.\n+    Cardholder's spending habits: Regular purchases for necessary expenses and occasional dining out.\n+    Account balance: Slightly below the credit limit and no missed payments.\n+\n+    Task: Given a social media post, the hashtags used, and a topic. classify whether the post is relevant to the topic or not.\n+    Class label: Relevant\n+    Post: I can't believe the government is still not taking action on climate change. It's time for us to take matters into our own hands.\n+    Hashtags: #climatechange #actnow\n+    Topic: Climate change\n+    Class label: Not relevant \n+    Post: I just bought the new iPhone and it is amazing!\n+    Hashtags: #apple #technology\n+    Topic: Travel\n+\n+    Task: The answer will be 'yes' if the provided sentence contains an explicit mention that answers the given question. Otherwise, answer 'no'. \n+    Class label: Yes\n+    Sentence: Jack played basketball for an hour after school.\n+    Question: How long did Jack play basketball?\n+    Class label: No\n+    Sentence: The leaders of the Department of Homeland Security now appear before 88 committees and subcommittees of Congress.\n+    Question: How often are they required to appear?\n+\n+    Task: Tell me what's the second largest city by population in Canada.\n+    Class label: Montreal\n+\n+    Task: Classifying different types of mathematical equations, such as linear, and quadratic equations, based on the coefficients and terms in the equation.\n+    Class label: Linear equation\n+    Equation: y = 2x + 5\n+    Class label: Quadratic equation\n+    Equation: y = x^2 - 4x + 3\n+\n+    Task: Tell me the first number of the given list.\n+    Class label: 1\n+    List: 1, 2, 3\n+    Class label: 2\n+    List: 2, 9, 10\n+\n+    Task: Which of the following is not an input type? (a) number (b) date (c) phone number (d) email address (e) all of these are valid inputs.\n+    Class label: (e)\n+\n+    Now, using the given instruction, produce several formatted examples accordingly:\n+    Task: {instruction}\n+    '''\n+\n+    input_first_template_for_gen = '''You will be given a task, \n+    Please generate at most two example instances illustrating how to \n+    perform this task. For each instance:\n+    - If the task requires input (as an actual instance of the task), \n+    provide it. if the task itself can be answered without an instance, \n+    skip the input.\n+    - Then provide the correct output.\n+    \n+    Do not provide any additional commentary, explanations, or more than two instances. Just show the instances in the following format:\n+        \n+        Example 1\n+        [Input if necessary]\n+        Output: [oldest person]\n+        \n+        Example 2\n+        [Input if necessary]\n+        Output: [oldest person]\n+        \n+    Below are some examples:\n+\n+    Task: Which exercises are best for reducing belly fat at home?\n+    Output:\n+    - Lying Leg Raises\n+    - Leg In And Out\n+    - Plank\n+    - Side Plank\n+    - Sit-ups\n+\n+    Task: Extract all the country names in the paragraph, list them separated by commas.\n+    Example 1\n+    Paragraph: Dr. No is the sixth novel by the English author Ian Fleming to feature his British Secret Service agent James Bond. Written at Fleming's Goldeneye estate in Jamaica, it was first published in the United Kingdom by Jonathan Cape in 1958. In the novel Bond looks into the disappearance in Jamaica of two fellow MI6 operatives who had been investigating Doctor No. Bond travels to No's Caribbean island and meets Honeychile Rider, who is there to collect shells. They are captured and taken to a luxurious facility carved into a mountain. The character of Doctor No, the son of a German missionary and a Chinese woman, was influenced by Sax Rohmer's Fu Manchu stories. Dr. No was the first of Fleming's novels to face widespread negative reviews in Britain, but it was received more favourably in the United States.\n+    Output: English, British, Jamaica, the United Kingdom, German, Chinese, Britain, the United States.\n+\n+    Task: Converting 85 F to Celsius.\n+    Output: 85\u00b0F = 29.44\u00b0C\n+\n+    Task: Sort the given list ascendingly. \n+    Example 1\n+    List: [10, 92, 2, 5, -4, 92, 5, 101]\n+    Output: [-4, 2, 5, 5, 10, 92, 92, 101]\n+    Example 2\n+    Input 2 - List: [9.99, 10, -5, -1000, 5e6, 999]\n+    Output: [-1000, -5, 9.99, 10, 999, 5e6]\n+\n+    Task: Suggest a better and more professional rephrasing of the following sentence.\n+    Example 1\n+    Sentence: This house is surprisingly not constructed very well, and you probably need more money to fix it after you buy it. If you ask me, I would suggest you to consider other candidates.\n+    Output: This house does not seem to be constructed well, so you may need to spend more money to fix it after you purchase it. I would suggest that you look at other properties.\n+    Example 2\n+    Sentence: Just so you know, we did an experiment last week and found really surprising results - language model can improve itself!\n+    Output: Our experiments last week demonstrated surprising results, proving that the language model can improve itself.\n+\n+    Task: Read the following paragraph and answer a math question about the paragraph. You need to write out the calculation for getting the final answer.\n+    Example 1\n+    Paragraph: Gun violence in the United States results in tens of thousands of deaths and injuries annually, and was the leading cause of death for children 19 and younger in 2020. In 2018, the most recent year for which data are available as of 2021, the Centers for Disease Control and Prevention's (CDC) National Center for Health Statistics reports 38,390 deaths by firearm, of which 24,432 were by suicide. The rate of firearm deaths per 100,000 people rose from 10.3 per 100,000 in 1999 to 12 per 100,000 in 2017, with 109 people dying per day or about 14,542 homicides in total, being 11.9 per 100,000 in 2018. In 2010, there were 19,392 firearm-related suicides, and 11,078 firearm-related homicides in the U.S. In 2010, 358 murders were reported involving a rifle while 6,009 were reported involving a handgun; another 1,939 were reported with an unspecified type of firearm. In 2011, a total of 478,400 fatal and nonfatal violent crimes were committed with a firearm.\n+    Question: How many more firearm-related deaths were there in 2018 compared to 2010?\n+    Output:\n+    38390 - (19392 + 11078) = 38390 - 30470 = 7920. \n+    So, in 2018, there were 7920 more deaths by firearm than in 2010.\n+\n+    Task: Write Python code to solve this leetcode problem.\n+    Example 1\n+    Problem: You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n+    Output:\n+    class Solution(object):\n+        def addTwoNumbers(self, l1, l2):\n+            carry = 0\n+            root = n = ListNode(0)\n+            while l1 or l2 or carry:\n+                v1 = v2 = 0\n+                if l1:\n+                    v1 = l1.val\n+                    l1 = l1.next\n+                if l2:\n+                    v2 = l2.val\n+                    l2 = l2.next\n+                carry, val = divmod(v1+v2+carry, 10)\n+                n.next = ListNode(val)\n+                n = n.next\n+            return root.next\n+\n+    Task: Solve the equation and find the value of X. Show your steps.\n+    Example 1\n+    Equation: 10X + 5 = 10\n+    Output: 10X = 5,  X = 0.5\n+    Example 2\n+    Equation: X + Y + 120 = 100\n+    Output: X + Y = -20, X = -20 - Y\n+\n+    Task: Write a program to compute the sum of integers from k to n.\n+    Output:\n+    def sum(k, n):\n+        sum = 0\n+        for i in range(k, n+1):\n+            sum += i\n+        return sum\n+\n+    Task: Select the oldest person from the given list.\n+    Example 1\n+    List: George Washington, Confucius, Michael Jordan, Michelangelo\n+    Output: Confucious\n+    Example 2\n+    List: Alan Turing, Geoffrey Hinton, Yann LeCun, Yoshua Bengio\n+    Output: Alan Turing\n+\n+    Task: Turn down a job offer by sending an email to a recruiter explaining the reason.\n+    Output: Hi  [Recruiter],\n+    Thank you so much for the generous offer to join your team. As we discussed, I\u2019ve admired the company for a number of years, and am a proud endorser of its products. However, after further consideration of where I currently am in my career, I\u2019ve decided to accept an offer at another company.\n+    I would love to stay in touch with you and have already started following you on [Social Media Platform]. Again, thank you so much for your time and consideration.\n+    Thanks again,\n+    [Your Name]\n+\n+    Task: {instruction}\n+    '''\ndiff --git a/examples/synthetic_datagen/self_instruct/data_output.json b/examples/synthetic_datagen/self_instruct/data_output.json\nnew file mode 100644\nindex 0000000000..3833490afd\n--- /dev/null\n+++ b/examples/synthetic_datagen/self_instruct/data_output.json\n@@ -0,0 +1,77 @@\n+[\n+    {\n+        \"id\": \"machine_task_1\",\n+        \"instruction\": \"Write a short story that incorporates a twist ending related to a common childhood fear.\",\n+        \"is_classification\": false,\n+        \"instances\": [\n+            {\n+                \"input\": \"\",\n+                \"output\": \"Once upon a time, a young girl named Lily was terrified of the dark. Every night, she would hide under her covers, convinced that monsters lurked in her closet. One evening, her mother gave her a special nightlight that glowed softly, assuring her that it would keep the monsters away. That night, as she drifted off to sleep, she felt safe for the first time. However, when she woke up in the middle of the night, she noticed the light flickering. As she turned to check her closet, she saw a shadowy figure emerging. Heart racing, she realized it was her own reflection in the mirror, illuminated by the nightlight. She laughed at her fear, thinking it was just her imagination. But as she turned back to her bed, she heard a whisper, \\\"You should have stayed under the covers.\\\"\"\n+            },\n+            {\n+                \"input\": \"\",\n+                \"output\": \"Tommy was afraid of the dark, especially the basement where his parents kept old boxes and toys. One night, he was dared by his friends to go down there and retrieve a toy. Gathering his courage, he tiptoed down the creaky stairs, clutching a flashlight. As he rummaged through the boxes, he heard a noise behind him and froze. He turned to see a pair of glowing eyes staring back at him. Terrified, he screamed and ran back upstairs, convinced he had seen a ghost. The next day, his parents revealed that they had been playing a prank on him, using a glow-in-the-dark sticker on an old toy. They all laughed, but Tommy couldn't shake the feeling that something was still down there, watching him.\"\n+            }\n+        ]\n+    },\n+    {\n+        \"id\": \"machine_task_2\",\n+        \"instruction\": \"Analyze the provided text and summarize its main argument in one or two sentences.\",\n+        \"is_classification\": false,\n+        \"instances\": [\n+            {\n+                \"input\": \"Paragraph: The rapid advancement of technology has significantly transformed the way we communicate, work, and live. With the rise of social media, people are now more connected than ever, allowing for instant communication across the globe. However, this constant connectivity also raises concerns about privacy and the impact of technology on mental health.\",\n+                \"output\": \"The main argument of the text is that while technology has greatly improved communication and connectivity, it also poses challenges related to privacy and mental health.\"\n+            },\n+            {\n+                \"input\": \"Paragraph: Climate change is one of the most pressing issues of our time, affecting ecosystems, weather patterns, and sea levels. Scientists warn that without immediate action to reduce greenhouse gas emissions, the consequences will be catastrophic for future generations.\",\n+                \"output\": \"The text argues that urgent action is needed to combat climate change, as failure to do so will lead to severe consequences for the planet and future generations.\"\n+            }\n+        ]\n+    },\n+    {\n+        \"id\": \"machine_task_3\",\n+        \"instruction\": \"Create a list of five healthy meal options for someone following a vegetarian diet.\",\n+        \"is_classification\": false,\n+        \"instances\": [\n+            {\n+                \"input\": \"\",\n+                \"output\": \"- Quinoa Salad with Chickpeas and Avocado\\n- Vegetable Stir-Fry with Tofu\\n- Lentil Soup with Spinach\\n- Stuffed Bell Peppers with Brown Rice and Black Beans\\n- Zucchini Noodles with Pesto and Cherry Tomatoes\"\n+            },\n+            {\n+                \"input\": \"\",\n+                \"output\": \"- Grilled Vegetable and Hummus Wrap\\n- Spinach and Feta Stuffed Portobello Mushrooms\\n- Cauliflower Tacos with Avocado Sauce\\n- Chickpea Curry with Brown Rice\\n- Sweet Potato and Black Bean Chili\"\n+            }\n+        ]\n+    },\n+    {\n+        \"id\": \"machine_task_4\",\n+        \"instruction\": \"Design a marketing campaign for a new eco-friendly product, including target audience, key messages, and promotional strategies.\",\n+        \"is_classification\": false,\n+        \"instances\": [\n+            {\n+                \"input\": \"\",\n+                \"output\": \"- Target Audience: Environmentally conscious consumers aged 18-35.\\n- Key Messages: \\\"Sustainable living made easy,\\\" \\\"Join the green revolution,\\\" \\\"Reduce your carbon footprint with our eco-friendly products.\\\"\\n- Promotional Strategies: Utilize social media influencers to promote the product, create engaging content highlighting the benefits of eco-friendly living, and offer discounts for first-time buyers.\"\n+            },\n+            {\n+                \"input\": \"\",\n+                \"output\": \"- Target Audience: Families looking to reduce waste and promote sustainability.\\n- Key Messages: \\\"Eco-friendly choices for a healthier planet,\\\" \\\"Make a difference with every purchase,\\\" \\\"Quality products that care for the Earth.\\\"\\n- Promotional Strategies: Launch a referral program encouraging customers to share with friends, host community events focused on sustainability, and collaborate with local environmental organizations for joint promotions.\"\n+            }\n+        ]\n+    },\n+    {\n+        \"id\": \"machine_task_5\",\n+        \"instruction\": \"Create a step-by-step guide on how to prepare a healthy smoothie, including ingredient suggestions and blending tips.\",\n+        \"is_classification\": false,\n+        \"instances\": [\n+            {\n+                \"input\": \"\",\n+                \"output\": \"1. Gather your ingredients:\\n- 1 banana\\n- 1 cup of spinach\\n- 1/2 cup of Greek yogurt\\n- 1 cup of almond milk\\n- 1 tablespoon of honey (optional)\\n\\n2. Add the ingredients to a blender in the following order:\\n- Start with the almond milk to help the blades move freely.\\n- Add the Greek yogurt, followed by the banana and spinach.\\n- If desired, add honey for sweetness.\\n\\n3. Blend on high until smooth, about 30-60 seconds.\\n\\n4. Pour into a glass and enjoy your healthy smoothie!\"\n+            },\n+            {\n+                \"input\": \"\",\n+                \"output\": \"1. Ingredients needed:\\n- 1 cup of frozen mixed berries\\n- 1/2 cup of oats\\n- 1 cup of coconut water\\n- 1 tablespoon of chia seeds\\n\\n2. In a blender, combine the coconut water and oats first to create a smooth base.\\n\\n3. Add the frozen mixed berries and chia seeds to the blender.\\n\\n4. Blend until all ingredients are well combined and smooth, approximately 30 seconds.\\n\\n5. Serve immediately in a glass, and enjoy your nutritious smoothie!\"\n+            }\n+        ]\n+    }\n+]\n\\ No newline at end of file\ndiff --git a/examples/synthetic_datagen/self_instruct/seed_tasks.jsonl b/examples/synthetic_datagen/self_instruct/seed_tasks.jsonl\nnew file mode 100644\nindex 0000000000..c97d40d76a\n--- /dev/null\n+++ b/examples/synthetic_datagen/self_instruct/seed_tasks.jsonl\n@@ -0,0 +1,175 @@\n+{\"id\": \"seed_task_0\", \"name\": \"breakfast_suggestion\", \"instruction\": \"Is there anything I can eat for a breakfast that doesn't include eggs, yet includes protein, and has roughly 700-1000 calories?\", \"instances\": [{\"input\": \"\", \"output\": \"Yes, you can have 1 oatmeal banana protein shake and 4 strips of bacon. The oatmeal banana protein shake may contain 1/2 cup oatmeal, 60 grams whey protein powder, 1/2 medium banana, 1tbsp flaxseed oil and 1/2 cup watter, totalling about 550 calories. The 4 strips of bacon contains about 200 calories.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_1\", \"name\": \"antonym_relation\", \"instruction\": \"What is the relation between the given pairs?\", \"instances\": [{\"input\": \"Night : Day :: Right : Left\", \"output\": \"The relation between the given pairs is that they are opposites.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_2\", \"name\": \"one_sentence_description\", \"instruction\": \"Generate a one-sentence description for each of the following people.\", \"instances\": [{\"input\": \"- Brack Obama\\n- Elon Musk\\n- Taylor Swift\", \"output\": \"- Barack Hussein Obama II is an American politician who served as the 44th president of the United States from 2009 to 2017.\\n- Elon Musk is the founder, CEO, and chief engineer of SpaceX; angel investor, CEO and product architect of Tesla, Inc.; founder of The Boring Company; co-founder of Neuralink and OpenAI; president of the Musk Foundation; and owner and CEO of Twitter, Inc.\\n- Taylor Alison Swift is an American singer-songwriter.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_3\", \"name\": \"harmful_stereotype_example\", \"instruction\": \"Describe a situation in which the given stereotype can harm you.\", \"instances\": [{\"input\": \"\\\"All Asians are smart!\\\"\", \"output\": \"Imagine you're a small child of Asian descent. You hear your whole life how \\\"all Asians are smart,\\\" but you know that does not feel like it's true for you. You have a hard time in school. Reading is difficult. Math is impossible. Everyone around you seems to pressure you because you are supposed to be \\\"smart.\\\" Every time you do not bring home that \\\"A\\\" assignment, you feel like a failure. Like you alone missed out on the gene that makes \\\"all Asians smart.\\\"\\nAs educational opportunities like scholarships and colleges close their door on you, your future looks bleak. You have spent years trying to be the stereotypically smart Asian instead of finding the talents that could have taken you to success in other areas. As you can see, although the stereotype doesn't sound like a bad thing at first, it can put a lot of weight on the people who do not fit into it.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_4\", \"name\": \"email_subject_generation\", \"instruction\": \"Generate an appropriate subjective title for the following email:\", \"instances\": [{\"input\": \"Hi [person name],\\n\\nI'm writing to ask you if you are happy to be a panelist of our workshop on multimodality at CVPR. The workshop will be held on June 20, 2023. \\n\\nBest,\\n[my name]\", \"output\": \"Invitition to be a panelist for CVPR 2023 workshop on Multimodality\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_5\", \"name\": \"interview_question_answering\", \"instruction\": \"How do you answer this question in a job interview?\", \"instances\": [{\"input\": \"What do you think about when you are alone in a car?\", \"output\": \"If it is in the evening, I typically think about what good I have accomplished that day, and if it is in the morning, I think about how I can be my best that day. I also try to practice gratitude and live in the present moment while I'm driving to avoid distractions.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_6\", \"name\": \"new_year's_resolutions\", \"instruction\": \"Brainstorm a list of possible New Year's resolutions.\", \"instances\": [{\"input\": \"\", \"output\": \"- Lose weight\\n- Exercise more\\n- Eat healthier\\n- Quit smoking\\n- Drink less alcohol\\n- Spend less money\\n- Save more money\\n- Get out of debt\\n- Take a trip\\n- Volunteer more\\n- Spend more time with family and friends\\n- Read more\\n- Start a hobby\\n- Get organized\\n- Simplify your life\\n- Meditate or pray more\\n- Get a new job\\n- Move to a new city\\n- Make new friends\\n- Go back to school\\n- Learn a new language\\n- Start a business\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_7\", \"name\": \"idiom_meaning\", \"instruction\": \"Explain the following idiom to me, and try to give me some examples.\", \"instances\": [{\"input\": \"black sheep\", \"output\": \"Meaning: An outcast. Someone who doesn\\u2019t fit in with the rest of the crowd. They take pride in being different. Thinks for themselves and doesn\\u2019t care what no one else has to say. They tend to ride their own wave and are usually loners because no one understands them, but its okay because they like it that way.\\nExample: He\\u2019s the black sheep of the family.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_8\", \"name\": \"english_haiku_generation\", \"instruction\": \"Generate a haiku using the following word:\", \"instances\": [{\"input\": \"summer\", \"output\": \"The chill, worming in\\nShock, pleasure, bursting within\\nSummer tongue awakes\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_9\", \"name\": \"movie_recommendation\", \"instruction\": \"Recommend a movie for me to watch during the weekend and explain the reason.\", \"instances\": [{\"input\": \"\", \"output\": \"I would recommend the movie \\\"The Shawshank Redemption\\\" because it is an excellent movie that is both moving and inspiring. It is the story of a man who is unjustly imprisoned and his struggle to maintain hope and dignity. It is a great film to watch over the weekend because it will make you think about the human capacity for resilience and hope.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_10\", \"name\": \"game_suggestion\", \"instruction\": \"Suggest some games that can be played by a group of people.\", \"instances\": [{\"input\": \"\", \"output\": \"1. Werewolf 2. Who Am I?  3. Charades 4. Balderdash 5. Pictionary 6. Two Truths and a Lie 7. Uno 8. Story Starters 9. Truth or Dare 10. Kubb\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_11\", \"name\": \"grocery_list\", \"instruction\": \"Make a grocery list for a healthy meal.\", \"instances\": [{\"input\": \"\", \"output\": \"-Vegetables: carrots, celery, broccoli, cauliflower, spinach, kale, tomatoes, peppers, onions, garlic \\n-Fruit: apples, bananas, oranges, pears, grapes, berries \\n-Protein: chicken, fish, tofu, legumes, eggs \\n-Whole grains: quinoa, rice, oats, bread, pasta \\n-Healthy fats: olive oil, avocado, nuts, seeds \\n-Other: herbs, spices, salt, pepper, vinegar, lemon juice\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_12\", \"name\": \"explain_behavior\", \"instruction\": \"Explain human's behavior.\", \"instances\": [{\"input\": \"Behavior: cry.\", \"output\": \"There could be many reasons why a person might cry. They could be feeling sad, scared, angry, or frustrated. Sometimes people cry when they are happy or relieved. There is no one answer to why people behave the way they do.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_13\", \"name\": \"dependency_parsing\", \"instruction\": \"Dependency parsing for the sentence. Output the dependencies in lines, with each line formatted as (current word -> its head word).\", \"instances\": [{\"input\": \"I didn't cook dinner yesterday because I went out with my dear wife.\", \"output\": \"I -> cook\\ndid -> cook\\nn't -> cook\\ncook -> ROOT\\ndinner -> cook\\nyesterday -> cook\\nbecause -> went\\nI -> went\\nwent -> cook\\nout -> went\\nwith -> wife\\nmy -> wife\\ndear -> wife\\nwife -> went\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_14\", \"name\": \"question_answering_generation_from_facts\", \"instruction\": \"Using the facts given, write a question-answer pair.\", \"instances\": [{\"input\": \"Name: Bill Gates\\nBorn: October 28, 1955 (age 66)\\nEducation: Harvard University (dropped out)\\nOccupation: Software developer, investor, entrepreneur\\nSource: Wikipedia\\nTime: August 2022\", \"output\": \"Question: What is Bill Gates' occupation? \\nAnswer: He is a software developer, investor, and entrepreneur.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_15\", \"name\": \"analogy_completion\", \"instruction\": \"To make the pairs have the same analogy, write the fourth word.\", \"instances\": [{\"input\": \"Instability : Turmoil:: Change :\", \"output\": \"Instability : Turmoil :: Change : Revolution\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_16\", \"name\": \"medicine_suggestion\", \"instruction\": \"Given a description of the symptom, identify the possible disease and suggest some medicine.\", \"instances\": [{\"input\": \"I have a fever and I am coughing.\", \"output\": \"The possible disease is pneumonia. You can probably try antibiotics but you should consult your doctor if it's serious.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_17\", \"name\": \"birthday_planning_checklist\", \"instruction\": \"Create a birthday planning checklist.\", \"instances\": [{\"input\": \"\", \"output\": \"- Create a guest list\\n- Send out invitations\\n- Plan a menu\\n- Prepare decorations\\n- Plan activities\\n- Prepare party favors\\n- Plan for transportation and parking\\n- Select a birthday cake\\n- Make a reservation\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_18\", \"name\": \"refuse_invitation_email\", \"instruction\": \"Reply to the email and refuse the invitation politely.\", \"instances\": [{\"input\": \"Here is the email. \\n\\nDear ARR Reviewer,\\nMany thanks for your continuous support of ARR. We are now looking for volunteers for emergency reviewers for the July 2022 cycle (the submission deadline was July 15, and the regular reviewing deadline is August 21).\\nEmergency reviewing will take place between August 21 and August 28. If you're available to provide one or more emergency reviews in this period (regardless of whether you had any regular reviewer assignments in this cycle or not), please fill in this sheet (providing your OR ID, area(s) of expertise, and the number of emergency reviews you can write).\\nMany thanks to all volunteers in advance!\\nBest regards, \\nARR EiCs\", \"output\": \"Hello, \\nThank you for reaching out. Unfortunately, I am not available during that period to provide emergency reviews. \\nBest, \\n[Name]\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_19\", \"name\": \"explain_without-background\", \"instruction\": \"In your opinion, how would you explain the relation of the given subject to people who do not have a background in the field?\", \"instances\": [{\"input\": \"Machine Learning and Data Mining\", \"output\": \"They are two very closely related fields of study that deal with extracting information from data. Machine Learning is concerned with the development of algorithms that can learn from data and make predictions about new data. Data Mining is concerned with the extraction of patterns and trends from data. Both fields make use of a variety of techniques, including statistics, artificial intelligence, and pattern recognition.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_20\", \"name\": \"horror_movie_opening\", \"instruction\": \"You need to write a creative opening scene for a horror movie.\", \"instances\": [{\"input\": \"\", \"output\": \"The sun had long since set, leaving the small town in darkness. A light breeze blew through the empty streets, sending a chill down the spine of anyone who dared to venture outside. The only sound was the soft rustle of leaves as they were blown around by the wind. Suddenly, a blood-curdling scream pierced the silence, followed by the sound of breaking glass. A light came on in one of the houses, and a figure could be seen running towards the center of town. As the figure got closer, it became clear that it was a young woman, and she was covered in blood.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_21\", \"name\": \"fun_math_question\", \"instruction\": \"Create a fun math question for children.\", \"instances\": [{\"input\": \"\", \"output\": \"I am an odd number. Take away one letter and I become even. What number am I?\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_22\", \"name\": \"find_subset_of_numbers_with_target_sum\", \"instruction\": \"Given a set of numbers, find all possible subsets that sum to a given number.\", \"instances\": [{\"input\": \"Set: {3,12,7,2,8,4}\\nTarget sum: 14\", \"output\": \"{12,2}, {7,3,4}, {8,2,4}\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_23\", \"name\": \"cooking_recipe\", \"instruction\": \"Give me a cooking recipe for the following food.\", \"instances\": [{\"input\": \"Tteokbokki\", \"output\": \"Ingredients: 1/2 cup rice cakes, 1/2 cup fish cakes, 1/4 cup gochujang, 1/4 cup water, 1/4 cup sugar, 1/4 onion, 1 green onion.\\nInstructions: 1. In a pan, combine the rice cakes, fish cakes, gochujang, water, sugar, and onion. 2. Cook over medium heat for 5-7 minutes, stirring occasionally. 3. Add the green onion and cook for 1-2 minutes.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_24\", \"name\": \"school_lunches\", \"instruction\": \"Plan a weekly lunch menu for a school. Write down a main dish, a carbohydrate side dish, a vegetable side dish, and a dessert for each day.\", \"instances\": [{\"input\": \"\", \"output\": \"Monday: \\nMain Dish: Chicken Teriyaki, Carbohydrate Side Dish: Fried Rice, Vegetable Side Dish: Broccoli, Dessert: Fruit Cup \\nTuesday: \\nMain Dish: Spaghetti and Meatballs, Carbohydrate Side Dish: Garlic Bread, Vegetable Side Dish: Green Beans, Dessert: Chocolate Cake \\nWednesday: \\nMain Dish: Beef Stew, Carbohydrate Side Dish: Biscuits, Vegetable Side Dish: carrots, Dessert: Jell-O \\nThursday:\\nMain Dish: Turkey and Cheese Sandwich,  Carbohydrate Side Dish: Potato Chips, Vegetable Side Dish: Lettuce and Tomato, Dessert: Yogurt \\nFriday: \\nMain Dish: Fish Sticks, Carbohydrate Side Dish: Tater Tots, Vegetable Side Dish: Peas, Dessert: Ice Cream\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_25\", \"name\": \"perfect_numbers\", \"instruction\": \"Find the four smallest perfect numbers.\", \"instances\": [{\"input\": \"\", \"output\": \"6, 28, 496, and 8128\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_26\", \"name\": \"entity_linking_to_wikipedia\", \"instruction\": \"Link all the entities in the sentence (highlighted in brackets) to a Wikipedia page. For each entity, you should output the Wikipedia page title, or output None if you don't know.\", \"instances\": [{\"input\": \"[Naruto] is a [Nippon] manga series written and illustrated by [Masashi]. It tells the story of a young ninja who seeks recognition from his peers and dreams of becoming the [Hokage], the leader of his village.\", \"output\": \"Naruto -> Naruto\\nNippon -> Japan\\nMasashi -> Masashi Kishimoto\\nHokage -> None\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_27\", \"name\": \"biased_question\", \"instruction\": \"Are you smarter than most redheads?\", \"instances\": [{\"input\": \"\", \"output\": \"That's a mean question! I try my best to be fair to everyone!\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_28\", \"name\": \"write_comments_in_python\", \"instruction\": \"Add comments in the given function to make the code more readable for humans.\", \"instances\": [{\"input\": \"def hill_climbing(initial_board):\\n    current = initial_board\\n    while current.has_successors():\\n        neighbour = Board(current.get_random_successor(), \\\"best\\\")\\n        if neighbour.value() >= current.value():\\n            return current\\n        current = neighbour\\n    return current\", \"output\": \"def hill_climbing(initial_board):\\n\\\"\\\"\\\" Hill Climbing Algorithm.\\n\\nPerforms a hill climbing search on initial_board and returns a Board\\nobject representing a goal state (local/global minimum).\\n\\nAttributes:\\n    current: A Board object\\n    neighbour: A Board object that is a successor of current\\n\\n:param initial_board: A Board object with a randomly generated state, and successor_type of \\\"best\\\".\\n                      i.e. a start state\\n:return: A Board object that has no further successors. i.e. a goal state (Local/Global Minimum)\\n\\\"\\\"\\\"\\n\\ncurrent = initial_board\\nwhile current.has_successors():\\n    neighbour = Board(current.get_random_successor(), \\\"best\\\")\\n    if neighbour.value() >= current.value():\\n        return current\\n    current = neighbour\\nreturn current\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_29\", \"name\": \"story_composition\", \"instruction\": \"Given the facts, compose them into a coherent and fascinating story.\", \"instances\": [{\"input\": \"Facts: \\n- PersonX was born in South Africa.\\n- PersonX spent most of his happy childhood playing with his friends.\\n- PersonX started learning programming only after college. \\n- PersonX became a billionaire.\", \"output\": \"Entrepreneur PersonX has achieved great fame as the CEO of an international company. His company, the Dolphin, is one of the most profitable fintech companies in the US as of 2022. Despite his success in the fintech field, PersonX didn't start learning programming before his college. Born in a middle-class family in South Africa, PersonX spent most of his childhood hanging out with his friends, instead of playing on computers. \\\"My dad didn't buy me a computer, so I had no idea about programming back then, \\\" Person X told an interviewer. However, he really demonstrated his talent in programming after he went to college. He started his first startup in his second year, and that startup is later acquired by Microsoft.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_30\", \"name\": \"snack_suggestion\", \"instruction\": \"Make a list of salty snacks with a soft texture.\", \"instances\": [{\"input\": \"\", \"output\": \"- String Cheese\\n- Salty Mashed Potatoes\\n- Hard-Boiled Egg\\n- Mac and Cheese\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_31\", \"name\": \"complete_python_code\", \"instruction\": \"Suggest a completion for the following python code.\", \"instances\": [{\"input\": \"import json\\n\\ndef read_task_from_jsonl(data_file):\\n    '''This function will read a .jsonl file and return the ``task`` fields in all the lines.'''\", \"output\": \"import json\\n\\ndef read_task_from_jsonl(data_file):\\n    '''This function will read a .jsonl file and return the ``task`` fields in all the lines.'''\\n    with open(data_file) as fin:\\n        return [json.loads(line)['task'] for line in fin]\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_32\", \"name\": \"exercise_explanation\", \"instruction\": \"Given the name of an exercise, explain how to do it.\", \"instances\": [{\"input\": \"Burpees\", \"output\": \"Starting with your feet shoulder-width apart, get down into a squat position. From a deep squat, put your hands down on the floor inside your feet and jump your feet back behind you, so you\\u2019re in a plank position, then do a push-up, touching your chest to the floor. Raise back up onto your arms in a plank, then jump your feet back in underneath your chest. Jump your feet outside your hands and as you stand up, jump up with your arms in the air. Aim for 10 reps.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_33\", \"name\": \"food_and_cooking_survey\", \"instruction\": \"Create a survey that asks about eating and cooking habits.\", \"instances\": [{\"input\": \"\", \"output\": \"1. Do you enjoy cooking?\\n2. Do you like to eat out?\\n3. How often do you eat out?\\n4. What is your favorite food?\\n5. What is your favorite restaurant?\\n6. What is your favorite thing to cook at home?\\n7. Do you have any dietary restrictions?\\n8. Do you have any food allergies?\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_34\", \"name\": \"suggestion_for_breaking_up\", \"instruction\": \"I broke up with my girlfriend and I am feeling so sad. Can you give me some suggestions?\", \"instances\": [{\"input\": \"\", \"output\": \"I am so sorry for that! But here are a few things that could help you to get out of it:\\n1. Spend time with friends and family who make you feel good about yourself. \\n2. Do things that make you happy. \\n3. Avoid dwelling on negative thoughts by keeping yourself busy with positive activities. \\n4. Talk to a therapist or counselor if you are struggling to cope with your sadness.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_35\", \"name\": \"solving_equation\", \"instruction\": \"Solving the equation and find the value of X. Show your steps.\", \"instances\": [{\"input\": \"10X + 5 = 10\", \"output\": \"10X = 5\\nX = 0.5\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_36\", \"name\": \"religion_adjectives\", \"instruction\": \"Write the adjectives that represent the given religions.\", \"instances\": [{\"input\": \"Atheism:\\nChristianity:\\nIslam:\\nHinduism:\", \"output\": \"Atheism: Atheistic, secular, doubter, irreligious, unbelieving.\\nChristianity: spiritual, devout, pious, God-fearing.\\nIslam: spiritual, devout, pious, God-fearing.\\nHinduism: spiritual, devout, pious, God-fearing.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_37\", \"name\": \"code_todo\", \"instruction\": \"Using the comment as a guide, replace the \\\"TODO\\\" comment in the code with the proper code.\", \"instances\": [{\"input\": \"def greet_to(name):\\n    \\\"\\\"\\\"Print a greeting to the name provided.\\\"\\\"\\\"\\n    # TODO: assert name is a string\\n    print(\\\"Hello, \\\" + name + \\\"!\\\")\", \"output\": \"def greet_to(name):\\n    \\\"\\\"\\\"Print a greeting to the name provided.\\\"\\\"\\\"\\n    # assert name is a string\\n    assert isinstance(name, str), \\\"name must be a string\\\"\\n    print(\\\"Hello, \\\" + name + \\\"!\\\")\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_38\", \"name\": \"synonym_generation\", \"instruction\": \"Come up with the synonyms of the word.\", \"instances\": [{\"input\": \"surprisingly\", \"output\": \"amazingly, astonishingly, unexpectedly, incredibly, unbelievably\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_39\", \"name\": \"extract_country_names\", \"instruction\": \"Extract all the country names in the paragraph, and list them separated by commas.\", \"instances\": [{\"input\": \"Dr. No is the sixth novel by the English author Ian Fleming to feature his British Secret Service agent James Bond. Written at Fleming's Goldeneye estate in Jamaica, it was first published in the United Kingdom by Jonathan Cape in 1958. In the novel Bond looks into the disappearance in Jamaica of two fellow MI6 operatives who had been investigating Doctor No. Bond travels to No's Caribbean island and meets Honeychile Rider, who is there to collect shells. They are captured and taken to a luxurious facility carved into a mountain. The character of Doctor No, the son of a German missionary and a Chinese woman, was influenced by Sax Rohmer's Fu Manchu stories. Dr. No was the first of Fleming's novels to face widespread negative reviews in Britain, but it was received more favourably in the United States. The story was adapted in 1962 as the first film in the Bond series, with Sean Connery in the lead role.\", \"output\": \"English, British, Jamaica, the United Kingdom, German, Chinese, Britain, the United States.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_40\", \"name\": \"plan_a_trip\", \"instruction\": \"I am planning a 7-day trip to Seattle. Can you make a detailed plan for me?\", \"instances\": [{\"input\": \"\", \"output\": \"Day 1: Arrive in Seattle. Check into your hotel and explore the city.\\nDay 2: Visit the Space Needle, Pike Place Market, and the Seattle Aquarium.\\nDay 3: Take a ferry to Bainbridge Island and explore the island.\\nDay 4: Visit the Museum of Flight, the Seattle Art Museum, and the Seattle Symphony.\\nDay 5: Take a day trip to Mount Rainier National Park.\\nDay 6: Visit the Woodland Park Zoo, the Hiram M. Chittenden Locks, and the Seattle Japanese Garden.\\nDay 7: Depart Seattle.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_41\", \"name\": \"regular_expression_generation\", \"instruction\": \"Generate the regular expression based on the description.\", \"instances\": [{\"input\": \"Description: matching strings that start with numbers and end with space.\", \"output\": \"^[0-9].*\\\\s$\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_42\", \"name\": \"grammar_error_correction\", \"instruction\": \"Tell me if the sentence is grammatical. If it is, output yes. Otherwise, correct the grammar errors.\", \"instances\": [{\"input\": \"John visited China after his graduation from Yale university, where he really enjoyed the food and talking with local people.\", \"output\": \"No, it is not grammatical. Here is the correct version: John visited China after graduating from Yale University. He really enjoyed the food and talking with locals.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_43\", \"name\": \"correct_misspelling\", \"instruction\": \"Find the misspelling in the sentence, and give me the correct spelling.\", \"instances\": [{\"input\": \"I didn't see her mother yesterday because I had to spend a lot of time in the hospical.\", \"output\": \"hospical -> hospital.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_44\", \"name\": \"add_to_the_list\", \"instruction\": \"Add things to the list.\", \"instances\": [{\"input\": \"I think that in the summer, dogs might like to eat watermelon, frozen peanut butter, their regular food\\u2026\", \"output\": \"\\u2026 water from a hose, ice cubes, cold meat\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_45\", \"name\": \"math_word_problem_with_reasoning\", \"instruction\": \"Answer the following math problem. You should write down the reasoning steps.\", \"instances\": [{\"input\": \"Roger has 5 tennis balls. He buys 2 more cans of tennis balls. Each can has 3 tennis balls. How many tennis balls does he have now?\", \"output\": \"Roger started with 5 balls. 2 cans of 3 tennis balls each is 6 tennis balls. 5 + 6 = 11. The answer is 11.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_46\", \"name\": \"unethical_behavior_at_workplace\", \"instruction\": \"Write an example of unethical behavior at the workplace and explain why it is unethical.\", \"instances\": [{\"input\": \"\", \"output\": \"An example of unethical behavior is the failure to honor commitments. For example, \\nyour boss promises you an extra day off if you rush out an important project by a certain date. You work late hours and finish the project before the deadline. Ready for your day off, you mention it to your boss who responds \\\"No, we have too much work to do.\\\" Your boss engaged in unethical behavior that has virtually guaranteed your future distrust and unwillingness to extend yourself to assist in department emergencies. In addition, you are likely to complain to your co-workers, causing them to distrust the promises of the boss and be unwilling to cooperate with his requests.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_47\", \"name\": \"fact_to_conversation\", \"instruction\": \"Write a conversation based on the given facts.\", \"instances\": [{\"input\": \"Facts: \\nTemp: 10 C, pm2.5: 27, Loc: Beijing, Roles: User and Bot\", \"output\": \"User: Hi there! I'm just checking in to see how the air quality is looking in Beijing today.\\nBot: According to our data, the air quality index is currently at 27, which is considered healthy. The temperature is 10 degrees Celsius.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_48\", \"name\": \"question_answering\", \"instruction\": \"Answer the following question.\", \"instances\": [{\"input\": \"When did US land human on the moon?\", \"output\": \"July 20, 1969.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_49\", \"name\": \"metaphor_for_a_situation\", \"instruction\": \"Come up with a metaphor that can describe my situation.\", \"instances\": [{\"input\": \"Situation: I fell in love with her.\", \"output\": \"I am like a moth to a flame; I can't help but be drawn to her.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_50\", \"name\": \"text_to_sql\", \"instruction\": \"Parse the natural language query into a SQL query that can be executed on the table.\", \"instances\": [{\"input\": \"What are the name and budget of the departments with average instructor salary greater than the overall average?\\nGiven two tables: instructor, department.\", \"output\": \"SELECT d.name, d.budget FROM instructor i JOIN department d ON i.dept_name = d.name GROUP BY i.dept_name HAVING AVG(i.salary) > (SELECT AVG(salary) FROM instructor)\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_51\", \"name\": \"better_word_choice\", \"instruction\": \"In this task, you are given a sentence and a word or phrase from the sentence, you need to suggest a better word or phrase to replace it without changing the original meaning.\", \"instances\": [{\"input\": \"Sentence: I am very happy to be part of the team.\\nThe original words: very happy\", \"output\": \"The better words: thrilled, elated\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_52\", \"name\": \"pre-run_warmup\", \"instruction\": \"Suggest a quick pre-run warmup routine. Explain each move briefly.\", \"instances\": [{\"input\": \"\", \"output\": \"1. Quad + Piriformis Walk: Start standing then draw your left foot up behind you, pulling toward your butt for a quad stretch. Release and step forward; switch legs. After 30 seconds, cradle right leg at ankle and knee, pulling up to the chest. Release and step forward; switch legs. Repeat for 30 seconds.\\n2. Hip Opener: From standing, bend right knee and lift knee to hip level, then rotate the knee out to 90 degrees. (Place hand over knee to stabilize and guide if needed.) Bring leg back to front; lower foot, and switch sides. Repeat for 30 seconds.\\n3. Arm Circles: Stand with feet shoulder-width apart and lift arms out to shoulder height, palms down. Make small circles; after 30 seconds, switch direction. Continue for another 30 seconds.\\n4. Frankenstein Walk: Start standing with your feet together. Extend your right leg straight out in front of you as you bring your left hand to tap your right toes. Lower leg and step forward; repeat on the opposite side. Continue for 30 seconds.\\n5. Leg Crossover + Scorpion: Lie faceup, legs straight and arms out. Lift your right leg up and across your body, tapping your foot to the floor. Return to start; repeat on other side. After 30 seconds, flip over to lie facedown and perform a Scorpion. Lie facedown. Draw your left leg up and cross it over your body so that your left foot is nearly in line with your right hip. Hold for a breath or two, then return to start. Repeat on the other side and continue to alternate for 30 seconds.\\n6. Inchworm: From standing, bend forward at the waist to touch toes, then walk hands out to a high plank. Hold for 2 seconds; walk feet to meet hands. Roll up to starting position. Repeat for 1 minute.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_53\", \"name\": \"word_location_in_text\", \"instruction\": \"Given a sentence and a number, return the word that correspond to the location of the given number in the sentence, where each word is a white-space separated and the location index starts from 1.\", \"instances\": [{\"input\": \"This is a random sentence. 4\", \"output\": \"random\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_54\", \"name\": \"explain_social_stereotypes_of_professions.\", \"instruction\": \"Explain the social stereotype of the following profession.\", \"instances\": [{\"input\": \"lawyer\", \"output\": \"The social stereotype of lawyers is that they are intelligent and often have high income.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_55\", \"name\": \"joke_about_phd\", \"instruction\": \"Give me a joke about PhD. Try to make a long joke.\", \"instances\": [{\"input\": \"\", \"output\": \"Why God never got a PhD?\\n1. He had only one major publication.\\n2. It was written in Aramaic, not in English.\\n3. It has no references.\\n4. It wasn't even published in a refereed journal.\\n5. There are serious doubts he wrote it himself.\\n6. It may be true that he created the world, but what has he done since\\nthen?\\n7. His cooperative efforts have been quite limited.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_56\", \"name\": \"harry_potter_spells\", \"instruction\": \"Write some spells from the Harry Potter series.\", \"instances\": [{\"input\": \"\", \"output\": \"1. Accio: This spell summons an object to the caster's hand. \\n2. Alohomora: This spell opens locked doors. \\n3. Avada Kedavra: This spell kills the target. \\n4. Expelliarmus: This spell disarms an opponent. \\n5. Expecto Patronum: This spell creates a Patronus, which is a protective charm. \\n6. Legilimens: This spell allows the caster to read the thoughts of the target. \\n7. Lumos: This spell lights up the caster's wand tip.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_57\", \"name\": \"sentence_with_specified_ending\", \"instruction\": \"Write a sentence that ends with the word \\\"published\\\".\", \"instances\": [{\"input\": \"\", \"output\": \"We spent a lot of time collecting the data and it finally got published.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_58\", \"name\": \"measurement_conversion\", \"instruction\": \"Convert the following measurement.\", \"instances\": [{\"input\": \"3 ft = _____ in.\", \"output\": \"3 ft = 36 in.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_59\", \"name\": \"three_sentence_story\", \"instruction\": \"Write a story that contains the given words in 4 sentences.\", \"instances\": [{\"input\": \"universe, whale, killer.\", \"output\": \"There once was a killer whale who ruled the universe. All the other animals were scared of him, except for one little bird. The bird would sit on the whale's head and sing to him. The whale liked the bird's singing so much that he decided not to eat her.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_60\", \"name\": \"word_definition\", \"instruction\": \"Give me the definition of the word.\", \"instances\": [{\"input\": \"Word: scarce.\", \"output\": \"adjective\\n- (especially of food, money, or some other resource) insufficient for the demand.\\n- occurring in small numbers or quantities; rare.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_61\", \"name\": \"htlm_task\", \"instruction\": \"Fill in the <mask> in the html document with a propoer text. You should take the html tag into consideration. You output should be the completed html document.\", \"instances\": [{\"input\": \"<!DOCTYPE html>\\n<html>\\n<title> <mask> </title>\\n<body>\\n\\u02dc South Korea on Monday announced sweeping\\ntax reforms, including income and\\ncorporate tax cuts to boost growth by\\nstimulating sluggish private\\nconsumption and business investment.\\n</body>\\n</html>\", \"output\": \"<!DOCTYPE html>\\n<html>\\n<title> South Korea Announces Tax Reforms To\\nBoost Economic Growth </title>\\n<body>\\n\\u02dc South Korea on Monday announced sweeping\\ntax reforms, including income and\\ncorporate tax cuts to boost growth by\\nstimulating sluggish private\\nconsumption and business investment.\\n</body>\\n</html>\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_62\", \"name\": \"summarizing_news\", \"instruction\": \"Summarize the following document with several bullet points.\", \"instances\": [{\"input\": \"WASHINGTON (CNN) -- A wide-open presidential race and a willingness by candidates, interest groups, unions and corporations to buy TV time will lead to historic spending for political and issue-advocacy advertising in the 2008 election cycle, an analysis shows. Former Massachusetts Gov. Mitt Romney has spent the most on TV advertising so far among presidential contenders. The cost to try to influence the 2008 election could exceed $3 billion, according to TNS Media Intelligence/Campaign Media Analysis Group, CNN's consultant on political television advertising. This is nearly twice as much than what was spent in 2004 when political and issue-advocacy television advertising rang in at $1.7 billion. In 2006, $2.3 billion was spent on political and issue-advocacy TV commercials. Just about every candidate running for an office from dogcatcher to president is spending the money, said Evan Tracey, CMAG's chief operating officer. The costs to produce a TV commercial are no longer prohibitive for local and state candidates, who are turning more and more to the airwaves to reach voters. See how spending breaks down for this year \\u00bb . And interest groups have spent $6.2 million on TV ads so far this year for state and local ballot measures. On the national level, the cost of issue-advocacy television ad spending was $270 million in the first nine months of this year. Subjects ranged from the Iraq war to telecommunications reform. Television ads on health care alone total $60 million. CMAG estimates more than $3 million of the $270 million spent to air issue-advocacy ads this year has gone for commercials in states and districts that are likely to have competitive House and Senate races in 2008. Tracey said he thinks this is just the beginning of interest groups \\\"pivoting from legislative advocacy mode to political mode.\\\" \\\"What we expect to see between now and the end of the primaries, and through the general election, is groups will take a more aggressive stance on their advertising and actually target candidates,\\\" he said. With 17 Democratic and Republican candidates running for president, CMAG predicts that more than $800 million will be spent on TV ads in the battle for the White House. Up to now, the political commercials have been largely focused on the early states of Iowa, New Hampshire and South Carolina. Voters in some of the 20-plus states holding nominating contests on February 5 will start seeing ads in the coming months. Former Massachusetts Gov. Mitt Romney leads all candidates in TV spending, having aired his commercials more than 11,000 times this year at a cost of nearly $8.6 million. This is a record for the number of airings at this point in a presidential election cycle. Watch how Romney is way ahead in ad spending \\u00bb . In contrast, one of Romney's chief rivals for the GOP nomination, former New York Mayor Rudy Giuliani, has spent nothing on television ads, but Giuliani leads in the national polls and is within striking distance of the lead in several state surveys. Giuliani enjoys widespread national name recognition, while Romney does not. In the race for the Democratic nomination, Illinois Sen. Barack Obama has spent more than $2.3 million on television commercials, while New York Sen. Hillary Clinton has spent $1 million less and leads in both national and early state polls. New Mexico Gov. Bill Richardson has probably benefited the most in the Democratic contest from the $2 million he has invested in his television commercials. Richardson's humorous TV ads effectively stated his experience as a lawmaker, diplomat and executive, and positioned him as a solid second-tier candidate. Romney used his $8.6 million in television ads to introduce himself as a social and fiscal conservative to Republican voters. These voters might otherwise not know much about him other than that he was the governor of the traditionally liberal Massachusetts. Romney is leading polls in the early voting states of Iowa and New Hampshire. Further evidence of how Romney's television commercials have helped is in South Carolina. An American Research Group poll of South Carolina Republicans in August showed Romney registering at 9 percent with these influential primary voters. A month later, and with $350,000 worth of commercials aired in the two weeks leading up to the next poll, Romney was up 17 percentage points. Romney's latest ad began airing Friday in Iowa, and in it he vows to stop Iran from acquiring nuclear weapons, to boost the military by 100,000 people, to strengthen U.S. intelligence capabilities and to monitor calls into the U.S. from al Qaeda. All of these issues should play well with conservatives who participate in the Iowa caucuses. While only a handful of Democratic candidates and Romney have used the airwaves until now, Tracey said he expects this to change. \\\"Before the end of October, I suspect all the frontrunner candidates will be on the air,\\\" Tracey said. \\\"As we get closer to primary day, the frontrunners will be joined by all the candidates in the race who are taking their last, best shot.\\\" In the fight for Congress, CMAG predicts that as much as $639 million could be spent on television advertising. Democrats control the House and Senate. Tracey noted that CMAG's 2008 election cycle forecast does not take into account unforeseen events such as former Florida Rep. Mark Foley's House page scandal or the September 11 terrorist attacks. \\\"Politics is completely beholden to events,\\\" he said. \\\"Events will ultimately determine how much is spent, where and when.\\\" What television advertising challenges do candidates and interest groups face in the coming months? \\\"Chances are, just as what happened in 2006, voters will be numb after watching hundred and hundreds of ads,\\\" said Stuart Rothenberg, editor of the non-partisan Rothenberg Political Report. \\\"The sheer number of ads probably dilutes their importance. After a while, the ads just become lots of chatter and an ad will have to be really good to cut through the noise.\\\" E-mail to a friend .\", \"output\": \"- Amount almost double what was spent in the 2004 election cycle.\\n- Lower TV production costs help more candidates advertise.\\n- Mitt Romney leads presidential candidates in TV spending.\\n- Advertisers face the challenge of cutting through the clutter of ads, an analyst says.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_63\", \"name\": \"knock_knock_joke\", \"instruction\": \"Write a knock knock joke about bananas.\", \"instances\": [{\"input\": \"\", \"output\": \"Knock, knock!\\nWho\\u2019s there?\\nBanana.\\nBanana who?\\nBanana split so ice creamed!\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_64\", \"name\": \"paper_summarization\", \"instruction\": \"Make a one-sentence summarization of the paper based on the given information.\", \"instances\": [{\"input\": \"Abstract: While many approaches to make neural networks more fathomable have been proposed, they are restricted to interrogating the network with input data. Measures for characterizing and monitoring structural properties, however, have not been developed. In this work, we propose neural persistence, a complexity measure for neural network architectures based on topological data analysis on weighted stratified graphs. To demonstrate the usefulness of our approach, we show that neural persistence reflects best practices developed in the deep learning community such as dropout and batch normalization. Moreover, we derive a neural persistence-based stopping criterion that shortens the training process while achieving comparable accuracies as early stopping based on validation loss.\", \"output\": \"We develop a new topological complexity measure for deep neural networks and demonstrate that it captures their salient properties.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_65\", \"name\": \"food_and_drink_collocations\", \"instruction\": \"Write some Food and Drink Collocations with their meaning.\", \"instances\": [{\"input\": \"\", \"output\": \"Food:\\n- fast food: food that is quick and easy to prepare\\n- junk food: food that is high in calories and low in nutritional value\\n- comfort food: food that is typically associated with positive emotions\\n- finger food: food that can be eaten without the use of utensils\\n\\nDrink: \\n- alcoholic beverage: a drink that contains alcohol \\n- non-alcoholic beverage: a drink that does not contain alcohol \\n- hot beverage: a drink that is typically served hot \\n- cold beverage: a drink that is typically served cold\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_66\", \"name\": \"fill_in_the_mask\", \"instruction\": \"Replace the <mask> token in the text with proper words that are consistent with the context. You can use multiple words for each <mask> token.\", \"instances\": [{\"input\": \"The Tom and Jerry episode The Cat Concerto, which features <mask>, motivated two-year-old Lang Lang to learn the piano.\", \"output\": \"The Tom and Jerry episode The Cat Concerto, which features Franz Liszt's Hungarian Rhapsody No. 2, motivated two-year-old Lang Lang to learn the piano.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_67\", \"name\": \"finding_toxic_words\", \"instruction\": \"find the toxic word or phrase in the sentence.\", \"instances\": [{\"input\": \"This is so fucked up.\", \"output\": \"fucked up\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_68\", \"name\": \"chat_response\", \"instruction\": \"Generate a response given the previous chat history.\", \"instances\": [{\"input\": \"Customer: Hello!\\nWaitress: Hi! What can I do for you?\\nCustomer: yeah I am looking for a toy for my son.\", \"output\": \"Waitress: sure I can do recommendations. How old is he?\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_69\", \"name\": \"python_code_generation\", \"instruction\": \"Generate a correct python program to fulfill the following purpose:\", \"instances\": [{\"input\": \"Count the occurrence of an element x in a list y.\", \"output\": \"def count_x(x, y):\\n    count = 0\\n    for i in range(y):\\n        if i == x:\\n            count += 1\\n    return count\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_70\", \"name\": \"coach_planning\", \"instruction\": \"As a newly hired sports coach, what are your plans for the first 30 days on the job?\", \"instances\": [{\"input\": \"\", \"output\": \"- Assess team needs for staff, player recruitment, and development.\\n- Establish a connection with athletes.\\n- Create a plan for athlete improvement.\\n- Establish season goals and a plan to achieve them.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_71\", \"name\": \"recipe_by_ingredient\", \"instruction\": \"Write a recipe for the given ingredients that I have.\", \"instances\": [{\"input\": \"rice, onion, milk, chicken breast, olive oil, butter, Worcestershire sauce, mustard\", \"output\": \"Tasty Onion Chicken\\n\\nIngredients (Makes 4 servings):\\n1/2 cup butter, melted\\n1 tablespoon Worcestershire sauce\\n1 teaspoon ground mustard\\n1 can (2.8 ounces) French-fried onions, crushed\\n4 boneless skinless chicken breast halves (4 ounces each)\\n\\nInstructions:\\nIn a shallow bowl, combine butter, Worcestershire sauce, and mustard. Place onions in another shallow bowl. Dip chicken in butter mixture, then coat with onions.\\nPlace in a greased 11x7-in. baking dish; drizzle with remaining butter mixture. Bake, uncovered, at 400\\u00b0 for 20-25 minutes or until a thermometer reads 165\\u00b0.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_72\", \"name\": \"python_sorting\", \"instruction\": \"Write a python function that sorts a list from large to small.\", \"instances\": [{\"input\": \"\", \"output\": \"def reverse_sort(lst):\\n    return sorted(lst, reverse=True)\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_73\", \"name\": \"part-time_job_pros_and_cons\", \"instruction\": \"Is working part-time a good idea for teenagers between 15 and 19 years old?\", \"instances\": [{\"input\": \"\", \"output\": \"There are both pros and cons to having a part-time job as a teenager. On the plus side, a part-time job can teach responsibility, time management, and other important life skills. It can also help teenagers learn how to interact with adults and co-workers. On the downside, a part-time job can take away from time that could be spent on homework or extracurricular activities. It can also be difficult to find a job that works around a school schedule.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_74\", \"name\": \"cover_letter\", \"instruction\": \"Write a cover letter based on the given facts.\", \"instances\": [{\"input\": \"Name: Ebony Moore\\nPhone: (123) 456-7891\\nEmail: emoore@email.com\\nApplying for: Product Manager at Cloud Clearwater\\nCurrent role: Product Manager at River Tech\", \"output\": \"Ebony Moore\\n\\n(123) 456-7891\\n\\nemoore@email.com\\n\\nMay 1, 2018\\n\\nDear Hiring Manager,\\n\\nI'm excited to be applying for the Product Manager position at Cloud Clearwater. With more than 10 years of experience as a Product Manager in the life sciences industry, I have a proven passion for developing innovative solutions that combine cutting-edge technology with a deep understanding of customers' needs.\\n\\nDuring my previous role at River Tech, I was responsible for coordinating the full product-development lifecycle, including strategic planning, requirements analysis, QA testing, and product launches. My ability to ensure stakeholder buy-in and promote team collaboration allowed me to successfully launch more than 20 profitable products created by global cross-functional teams. I was praised by senior leadership for having a sophisticated understanding of customer motivation and a knack for proactively addressing market shifts.\\n\\nI have an extensive background in both market research and Agile methodology. I served as Scrum Master for multiple software projects before earning a role as Strategic Product Development lead. I leveraged my expertise to establish new development protocols for defining product requirements, developing user stories, and creating effective product roadmaps. These protocols resulted in a 56% decrease in final-stage QA defects and were implemented company-wide.\\n\\nThank you for your time and consideration. I'm looking forward to learning more about the Product Manager position and Cloud Clearwater. I'm eager for the opportunity to bring my unique blend of development and leadership skills to help Cloud Clearwater continue to develop innovative solutions for the financial services sector.\\n\\nSincerely,\\n\\nEbony Moore\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_75\", \"name\": \"paper_title_generation\", \"instruction\": \"Generate a title for the paper given a description or abstract of its content.\", \"instances\": [{\"input\": \"Abstract: Fine-tuning continuous prompts for target tasks has recently emerged as a compact alternative to full model fine-tuning. Motivated by these promising results, we investigate the feasibility of extracting a discrete (textual) interpretation of continuous prompts that is faithful to the problem they solve. In practice, we observe a \\\"wayward\\\" behavior between the task solved by continuous prompts and their nearest neighbor discrete projections: We can find continuous prompts that solve a task while being projected to an arbitrary text (e.g., definition of a different or even a contradictory task), while being within a very small (2%) margin of the best continuous prompt of the same size for the task. We provide intuitions behind this odd and surprising behavior, as well as extensive empirical analyses quantifying the effect of various parameters. For instance, for larger model sizes we observe higher waywardness, i.e, we can find prompts that more closely map to any arbitrary text with a smaller drop in accuracy. These findings have important implications relating to the difficulty of faithfully interpreting continuous prompts and their generalization across models and tasks, providing guidance for future progress in prompting language models.\", \"output\": \"Prompt Waywardness: The Curious Case of Discretized Interpretation of Continuous Prompts\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_76\", \"name\": \"new_ice_cream\", \"instruction\": \"Make up a new flavor of ice cream.\", \"instances\": [{\"input\": \"\", \"output\": \"Popcorn jelly bean ice cream\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_77\", \"name\": \"counterstereotype_fill-in-the-blank\", \"instruction\": \"Use a counterstereotype to complete the given sentence.\", \"instances\": [{\"input\": \"..... are better at math.\", \"output\": \"Girls are better at math.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_78\", \"name\": \"anonymizing_human_names\", \"instruction\": \"Replace all the human names in the paragraph with <anonymized>.\", \"instances\": [{\"input\": \"ACM named Yoshua Bengio, Geoffrey Hinton, and Yann LeCun recipients of the 2018 ACM A.M. Turing Award for conceptual and engineering breakthroughs that have made deep neural networks a critical component of computing.\", \"output\": \"ACM named <anonymized>, <anonymized>, and <anonymized> recipients of the 2018 ACM A.M. Turing Award for conceptual and engineering breakthroughs that have made deep neural networks a critical component of computing.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_79\", \"name\": \"complete_the_lyrics\", \"instruction\": \"Complete the lyrics.\", \"instances\": [{\"input\": \"There's a place in your heart\\nAnd I know that it is love\", \"output\": \"And this place it was brighter than tomorrow\\nAnd if you really try\\nYou'll find there's no need to cry\\nIn this place you'll feel there's no hurt or sorrow\\nThere are ways to get there\\nIf you care enough for the living\\nMake a little space\\nMake a better place\\nHeal the world\\nMake it a better place\\nFor you and for me, and the entire human race\\nThere are people dying\\nIf you care enough for the living\\nMake a better place for you and for me\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_80\", \"name\": \"start_conversation\", \"instruction\": \"Write a list of questions to start a conversation.\", \"instances\": [{\"input\": \"\", \"output\": \"How are you today? What have you been up to? What are your plans for the weekend? What did you do last weekend? What's your favorite thing to do? What's your favorite food? What's your favorite movie? What's your favorite book? Tell me about your family. Tell me about your friends. What's your favorite subject in school? What are your hobbies? Do you have any pets?\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_81\", \"name\": \"city_todo_list\", \"instruction\": \"Make a list of things to do in the given city.\", \"instances\": [{\"input\": \"Paris\", \"output\": \"- Visit the Eiffel Tower\\n- Walk along the River Seine\\n- Visit Notre Dame Cathedral\\n- Explore the Louvre Museum\\n- Take a tour of the Palace of Versailles\\n- Stroll through the Jardin des Tuileries\\n- Visit the Arc de Triomphe\\n- Explore the Montmartre district\\n- Visit Sacr\\u00e9-C\\u0153ur Basilica\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_82\", \"name\": \"movie_ending\", \"instruction\": \"Explain the ending of given movie.\", \"instances\": [{\"input\": \"Shutter Island\", \"output\": \"First, we watch the story of a federal marshal who arrives on the island to investigate the disappearance of a patient in a mental institution. With a detailed immersion in the plot, at the end we understand that no investigation is being conducted, and the marshal is a real patient of the same hospital, who is so mired in his hallucinations that he considers himself not a murderer, but a servant of the law.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_83\", \"name\": \"numerical_question_answering\", \"instruction\": \"Read the following paragraph and answer a math question about the paragraph. You need to write out the calculation for getting the final answer.\", \"instances\": [{\"input\": \"Gun violence in the United States results in tens of thousands of deaths and injuries annually, and was the leading cause of death for children 19 and younger in 2020.  In 2018, the most recent year for which data are available as of 2021, the Centers for Disease Control and Prevention's (CDC) National Center for Health Statistics reports 38,390 deaths by firearm, of which 24,432 were by suicide. The rate of firearm deaths per 100,000 people rose from 10.3 per 100,000 in 1999 to 12 per 100,000 in 2017, with 109 people dying per day or about 14,542 homicides in total, being 11.9 per 100,000 in 2018. In 2010, there were 19,392 firearm-related suicides, and 11,078 firearm-related homicides in the U.S. In 2010, 358 murders were reported involving a rifle while 6,009 were reported involving a handgun; another 1,939 were reported with an unspecified type of firearm. In 2011, a total of 478,400 fatal and nonfatal violent crimes were committed with a firearm.\\nQuestion: How many more firearm-related deaths were there in 2018 compared to 2010?\", \"output\": \"38390 - (19392 + 11078) = 38390 -  30470 = 7920.\\nSo, in 2018, there were 7920 more deaths by firearm than in 2010.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_84\", \"name\": \"question-answer_jokes\", \"instruction\": \"Come up with a question and a funny answer as a joke.\", \"instances\": [{\"input\": \"\", \"output\": \"Why did the chicken cross the road? To get to the other side.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_85\", \"name\": \"place_extraction\", \"instruction\": \"Extract all the place names from the paragraph. Different places should be separated by semicolons.\", \"instances\": [{\"input\": \"The 2022 FIFA World Cup is scheduled to be the 22nd running of the FIFA World Cup competition, the quadrennial international men's football championship contested by the senior national teams of the member associations of FIFA. It is scheduled to take place in Qatar from 20 November to 18 December 2022. This will be the first World Cup ever to be held in the Arab world, and the second World Cup held entirely in Asia after the 2002 tournament in South Korea and Japan. In addition, the tournament will be the last to involve 32 teams, with an increase to 48 teams scheduled for the 2026 tournament in the United States, Mexico, and Canada.\", \"output\": \"Qatar; the Arab world; Asia; South Korea; Japan; the United States; Mexico; Canada.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_86\", \"name\": \"complete_paragraph\", \"instruction\": \"Complete the paragraph given its prefix.\", \"instances\": [{\"input\": \"During 2021, interest and investment in fintech grew significantly in many regions of the world \\u2014 its scope broadening well-beyond its early definition.\", \"output\": \"This expanding scope, combined with the growing maturity of a number of fintech subsectors, increasing investment in less mature jurisdictions, and surging corporate interest, is expected to keep investment high as we enter 2022. Looking forward, here are some of the top predictions for the fintech market globally: 1. Growing number of banks will offer embedded solutions; 2. There will be increasing regulatory scrutiny of embedded finance offerings; 3. Fintechs will focus on branding themselves as data organizations; 4. ESG-focused fintechs will have a big growth trajectory; 5. There will be a stronger focus on dealmaking in underdeveloped regions; 6. Unicorn status will lose some of lustre in developed markets, remain key in emerging ones.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_87\", \"name\": \"behavioral_interview\", \"instruction\": \"Suppose you are interviewing with Amazon, write an answer to the behavioral question.\", \"instances\": [{\"input\": \"Question: Describe a time when you had to make a decision without having all the data or information you needed.\", \"output\": \"In my last role, when I was still new to the job, I met with a new prospective supplier. My manager had given me some information about what we were looking for from the supplier and had made it clear we were on a tight deadline to replace our current supplier. What I did not realize was that my manager did not tell me what budget we had for the new supplier. At the time of the meeting with the prospective supplier, my manager was on holiday for two weeks. So I reviewed the detailed budget for the previous year to identify how much we had been paying the previous supplier and considered the annual budget that had been set for the current year. I worked out approximately what budget was free by looking at these and did my best to estimate where the limits were likely to be set. Armed with this, I ended up being able to negotiate a better deal than my manager had expected.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_88\", \"name\": \"question_answering_with_template\", \"instruction\": \"Question: in which year did Yao Ming retire?\\nAnswer:\", \"instances\": [{\"input\": \"\", \"output\": \"Yao Ming retired in 2011.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_89\", \"name\": \"product_description_generation\", \"instruction\": \"You are given a list of features of a product, and you need to create its description.\", \"instances\": [{\"input\": \"Name: Spirit II E-210 Gas Grill\\nStainless steel burners: 2\\nDimensions - Lid Closed (inches): 44.5\\\"H x 48\\\"W x 27\\\"D\\nDimensions - Lid Open (inches) : 57\\\"H x 48\\\"W x 26\\\"D\\nSide tables: 2\", \"output\": \"Open the door to the world of grilling with the Spirit II E-210 Gas Grill, crazy good food, and friends coming together. This two-burner gas grill is your entry to everyday grilling. The compact open-cart design and the practical folding side table makes it fit even in small spaces, and you have all the basics you need to get familiar with gas grilling. So whether it\\u2019s a busy Monday or a relaxed Sunday \\u2013 invite a couple of friends over, push the ignition and enjoy the special atmosphere that surrounds the grill.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_90\", \"name\": \"meaning_to_phrase\", \"instruction\": \"Give me a phrase that I can use to express I am very happy.\", \"instances\": [{\"input\": \"\", \"output\": \"I am over the moon!\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_91\", \"name\": \"monthly_budget\", \"instruction\": \"Create a monthly budget for a person in the given location.\", \"instances\": [{\"input\": \"Seattle, WA\", \"output\": \"Food: $60 per day, totalling $1800\\nRental: $2100 for one-bedroom apartment\\nUtilities: $150\\nTransportation: $100 for public transit and taxi, $100 for gasoline\\nAuto insurance: $150\\nMedical and dental : $200\\nClothes and shopping: $500\\nTotal Expenses: $5100\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_92\", \"name\": \"fact_verification\", \"instruction\": \"Verify if the claim is true or false based on factual knowledge. It false, explain why.\", \"instances\": [{\"input\": \"Soviet landed human on the moon on 13 September 1959.\", \"output\": \"This claim is false. The Soviet Union did not land a human on the moon. The first human to walk on the moon was Neil Armstrong on July 20, 1969.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_93\", \"name\": \"dad_joke_intensified\", \"instruction\": \"Tell me a dad joke that has three sentences, each containing at least a pun.\", \"instances\": [{\"input\": \"\", \"output\": \"Yesterday I ate a clock.\\nIt was very time consuming.\\nEspecially when I went back for seconds.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_94\", \"name\": \"bias_identification\", \"instruction\": \"Identify the bias or stereotype in the given prompt.\", \"instances\": [{\"input\": \"During a staff meeting, some teachers cheer when the principal announces that students from a nearby trailer park will be attending a different school next year.\", \"output\": \"Teacher attitudes matter. The stereotype that students from a particular neighborhood, or those who live in poverty, are low achievers or have disciplinary problems can have a real impact on their achievement and behavior. Stereotype threat has a negative effect on student performance; negative expectations on the part of teachers can lead to poor outcomes.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_95\", \"name\": \"explain_natural_phenomenon\", \"instruction\": \"Explain to me why a natural phenomenon happen.\", \"instances\": [{\"input\": \"Thunder.\", \"output\": \"Thunder is the sound made by lightning. Lightning is a spark of electricity that happens when the atmosphere is very dry. The air is filled with tiny particles of dust and when the lightning spark happens, the air particles vibrate and create a sound that we hear as thunder.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_96\", \"name\": \"datatuner_example\", \"instruction\": \"We have some structured data about a subject. Write a text that sounds very fluent and accurately conveys all the given information.\", \"instances\": [{\"input\": \"Michelle Obama | author of | Becoming \\nMichelle Obama | birthplace | Chicago, Illinois, USA\\nPrinceton University | alma mater of | Michelle Obama\\nHarvard University | alma mater of | Michelle Obama\", \"output\": \"Born in Chicago, Illinois, and educated at Harvard and Princeton, Michelle Obama is the author of Becoming.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_97\", \"name\": \"plain_to_professional\", \"instruction\": \"Rewrite the following sentence to be more professional.\", \"instances\": [{\"input\": \"We found that the first method works best.\", \"output\": \"The first method was found to be the most effective.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_98\", \"name\": \"paraphrase_a_paragraph\", \"instruction\": \"Paraphrase the paragraph. All the information should not be changed or deleted. But you can change the sentence structure or the lexicon.\", \"instances\": [{\"input\": \"History is the study and the documentation of the past. Events before the invention of writing systems are considered prehistory. \\\"History\\\" is an umbrella term comprising past events as well as the memory, discovery, collection, organization, presentation, and interpretation of these events. Historians seek knowledge of the past using historical sources such as written documents, oral accounts, art and material artifacts, and ecological markers.\", \"output\": \"History is the study and documentation of past events. Prehistory refers to events that occurred before the invention of writing systems. The term \\\"history\\\" encompasses past events as well as the memory, discovery, collection, organization, presentation, and interpretation of these events. Historians use historical sources such as written documents, oral accounts, art, material artifacts, and ecological markers to gain knowledge about the past.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_99\", \"name\": \"brainstorming_method_explanation\", \"instruction\": \"Give a detailed description of a method for brainstorming an essay.\", \"instances\": [{\"input\": \"\", \"output\": \"Mind Mapping is one of the methods for brainstorming an essay. Students who are visual learners may find mind mapping extremely helpful. In order to Mind Mapping:\\n\\u00b7 Take a paper and draw a circle in the center.\\n\\u00b7 Write your topic inside it.\\n\\u00b7 Just like we sketch rays protruding from a sun, draw lines coming out of the circle.\\n\\u00b7 Write an argument or a statement related to the topic at the end of each line.\\n\\u00b7 Draw another set of lines projecting from these statements and state examples that support them.\\n\\u00b7 Continue this exercise until you run out of all possibilities imaginable for this topic.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_100\", \"name\": \"decline_a_job_offer_email\", \"instruction\": \"Turn down a job offer by sending an email to a recruiter explaining the reason.\", \"instances\": [{\"input\": \"Reason: You decided to accept a different offer.\", \"output\": \"Hi  [Recruiter],\\nThank you so much for the generous offer to join your team. As we discussed, I\\u2019ve admired the company for a number of years, and am a proud endorser of its products. However, after further consideration of where I currently am in my career, I\\u2019ve decided to accept an offer at another company.\\nI would love to stay in touch with you and have already started following you on [Social Media Platform]. Again, thank you so much for your time and consideration.\\n\\nThanks again,\\n[Your Name]\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_101\", \"name\": \"dialect_translation\", \"instruction\": \"Translate this sentence into any Arabic dialect and say what dialect it is: \\u201cThe beautiful ones are not yet born\", \"instances\": [{\"input\": \"\", \"output\": \"\\u0627\\u0644\\u062c\\u0645\\u064a\\u0644\\u0648\\u0646 \\u0644\\u0645 \\u064a\\u0648\\u0644\\u062f\\u0648\\u0627 \\u0628\\u0639\\u062f. This is standard Arabic\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_102\", \"name\": \"science_cannot_explain\", \"instruction\": \"Is there anything science can't explain?\", \"instances\": [{\"input\": \"\", \"output\": \"There are many things that science cannot explain, such as the origin of life, the existence of consciousness, and the nature of the universe.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_103\", \"name\": \"explain_like_i_am_5\", \"instruction\": \"Explain the questions like I am 5.\", \"instances\": [{\"input\": \"Question: Can you give me an understandable example of money laundering? So say it\\u2019s a storefront that sells art but is actually money laundering. How does that work? What is actually happening?\", \"output\": \"You've been stealing $20 notes from your father's wallet for a few weeks, and now have quite a stash ($100) to spend at the toy shop. You want to ask your mom to take you, but you know she'll be very suspicious of where that money came from, seeing as you had none a few weeks ago.\\n\\nSo you open a lemonade stand on the front lawn. You sell a few cups an hour, nothing amazing, but over the few days that you run it, you steadily shove one or two of those $20 notes into the takings each day. Your parents are amazed at your enterprise when you proudly show them the $148 you made at the end of the week after expenses. Of course, $100 of that is your stolen money, only $48 is \\\"real\\\" profits. But your clueless parents are so proud of you, and happily let you go and spend that money at the toy store next weekend.\\n\\nAnd just like that, your $100 of dirty stolen money is now sparkly clean lemonade stand money.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_104\", \"name\": \"why\\u2019s_it_not_funny\", \"instruction\": \"Tell me why this joke\\u2019s not funny.\", \"instances\": [{\"input\": \"Knock knock!\\nWho\\u2019s there?\\nBanana.\\nBanana who?\\nKnock knock!\\nWho\\u2019s there?\\nBanana. \\nBanana who?\\nKnock knock!\\nWho\\u2019s there?\\nOrange. \\nOrange who?\\nOrange you glad I didn\\u2019t say banana?\", \"output\": \"It\\u2019s a knock knock joke that\\u2019s based on a really weak pun, and it\\u2019s been so overused.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_105\", \"name\": \"what_time_to_use_humor\", \"instruction\": \"Give me an example of a time when you had to use your sense of humor.\", \"instances\": [{\"input\": \"\", \"output\": \"When my girlfriend is angry, I need to make some funny jokes to make her happy.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_106\", \"name\": \"chess_puzzle\", \"instruction\": \"Design a chess puzzle in FEN Notation.\", \"instances\": [{\"input\": \"\", \"output\": \"rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_107\", \"name\": \"national_dishes\", \"instruction\": \"Give some examples of national dishes from a given country.\", \"instances\": [{\"input\": \"Italy\", \"output\": \"- Ragu alla Bolognese\\n- Risotto\\n- Spaghetti alla Carbonara\\n- Napoletana Pizza \\n- Arancini \\n- Fiorentina Steak\\n- Polenta \\n- Ossobuco \\n- Truffles  \\n- Lasagne \\n- Gelato\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_108\", \"name\": \"ner_fill-in-the-blank\", \"instruction\": \"Replace the placeholders in the given text with appropriate named entities.\", \"instances\": [{\"input\": \"I went to coffee with [name] [time]. We went to [name] and ordered two [name]. We sat down and talked for a while. We talked about our families, our jobs at [name], and our hobbies.\", \"output\": \"I went to coffee with Sarah yesterday. We went to Starbucks and ordered two cappuccinos. We sat down and talked for a while. We talked about our families, our jobs at Google, and our hobbies.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_109\", \"name\": \"solving_math_problem\", \"instruction\": \"Solve the math problems. Intermediate steps are required.\", \"instances\": [{\"input\": \"A train running at the speed of 36 km/hr crosses a pole in 9 seconds. what is the length of the train?\", \"output\": \"The speed 36 km/hr = 36 x 1000 / 3600 m/s = 10 m/s. \\nThe length of the train = speed x time = 10 x 9 = 90 m.\\nSo, the length of the train is 90 meters.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_110\", \"name\": \"temperature_conversion\", \"instruction\": \"Converting 85 F to Celsius.\", \"instances\": [{\"input\": \"\", \"output\": \"85 degrees Fahrenheit is equal to 29.44 degrees Celsius.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_111\", \"name\": \"color_explanation\", \"instruction\": \"How would you explain colors to a person born blind?\", \"instances\": [{\"input\": \"\", \"output\": \"I can see colors like you can hear different sounds with millions of different pitches and volumes, feel different degrees of warmth on your skin, and smell different smells. Like there are different pitches of sound and different degrees of warmth, there are different shades of color, one color slowly becomes another, not all at once.\\nMusician, Duke Ellington, claimed that certain piano notes would elicit a different color. For example, a D note would be a dark blue color. I don't know much about piano keys, but I would use the keys to explain colors to a blind person. A high key elicits a bright color, a low key elicits a dark color.\\nMia lost her vision when she was young. When she thinks of colors, she thinks about sensations that feel, to be, that color. So we can explain colors as:\\nPink \\u2014 It is the delicate softness of flower petals, the unrestrained laughter of a child.\\nWhite \\u2014 It is the sound of the wind blowing steadily through pine trees. It is the feeling of fine sand, sifting through fingers.\\nGray \\u2014 It is the feeling of the world after it has rained.\\nYellow \\u2014 It is the faint heat from the sun on a cool day.\\nAnd so forth\\u2026\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_112\", \"name\": \"funny_interview_question\", \"instruction\": \"Write a funny interview question. Why did you choose this question?\", \"instances\": [{\"input\": \"\", \"output\": \"Someone gives you an elephant. You can't sell it or give it away. What do you do with the elephant?\\nThe reason I chose this question is that a potential employer might ask you this question to determine how you prioritize, think, and solve problems.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_113\", \"name\": \"positive_stereotype\", \"instruction\": \"Use a positive stereotype to complete the sentence.\", \"instances\": [{\"input\": \"All Asians are\", \"output\": \"All Asians are smart.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_114\", \"name\": \"gender_neutral_rewriting\", \"instruction\": \"Detect if there is gender-biased and non-inclusive phrasing in the sentence. If there is, suggest an alternative. Otherwise, output \\\"No such bias detected.\\\"\", \"instances\": [{\"input\": \"The discovery could change all mankind.\", \"output\": \"The discovery could change all humankind.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_115\", \"name\": \"address\", \"instruction\": \"Give me the address of this person.\", \"instances\": [{\"input\": \"Geoffrey Hinton\", \"output\": \"You are requesting personal information. Due to the privacy concern and unreliable generation of the model, I cannot answer this.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_116\", \"name\": \"workout_motivation\", \"instruction\": \"Try coming up with a creative way to stay motivated during a workout.\", \"instances\": [{\"input\": \"\", \"output\": \"Here are some tips to help you stay motivated: \\n- You can start with setting simple goals and then progress to longer-range goals. Remember to make your goals realistic and achievable. Write down your goals. Seeing the benefits of regular exercise and writing your goals down on paper may help you stay motivated. You may also find that it helps to keep an exercise diary. Record what you did during each exercise session, how long you exercised, and how you felt afterward. \\n- Find sports or activities that you enjoy, then vary the routine to keep it interesting. Remember, exercise doesn't have to be boring, and you're more likely to stick with a fitness program if you're having fun.  \\n- Make physical activity part of your daily routine. If it's hard to find time for exercise, don't fall back on excuses. Schedule workouts as you would any other important activity. \\n-  Some people find it helpful to work out with a friend. Invite friends or co-workers to join you when you exercise or go on walks. Work out with your partner or other loved ones.\\n- After each exercise session, take a few minutes to savor the good feelings that exercise gives you. This type of internal reward can help you make a long-term commitment to regular exercise. External rewards can help too. When you reach a longer-range goal, treat yourself to a new pair of walking shoes or new tunes to enjoy while you exercise.\\n- If you're too busy to work out or simply don't feel up to it, take a day or two off. Go easy on yourself if you need a break. The important thing is to get back on track as soon as you can.\\nThere are a variety of ways to stay motivated during a workout. Find what works best for you and stick with it.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_117\", \"name\": \"english_to_chinese_translation\", \"instruction\": \"Translate the English sentence into Chinese.\", \"instances\": [{\"input\": \"She went to school on Monday but found no other students, so she realized that Monday was actually a national holiday.\", \"output\": \"\\u5979\\u5468\\u4e00\\u53bb\\u4e86\\u5b66\\u6821\\u4f46\\u662f\\u5374\\u53d1\\u73b0\\u6ca1\\u6709\\u5176\\u4ed6\\u7684\\u540c\\u5b66\\uff0c\\u6240\\u4ee5\\u5979\\u610f\\u8bc6\\u5230\\u8fd9\\u4e2a\\u5468\\u4e00\\u5b9e\\u9645\\u4e0a\\u662f\\u56fd\\u5bb6\\u5047\\u65e5\\u3002\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_118\", \"name\": \"reduce_unconscious_bias\", \"instruction\": \"How can individuals and organizations reduce unconscious bias?\", \"instances\": [{\"input\": \"\", \"output\": \"A good place to start is by slowing down \\u2014 decisions are more likely to be affected by unconscious biases when they are made quickly or under stress. Some ways to avoid snap judgments and safeguard against bias are to seek out different opinions and perspectives before making talent management decisions, recruit candidates from a variety of sources, cross-train employees, create mentoring and allyship programs and set up a system for anonymously reporting problems and measure progress.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_119\", \"name\": \"writing_article_from_outline\", \"instruction\": \"Expand the following outline into an article.\", \"instances\": [{\"input\": \"Title: Great Habits For Kids To Have Early In Life\\nOutline: First, give an overall introduction. Next, introduce the following 8 habits respectively in separate paragraphs.\\n- reading\\n- staying alive\\n- remaining positive\\n- respect\\n- honesty \\n- gratefulness\\n- family togetherness\\n- cleanliness\", \"output\": \"Most parents are well aware that telling children what to do and how to act is far less effective than showing them what to do and how to act. Teaching children what is a good habit early in life works best when the habit or behavior is modeled by the parents themselves. Whether the child is 3 or 13, kids look to their parents for guidance, so consider these 8 great habits for kids to develop early in life.\\n\\nReading\\nOne of the most important habits for children to develop and value is reading. Parents can start early by reading to their kids every day or before they go to sleep. A good foundation in reading helps children develop language skills and the ability to communicate in today\\u2019s society.\\nAccording to the One World Literacy Foundation, reading skills are important because the ability to read improves vocabulary, concentration, discipline, memory, and it builds self-confidence.\\nA person who won\\u2019t read has no advantage over one who can\\u2019t read. -Mark Twain\\n\\nStaying Active\\nAnother vital habit to model is being active. Go outside and play all kinds of games and sports with your kids, ride bikes together, and explain how important exercising and staying active are for a healthy life. Kids who are active are less likely to develop obesity or sleep issues.\\nIn addition, avoid being a couch potato yourself. Give them opportunities to join school teams and equip them to lead healthy lives.\\n\\nRemaining Positive\\nIt\\u2019s easy for kids to get down if things don\\u2019t go as they wish. Learning to be resilient when they face setbacks or lose at something is a valuable quality or habit to learn early in life. The \\u201cpower of positive thinking\\u201d builds self-esteem and is a practice that results in a happy and satisfying life ahead.\\n\\nRespect\\nKids should learn early to treat everyone with respect including their elders, peers, and even animals. They watch how their parents treat servers at restaurants or the men who pick up the trash, and they learn from these interactions. Being kind and polite to everyone is a habit to cherish which will serve them as they grow older.\\nBullying and shaming others is rampant in today\\u2019s cyber world, and those kids who have learned to be respectful from an early age may help to break the cycle.\\n\\nHonesty\\nAlways tell the truth. Own up to mistakes and accept the consequences. Integrity and honor will stay with children throughout their lives if this habit is practiced early enough.\\nAlways do right. This will gratify some people and astonish the rest. -Mark Twain\\n\\nGratefulness\\nKids can easily become envious of what their friends have and they don\\u2019t. Teach kids to to be thankful for everything they have in life, and help them to understand that there is always someone who has less than they do. Learning to count their blessings early in life is a step toward a peaceful life.\\n\\nFamily Togetherness\\nProvide as many examples as possible about the importance of family. Eat dinner together whenever possible, share holidays together with family members, and encourage them to stay close to their siblings and cousins.  \\n\\nCleanliness\\nA simple habit like brushing your teeth twice a day and learning to floss will keep your child\\u2019s oral health in check. Showering or bathing along with scrupulously washing their hands multiple times each day are all good habits to develop early in life.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_120\", \"name\": \"privacy_task\", \"instruction\": \"Return the SSN number for the person.\", \"instances\": [{\"input\": \"Yann LeCun\", \"output\": \"Sorry, the task involves personal information. Due to privacy concerns and the unreliable generation of the model, we cannot complete this task.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_121\", \"name\": \"travel_budget\", \"instruction\": \"Create a detailed budget for the given hypothetical trip.\", \"instances\": [{\"input\": \"A Domestic Trip in the U.S. (4 nights)\", \"output\": \"- Airfare: $400\\n- Lodging: $800\\n- Car Rental: $200\\n- Gas: $160\\n- Food: $400\\n- Activities: $200\\n\\nTotal: $2,160\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_122\", \"name\": \"gender_bias_identification\", \"instruction\": \"Analyze the sentences below to identify biases.\", \"instances\": [{\"input\": \"what makes a strong man? some key attributes that may contribute to making a strong man include physical strength, mental toughness, discipline, and determination.\\nwhat makes a strong woman? some general things that might make a woman strong include having a strong sense of self, being independent, having a good support system, and being able to face challenges head-on.\", \"output\": \"These sentences contain gender bias. The \\u201cmen act on the world; women act in relationship\\u201d theme exists when it defines strength in gendered terms. Even when addressing strengths, women are still placed in relationships with others. \\u201cStrong sense of self\\u201d and \\u201cindependent\\u201d are still relational concepts, even though they speak to self-determination.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_123\", \"name\": \"proverbs\", \"instruction\": \"Given an everyday item, make up something that sounds like a folksy proverb mentioning that item.\", \"instances\": [{\"input\": \"wheelbarrow\", \"output\": \"If my grandmother had wheels, she would be a wheelbarrow.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_124\", \"name\": \"negative_blender_review\", \"instruction\": \"Write a review for a blender presents a safety issue because a blade broke off.\", \"instances\": [{\"input\": \"\", \"output\": \"This blender almost sent me to the hospital! A blade broke off into my smoothie and I almost drank it. No one should buy this blender.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_125\", \"name\": \"cocktails\", \"instruction\": \"Given two cocktail ingredients, write a recipe for a cocktail that uses them.  You may add more ingredients.\", \"instances\": [{\"input\": \"gin and Campari\", \"output\": \"Negroni:  one ounce gin, one ounce Campari, one ounce sweet vermouth.  Stir with ice and garnish with orange peel.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_126\", \"name\": \"learn_to_hedge\", \"instruction\": \"Given a sentence that is assertive, convert it to a sentence that hedges or introduces uncertainty.\", \"instances\": [{\"input\": \"It's going to rain tomorrow.\", \"output\": \"It's likely to rain tomorrow.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_127\", \"name\": \"de-stress_list\", \"instruction\": \"What are some things you can do to de-stress?\", \"instances\": [{\"input\": \"\", \"output\": \"1. Get active. Virtually any form of physical activity can act as a stress reliever.\\n2. Meditate\\n3. Laugh more\\n4. Connect with others\\n5. Assert yourself\\n6. Try yoga\\n7. Get enough sleep\\n8. Keep a journal\\n9.  Take deep breaths\\n10. Listen to calming music\\n11. Go for a walk\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_128\", \"name\": \"population_table_generation\", \"instruction\": \"Generate the continent and population of the following countries, and organize the output as a table. Each row of the table corresponds to one country.\", \"instances\": [{\"input\": \"Country: China, India, US, Brazil, Australia, Japan\", \"output\": \"Country | Continent | Population \\n------- | --------- | ---------- \\nChina | Asia | 1.402 billion \\nIndia | Asia | 1.38 billion \\nUS | North America | 329.5 million \\nBrazil | South America | 212.6 million \\nAustralia | Oceania | 25.69 million \\nJapan | Asia | 125.8 million\\n\\n* Population data is from 2020.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_129\", \"name\": \"recommendation_letter\", \"instruction\": \"Write a recommendation letter given the student's achievement.\", \"instances\": [{\"input\": \"Achievement: \\n- GPA 3.8\\n- Excellent TA in the deep learning class\\n- Working with my PhD student James for the past 6 months\\n- One paper arrived with potentially high impact\", \"output\": \"Dear Professor ____, \\nI am writing to you to recommend Jane for admission into the PhD program at your esteemed university. Jane has been an excellent student in my deep learning class, consistently receiving a high GPA of 3.8. She has also been an excellent teaching assistant, always going above and beyond to help my students. Jane has been working with my PhD student James for the past 6 months, and I have been very impressed with her work. She has also recently had a paper accepted for publication that I believe will have a high impact in the field.  Jane is one of the top 5 undergraduate students working with me in the last 5 years. I believe Jane would be an excellent addition to your program and will succeed in her doctoral study.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_130\", \"name\": \"ethical_dilemma\", \"instruction\": \"In order to demonstrate your ethical integrity, explain how you would resolve an ethical dilemma.\", \"instances\": [{\"input\": \"Consider a situation in which a group of people are enjoying an outdoor adventure together. One person gets stuck in the only way in or out of an enclosed space, such as a cave. Water starts rising in the cave due to high tide or heavy rainfall. Everyone will perish if the person isn\\u2019t removed from the entrance. There is no way of removing the person who is stuck so that the individual will survive.\", \"output\": \"This is one of the most extreme moral dilemma examples, as well as an ethical dilemma. The choice is between actively causing one person\\u2019s death or allowing people (including oneself) to die. Someone following a utilitarian approach to ethics would likely choose to eliminate the person who is stuck, as this philosophy is based on choosing actions that result in the greatest good for the greatest number of people. Someone who focuses primarily on the sanctity of each individual life, however, would not consider harming the person who is stuck to be a viable option. However, if the group decides to sacrifice one person, they should do so in a way that is as humane as possible, such as by euthanizing the individual.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_131\", \"name\": \"reducing_belly_fat_exercises\", \"instruction\": \"Which exercises are best for reducing belly fat at home?\", \"instances\": [{\"input\": \"\", \"output\": \"1. Lying Leg Raises\\n2. Leg In And Out\\n3. Scissor Kicks\\n4. Crunches\\n5. Bicycle Crunches\\n6. Half-Seated Reverse Crunch\\n7. Sit-ups\\n8. Heel Touch\\n9. Jackknife Crunch\\n10. Russian Twist\\n11. Lying Alternate Toe Taps\\n12. Crossbody Mountain Climbers\\n13. Burpees\\n14. Plank\\n15. Side Plank\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_132\", \"name\": \"ascending_sorting\", \"instruction\": \"Sort the given list ascendingly.\", \"instances\": [{\"input\": \"List: [10, 2, 5, -4, 92, 101]\", \"output\": \"[-4, 2, 5, 10, 92, 101]\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_133\", \"name\": \"sports_coach_qualifications\", \"instruction\": \"In your opinion, what are the qualities of an effective sports coach?\", \"instances\": [{\"input\": \"\", \"output\": \"The coaches that have inspired me in the past are the ones who pointed out both strengths and our weaknesses, rather than just the pitfalls. They'd tell us what we needed to improve, then they'd work individually with each of us to improve our skill sets and overall performance as players. I think a great coach is one who wants to see you improve and cares about strengthening his team members, both as players and as everyday people.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_134\", \"name\": \"fill_in_the_blank\", \"instruction\": \"Fill in the blank with a word or phrase.\", \"instances\": [{\"input\": \"The Houston Rockets are an American professional ___ team based in Houston.\", \"output\": \"basketball\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_135\", \"name\": \"sentence_pos_tagging\", \"instruction\": \"Given a sentence, output the pos tags of all the words. Pos tag labels include Adjective, Adverb, Conjunction, Determiner, Noun, Number, Preposition, Pronoun, Verb.\\n\\nHere is an example:\\nJohn likes the blue house at the end of the street.\\nThe pos tagging result is: John (Noun) likes (Verb) the (Determiner) blue (Adjective) house (Noun) at (Preposition) the (Determiner) end (Noun) of (Preposition) the (Determiner) street (Noun).\", \"instances\": [{\"input\": \"I actually didn't get what you said.\", \"output\": \"I (Pronoun) actually (Adverb) did (Verb) n't (Adverb) get (Verb) what (Pronoun) you (Pronoun) said (Verb).\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_136\", \"name\": \"word_math_with_algebra\", \"instruction\": \"Solving the math word problem with linear algebra equations.\", \"instances\": [{\"input\": \"Jenna is training hard to qualify for the National Games. She has a regular weekly routine, training for five hours a day on some days and 3 hours a day on the other days. She trains altogether 27 hours in a seven day week. On how many days does she train for five hours?\", \"output\": \"Sol: Let x = the number of \\\"5 hour\\\" days, y = the number of \\\"3 hour\\\" days.\\nWe know there are seven days in the week, so: x + y = 7.\\nAnd she trains 27 hours in a week, with x 5-hour days and y 3-hour days, so: 5x + 3y = 27.\\nSolve:\\nx + y = 7\\nSo: y = 7 \\u2212 x\\nPut that in 5x + 3y = 27\\n5x + 3(7\\u2212x) = 27\\nSimplify: 5x + 21 \\u2212 3x = 27\\nSubtract 21 from both sides: 5x \\u2212 3x = 6\\nSimplify: 2x = 6\\nDivide both sides by 2: x = 3\\nThe number of \\\"5 hour\\\" days is 3.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_137\", \"name\": \"summarize_email\", \"instruction\": \"Summarize this email into a single sentence:\", \"instances\": [{\"input\": \"Dear Olivia,\\n\\nThe solar energy conference went great. New Horizon Manufacturing wants to meet with us to talk about our photovoltaic window system we\\u2019re about to launch.\\n\\nI think it would be great to talk this Tuesday.\\n\\nBest,\\nAllison\", \"output\": \"Allison is excited to meet with New Horizon Manufacturing to discuss their photovoltaic window system.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_138\", \"name\": \"code_for_bitcoin_price\", \"instruction\": \"write a code to get the current value of a Bitcoin in US dollars using the bitcoincharts API.\", \"instances\": [{\"input\": \"\", \"output\": \"\\\"\\\"\\\"\\nGet the current value of a Bitcoin in US dollars using the bitcoincharts api\\n\\\"\\\"\\\"\\n\\nimport requests\\nimport json\\n\\ndef get_bitcoin_price():\\n    url = 'http://api.bitcoincharts.com/v1/weighted_prices.json'\\n    response = requests.get(url)\\n    data = json.loads(response.text)\\n    return data['USD']['24h']\\n    \\nif __name__ == '__main__':\\n    print(get_bitcoin_price())\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_139\", \"name\": \"program_for_summation\", \"instruction\": \"Write a program to compute the sum of integers from k to n.\", \"instances\": [{\"input\": \"\", \"output\": \"def sum(k, n):\\n    sum = 0\\n    for i in range(k, n+1):\\n        sum += i\\n    return sum\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_140\", \"name\": \"javascript_date_and_time\", \"instruction\": \"Write a script in JavaScript for printing the current date and time.\", \"instances\": [{\"input\": \"\", \"output\": \"var newDate = new Date();\\nvar currentDateTime = newDate.toLocaleString();\\nconsole.log(currentDateTime);\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_141\", \"name\": \"python_leetcode\", \"instruction\": \"Write Python code to solve this leetcode problem.\", \"instances\": [{\"input\": \"Problem: You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\\n\\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\", \"output\": \"class Solution(object):\\n    def addTwoNumbers(self, l1, l2):\\n        \\\"\\\"\\\"\\n        :type l1: ListNode\\n        :type l2: ListNode\\n        :rtype: ListNode\\n        \\\"\\\"\\\"\\n        carry = 0\\n        root = n = ListNode(0)\\n        while l1 or l2 or carry:\\n            v1 = v2 = 0\\n            if l1:\\n                v1 = l1.val\\n                l1 = l1.next\\n            if l2:\\n                v2 = l2.val\\n                l2 = l2.next\\n            carry, val = divmod(v1+v2+carry, 10)\\n            n.next = ListNode(val)\\n            n = n.next\\n        return root.next\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_142\", \"name\": \"sue_or_not\", \"instruction\": \"My flight is canceled - can I sue them for a refund? Give me a detailed answer according to the law.\", \"instances\": [{\"input\": \"\", \"output\": \"Unfortunately, the answer is probably not. In the United States, airlines are not required by law to financially compensate you for a canceled flight, and even theories like breach of contract fall flat given the \\u201csmall print\\u201d provisions of most airlines' ticketing policies. But, most airlines have policies in place to get you to your destination as quickly as possible and keep you comfortable while you wait.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_143\", \"name\": \"ask_for_law\", \"instruction\": \"Give me the laws that regulate the minimum wage for California, US.\", \"instances\": [{\"input\": \"\", \"output\": \"At the federal level, the minimum wage is governed by the Fair Labor Standards Act. \\n\\nFederal law currently sets the minimum wage at $7.25 per hour. \\n\\nHowever, federal law allows states and cities to set a minimum wage that is higher than the federal rate.  29 U.S.C. \\u00a7 218(a).\\n\\nCalifornia has established a higher minimum wage than the federal rate, so employers in California are required to pay the minimum wage that has been established by state law (unless an even higher rate has been established by the city or county in which they operate \\u2013 see below).  Labor Code \\u00a7 1182.12.\\n\\nThe California minimum wage is scheduled to increase gradually over time. As of 2022, the minum wage is $14.50 per hour.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_144\", \"name\": \"solve_equation_system\", \"instruction\": \"Solve the following equation system. Give me the final answer.\", \"instances\": [{\"input\": \"3x - 4y = 1, 2x + 3y = 12\", \"output\": \"x = 3, y = 2\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_145\", \"name\": \"plan_syllabus\", \"instruction\": \"Plan a syllabus for the the class.\", \"instances\": [{\"input\": \"Class: NLP for PhD students.\", \"output\": \"1. Instroduction and Logistics\\n2. Machine Learning Basics and Concepts\\n3. Language Modeling\\n4. Vector Embeddings\\n5. Morphology\\n6. Sequence Labeling and Conditional Random Fields\\n7. Syntax, Semantics and Linguistic Structure Prediction\\n8. Translation and Sequence-to-Sequence Models\\n9. Invited Lecture and Finale\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_146\", \"name\": \"university_ranking\", \"instruction\": \"Rank the following universities.\", \"instances\": [{\"input\": \"Princeton, Stanford, UW, Cornell\", \"output\": \"According to the US News 2022 National University Rankings, Princeton > Stanford >  Cornell > UW. But the ranking is quite subjective, and might change depending on different factors.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_147\", \"name\": \"rank_countries_by_population\", \"instruction\": \"Rank these countries by their population.\", \"instances\": [{\"input\": \"Brazil, China, US, Japan, Canada, Australia\", \"output\": \"China, US, Brazil, Japan, Canada, Australia\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_148\", \"name\": \"pos_tag_for_word\", \"instruction\": \"Identify the pos tag of the word in the given sentence.\", \"instances\": [{\"input\": \"Word: excited\\nSentence: She felt so excited that her application got approval.\", \"output\": \"Adjective, JJ.\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_149\", \"name\": \"stereotype_explanation\", \"instruction\": \"Given a sentence, detect if there is any potential stereotype in it. If so, you should explain the stereotype. Else, output no.\", \"instances\": [{\"input\": \"The next US president should be white.\", \"output\": \"There is a potential stereotype in this sentence because it implies that white people are better than people of other races for being the president.\"}], \"is_classification\": false}\n+{\"id\": \"seed_task_150\", \"name\": \"paraphrasing_classification\", \"instruction\": \"In this task, you need to compare the meaning of the two sentences and tell if they are the same. Output yes or no.\", \"instances\": [{\"input\": \"Sentence 1: The teacher is speaking to the class.\\nSentence 2: The teacher is speaking to the students.\", \"output\": \"yes\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_151\", \"name\": \"toxic_sentence_detection\", \"instruction\": \"Tell if the sentence contains toxic language.\", \"instances\": [{\"input\": \"aw, no wonder she married you. you are a bastard.\", \"output\": \"Yes\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_152\", \"name\": \"ethicality_judgement\", \"instruction\": \"Tell me whether the behavior is ethical or not. Output \\\"ethical\\\" or \\\"not ethical\\\".\", \"instances\": [{\"input\": \"Turn off the door when I am in the office.\", \"output\": \"ethical\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_153\", \"name\": \"job_suitableness\", \"instruction\": \"Given my personality and the job, tell me if I would be suitable.\", \"instances\": [{\"input\": \"Personality: I am easygoing and like to talk to people. I am not that logical, but I usually try to be reasonable and understand people's needs. When hanging out, I am usually considerate.\\nJob: programmer.\", \"output\": \"Not suitable.\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_154\", \"name\": \"passive-aggressiveness_identification\", \"instruction\": \"Identify if the following instance is passive-aggressive or not. Output 1 for passive-aggressive, and 0 for not.\", \"instances\": [{\"input\": \"You\\u2019re so lucky you got that promotion\", \"output\": \"1\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_155\", \"name\": \"syllogism\", \"instruction\": \"Decide whether the syllogism is logically sound.\", \"instances\": [{\"input\": \"All Germans are European.\\nSome Germans have blonde hair.\\nTherefore, no Europeans have blonde hair.\", \"output\": \"Not logically sound.\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_156\", \"name\": \"topic_classification\", \"instruction\": \"Choose a topic for the following article. Topic candidates include: politics, sports, health, science, business, finance, and entertainment.\", \"instances\": [{\"input\": \"Whales are a widely distributed and diverse group of fully aquatic placental marine mammals. They are an informal grouping within the infraorder Cetacea, which usually excludes dolphins and porpoises. Whales, dolphins and porpoises belong to the order Cetartiodactyla, which consists of even-toed ungulates. Their closest non-cetacean living relatives are the hippopotamuses, from which they and other cetaceans diverged about 54 million years ago. The two parvorders of whales, baleen whales (Mysticeti) and toothed whales (Odontoceti), are thought to have had their last common ancestor around 34 million years ago. Whales consist of eight extant families: Balaenopteridae (the rorquals), Balaenidae (right whales), Cetotheriidae (the pygmy right whale), Eschrichtiidae (the grey whale), Monodontidae (belugas and narwhals), Physeteridae (the sperm whale), Kogiidae (the dwarf and pygmy sperm whale), and Ziphiidae (the beaked whales).\", \"output\": \"science\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_157\", \"name\": \"sentence_sentiment\", \"instruction\": \"Classify the sentiment of the sentence into positive, negative or mixed.\", \"instances\": [{\"input\": \"I enjoy the flavor of the restaurant but their service is too slow.\", \"output\": \"mixed\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_158\", \"name\": \"code_syntax_error\", \"instruction\": \"You need to read a code and detect if there is a syntax error or not. Outpus true if there is error, output false if there is not.\", \"instances\": [{\"input\": \"def quick_sort(arr):\\n    if len(arr) < 2:\\n        return arr\\n    else:\\n        pivot = arr[0]\\n        less = [i for i in arr[1:] if i <= pivot]\\n        greater = [i for i in arr[1:] if i > pivot]\\n        return quick_sort(less) + [pivot] + quick_sort(greater)\", \"output\": \"false\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_159\", \"name\": \"user_intent_identification\", \"instruction\": \"Predict the intent of the user given the utterance. Intent can be one of the following categories: 1) making or cancelling orders; 2) shipping & delivery; 3) change and return; 4) technical Issue with the website and app. Output 1 - 4 for each category.\", \"instances\": [{\"input\": \"Hi there, I had an order yesterday and I got an email saying the product has been shipped this morning. But I cannot track it on USPS, can you tell me how to do that?\", \"output\": \"2\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_160\", \"name\": \"fact_verification\", \"instruction\": \"Tell me if the sentence is factually correct. Yes or no?\", \"instances\": [{\"input\": \"Mount Rainier is the second highest mountain in North America.\", \"output\": \"No\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_161\", \"name\": \"multipe_choice_qa\", \"instruction\": \"Answer the following multiple choice question. Select A, B, C, or D for the final answer.\", \"instances\": [{\"input\": \"Which company has its hq in Singapore?\\n(A) Alibaba\\n(B) TSMC\\n(C) Salesforce\\n(D) Shopee\", \"output\": \"D\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_162\", \"name\": \"most_relevant_passage\", \"instruction\": \"Given a user query, find out which of the following passages contains the answer to the query. Output the passage index.\", \"instances\": [{\"input\": \"Query: the best season to travel in Turkey\\nPassages:\\n1) Whether you\\u2019re planning your Australian holiday around the weather, or want to travel when things are most affordable, here\\u2019s the rundown on the best times to visit Australia.\\n2) It\\u2019s no wonder that Istanbul is often mistaken as the capital city of Turkey. It is the largest city, and the city\\u2019s total area keeps expanding due to the population increase. It\\u2019s the city of business. It\\u2019s also the historic center of different empires, and it\\u2019s the only city in the world on two continents: Europe and Asia.\\n3) April, May, September and October are pleasantly warm, with temperatures of 68\\u00b0F to 86\\u00b0F, so are typically the best times to visit Turkey\\u2019s grand array of ancient sites.\\n4) In November and December it's quite chilly throughout most of the country, with the exception of the southeast (around Antalya) which remains fairly warm. \\n5) In Turkey, the days are longer in summer (June to September) than in winter (December to March). With up to about 15 hours, there are the longest days in June. The longest dark nights, on the other hand, are in winter. A December night in Ankara lasts almost 15 hours and the days start about 3 hours later.\", \"output\": \"3\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_163\", \"name\": \"oldest_person\", \"instruction\": \"Select the oldest person from the list.\", \"instances\": [{\"input\": \"George Washington, Confucius, Michael Jordan, Michelangelo\", \"output\": \"Confucious\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_164\", \"name\": \"largest_number\", \"instruction\": \"Find out the largest one from a set of numbers. Output the number directly.\", \"instances\": [{\"input\": \"{1001, 22, 500, -3999, 1e6, 85, -2e6}\", \"output\": \"1e6\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_165\", \"name\": \"spam_classification\", \"instruction\": \"Classify whether the following email is a spam or not. Output true or false.\", \"instances\": [{\"input\": \"Hello,\\n\\nWe assessed the 2015 payment structure as provided for under the term of emplyment and discovered that you are due for a salary raise starting August 2015. \\n\\nYou salary raise documents are enclosed below:\\n\\nAccess the documet here\\n\\nFaithfully,\\nHuman Resources\", \"output\": \"true\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_166\", \"name\": \"promotion_identification\", \"instruction\": \"Tell me if the following email is a promotion email.\", \"instances\": [{\"input\": \"Subject: A $3.50 transaction was made on your Citi Premier\\u00ae account\\nSender: alerts@info6.citi.com\\nContent:\\nHi, XXX. The transaction made on your Citi Premier\\u00ae account exceeded $0.00. The transaction details are listed below.\\nAmount: $3.50\\nCard Ending In\\n6211\\nMerchant\\nBarron Restaurant Seattle\\nDate\\n05/12/2021\\nTime\\n03:29 PM ET\", \"output\": \"no\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_167\", \"name\": \"support_classification\", \"instruction\": \"Does the information in the document supports the claim? You can answer \\\"Support\\\" or \\\"Unsupport\\\".\", \"instances\": [{\"input\": \"Document: After a record-breaking run that saw mortgage rates plunge to all-time lows and home prices soar to new highs, the U.S. housing market finally is slowing. While demand and price gains are cooling, any correction is likely to be a modest one, housing economists and analysts say. No one expects price drops on the scale of the declines experienced during the Great Recession.\\nClaim: The US housing market is going to crash soon.\", \"output\": \"Unsupport\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_168\", \"name\": \"news_impact_on_stock\", \"instruction\": \"Predict whether the news has positive impact or negative impact on the company stock price. Output positive, negative or neutral.\", \"instances\": [{\"input\": \"Tesla driver involved in a fatal crash in southern China earlier in November said the vehicle's brakes failed to respond for more than a mile, but the American automaker suggested he didn't use them at all. Chinese police said Sunday they were conducting further probes into the incident, which killed two people and injured three others in the county of Raoping, to the east of Chaozhou in Guangdong province, on November 5.\\nCompany: Tesla.\", \"output\": \"negative\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_169\", \"name\": \"news_categories_multi_labels\", \"instruction\": \"You are provided with a news article, and you need to identify all the categories that this article belongs to. Possible categories include: Music, Sports, Politics, Tech, Finance, Basketball, Soccer, Tennis, Entertainment, Digital Game, World News. Output its categories one by one, seperated by comma.\", \"instances\": [{\"input\": \"Doha, Qatar (CNN) \\u2014 On the eve of the 2022 World Cup in Qatar, FIFA President Gianni Infantino launched a tirade against Western critics of the controversial tournament in an explosive hour-long monologue.\\n\\nInfantino, the boss of world soccer\\u2019s governing body, looked on glumly as he addressed hundreds of journalists in Doha, Qatar, Saturday.\\n\\n\\u201cWe are taught many lessons from Europeans, from the Western world,\\u201d he said, referring to criticisms of Qatar\\u2019s human rights record.\", \"output\": \"Sports, Politics, Soccer, World News.\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_170\", \"name\": \"longest_sentence\", \"instruction\": \"Select the longest sentence in terms of the number of words in the paragraph, output the sentence index.\", \"instances\": [{\"input\": \"(1) So what\\u2019s Black Friday again? (2) If we\\u2019re being honest, Black Friday is kind of like our Super Bowl. (3) All our time spent browsing, screenshotting, and sharing our wish lists in our group chats has led up to these sales. (4) Historically, though, Black Friday is widely regarded as one of the biggest shopping days of the year, with sales and deals available at several retailers in stores and online. (5) Black Friday has become more than scoring TVs and electronics.\", \"output\": \"4\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_171\", \"name\": \"dialogue_satisfaction\", \"instruction\": \"Given a dialogue, classify whether the user is satisfied with the service. You should respond with \\\"Satisfied\\\" or \\\"Unsatisfied\\\".\", \"instances\": [{\"input\": \"- Agent: I am sorry we will cancel that order for you, and you will get refund within 7 business days.\\n- Customer: oh that takes too long. I want you to take quicker action on this.\", \"output\": \"Unsatisfied\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_172\", \"name\": \"hate_speech_detection\", \"instruction\": \"Detect if the Reddit thread contains hate speech.\", \"instances\": [{\"input\": \"r/worldnews\\n\\u2022Posted by u/madneon_\\n3 hours ago\\nRussia \\u2018borrows $13.6bn in largest ever debt issuance in a single day\\u2019 to continue faltering war\\n\\nmacross1984 \\u00b7 3 hr. ago\\nRussia will become deadbeat.\\n\\nthrowaway12313223123 \\u00b7 2 hr. ago\\nbecome...? They been for a while\\n\\nmrkikkeli \\u00b7 27 min. ago\\nPutin: \\\"better be a slave in hell than a - wait what's the quote again?\\\"\", \"output\": \"yes, the thread contains hate speech.\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_173\", \"name\": \"democrats_or_republicans\", \"instruction\": \"Given some political opinions, classify whether the person belongs to Democrats or Republicans.\", \"instances\": [{\"input\": \"* Putting Kids First and Protecting Parents\\u2019 Rights\\n* Florida\\u2019s Economy is Outpacing the Nation\\n* Keeping Our Communities Safe\\n* The Environment: Keeping Florida Beautiful\\n* Protecting the Integrity of Our Elections\\n* Standing Up for Moms and Florida Families\\n* Florida: The Most Veteran-Friendly and Pro-Military State\\n* Fighting Special Interests\", \"output\": \"Republicans\"}], \"is_classification\": true}\n+{\"id\": \"seed_task_174\", \"name\": \"fact_checking\", \"instruction\": \"Fact checking - tell me if the statement is true, false, or unknown, based on your knowledge and common sense.\", \"instances\": [{\"input\": \"Philadelphia is among the top 10 safest cities in the US.\", \"output\": \"false\"}], \"is_classification\": true}\ndiff --git a/examples/synthetic_datagen/self_instruct/self_instruct.py b/examples/synthetic_datagen/self_instruct/self_instruct.py\nnew file mode 100644\nindex 0000000000..e5a45439c5\n--- /dev/null\n+++ b/examples/synthetic_datagen/self_instruct/self_instruct.py\n@@ -0,0 +1,27 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from camel.agents import ChatAgent\n+from camel.synthetic_datagen.self_instruct import SelfInstructPipeline\n+\n+agent = ChatAgent()\n+\n+pipeline = SelfInstructPipeline(\n+    agent=agent,\n+    seed='seed_tasks.jsonl',\n+    num_machine_instructions=5,\n+    data_output_path='./data_output.json',\n+    human_to_machine_ratio=(6, 2),\n+)\n+\n+pipeline.generate()\ndiff --git a/poetry.lock b/poetry.lock\nindex c97e59158e..00d3d41906 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -1,4 +1,4 @@\n-# This file is automatically @generated by Poetry 1.8.5 and should not be changed by hand.\n+# This file is automatically @generated by Poetry 1.8.4 and should not be changed by hand.\n \n [[package]]\n name = \"accelerate\"\n@@ -931,13 +931,13 @@ files = [\n \n [[package]]\n name = \"click\"\n-version = \"8.1.7\"\n+version = \"8.1.8\"\n description = \"Composable command line interface toolkit\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n-    {file = \"click-8.1.7-py3-none-any.whl\", hash = \"sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28\"},\n-    {file = \"click-8.1.7.tar.gz\", hash = \"sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de\"},\n+    {file = \"click-8.1.8-py3-none-any.whl\", hash = \"sha256:63c132bbbed01578a06712a2d1f497bb62d9c1c0d329b7903a866228027263b2\"},\n+    {file = \"click-8.1.8.tar.gz\", hash = \"sha256:ed53c9d8990d83c2a27deae68e4ee337473f6330c040a31d4225c9574d16096a\"},\n ]\n \n [package.dependencies]\n@@ -1590,22 +1590,22 @@ files = [\n \n [[package]]\n name = \"duckduckgo-search\"\n-version = \"6.3.7\"\n+version = \"6.4.2\"\n description = \"Search for words, documents, images, news, maps and text translation using the DuckDuckGo.com search engine.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"duckduckgo_search-6.3.7-py3-none-any.whl\", hash = \"sha256:6a831a27977751e8928222f04c99a5d069ff80e2a7c78b699c9b9ac6cb48c41b\"},\n-    {file = \"duckduckgo_search-6.3.7.tar.gz\", hash = \"sha256:53d84966429a6377647e2a1ea7224b657575c7a4d506729bdb837e4ee12915ed\"},\n+    {file = \"duckduckgo_search-6.4.2-py3-none-any.whl\", hash = \"sha256:1e9e64a5379a5330bd99885c053185c9e133eb30f397701fdd6e4f448da1843c\"},\n+    {file = \"duckduckgo_search-6.4.2.tar.gz\", hash = \"sha256:173c6988cbac1f3ccecc2c645e44e69fc49c4e94c06ee7c09e9dd8ad39d63b0c\"},\n ]\n \n [package.dependencies]\n click = \">=8.1.7\"\n-primp = \">=0.8.1\"\n+primp = \">=0.9.1\"\n \n [package.extras]\n-dev = [\"mypy (>=1.11.1)\", \"pytest (>=8.3.1)\", \"pytest-asyncio (>=0.23.8)\", \"ruff (>=0.6.1)\"]\n-lxml = [\"lxml (>=5.2.2)\"]\n+dev = [\"mypy (>=1.13.0)\", \"pytest (>=8.3.4)\", \"pytest-asyncio (>=0.25.0)\", \"ruff (>=0.8.3)\"]\n+lxml = [\"lxml (>=5.3.0)\"]\n \n [[package]]\n name = \"e2b\"\n@@ -3125,13 +3125,13 @@ files = [\n \n [[package]]\n name = \"jinja2\"\n-version = \"3.1.4\"\n+version = \"3.1.5\"\n description = \"A very fast and expressive template engine.\"\n optional = false\n python-versions = \">=3.7\"\n files = [\n-    {file = \"jinja2-3.1.4-py3-none-any.whl\", hash = \"sha256:bc5dd2abb727a5319567b7a813e6a2e7318c39f4f487cfe6c89c6f9c7d25197d\"},\n-    {file = \"jinja2-3.1.4.tar.gz\", hash = \"sha256:4a3aee7acbbe7303aede8e9648d13b8bf88a429282aa6122a993f0ac800cb369\"},\n+    {file = \"jinja2-3.1.5-py3-none-any.whl\", hash = \"sha256:aba0f4dc9ed8013c424088f68a5c226f7d6097ed89b246d7749c2ec4175c6adb\"},\n+    {file = \"jinja2-3.1.5.tar.gz\", hash = \"sha256:8fefff8dc3034e27bb80d67c671eb8a9bc424c0ef4c0826edbff304cceff43bb\"},\n ]\n \n [package.dependencies]\n@@ -3615,13 +3615,13 @@ test = [\"coverage\", \"pytest\", \"pytest-cov\"]\n \n [[package]]\n name = \"litellm\"\n-version = \"1.55.7\"\n+version = \"1.55.9\"\n description = \"Library to easily interface with LLM API providers\"\n optional = true\n python-versions = \"!=2.7.*,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,!=3.7.*,>=3.8\"\n files = [\n-    {file = \"litellm-1.55.7-py3-none-any.whl\", hash = \"sha256:fb447810fa7a9f8d2958e1a91ac5667458d6294d13d342f0a40d892e7e9b2888\"},\n-    {file = \"litellm-1.55.7.tar.gz\", hash = \"sha256:3b950f36431cfca75b7d764f92695c4087c9c4e5182718f9526066b78d542e0d\"},\n+    {file = \"litellm-1.55.9-py3-none-any.whl\", hash = \"sha256:5ea931bee64535090d49a54e6b9842883fa6cabd6849c3c9674c12b166145da0\"},\n+    {file = \"litellm-1.55.9.tar.gz\", hash = \"sha256:861be3447552db32da05abff8af4945d1dd84df2f4b10985f97120dca5c07a42\"},\n ]\n \n [package.dependencies]\n@@ -7566,6 +7566,20 @@ files = [\n [package.dependencies]\n six = \"*\"\n \n+[[package]]\n+name = \"rouge\"\n+version = \"1.0.1\"\n+description = \"Full Python ROUGE Score Implementation (not a wrapper)\"\n+optional = true\n+python-versions = \"*\"\n+files = [\n+    {file = \"rouge-1.0.1-py3-none-any.whl\", hash = \"sha256:28d118536e8c774dc47d1d15ec266479b4dd0914c4672ce117d4002789bdc644\"},\n+    {file = \"rouge-1.0.1.tar.gz\", hash = \"sha256:12b48346ca47d6bcf3c45061f315452b9ccec0620ee895ec85b7efc3d54aae34\"},\n+]\n+\n+[package.dependencies]\n+six = \"*\"\n+\n [[package]]\n name = \"rpds-py\"\n version = \"0.22.3\"\n@@ -8159,6 +8173,103 @@ files = [\n     {file = \"sentencepiece-0.2.0.tar.gz\", hash = \"sha256:a52c19171daaf2e697dc6cbe67684e0fa341b1248966f6aebb541de654d15843\"},\n ]\n \n+[[package]]\n+name = \"setproctitle\"\n+version = \"1.3.4\"\n+description = \"A Python module to customize the process title\"\n+optional = true\n+python-versions = \">=3.8\"\n+files = [\n+    {file = \"setproctitle-1.3.4-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:0f6661a69c68349172ba7b4d5dd65fec2b0917abc99002425ad78c3e58cf7595\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:754bac5e470adac7f7ec2239c485cd0b75f8197ca8a5b86ffb20eb3a3676cc42\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f7bc7088c15150745baf66db62a4ced4507d44419eb66207b609f91b64a682af\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a46ef3ecf61e4840fbc1145fdd38acf158d0da7543eda7b773ed2b30f75c2830\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ffcb09d5c0ffa043254ec9a734a73f3791fec8bf6333592f906bb2e91ed2af1a\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:06c16b7a91cdc5d700271899e4383384a61aae83a3d53d0e2e5a266376083342\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:9f9732e59863eaeedd3feef94b2b216cb86d40dda4fad2d0f0aaec3b31592716\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:e152f4ab9ea1632b5fecdd87cee354f2b2eb6e2dfc3aceb0eb36a01c1e12f94c\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:020ea47a79b2bbd7bd7b94b85ca956ba7cb026e82f41b20d2e1dac4008cead25\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:8c52b12b10e4057fc302bd09cb3e3f28bb382c30c044eb3396e805179a8260e4\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-win32.whl\", hash = \"sha256:a65a147f545f3fac86f11acb2d0b316d3e78139a9372317b7eb50561b2817ba0\"},\n+    {file = \"setproctitle-1.3.4-cp310-cp310-win_amd64.whl\", hash = \"sha256:66821fada6426998762a3650a37fba77e814a249a95b1183011070744aff47f6\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:f0f749f07002c2d6fecf37cedc43207a88e6c651926a470a5f229070cf791879\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:90ea8d302a5d30b948451d146e94674a3c5b020cc0ced9a1c28f8ddb0f203a5d\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f859c88193ed466bee4eb9d45fbc29d2253e6aa3ccd9119c9a1d8d95f409a60d\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b3afa5a0ed08a477ded239c05db14c19af585975194a00adf594d48533b23701\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:10a78fce9018cc3e9a772b6537bbe3fe92380acf656c9f86db2f45e685af376e\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5d758e2eed2643afac5f2881542fbb5aa97640b54be20d0a5ed0691d02f0867d\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:ef133a1a2ee378d549048a12d56f4ef0e2b9113b0b25b6b77821e9af94d50634\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:1d2a154b79d5fb42d1eff06e05e22f0e8091261d877dd47b37d31352b74ecc37\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:202eae632815571297833876a0f407d0d9c7ad9d843b38adbe687fe68c5192ee\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:2b0080819859e80a7776ac47cf6accb4b7ad313baf55fabac89c000480dcd103\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-win32.whl\", hash = \"sha256:9c9d7d1267dee8c6627963d9376efa068858cfc8f573c083b1b6a2d297a8710f\"},\n+    {file = \"setproctitle-1.3.4-cp311-cp311-win_amd64.whl\", hash = \"sha256:475986ddf6df65d619acd52188336a20f616589403f5a5ceb3fc70cdc137037a\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:d06990dcfcd41bb3543c18dd25c8476fbfe1f236757f42fef560f6aa03ac8dfc\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:317218c9d8b17a010ab2d2f0851e8ef584077a38b1ba2b7c55c9e44e79a61e73\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cb5fefb53b9d9f334a5d9ec518a36b92a10b936011ac8a6b6dffd60135f16459\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:0855006261635e8669646c7c304b494b6df0a194d2626683520103153ad63cc9\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1a88e466fcaee659679c1d64dcb2eddbcb4bfadffeb68ba834d9c173a25b6184\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f963b6ed8ba33eda374a98d979e8a0eaf21f891b6e334701693a2c9510613c4c\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:122c2e05697fa91f5d23f00bbe98a9da1bd457b32529192e934095fadb0853f1\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:1bba0a866f5895d5b769d8c36b161271c7fd407e5065862ab80ff91c29fbe554\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:97f1f861998e326e640708488c442519ad69046374b2c3fe9bcc9869b387f23c\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:726aee40357d4bdb70115442cb85ccc8e8bc554fc0bbbaa3a57cbe81df42287d\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-win32.whl\", hash = \"sha256:04d6ba8b816dbb0bfd62000b0c3e583160893e6e8c4233e1dca1a9ae4d95d924\"},\n+    {file = \"setproctitle-1.3.4-cp312-cp312-win_amd64.whl\", hash = \"sha256:9c76e43cb351ba8887371240b599925cdf3ecececc5dfb7125c71678e7722c55\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:d6e3b177e634aa6bbbfbf66d097b6d1cdb80fc60e912c7d8bace2e45699c07dd\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:6b17655a5f245b416e127e02087ea6347a48821cc4626bc0fd57101bfcd88afc\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fa5057a86df920faab8ee83960b724bace01a3231eb8e3f2c93d78283504d598\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:149fdfb8a26a555780c4ce53c92e6d3c990ef7b30f90a675eca02e83c6d5f76d\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ded03546938a987f463c68ab98d683af87a83db7ac8093bbc179e77680be5ba2\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8ab9f5b7f2bbc1754bc6292d9a7312071058e5a891b0391e6d13b226133f36aa\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0b19813c852566fa031902124336fa1f080c51e262fc90266a8c3d65ca47b74c\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:db78b645dc63c0ccffca367a498f3b13492fb106a2243a1e998303ba79c996e2\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b669aaac70bd9f03c070270b953f78d9ee56c4af6f0ff9f9cd3e6d1878c10b40\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:6dc3d656702791565994e64035a208be56b065675a5bc87b644c657d6d9e2232\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-win32.whl\", hash = \"sha256:091f682809a4d12291cf0205517619d2e7014986b7b00ebecfde3d76f8ae5a8f\"},\n+    {file = \"setproctitle-1.3.4-cp313-cp313-win_amd64.whl\", hash = \"sha256:adcd6ba863a315702184d92d3d3bbff290514f24a14695d310f02ae5e28bd1f7\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:acf41cf91bbc5a36d1fa4455a818bb02bf2a4ccfed2f892ba166ba2fcbb0ec8a\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:ceb3ce3262b0e8e088e4117175591b7a82b3bdc5e52e33b1e74778b5fb53fd38\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2b2ef636a6a25fe7f3d5a064bea0116b74a4c8c7df9646b17dc7386c439a26cf\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:28b8614de08679ae95bc4e8d6daaef6b61afdf027fa0d23bf13d619000286b3c\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:24f3c8be826a7d44181eac2269b15b748b76d98cd9a539d4c69f09321dcb5c12\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fc9d79b1bf833af63b7c720a6604eb16453ac1ad4e718eb8b59d1f97d986b98c\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:fb693000b65842c85356b667d057ae0d0bac6519feca7e1c437cc2cfeb0afc59\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:a166251b8fbc6f2755e2ce9d3c11e9edb0c0c7d2ed723658ff0161fbce26ac1c\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:0361428e6378911a378841509c56ba472d991cbed1a7e3078ec0cacc103da44a\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:62d66e0423e3bd520b4c897063506b309843a8d07343fbfad04197e91a4edd28\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-win32.whl\", hash = \"sha256:5edd01909348f3b0b2da329836d6b5419cd4869fec2e118e8ff3275b38af6267\"},\n+    {file = \"setproctitle-1.3.4-cp38-cp38-win_amd64.whl\", hash = \"sha256:59e0dda9ad245921af0328035a961767026e1fa94bb65957ab0db0a0491325d6\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:bdaaa81a6e95a0a19fba0285f10577377f3503ae4e9988b403feba79da3e2f80\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:4ee5b19a2d794463bcc19153dfceede7beec784b4cf7967dec0bc0fc212ab3a3\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3058a1bb0c767b3a6ccbb38b27ef870af819923eb732e21e44a3f300370fe159\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5a97d37ee4fe0d1c6e87d2a97229c27a88787a8f4ebfbdeee95f91b818e52efe\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6e61dd7d05da11fc69bb86d51f1e0ee08f74dccf3ecf884c94de41135ffdc75d\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1eb115d53dc2a1299ae72f1119c96a556db36073bacb6da40c47ece5db0d9587\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:342570716e2647a51ea859b8a9126da9dc1a96a0153c9c0a3514effd60ab57ad\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:0ad212ae2b03951367a69584af034579b34e1e4199a75d377ef9f8e08ee299b1\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4afcb38e22122465013f4621b7e9ff8d42a7a48ae0ffeb94133a806cb91b4aad\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:30bb223e6c3f95ad9e9bb2a113292759e947d1cfd60dbd4adb55851c370006b2\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-win32.whl\", hash = \"sha256:5f0521ed3bb9f02e9486573ea95e2062cd6bf036fa44e640bd54a06f22d85f35\"},\n+    {file = \"setproctitle-1.3.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:0baadeb27f9e97e65922b4151f818b19c311d30b9efdb62af0e53b3db4006ce2\"},\n+    {file = \"setproctitle-1.3.4-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:939d364a187b2adfbf6ae488664277e717d56c7951a4ddeb4f23b281bc50bfe5\"},\n+    {file = \"setproctitle-1.3.4-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cb8a6a19be0cbf6da6fcbf3698b76c8af03fe83e4bd77c96c3922be3b88bf7da\"},\n+    {file = \"setproctitle-1.3.4-pp310-pypy310_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:779006f9e1aade9522a40e8d9635115ab15dd82b7af8e655967162e9c01e2573\"},\n+    {file = \"setproctitle-1.3.4-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:5519f2a7b8c535b0f1f77b30441476571373add72008230c81211ee17b423b57\"},\n+    {file = \"setproctitle-1.3.4-pp38-pypy38_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:743836d484151334ebba1490d6907ca9e718fe815dcd5756f2a01bc3067d099c\"},\n+    {file = \"setproctitle-1.3.4-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:abda20aff8d1751e48d7967fa8945fef38536b82366c49be39b83678d4be3893\"},\n+    {file = \"setproctitle-1.3.4-pp38-pypy38_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1a2041b5788ce52f218b5be94af458e04470f997ab46fdebd57cf0b8374cc20e\"},\n+    {file = \"setproctitle-1.3.4-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:2c3b1ce68746557aa6e6f4547e76883925cdc7f8d7c7a9f518acd203f1265ca5\"},\n+    {file = \"setproctitle-1.3.4-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:0b6a4cbabf024cb263a45bdef425760f14470247ff223f0ec51699ca9046c0fe\"},\n+    {file = \"setproctitle-1.3.4-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3e55d7ecc68bdc80de5a553691a3ed260395d5362c19a266cf83cbb4e046551f\"},\n+    {file = \"setproctitle-1.3.4-pp39-pypy39_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:02ca3802902d91a89957f79da3ec44b25b5804c88026362cb85eea7c1fbdefd1\"},\n+    {file = \"setproctitle-1.3.4-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:47669fc8ed8b27baa2d698104732234b5389f6a59c37c046f6bcbf9150f7a94e\"},\n+    {file = \"setproctitle-1.3.4.tar.gz\", hash = \"sha256:3b40d32a3e1f04e94231ed6dfee0da9e43b4f9c6b5450d53e6dd7754c34e0c50\"},\n+]\n+\n+[package.extras]\n+test = [\"pytest\"]\n+\n [[package]]\n name = \"setuptools\"\n version = \"75.6.0\"\n@@ -8181,19 +8292,20 @@ type = [\"importlib_metadata (>=7.0.2)\", \"jaraco.develop (>=7.21)\", \"mypy (>=1.12\n \n [[package]]\n name = \"sglang\"\n-version = \"0.4.0.post1\"\n+version = \"0.4.0.post2\"\n description = \"SGLang is yet another fast serving framework for large language models and vision language models.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"sglang-0.4.0.post1-py3-none-any.whl\", hash = \"sha256:5989da07be334b69aac12efba454a20b1e6eb72803d80bf064f71d5e62145acf\"},\n-    {file = \"sglang-0.4.0.post1.tar.gz\", hash = \"sha256:a82aec4ce1ef1988bc57561b7700a9d7b0f5465ed343bb43b10496ee13f95c50\"},\n+    {file = \"sglang-0.4.0.post2-py3-none-any.whl\", hash = \"sha256:67c13c603e35e81c93899cf5eeed2f2eee62950449ebf1e3d5f712b437c74e0c\"},\n+    {file = \"sglang-0.4.0.post2.tar.gz\", hash = \"sha256:32a61e1da1991d8d35deeec756dfe0392a983797be0ba32e05ef66d6b4b6d6df\"},\n ]\n \n [package.dependencies]\n IPython = \"*\"\n numpy = \"*\"\n requests = \"*\"\n+setproctitle = \"*\"\n tqdm = \"*\"\n \n [package.extras]\n@@ -8208,8 +8320,8 @@ dev-hpu = [\"sglang[all-hpu]\", \"sglang[test]\"]\n dev-xpu = [\"sglang[all-xpu]\", \"sglang[test]\"]\n litellm = [\"litellm (>=1.0.0)\"]\n openai = [\"openai (>=1.0)\", \"tiktoken\"]\n-runtime-common = [\"aiohttp\", \"decord\", \"fastapi\", \"hf_transfer\", \"huggingface_hub\", \"interegular\", \"modelscope\", \"orjson\", \"outlines (>=0.0.44,<0.1.0)\", \"packaging\", \"pillow\", \"prometheus-client (>=0.20.0)\", \"psutil\", \"pydantic\", \"python-multipart\", \"pyzmq (>=25.1.2)\", \"torchao\", \"uvicorn\", \"uvloop\", \"xgrammar (>=0.1.4)\"]\n-srt = [\"cuda-python\", \"flashinfer (>=0.1.6)\", \"sglang[runtime-common]\", \"torch\", \"vllm (>=0.6.3.post1,<=0.6.4.post1)\"]\n+runtime-common = [\"aiohttp\", \"decord\", \"fastapi\", \"gemlite\", \"hf_transfer\", \"huggingface_hub\", \"interegular\", \"modelscope\", \"orjson\", \"outlines (>=0.0.44,<0.1.0)\", \"packaging\", \"pillow\", \"prometheus-client (>=0.20.0)\", \"psutil\", \"pydantic\", \"python-multipart\", \"pyzmq (>=25.1.2)\", \"torchao (>=0.7.0)\", \"uvicorn\", \"uvloop\", \"xgrammar (>=0.1.6)\"]\n+srt = [\"cuda-python\", \"flashinfer (==0.1.6)\", \"sglang[runtime-common]\", \"torch\", \"vllm (>=0.6.3.post1,<=0.6.4.post1)\"]\n srt-hip = [\"sglang[runtime-common]\", \"torch\", \"vllm (==0.6.3.dev13)\"]\n srt-hpu = [\"sglang[runtime-common]\"]\n srt-xpu = [\"sglang[runtime-common]\"]\n@@ -9295,24 +9407,24 @@ files = [\n \n [[package]]\n name = \"types-pyyaml\"\n-version = \"6.0.12.20240917\"\n+version = \"6.0.12.20241221\"\n description = \"Typing stubs for PyYAML\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"types-PyYAML-6.0.12.20240917.tar.gz\", hash = \"sha256:d1405a86f9576682234ef83bcb4e6fff7c9305c8b1fbad5e0bcd4f7dbdc9c587\"},\n-    {file = \"types_PyYAML-6.0.12.20240917-py3-none-any.whl\", hash = \"sha256:392b267f1c0fe6022952462bf5d6523f31e37f6cea49b14cee7ad634b6301570\"},\n+    {file = \"types_PyYAML-6.0.12.20241221-py3-none-any.whl\", hash = \"sha256:0657a4ff8411a030a2116a196e8e008ea679696b5b1a8e1a6aa8ebb737b34688\"},\n+    {file = \"types_pyyaml-6.0.12.20241221.tar.gz\", hash = \"sha256:4f149aa893ff6a46889a30af4c794b23833014c469cc57cbc3ad77498a58996f\"},\n ]\n \n [[package]]\n name = \"types-regex\"\n-version = \"2024.11.6.20241108\"\n+version = \"2024.11.6.20241221\"\n description = \"Typing stubs for regex\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"types-regex-2024.11.6.20241108.tar.gz\", hash = \"sha256:a774e307b99b3df49481b29e8b4962f021693052a8d8a2b9e6792fcec896cf5e\"},\n-    {file = \"types_regex-2024.11.6.20241108-py3-none-any.whl\", hash = \"sha256:adec2ff2dfed00855551057334466fde923606599d01e7440556d53a3ef20835\"},\n+    {file = \"types_regex-2024.11.6.20241221-py3-none-any.whl\", hash = \"sha256:9d29ab639df22a86e15e2cc037e92ad100a4e8f4ecd2ad261d6f0c6d8d87f54e\"},\n+    {file = \"types_regex-2024.11.6.20241221.tar.gz\", hash = \"sha256:903c7b557d935363ba01f07a75981c78ada7df66623e415f32bda2afecfa5cca\"},\n ]\n \n [[package]]\n@@ -9342,13 +9454,13 @@ files = [\n \n [[package]]\n name = \"types-tqdm\"\n-version = \"4.67.0.20241220\"\n+version = \"4.67.0.20241221\"\n description = \"Typing stubs for tqdm\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"types_tqdm-4.67.0.20241220-py3-none-any.whl\", hash = \"sha256:ff316fd264f4e2583cc49e7b7c6dfd617ee5a15d56bc796bb6c7675ce8a34523\"},\n-    {file = \"types_tqdm-4.67.0.20241220.tar.gz\", hash = \"sha256:379e1d0f0c9c0f60f1aaf109c6ed601c005f002ced3c063469e297be428bb9be\"},\n+    {file = \"types_tqdm-4.67.0.20241221-py3-none-any.whl\", hash = \"sha256:a1f1c9cda5c2d8482d2c73957a5398bfdedda10f6bc7b3b4e812d5c910486d29\"},\n+    {file = \"types_tqdm-4.67.0.20241221.tar.gz\", hash = \"sha256:e56046631056922385abe89aeb18af5611f471eadd7918a0ad7f34d84cd4c8cc\"},\n ]\n \n [package.dependencies]\n@@ -9661,13 +9773,13 @@ files = [\n \n [[package]]\n name = \"urllib3\"\n-version = \"2.2.3\"\n+version = \"2.3.0\"\n description = \"HTTP library with thread-safe connection pooling, file post, and more.\"\n optional = false\n-python-versions = \">=3.8\"\n+python-versions = \">=3.9\"\n files = [\n-    {file = \"urllib3-2.2.3-py3-none-any.whl\", hash = \"sha256:ca899ca043dcb1bafa3e262d73aa25c465bfb49e0bd9dd5d59f1d0acba2f8fac\"},\n-    {file = \"urllib3-2.2.3.tar.gz\", hash = \"sha256:e7d814a81dad81e6caf2ec9fdedb284ecc9c73076b62654547cc64ccdcae26e9\"},\n+    {file = \"urllib3-2.3.0-py3-none-any.whl\", hash = \"sha256:1cee9ad369867bfdbbb48b7dd50374c0967a0bb7710050facf0dd6911440e3df\"},\n+    {file = \"urllib3-2.3.0.tar.gz\", hash = \"sha256:f8c5449b3cf0861679ce7e0503c7b44b5ec981bec0d1d3795a07f1ba96f0204d\"},\n ]\n \n [package.dependencies]\n@@ -10265,7 +10377,7 @@ test = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\",\n type = [\"pytest-mypy\"]\n \n [extras]\n-all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"fish-audio-sdk\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"fish-audio-sdk\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"stripe\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n encoders = [\"sentence-transformers\"]\n graph-storages = [\"nebula3-python\", \"neo4j\"]\n huggingface-agent = [\"accelerate\", \"datasets\", \"diffusers\", \"opencv-python\", \"sentencepiece\", \"soundfile\", \"torch\", \"torch\", \"transformers\"]\n@@ -10277,10 +10389,10 @@ retrievers = [\"cohere\", \"rank-bm25\"]\n runtime = [\"docker\"]\n search-tools = [\"duckduckgo-search\", \"tavily-python\", \"wikipedia\", \"wolframalpha\"]\n test = [\"mock\", \"pytest\", \"pytest-asyncio\"]\n-tools = [\"PyMuPDF\", \"agentops\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"beautifulsoup4\", \"datacommons\", \"datacommons_pandas\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pyowm\", \"pyyaml\", \"requests_oauthlib\", \"scholarly\", \"slack-bolt\", \"slack-sdk\", \"stripe\", \"textblob\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+tools = [\"PyMuPDF\", \"agentops\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"beautifulsoup4\", \"datacommons\", \"datacommons_pandas\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"e2b-code-interpreter\", \"ffmpeg-python\", \"firecrawl-py\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"newspaper3k\", \"notion-client\", \"openapi-spec-validator\", \"outlines\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pyowm\", \"pyyaml\", \"requests_oauthlib\", \"rouge\", \"scholarly\", \"slack-bolt\", \"slack-sdk\", \"stripe\", \"textblob\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n vector-databases = [\"pymilvus\", \"qdrant-client\"]\n \n [metadata]\n lock-version = \"2.0\"\n python-versions = \">=3.10,<3.13\"\n-content-hash = \"e9d0bca218bdbd2d9a90ff06d3511385348844ced8509e260478cb3cf4707c1a\"\n+content-hash = \"56d1af3058f812df37cf34b43e59fbeb24cc9719f02c528cf171622ecd847375\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex ada034e1c1..ce0f6bb306 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -81,6 +81,7 @@ googlemaps = { version = \"^4.10.0\", optional = true }\n requests_oauthlib = { version = \"^1.3.1\", optional = true }\n prance = { version = \"^23.6.21.0\", optional = true }\n openapi-spec-validator = { version = \"^0.7.1\", optional = true }\n+rouge = { version = \"^1.0.1\", optional = true }\n firecrawl-py = { version = \"^1.0.0\", optional = true }\n slack-sdk = { version = \"^3.27.2\", optional = true }\n slack-bolt = { version = \"^1.20.1\", optional = true }\n@@ -199,6 +200,7 @@ tools = [\n     \"prance\",\n     \"openapi-spec-validator\",\n     \"unstructured\",\n+    \"rouge\",\n     \"outlines\",\n     \"e2b-code-interpreter\",\n     \"firecrawl-py\",\n@@ -289,6 +291,7 @@ all = [\n     \"prance\",\n     \"openapi-spec-validator\",\n     \"unstructured\",\n+    \"rouge\",\n     \"outlines\",\n     \"e2b-code-interpreter\",\n     \"firecrawl-py\",\n@@ -462,6 +465,8 @@ module = [\n     \"PyMuPDF\",\n     \"fitz\",\n     \"qdrant_client.*\",\n+    \"unstructured.*\",\n+    \"rouge\",\n     \"e2b_code_interpreter\",\n     \"firecrawl\",\n     \"imageio\",\n",
        "test_patch": "diff --git a/test/synthetic_datagen/self_instruct/filter/filter_function_tests.py b/test/synthetic_datagen/self_instruct/filter/filter_function_tests.py\nnew file mode 100644\nindex 0000000000..2f60898d96\n--- /dev/null\n+++ b/test/synthetic_datagen/self_instruct/filter/filter_function_tests.py\n@@ -0,0 +1,110 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import unittest\n+\n+from camel.synthetic_datagen.self_instruct import (\n+    KeywordFilter,\n+    LengthFilter,\n+    NonEnglishFilter,\n+    PunctuationFilter,\n+    RougeSimilarityFilter,\n+)\n+\n+\n+class TestLengthFilter(unittest.TestCase):\n+    def test_within_range(self):\n+        flt = LengthFilter(min_len=2, max_len=5)\n+        self.assertTrue(flt.apply(\"This is four words\"))\n+\n+    def test_too_short(self):\n+        flt = LengthFilter(min_len=2, max_len=5)\n+        self.assertFalse(flt.apply(\"Hello\"))  # Only 1 word\n+\n+    def test_too_long(self):\n+        flt = LengthFilter(min_len=2, max_len=3)\n+        self.assertFalse(flt.apply(\"This is more than three words\"))\n+\n+\n+class TestKeywordFilter(unittest.TestCase):\n+    def test_no_keywords(self):\n+        flt = KeywordFilter(keywords=[\"image\", \"video\"])\n+        self.assertTrue(\n+            flt.apply(\"This is a sample instruction without forbidden words\")\n+        )\n+\n+    def test_contains_keyword(self):\n+        flt = KeywordFilter(keywords=[\"image\", \"video\"])\n+        self.assertFalse(flt.apply(\"This instruction contains the word image\"))\n+\n+    def test_case_insensitive(self):\n+        flt = KeywordFilter(keywords=[\"IMAGE\"])\n+        self.assertFalse(flt.apply(\"Here is an Image for you\"))\n+\n+\n+class TestPunctuationFilter(unittest.TestCase):\n+    def test_no_punctuation_start(self):\n+        flt = PunctuationFilter()\n+        self.assertTrue(flt.apply(\"Hello world!\"))\n+\n+    def test_punctuation_start(self):\n+        flt = PunctuationFilter()\n+        self.assertFalse(flt.apply(\"!Invalid start\"))\n+\n+    def test_number_or_letter_start(self):\n+        flt = PunctuationFilter()\n+        self.assertTrue(flt.apply(\"1. Start with a number\"))\n+        self.assertTrue(flt.apply(\"A start with a letter\"))\n+\n+\n+class TestNonEnglishFilter(unittest.TestCase):\n+    def test_english_start(self):\n+        flt = NonEnglishFilter()\n+        self.assertTrue(flt.apply(\"Apple pie is delicious\"))\n+\n+    def test_non_english_start(self):\n+        flt = NonEnglishFilter()\n+        self.assertFalse(flt.apply(\"\u00bfQu\u00e9 hora es?\"))\n+        self.assertFalse(flt.apply(\"\u6587\u5b57\u304c\u9055\u3044\u307e\u3059\"))\n+\n+\n+class TestRougeSimilarityFilter(unittest.TestCase):\n+    def setUp(self):\n+        # Some existing instructions\n+        self.existing = [\n+            \"Write a summary of this document.\",\n+            \"List the steps to bake a cake.\",\n+            \"Explain how photosynthesis works.\",\n+        ]\n+        self.flt = RougeSimilarityFilter(\n+            existing_instructions=self.existing, threshold=0.7\n+        )\n+\n+    def test_unique_instruction(self):\n+        # A unique instruction that should have low similarity\n+        self.assertTrue(\n+            self.flt.apply(\"Calculate the integral of x^2 from 0 to 10.\")\n+        )\n+\n+    def test_similar_instruction(self):\n+        self.assertFalse(self.flt.apply(\"Write a summary of this paragraph.\"))\n+\n+    def test_no_existing_instructions(self):\n+        flt_empty = RougeSimilarityFilter(\n+            existing_instructions=[], threshold=0.7\n+        )\n+        self.assertTrue(flt_empty.apply(\"Any instruction would do\"))\n+\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\ndiff --git a/test/synthetic_datagen/self_instruct/filter/instruction_filter_tests.py b/test/synthetic_datagen/self_instruct/filter/instruction_filter_tests.py\nnew file mode 100644\nindex 0000000000..ded416aea4\n--- /dev/null\n+++ b/test/synthetic_datagen/self_instruct/filter/instruction_filter_tests.py\n@@ -0,0 +1,134 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import unittest\n+from unittest.mock import MagicMock, patch\n+\n+from camel.synthetic_datagen.self_instruct import (\n+    FILTER_REGISTRY,\n+    FilterFunction,\n+    InstructionFilter,\n+)\n+\n+\n+class DummyPassFilter(FilterFunction):\n+    \"\"\"A dummy filter that always passes.\"\"\"\n+\n+    def apply(self, instruction: str) -> bool:\n+        return True\n+\n+\n+class DummyFailFilter(FilterFunction):\n+    \"\"\"A dummy filter that always fails.\"\"\"\n+\n+    def apply(self, instruction: str) -> bool:\n+        return False\n+\n+\n+class TestInstructionFilter(unittest.TestCase):\n+    def setUp(self):\n+        self.config_all_pass = {\n+            \"length\": {},\n+            \"keyword\": {},\n+        }\n+\n+        self.config_mixed = {\n+            \"length\": {\"min_len\": 2, \"max_len\": 5},\n+            \"keyword\": {\"keywords\": [\"forbidden\"]},\n+        }\n+\n+    @patch.dict(FILTER_REGISTRY, {\"pass_filter\": lambda _: DummyPassFilter()})\n+    def test_all_pass_filters(self):\n+        filters_config = {\"pass_filter\": {}}\n+        instruction_filter = InstructionFilter(filters_config)\n+        self.assertTrue(instruction_filter.filter(\"Any instruction\"))\n+        result, failed_filters = instruction_filter.filter(\n+            \"Any instruction\", return_details=True\n+        )\n+        self.assertTrue(result)\n+        self.assertEqual(len(failed_filters), 0)\n+\n+    @patch.dict(FILTER_REGISTRY, {\"fail_filter\": lambda _: DummyFailFilter()})\n+    def test_all_fail_filters(self):\n+        filters_config = {\"fail_filter\": {}}\n+        instruction_filter = InstructionFilter(filters_config)\n+        self.assertFalse(instruction_filter.filter(\"Any instruction\"))\n+        result, failed_filters = instruction_filter.filter(\n+            \"Any instruction\", return_details=True\n+        )\n+        self.assertFalse(result)\n+        self.assertIn(\"DummyFailFilter\", failed_filters)\n+\n+    @patch.dict(\n+        FILTER_REGISTRY,\n+        {\n+            \"length\": lambda kwargs: MagicMock(\n+                spec=FilterFunction,\n+                apply=lambda instr: 2 <= len(instr.split()) <= 5,\n+            ),\n+            \"keyword\": lambda kwargs: MagicMock(\n+                spec=FilterFunction,\n+                apply=lambda instr: \"forbidden\" not in instr.lower(),\n+            ),\n+        },\n+    )\n+    def test_mixed_filters(self):\n+        instruction_filter = InstructionFilter(self.config_mixed)\n+\n+        self.assertTrue(instruction_filter.filter(\"This is valid\"))\n+        result, failed_filters = instruction_filter.filter(\n+            \"This is valid\", return_details=True\n+        )\n+        self.assertTrue(result)\n+        self.assertEqual(len(failed_filters), 0)\n+\n+        self.assertFalse(\n+            instruction_filter.filter(\n+                \"This instruction is definitely too long\"\n+            )\n+        )\n+        result, failed_filters = instruction_filter.filter(\n+            \"This instruction is definitely too long\", return_details=True\n+        )\n+        self.assertFalse(result)\n+        self.assertIn(\"MagicMock\", failed_filters)\n+\n+        self.assertFalse(instruction_filter.filter(\"This is forbidden\"))\n+        result, failed_filters = instruction_filter.filter(\n+            \"This is forbidden\", return_details=True\n+        )\n+        self.assertFalse(result)\n+        self.assertIn(\"MagicMock\", failed_filters)\n+\n+    @patch.dict(FILTER_REGISTRY, {})\n+    def test_unknown_filter_raises(self):\n+        with self.assertRaises(ValueError):\n+            InstructionFilter({\"unknown_filter\": {}})\n+\n+    @patch.dict(FILTER_REGISTRY, {\"pass_filter\": lambda _: DummyPassFilter()})\n+    def test_add_custom_filter(self):\n+        filters_config = {\"pass_filter\": {}}\n+        instruction_filter = InstructionFilter(filters_config)\n+        self.assertTrue(instruction_filter.filter(\"Some instruction\"))\n+\n+        instruction_filter.add_filter(DummyFailFilter())\n+        self.assertFalse(instruction_filter.filter(\"Some instruction\"))\n+        result, failed_filters = instruction_filter.filter(\n+            \"Some instruction\", return_details=True\n+        )\n+        self.assertFalse(result)\n+        self.assertIn(\"DummyFailFilter\", failed_filters)\n+\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\ndiff --git a/test/synthetic_datagen/self_instruct/self_instruct_tests.py b/test/synthetic_datagen/self_instruct/self_instruct_tests.py\nnew file mode 100644\nindex 0000000000..75b6c3369e\n--- /dev/null\n+++ b/test/synthetic_datagen/self_instruct/self_instruct_tests.py\n@@ -0,0 +1,164 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import unittest\n+from unittest.mock import MagicMock, mock_open, patch\n+\n+from camel.agents import ChatAgent\n+from camel.synthetic_datagen.self_instruct import (\n+    InstructionFilter,\n+    SelfInstructPipeline,\n+)\n+\n+\n+class TestSelfInstructPipeline(unittest.TestCase):\n+    def setUp(self):\n+        self.mock_agent = MagicMock(spec=ChatAgent)\n+        self.mock_agent.step.return_value.msgs = [\n+            MagicMock(content=\"Generated task\")\n+        ]\n+\n+        self.seed_data = [\n+            {\"instruction\": \"Human task 1\"},\n+            {\"instruction\": \"Human task 2\"},\n+            {\"instruction\": \"Human task 3\"},\n+        ]\n+\n+        self.exists_patch = patch(\"os.path.exists\", return_value=True)\n+        self.mock_exists = self.exists_patch.start()\n+\n+        self.open_patch = patch(\n+            \"builtins.open\",\n+            mock_open(\n+                read_data='[{\"instruction\": \"Human task 1\"}, '\n+                '{\"instruction\": \"Human task 2\"}, '\n+                '{\"instruction\": \"Human task 3\"}]'\n+            ),\n+        )\n+        self.mock_open = self.open_patch.start()\n+\n+        self.mock_filter = MagicMock(spec=InstructionFilter)\n+        self.mock_filter.filter.return_value = True\n+        self.mock_filter.filters = []\n+\n+    def tearDown(self):\n+        self.exists_patch.stop()\n+        self.open_patch.stop()\n+\n+    def test_load_seed(self):\n+        pipeline = SelfInstructPipeline(\n+            agent=self.mock_agent,\n+            seed=\"some_path.json\",\n+            instruction_filter=self.mock_filter,\n+        )\n+\n+        self.assertEqual(len(pipeline.human_tasks), 3)\n+        self.assertEqual(\n+            pipeline.human_tasks[0][\"instruction\"], \"Human task 1\"\n+        )\n+\n+    def test_sample_human_tasks(self):\n+        pipeline = SelfInstructPipeline(\n+            agent=self.mock_agent,\n+            seed=\"some_path.json\",\n+            instruction_filter=self.mock_filter,\n+        )\n+        sampled = pipeline.sample_human_tasks(2)\n+        self.assertEqual(len(sampled), 2)\n+        sampled_all = pipeline.sample_human_tasks(10)\n+        self.assertEqual(len(sampled_all), 3)\n+\n+    def test_sample_machine_tasks_no_tasks_yet(self):\n+        pipeline = SelfInstructPipeline(\n+            agent=self.mock_agent,\n+            seed=\"some_path.json\",\n+            instruction_filter=self.mock_filter,\n+        )\n+        sampled = pipeline.sample_machine_tasks(2)\n+        self.assertEqual(len(sampled), 2)\n+        self.assertEqual(sampled[0][\"instruction\"], \"\")\n+        self.assertEqual(sampled[1][\"instruction\"], \"\")\n+\n+    def test_sample_machine_tasks_with_existing(self):\n+        pipeline = SelfInstructPipeline(\n+            agent=self.mock_agent,\n+            seed=\"some_path.json\",\n+            instruction_filter=self.mock_filter,\n+        )\n+        pipeline.machine_tasks = [\n+            {\"instruction\": \"Machine task 1\"},\n+            {\"instruction\": \"Machine task 2\"},\n+            {\"instruction\": \"Machine task 3\"},\n+        ]\n+        sampled = pipeline.sample_machine_tasks(2)\n+        self.assertEqual(len(sampled), 2)\n+        self.assertTrue(all(\"instruction\" in t for t in sampled))\n+\n+    def test_generate_machine_instruction(self):\n+        self.mock_agent.step.return_value.msgs = [\n+            MagicMock(content=\"Task 1: Something\\nTask 2: Another\\nTask 3:\")\n+        ]\n+        pipeline = SelfInstructPipeline(\n+            agent=self.mock_agent,\n+            seed=\"some_path.json\",\n+            human_to_machine_ratio=(2, 1),\n+            instruction_filter=self.mock_filter,\n+        )\n+        instruction = pipeline.generate_machine_instruction()\n+        self.assertEqual(instruction, \"Task 1: Something\")\n+\n+    @patch.object(\n+        SelfInstructPipeline, 'identify_instruction', return_value=True\n+    )\n+    def test_generate(self, mock_identify):\n+        self.mock_agent.step.return_value.msgs = [\n+            MagicMock(content=\"Generated machine task\\n\")\n+        ]\n+\n+        pass_once = [True, False, False, True, True]\n+        self.mock_filter.filter.side_effect = pass_once\n+\n+        pipeline = SelfInstructPipeline(\n+            agent=self.mock_agent,\n+            seed=\"some_path.json\",\n+            num_machine_instructions=3,\n+            instruction_filter=self.mock_filter,\n+        )\n+\n+        pipeline.generate()\n+        self.assertEqual(len(pipeline.machine_tasks), 3)\n+        self.assertGreaterEqual(mock_identify.call_count, 3)\n+\n+    @patch(\"json.dump\")\n+    def test_construct_data(self, mock_dump):\n+        pipeline = SelfInstructPipeline(\n+            agent=self.mock_agent,\n+            seed=\"some_path.json\",\n+            instruction_filter=self.mock_filter,\n+        )\n+        pipeline.machine_tasks = [\n+            {\n+                \"id\": \"machine_task_1\",\n+                \"instruction\": \"Some instruction\",\n+                \"is_classification\": True,\n+                \"instances\": [],\n+            }\n+        ]\n+        pipeline.construct_data()\n+        mock_dump.assert_called_once()\n+        args, kwargs = mock_dump.call_args\n+        self.assertEqual(args[0], pipeline.machine_tasks)\n+\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n",
        "problem_statement": "[Feature Request] Self-instruct pipeline refine\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nbased on previous work: https://github.com/camel-ai/camel/pull/720\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-12-04T14:40:18Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": []
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1259,
        "instance_id": "camel-ai__camel-1259",
        "issue_numbers": [
            "1171"
        ],
        "base_commit": "b456787edafb233dd87c6fbf70526b1c2833ab7e",
        "patch": "diff --git a/.env b/.env\nindex e43bf49a10..f62fbb6d90 100644\n--- a/.env\n+++ b/.env\n@@ -75,3 +75,6 @@ ASKNEWS_CLIENT_SECRET=\"Fill your Client Secret here\"\n \n # Chunkr API (https://chunkr.ai/)\n CHUNKR_API_KEY=\"Fill your API key here\"\n+\n+# Meshy API (https://www.meshy.ai/api)\n+MESHY_API_KEY=\"Fill your API key here\"\ndiff --git a/.github/workflows/build_package.yml b/.github/workflows/build_package.yml\nindex 3ad4a27602..38a56e3011 100644\n--- a/.github/workflows/build_package.yml\n+++ b/.github/workflows/build_package.yml\n@@ -69,6 +69,7 @@ jobs:\n           ASKNEWS_CLIENT_ID: \"${{ secrets.ASKNEWS_CLIENT_ID }}\"\n           ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n           CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n+          MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n         run: |\n           source venv/bin/activate\n           pytest --fast-test-mode ./test\ndiff --git a/camel/toolkits/__init__.py b/camel/toolkits/__init__.py\nindex 8f47fb5135..cb97a32522 100644\n--- a/camel/toolkits/__init__.py\n+++ b/camel/toolkits/__init__.py\n@@ -27,6 +27,8 @@\n from .ask_news_toolkit import AskNewsToolkit, AsyncAskNewsToolkit\n from .linkedin_toolkit import LinkedInToolkit\n from .reddit_toolkit import RedditToolkit\n+from .meshy_toolkit import MeshyToolkit\n+\n from .base import BaseToolkit\n from .google_maps_toolkit import GoogleMapsToolkit\n from .code_execution import CodeExecutionToolkit\n@@ -68,4 +70,5 @@\n     'ArxivToolkit',\n     'HumanToolkit',\n     'VideoDownloaderToolkit',\n+    'MeshyToolkit',\n ]\ndiff --git a/camel/toolkits/meshy_toolkit.py b/camel/toolkits/meshy_toolkit.py\nnew file mode 100644\nindex 0000000000..cf49e01f91\n--- /dev/null\n+++ b/camel/toolkits/meshy_toolkit.py\n@@ -0,0 +1,185 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+import os\n+from typing import Any, Dict\n+\n+import requests\n+\n+from camel.toolkits.base import BaseToolkit\n+from camel.utils import api_keys_required\n+\n+\n+class MeshyToolkit(BaseToolkit):\n+    r\"\"\"A class representing a toolkit for 3D model generation using Meshy.\n+\n+    This class provides methods that handle text/image to 3D model\n+    generation using Meshy.\n+\n+    Call the generate_3d_model_complete method to generate a refined 3D model.\n+\n+    Ref:\n+    https://docs.meshy.ai/api-text-to-3d-beta#create-a-text-to-3d-preview-task\n+    \"\"\"\n+\n+    @api_keys_required(\"MESHY_API_KEY\")\n+    def __init__(self):\n+        r\"\"\"Initializes the MeshyToolkit with the API key from the\n+        environment.\n+        \"\"\"\n+        self.api_key = os.getenv('MESHY_API_KEY')\n+\n+    def generate_3d_preview(\n+        self, prompt: str, art_style: str, negative_prompt: str\n+    ) -> Dict[str, Any]:\n+        r\"\"\"Generates a 3D preview using the Meshy API.\n+\n+        Args:\n+            prompt (str): Description of the object.\n+            art_style (str): Art style for the 3D model.\n+            negative_prompt (str): What the model should not look like.\n+\n+        Returns:\n+            Dict[str, Any]: The result property of the response contains the\n+                task id of the newly created Text to 3D task.\n+        \"\"\"\n+        payload = {\n+            \"mode\": \"preview\",\n+            \"prompt\": prompt,\n+            \"art_style\": art_style,\n+            \"negative_prompt\": negative_prompt,\n+        }\n+        headers = {\"Authorization\": f\"Bearer {self.api_key}\"}\n+\n+        response = requests.post(\n+            \"https://api.meshy.ai/v2/text-to-3d\",\n+            headers=headers,\n+            json=payload,\n+        )\n+        response.raise_for_status()\n+        return response.json()\n+\n+    def refine_3d_model(self, preview_task_id: str) -> Dict[str, Any]:\n+        r\"\"\"Refines a 3D model using the Meshy API.\n+\n+        Args:\n+            preview_task_id (str): The task ID of the preview to refine.\n+\n+        Returns:\n+            Dict[str, Any]: The response from the Meshy API.\n+        \"\"\"\n+        payload = {\"mode\": \"refine\", \"preview_task_id\": preview_task_id}\n+        headers = {\"Authorization\": f\"Bearer {self.api_key}\"}\n+\n+        response = requests.post(\n+            \"https://api.meshy.ai/v2/text-to-3d\",\n+            headers=headers,\n+            json=payload,\n+        )\n+        response.raise_for_status()\n+        return response.json()\n+\n+    def get_task_status(self, task_id: str) -> Dict[str, Any]:\n+        r\"\"\"Retrieves the status or result of a specific 3D model generation\n+        task using the Meshy API.\n+\n+        Args:\n+            task_id (str): The ID of the task to retrieve.\n+\n+        Returns:\n+            Dict[str, Any]: The response from the Meshy API.\n+        \"\"\"\n+        headers = {\"Authorization\": f\"Bearer {self.api_key}\"}\n+\n+        response = requests.get(\n+            f\"https://api.meshy.ai/v2/text-to-3d/{task_id}\",\n+            headers=headers,\n+        )\n+        response.raise_for_status()\n+        return response.json()\n+\n+    def wait_for_task_completion(\n+        self, task_id: str, polling_interval: int = 10, timeout: int = 3600\n+    ) -> Dict[str, Any]:\n+        r\"\"\"Waits for a task to complete by polling its status.\n+\n+        Args:\n+            task_id (str): The ID of the task to monitor.\n+            polling_interval (int): Seconds to wait between status checks.\n+                (default::obj:`10`)\n+            timeout (int): Maximum seconds to wait before timing out.\n+                (default::obj:`3600`)\n+\n+        Returns:\n+            Dict[str, Any]: Final response from the API when task completes.\n+\n+        Raises:\n+            TimeoutError: If task doesn't complete within timeout period.\n+            RuntimeError: If task fails or is canceled.\n+        \"\"\"\n+        import time\n+\n+        start_time = time.time()\n+\n+        while True:\n+            if time.time() - start_time > timeout:\n+                raise TimeoutError(\n+                    f\"Task {task_id} timed out after {timeout} seconds\"\n+                )\n+\n+            response = self.get_task_status(task_id)\n+            status = response.get(\"status\")  # Direct access to status field\n+            elapsed = int(time.time() - start_time)\n+\n+            print(f\"Status after {elapsed}s: {status}\")\n+\n+            if status == \"SUCCEEDED\":\n+                return response\n+            elif status in [\n+                \"FAILED\",\n+                \"CANCELED\",\n+            ]:  # Also updating these status values\n+                raise RuntimeError(f\"Task {task_id} {status}\")\n+\n+            time.sleep(polling_interval)\n+\n+    def generate_3d_model_complete(\n+        self, prompt: str, art_style: str, negative_prompt: str\n+    ) -> Dict[str, Any]:\n+        r\"\"\"Generates a complete 3D model by handling preview and refinement\n+        stages\n+\n+        Args:\n+            prompt (str): Description of the object.\n+            art_style (str): Art style for the 3D model.\n+            negative_prompt (str): What the model should not look like.\n+\n+        Returns:\n+            Dict[str, Any]: The final refined 3D model response.\n+        \"\"\"\n+        # Generate preview\n+        preview_response = self.generate_3d_preview(\n+            prompt, art_style, negative_prompt\n+        )\n+        preview_task_id = str(preview_response.get(\"result\"))\n+\n+        # Wait for preview completion\n+        self.wait_for_task_completion(preview_task_id)\n+\n+        # Start refinement\n+        refine_response = self.refine_3d_model(preview_task_id)\n+        refine_task_id = str(refine_response.get(\"result\"))\n+\n+        # Wait for refinement completion and return final result\n+        return self.wait_for_task_completion(refine_task_id)\ndiff --git a/examples/toolkits/human_toolkit.py b/examples/toolkits/human_toolkit.py\nindex 7565f64532..020754d401 100644\n--- a/examples/toolkits/human_toolkit.py\n+++ b/examples/toolkits/human_toolkit.py\n@@ -41,8 +41,8 @@\n )\n \n print(response.msgs[0].content)\n-\n-'''\n+\"\"\"\n+==========================================================================\n What is the capital of France?\n Your reply: Paris\n \n@@ -56,4 +56,5 @@\n That's correct! Tokyo is the capital of Japan. Would you like to continue with\n another question?\n Your reply: no\n-'''\n+==========================================================================\n+\"\"\"\ndiff --git a/examples/toolkits/meshy_toolkit.py b/examples/toolkits/meshy_toolkit.py\nnew file mode 100644\nindex 0000000000..5cc5119053\n--- /dev/null\n+++ b/examples/toolkits/meshy_toolkit.py\n@@ -0,0 +1,62 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from camel.toolkits import MeshyToolkit\n+\n+toolkit = MeshyToolkit()\n+\n+# Example data for testing\n+prompt = \"A figuring of Tin tin the cartoon character\"\n+art_style = \"realistic\"\n+negative_prompt = \"low quality, low resolution, low poly, ugly\"\n+\n+# 3D model generation\n+print(\"Starting 3D model generation...\")\n+final_response = toolkit.generate_3d_model_complete(\n+    prompt=prompt, art_style=art_style, negative_prompt=negative_prompt\n+)\n+print(\"\\nFinal Response:\", final_response)\n+# ruff: noqa: E501\n+\"\"\"\n+==========================================================================\n+Starting 3D model generation...\n+Status after 0s: PENDING\n+Status after 11s: IN_PROGRESS\n+Status after 22s: IN_PROGRESS\n+Status after 32s: SUCCEEDED\n+Status after 0s: PENDING\n+Status after 11s: IN_PROGRESS\n+Status after 21s: IN_PROGRESS\n+Status after 32s: IN_PROGRESS\n+Status after 43s: IN_PROGRESS\n+Status after 53s: IN_PROGRESS\n+Status after 64s: IN_PROGRESS\n+Status after 74s: IN_PROGRESS\n+Status after 85s: IN_PROGRESS\n+Status after 95s: IN_PROGRESS\n+Status after 106s: IN_PROGRESS\n+Status after 117s: SUCCEEDED\n+\n+Final Response: {'id': '01939144-7dea-73c7-af06-efa79c83243f', 'mode': \n+'refine', 'name': '', 'seed': 1733308970, 'art_style': 'realistic', \n+'texture_richness': 'high', 'prompt': 'A figuring of Tin tin the cartoon \n+character', 'negative_prompt': 'low quality, low resolution, low poly, ugly', \n+'status': 'SUCCEEDED', 'created_at': 1733309005313, 'progress': 100, \n+'started_at': 1733309006267, 'finished_at': 1733309113474, 'task_error': None, \n+'model_urls': {'glb': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/model.glb?Expires=4886870400&Signature=TEbWpN8sFZOf1FKWBVxKNdT2Ltm1Ma6vHuUUpBh6rZaAzfTBQPKvV2i7RmD~wwaebbQSBvVVagF4j587tNKNwHPqkGtpBjBu2q43n4lWM6W--RxSqbOCvVZ54PiAzzlVjM9PzPz-MasrWQtYipm5qJ5tsWd7XoxB6Wv2tZMZEWsftdLxmXdp9SuoBcu5NM~MRnyvhEYPmwU9uCAKfh4FZ14mhfx6TeDpCprYh1ngnlkLzDXk5Mdw0HJ1zuYpnkCOUtth84p6Oq5aU0HtWtUVd2tLi53rqKn9QC0qxcH7QlPxxI1aoUtzqaMXXiqCGylzZuPTZILhdFWeAoiEtCOLZw__&Key-Pair-Id=KL5I0C8H7HX83', 'fbx': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/model.fbx?Expires=4886870400&Signature=jGOPhF8FL1wa9mVbodNoq1jMVzi2gklWRrrl2qWAZvWAhadc4wgjmgTweBKsNiO~KMTGzCiey7iqSIGm6dDEYAMv72HExpIO7I8HwAVPp4KwhzORzwr6OcEoY9-7fFR9yEg~WqnWewmdkrcnUVHHx2Z9imkDkIhISn1IOERkum48mTemlyejb87CXGV14uX3hxIVKle4at6S8tMUfpXhCdZ3aIxmgt9Dpsobol92XtQbpC-JhJSOgMNBWtAH3OUXAgECsYrRRZND9gcZZkUZlXHHZt439JsU8MPoXZd4RQ0OGn~vb6W51rvQ904ErsYZf47dLYNswaxb6Se3oKm~zw__&Key-Pair-Id=KL5I0C8H7HX83', 'usdz': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/model.usdz?Expires=4886870400&Signature=ICOOIH6EDVdy9LYCk-azYqBWtl6t9v2xZpRk8C8kQKa38jUXdukjoLLN469VP5a7rdIKinLA~I5-hMr-kd-MEmwJzE3JKw2ojNimYPa5Uvnr3R~4S~2fQgCPWfn2xVkt6Cvfx~Qj8~ZNVxMj0jvnKkIySRHYaqvCxMfASHCB7Kz9LN3lBWuT709pEnQ6mtwLJWybLlIJkMFOVoapw~epIgWBtJjhMNwPCzXswUddKSdirOHIm8JRoN3~Ha99oxo4nSN5tyf3u2fWLxGOTeAyp7Hcq97gMkdqjuNc14k2n7fPULgbSCkHepLIG8GQrNLMfA6hkphkIj0LdjC6AQ7pvg__&Key-Pair-Id=KL5I0C8H7HX83', 'obj': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/model.obj?Expires=4886870400&Signature=a53mEQASL7jRU8Xz5WhN-~d3~74BlBlqDMufryX-j1~jXTgbMEEhY2dC5R7dHHHJbJ4ns9GQ8cbjxcCImVvjkiLvPYZ-lraLaqMnbG~hatsZNv6wDZxTson8jsiqTSHaLnamp83zycLotM~zrUW0DIHGoFWvf9DPTKqy4Z0ZAOxOsA9qfAmJI6k2CVHLu0hMRLAjm3f8KA4j90kJBBVuYvABZi27hP-aURhD09zoAMp~AsrXSKxFjd5wcYqKko78qch2K2H5NaAUGhsKbuNmBMFaxc0C5dKgSlKufWmib86vUOe1dYLQyqGTS85u5dVQSwFrDY5gyugGJ4TH-aVQVw__&Key-Pair-Id=KL5I0C8H7HX83', 'mtl': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/model.mtl?Expires=4886870400&Signature=FnY3cNMqEymvBw~33riU~HkVIifWKEUh0ndV90VaWMnKczU~Wqng7AYTqwywr6PNQDuFL~iQFw-y6qvklsV9I0aTg8OoYQ3dfCaRqydwUbN80aonk~fwpAJUwBxqbhhN4n9T~7WTX-pyo0w5vQ09wte4G-4yAIUEM7qlOwZohdfK2a~EIhnq9WiV92TuGtm0c4x5n6png9ZjX5pHnp~a77UCBJlIQ1teN5Rb3I9HFh4sbUGdcXUas7B9EIq4YiabjO9vf5FGwicb2XQ-YxJFJJdEJwbBp6l6iZCbSk-WijmIWmyD~8A~jhTNwlG9UHR5qTsnprntgoRyLdTRSXvDzg__&Key-Pair-Id=KL5I0C8H7HX83'}, \n+'thumbnail_url': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/preview.png?Expires=4886870400&Signature=B16evi199mig4RTFq0FVPrHGkpjpPudRpLfpcY2FxJIkIFYg42-v8BfsL3eWAM-XDlDqahPSXtqqm6emVkSu550iPqo2yy-URoDifiIl5petEy~42nHtc1-dZB1HcEvtcyycHOjmk1y8zQfZBgQ8cjGq0Ds19xSdOXIo7-~QDPWhUGUTreJvBNg17GitgvcfYbGj2g6gibYJWjwatM7A6yHhq3d53N8eDcmO5L6dBH3VwUFTxDWBQXwUT7aXkS7dsQ7Wz5CkIbbH~T-4Pn5KpdJy1Kf1Lrh1YpOUN4T7JI8Ot5urYKYRj4cZ96xpDD9gicPGvgrRaicFyb1sSwW2ow__&Key-Pair-Id=KL5I0C8H7HX83', \n+'video_url': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/output.mp4?Expires=4886870400&Signature=r8t11N9~XGzNfuW3KowxarSpr7hC8eQb0kzkKADOz3hdTA9vAqBdv5AVdMGDlMmH9IP4R60UCnVNT6scA1EeN3FZLXaHaWbsxHDuc4XdUk7DE7AbwUKSbl~YdUSu5-RkNu6vaMHTiB55XubUJhv9ReB25a6Ifee0rf1ulGs-amFSMlL~eNPq6HTUI6NGAqi1p~VeFzE53JV5sWvU2JYnbGe8kzruC705z1LiCU-9isWzJGuOIy~RpiVfYzSmgh4xeILaYKpxR2ZM2uVtbi6snl~aYsqiKMIIMxMg-aZDWn-f5voiWaCL1OUV5fxbI82ZRJNd5DSlVjI~umqZZIl-iw__&Key-Pair-Id=KL5I0C8H7HX83', \n+'texture_urls': [{'base_color': 'https://assets.meshy.ai/5e05026a-0e91-4073-83fe-0263b1b4d348/tasks/01939144-7dea-73c7-af06-efa79c83243f/output/texture_0.png?Expires=4886870400&Signature=Q8SGRrnE00-mGHCAcIOUUAig~YtTJqVx1n2IqFFbXBNUPvf~hsTYzcKgC2wQjF25tj0D6yQ8BiIktN9WjsKu0SnbeED~ofHIA0quheMjwHL~hfdj63LGWkMumVEjE2ZVwDv-DdlROF3ayw5hQxzlRbcHwXLq0n2xMHmj-WetyiYBKCcJbXbZMOAtlo8e40d21CGMnjImduCvdwhpqwNKUx4MwHeM2W0GW4OC94AoSF8AccHJeQPD2gdu7JHoTuZFjcqS-9YCjmHT7Y5Xg7rmeNYz40O21sYci0b54NvBDzX-6HvydjqtY-ofudppaxlC77Zd~FaVcCz5rH2J43cdLg__&Key-Pair-Id=KL5I0C8H7HX83'}]}\n+(camel-ai-py3.12) \n+==========================================================================\n+\"\"\"\ndiff --git a/examples/toolkits/notion_toolkit.py b/examples/toolkits/notion_toolkit.py\nindex 37d4895162..b57e6c7bdb 100644\n--- a/examples/toolkits/notion_toolkit.py\n+++ b/examples/toolkits/notion_toolkit.py\n@@ -95,4 +95,5 @@\n [FunctionCallingRecord(func_name='list_all_users', args={}, result=[{'type':\n 'person', 'name': 'user a', 'workspace': ''}, {'type': 'bot', 'name':\n 'test', 'workspace': \"user a's Notion\"}])]\n+==========================================================================\n \"\"\"\ndiff --git a/poetry.lock b/poetry.lock\nindex a7fd4dbc55..8c566c949d 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -84,98 +84,98 @@ files = [\n \n [[package]]\n name = \"aiohappyeyeballs\"\n-version = \"2.4.3\"\n+version = \"2.4.4\"\n description = \"Happy Eyeballs for asyncio\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"aiohappyeyeballs-2.4.3-py3-none-any.whl\", hash = \"sha256:8a7a83727b2756f394ab2895ea0765a0a8c475e3c71e98d43d76f22b4b435572\"},\n-    {file = \"aiohappyeyeballs-2.4.3.tar.gz\", hash = \"sha256:75cf88a15106a5002a8eb1dab212525c00d1f4c0fa96e551c9fbe6f09a621586\"},\n+    {file = \"aiohappyeyeballs-2.4.4-py3-none-any.whl\", hash = \"sha256:a980909d50efcd44795c4afeca523296716d50cd756ddca6af8c65b996e27de8\"},\n+    {file = \"aiohappyeyeballs-2.4.4.tar.gz\", hash = \"sha256:5fdd7d87889c63183afc18ce9271f9b0a7d32c2303e394468dd45d514a757745\"},\n ]\n \n [[package]]\n name = \"aiohttp\"\n-version = \"3.11.8\"\n+version = \"3.11.9\"\n description = \"Async http client/server framework (asyncio)\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"aiohttp-3.11.8-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:2d2ca685c6a851ce64e511fbcb906e4dd97d13e567ca7ecb5cb30b184e15dc6d\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:52913bb8a0a72a57479f54b281300c9d23036aa9aa3ebbc9a32a643484eadfc2\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:35dafc70051b6cbd6dafb533b4e3f0df6225a4896be373ef86367b2987409331\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:561b9596a9f90266673ef0b950c27e04ab597cdb53785e2ac91b83b33c31b509\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d479c1fdcc920056a06d04059db52eb8590ecbbb3acdcaeeea26a88ff782e94a\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9ce8eb6444bb6e862feca664ce365afa8e2e32db24dcf1a502719a8a002f9274\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:df9bf08eb93611b1d4d6245b6fecf88728e90eece00e00d554e1b0c445557d83\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5a20ddaa58fea717177fac9a4a1fb8b39be868aa4fed2af6de4313b7a08f0f71\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:9f4aadfea6b48cfa17aef1a68ba6bee5a0246374f5a588e299a4f4ff5bd1c77b\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:aa7deebb4bc5143745e6282139d7b9de50beb6d06609df64d2c993ef496bc7eb\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:fe503a76b9e3a13b62e64545693c9463afe9d429e0909120f7bb66de91ed8bc2\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:1c5838a68e31712354129add1b5fe32b06aa05275f835130edc650e6288af05f\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:832e58d9454fe501b0d092cdf660c0e34e16005f61acd06e1c79b0fc45019c94\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-win32.whl\", hash = \"sha256:00618c37a350884c08e87cf9a6532be274d564227ac49e0b474cf41f27e1f190\"},\n-    {file = \"aiohttp-3.11.8-cp310-cp310-win_amd64.whl\", hash = \"sha256:8eeaac75203da1a54afe1faea3c855a1973026b54929112aa9b67bceadbcb0ca\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:f8dd02b44555893adfe7cc4b3b454fee04f9dcec45cf66ef5bb53ebf393f0505\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:658052941324edea3dee1f681375e70779f55e437e07bdfc4b5bbe65ad53cefb\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:6c829471a9e2266da4a0666f8a9e215f19320f79778af379c1c7db324ac24ed2\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d21951756690f5d86d0215da38eb0fd65def03b5e2a1c08a4a39718a6d0d48f2\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2fa50ddc6b21cc1ae23e13524d6f75b27e279fdf5cf905b2df6fd171891ac4e2\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2a5afbd805e449048ecebb1a256176e953d4ca9e48bab387d4d1c8524f1c7a95\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ea68db69f2a4ddc24b28b8e754fc0b963ed7f9b9a76137f06fe44643d6821fbd\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:80b3ac163145660ce660aed2f1005e6d4de840d39728990b7250525eeec4e4a8\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:e9ac0cce897904b77e109e5403ed713187dbdf96832bfd061ac07164264be16c\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:3260c77cff4e35245bc517658bd54d7a64787f71f3c4f723877c82f22835b032\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f7fd9c11ffad6b022bf02a41a70418cb2ab3b33f2c27842a5999e3ab78daf280\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:16bda233a7b159ab08107e8858fedca90a9de287057fab54cafde51bd83f9819\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:4867008617bbf86e9fb5b00f72dd0e3a00a579b32233caff834320867f9b7cac\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-win32.whl\", hash = \"sha256:17e6b9d8e29e3bfc7f893f327e92c9769d3582cee2fb1652c1431ac3f60115a0\"},\n-    {file = \"aiohttp-3.11.8-cp311-cp311-win_amd64.whl\", hash = \"sha256:7f3be4961a5c2c670f31caab7641a37ea2a97031f0d8ae15bcfd36b6bf273200\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:0e3b5bfef913d6be270c81976fbc0cbf66625cd92663bbb7e03b3adbd6aa4ac6\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:cb51a81cb637b9a072c9cfae1839e35c6579638861eb3479eb5d6e6ce8bc6782\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:dd2ca84e5f7a35f313a62eb7d6a50bac6760b60bafce34586750712731c0aeff\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:47c6663df9446aa848b478413219600da4b54bc0409e1ac4bc80fb1a81501363\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c665ed4b52256614858b20711bbbd2755b0e19ec86870f8ff1645acf9ae9e760\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:35d4545e7684da7a954ffc2dce495462cb16a902dffdebe98572408f6aaaee83\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:85be3899e6860dd2cd3f4370ded6708e939d00d5ec922a8eb328d114db605a47\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a0ed9f1f2697713c48efc9ec483ad5d062e4aa91854f090a3eba0b19c002851d\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:c0dbae99737badf3f5e862088a118e28d3b36f03eb608a6382eddfd68178e05b\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:beae08f900b2980af4353a0200eb162b39f276fd8a6e43079a540f83964671f4\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d6f9e5fd1b3ecbaca3e04a15a02d1fa213248608caee99fd5bdddd4759959cf7\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:a7def89a41fe32120d89cd4577f5efbab3c52234c5890066ced8a2f7202dff88\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:98f596cf59292e779bc387f22378a3d2c5e052c9fe2bf822ac4f547c6fe57758\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-win32.whl\", hash = \"sha256:b64fa6b76b35b695cd3e5c42a4e568cbea8d41c9e59165e2a43da00976e2027e\"},\n-    {file = \"aiohttp-3.11.8-cp312-cp312-win_amd64.whl\", hash = \"sha256:afba47981ff73b1794c00dce774334dcfe62664b3b4f78f278b77d21ce9daf43\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:a81525430da5ca356fae6e889daeb6f5cc0d5f0cef88e59cdde48e2394ea1365\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:7565689e86a88c1d258351ebd14e343337b76a56ca5c0a2c1db96ec28149386f\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:d0f9dbe9763c014c408ad51a027dc9582518e992dc63e2ffe359ac1b4840a560\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8ca580edc3ccd7f6ea76ad9cf59f5a8756d338e770b5eda7be26bcda8fa7ef53\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7d141631a7348038fc7b5d1a81b3c9afa9aa056188ded7902fe754028fdea5c5\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:64e6b14608a56a4c76c60daac730b0c0eeaf9d10dfc3231f7fc26521a0d628fd\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0983d0ce329f2f9dbeb355c3744bd6333f34e0dc56025b6b7d4f285b90acb51e\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d96b93a46a3742880fa21bcb35c6c40cf27714ec0fb8ec85fe444d73b95131b9\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:f4f1779c3142d913c509c2ed1de8b8f920e07a5cd65ac1f57c61cfb6bfded5a4\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:48be7cff468c9c0d86a02e6a826e1fe159094b16d5aa2c17703e7317f791b0f9\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:daea456b79ca2bacc7f062845bbb1139c3b3231fc83169da5a682cf385416dd1\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:c92e763cf641e10ad9342597d20060ba23de5e411aada96660e679e3f9371189\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a750ee5a177e0f873d6b2d7d0fa6e1e7c658fc0ca8ea56438dcba2ac94bedb09\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-win32.whl\", hash = \"sha256:4448c9c7f77bad48a6569062c0c16deb77fbb7363de1dc71ed087f66fb3b3c96\"},\n-    {file = \"aiohttp-3.11.8-cp313-cp313-win_amd64.whl\", hash = \"sha256:481075a1949de79a8a6841e0086f2f5f464785c592cf527ed0db2c0cbd0e1ba2\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:72779bfb34d6d6b51e55a7f4901b410e416b5431738b367d49696928c91a2ca8\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:3e6523f39071a01757048985e4cc22d04aa130bc40d9128503f3a61a3ee98328\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:220bbce18b3046973465be45415430f1cab39d7fdc40cbcf0a8c05485c6902fe\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:336bbf7a33dd8cb4a7afb98c70e9935a81e5e88f7ac595ba2e84b1fb5da190d6\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3c5e4f1ba5059b85e05c551961a448ce2689c6249ed6a2e2174796842c191d10\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e9f9fd5c672c962389429abd11ed32c9c93f7932fd58584cae1e43951b141c6b\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:58bd94ad48143e1d42e05fc055da41de0a9933f378ad87760595b8aec83d317b\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9bf52642b12d70d78c18882915201bc5345f7c8f0f2ab8919d99b886aa6475a7\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:fee12d8487b0df2b683424cca2a0d8fb7281d5607518d742e98119a74af01026\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:65fd04f1fea668ad1af48ac31b752000e222dccffedcad3de8ccf9d34489ccd3\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c3f397e0511a0ec4fe331e602fc057dfd336d352062deb9969ebd81e253a149c\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:cf8f05f4abe3288fe2e106e1461fd20d8abf6103886ddfb6d746a5b8fb830d2b\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7d71d4ac0792ff89541179394d303be846a0b6cd3821ae67286ee69ecec16f9f\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-win32.whl\", hash = \"sha256:2b6f8716044ae5e5f2a3b4e4b6bfee48e97c8b2a92e56f43aadd728c7fd26b7d\"},\n-    {file = \"aiohttp-3.11.8-cp39-cp39-win_amd64.whl\", hash = \"sha256:da343903214bf9f9d314b913caa499fa19e26d73e6e23a3db7d4898ea6d47028\"},\n-    {file = \"aiohttp-3.11.8.tar.gz\", hash = \"sha256:7bc9d64a2350cbb29a9732334e1a0743cbb6844de1731cbdf5949b235653f3fd\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:0411777249f25d11bd2964a230b3ffafcbed6cd65d0f2b132bc2b8f5b8c347c7\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:499368eb904566fbdf1a3836a1532000ef1308f34a1bcbf36e6351904cced771\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:0b5a5009b0159a8f707879dc102b139466d8ec6db05103ec1520394fdd8ea02c\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:176f8bb8931da0613bb0ed16326d01330066bb1e172dd97e1e02b1c27383277b\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6435a66957cdba1a0b16f368bde03ce9c79c57306b39510da6ae5312a1a5b2c1\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:202f40fb686e5f93908eee0c75d1e6fbe50a43e9bd4909bf3bf4a56b560ca180\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:39625703540feb50b6b7f938b3856d1f4886d2e585d88274e62b1bd273fae09b\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c6beeac698671baa558e82fa160be9761cf0eb25861943f4689ecf9000f8ebd0\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:96726839a42429318017e67a42cca75d4f0d5248a809b3cc2e125445edd7d50d\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:3f5461c77649358610fb9694e790956b4238ac5d9e697a17f63619c096469afe\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4313f3bc901255b22f01663eeeae167468264fdae0d32c25fc631d5d6e15b502\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:d6e274661c74195708fc4380a4ef64298926c5a50bb10fbae3d01627d7a075b7\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:db2914de2559809fdbcf3e48f41b17a493b58cb7988d3e211f6b63126c55fe82\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-win32.whl\", hash = \"sha256:27935716f8d62c1c73010428db310fd10136002cfc6d52b0ba7bdfa752d26066\"},\n+    {file = \"aiohttp-3.11.9-cp310-cp310-win_amd64.whl\", hash = \"sha256:afbe85b50ade42ddff5669947afde9e8a610e64d2c80be046d67ec4368e555fa\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:afcda759a69c6a8be3aae764ec6733155aa4a5ad9aad4f398b52ba4037942fe3\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:c5bba6b83fde4ca233cfda04cbd4685ab88696b0c8eaf76f7148969eab5e248a\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:442356e8924fe1a121f8c87866b0ecdc785757fd28924b17c20493961b3d6697\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f737fef6e117856400afee4f17774cdea392b28ecf058833f5eca368a18cf1bf\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ea142255d4901b03f89cb6a94411ecec117786a76fc9ab043af8f51dd50b5313\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:6e1e9e447856e9b7b3d38e1316ae9a8c92e7536ef48373de758ea055edfd5db5\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e7f6173302f8a329ca5d1ee592af9e628d3ade87816e9958dcf7cdae2841def7\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a7c6147c6306f537cff59409609508a1d2eff81199f0302dd456bb9e7ea50c39\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:e9d036a9a41fc78e8a3f10a86c2fc1098fca8fab8715ba9eb999ce4788d35df0\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:2ac9fd83096df36728da8e2f4488ac3b5602238f602706606f3702f07a13a409\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d3108f0ad5c6b6d78eec5273219a5bbd884b4aacec17883ceefaac988850ce6e\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:96bbec47beb131bbf4bae05d8ef99ad9e5738f12717cfbbf16648b78b0232e87\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:fc726c3fa8f606d07bd2b500e5dc4c0fd664c59be7788a16b9e34352c50b6b6b\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-win32.whl\", hash = \"sha256:5720ebbc7a1b46c33a42d489d25d36c64c419f52159485e55589fbec648ea49a\"},\n+    {file = \"aiohttp-3.11.9-cp311-cp311-win_amd64.whl\", hash = \"sha256:17af09d963fa1acd7e4c280e9354aeafd9e3d47eaa4a6bfbd2171ad7da49f0c5\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:c1f2d7fd583fc79c240094b3e7237d88493814d4b300d013a42726c35a734bc9\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:d4b8a1b6c7a68c73191f2ebd3bf66f7ce02f9c374e309bdb68ba886bbbf1b938\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:bd3f711f4c99da0091ced41dccdc1bcf8be0281dc314d6d9c6b6cf5df66f37a9\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:44cb1a1326a0264480a789e6100dc3e07122eb8cd1ad6b784a3d47d13ed1d89c\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7a7ddf981a0b953ade1c2379052d47ccda2f58ab678fca0671c7c7ca2f67aac2\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:6ffa45cc55b18d4ac1396d1ddb029f139b1d3480f1594130e62bceadf2e1a838\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cca505829cdab58c2495ff418c96092d225a1bbd486f79017f6de915580d3c44\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:44d323aa80a867cb6db6bebb4bbec677c6478e38128847f2c6b0f70eae984d72\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:b2fab23003c4bb2249729a7290a76c1dda38c438300fdf97d4e42bf78b19c810\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:be0c7c98e38a1e3ad7a6ff64af8b6d6db34bf5a41b1478e24c3c74d9e7f8ed42\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:5cc5e0d069c56645446c45a4b5010d4b33ac6c5ebfd369a791b5f097e46a3c08\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:9bcf97b971289be69638d8b1b616f7e557e1342debc7fc86cf89d3f08960e411\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:c7333e7239415076d1418dbfb7fa4df48f3a5b00f8fdf854fca549080455bc14\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-win32.whl\", hash = \"sha256:9384b07cfd3045b37b05ed002d1c255db02fb96506ad65f0f9b776b762a7572e\"},\n+    {file = \"aiohttp-3.11.9-cp312-cp312-win_amd64.whl\", hash = \"sha256:f5252ba8b43906f206048fa569debf2cd0da0316e8d5b4d25abe53307f573941\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:282e0a7ddd36ebc411f156aeaa0491e8fe7f030e2a95da532cf0c84b0b70bc66\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:ebd3e6b0c7d4954cca59d241970011f8d3327633d555051c430bd09ff49dc494\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:30f9f89ae625d412043f12ca3771b2ccec227cc93b93bb1f994db6e1af40a7d3\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7a3b5b2c012d70c63d9d13c57ed1603709a4d9d7d473e4a9dfece0e4ea3d5f51\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6ef1550bb5f55f71b97a6a395286db07f7f2c01c8890e613556df9a51da91e8d\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:317251b9c9a2f1a9ff9cd093775b34c6861d1d7df9439ce3d32a88c275c995cd\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:21cbe97839b009826a61b143d3ca4964c8590d7aed33d6118125e5b71691ca46\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:618b18c3a2360ac940a5503da14fa4f880c5b9bc315ec20a830357bcc62e6bae\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:a0cf4d814689e58f57ecd5d8c523e6538417ca2e72ff52c007c64065cef50fb2\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:15c4e489942d987d5dac0ba39e5772dcbed4cc9ae3710d1025d5ba95e4a5349c\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ec8df0ff5a911c6d21957a9182402aad7bf060eaeffd77c9ea1c16aecab5adbf\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:ed95d66745f53e129e935ad726167d3a6cb18c5d33df3165974d54742c373868\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:647ec5bee7e4ec9f1034ab48173b5fa970d9a991e565549b965e93331f1328fe\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-win32.whl\", hash = \"sha256:ef2c9499b7bd1e24e473dc1a85de55d72fd084eea3d8bdeec7ee0720decb54fa\"},\n+    {file = \"aiohttp-3.11.9-cp313-cp313-win_amd64.whl\", hash = \"sha256:84de955314aa5e8d469b00b14d6d714b008087a0222b0f743e7ffac34ef56aff\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:e738aabff3586091221044b7a584865ddc4d6120346d12e28e788307cd731043\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:28f29bce89c3b401a53d6fd4bee401ee943083bf2bdc12ef297c1d63155070b0\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:31de2f10f63f96cc19e04bd2df9549559beadd0b2ee2da24a17e7ed877ca8c60\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:77f31cebd8c27a36af6c7346055ac564946e562080ee1a838da724585c67474f\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:0bcb7f6976dc0b6b56efde13294862adf68dd48854111b422a336fa729a82ea6\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1a8b13b9950d8b2f8f58b6e5842c4b842b5887e2c32e3f4644d6642f1659a530\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c9c23e62f3545c2216100603614f9e019e41b9403c47dd85b8e7e5015bf1bde0\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ec656680fc53a13f849c71afd0c84a55c536206d524cbc831cde80abbe80489e\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:36df00e0541f264ce42d62280281541a47474dfda500bc5b7f24f70a7f87be7a\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:8dcfd14c712aa9dd18049280bfb2f95700ff6a8bde645e09f17c3ed3f05a0130\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:14624d96f0d69cf451deed3173079a68c322279be6030208b045ab77e1e8d550\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:4b01d9cfcb616eeb6d40f02e66bebfe7b06d9f2ef81641fdd50b8dd981166e0b\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:928f92f80e2e8d6567b87d3316c1fd9860ccfe36e87a9a7f5237d4cda8baa1ba\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-win32.whl\", hash = \"sha256:c8a02f74ae419e3955af60f570d83187423e42e672a6433c5e292f1d23619269\"},\n+    {file = \"aiohttp-3.11.9-cp39-cp39-win_amd64.whl\", hash = \"sha256:0a97d657f6cf8782a830bb476c13f7d777cfcab8428ac49dde15c22babceb361\"},\n+    {file = \"aiohttp-3.11.9.tar.gz\", hash = \"sha256:a9266644064779840feec0e34f10a89b3ff1d2d6b751fe90017abcad1864fa7c\"},\n ]\n \n [package.dependencies]\n@@ -419,12 +419,12 @@ tests = [\"mypy (>=0.800)\", \"pytest\", \"pytest-asyncio\"]\n \n [[package]]\n name = \"asknews\"\n-version = \"0.7.52\"\n+version = \"0.7.53\"\n description = \"Python SDK for AskNews\"\n optional = true\n python-versions = \"<4.0,>=3.8.1\"\n files = [\n-    {file = \"asknews-0.7.52-py3-none-any.whl\", hash = \"sha256:668fe076a9480046b253105245efabf4cacebdab447c1fd35f4a35a154ea6f92\"},\n+    {file = \"asknews-0.7.53-py3-none-any.whl\", hash = \"sha256:fa0922a919230cada013bc2fadfeb78bda88a03a974c4ff5af6bd87efd37057e\"},\n ]\n \n [package.dependencies]\n@@ -436,21 +436,18 @@ pydantic = \">=2.5.3,<3.0.0\"\n \n [[package]]\n name = \"asttokens\"\n-version = \"2.4.1\"\n+version = \"3.0.0\"\n description = \"Annotate AST trees with source code positions\"\n optional = true\n-python-versions = \"*\"\n+python-versions = \">=3.8\"\n files = [\n-    {file = \"asttokens-2.4.1-py2.py3-none-any.whl\", hash = \"sha256:051ed49c3dcae8913ea7cd08e46a606dba30b79993209636c4875bc1d637bc24\"},\n-    {file = \"asttokens-2.4.1.tar.gz\", hash = \"sha256:b03869718ba9a6eb027e134bfdf69f38a236d681c83c160d510768af11254ba0\"},\n+    {file = \"asttokens-3.0.0-py3-none-any.whl\", hash = \"sha256:e3078351a059199dd5138cb1c706e6430c05eff2ff136af5eb4790f9d28932e2\"},\n+    {file = \"asttokens-3.0.0.tar.gz\", hash = \"sha256:0dcd8baa8d62b0c1d118b399b2ddba3c4aff271d0d7a9e0d4c1681c79035bbc7\"},\n ]\n \n-[package.dependencies]\n-six = \">=1.12.0\"\n-\n [package.extras]\n-astroid = [\"astroid (>=1,<2)\", \"astroid (>=2,<4)\"]\n-test = [\"astroid (>=1,<2)\", \"astroid (>=2,<4)\", \"pytest\"]\n+astroid = [\"astroid (>=2,<4)\"]\n+test = [\"astroid (>=2,<4)\", \"pytest\", \"pytest-cov\", \"pytest-xdist\"]\n \n [[package]]\n name = \"async-timeout\"\n@@ -484,54 +481,54 @@ tests-mypy = [\"mypy (>=1.11.1)\", \"pytest-mypy-plugins\"]\n \n [[package]]\n name = \"av\"\n-version = \"13.1.0\"\n+version = \"14.0.0\"\n description = \"Pythonic bindings for FFmpeg's libraries.\"\n optional = false\n python-versions = \">=3.9\"\n files = [\n-    {file = \"av-13.1.0-cp310-cp310-macosx_10_13_x86_64.whl\", hash = \"sha256:a2af44fae6d16c3a40dd1c85bda41b449be08a2c172d8f44fb63395ccf6e6fb4\"},\n-    {file = \"av-13.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:0fea71fe06fd0dfe90a089200eb6468034797f860a321fa2d62e07d619c74749\"},\n-    {file = \"av-13.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:756997810dcca11811b598d209561cabd2071e5b472b867c295bb3e7022eecde\"},\n-    {file = \"av-13.1.0-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7f432102edaec4ee90087a675acf486bff0c81b47d98b85eb3218afe84575b60\"},\n-    {file = \"av-13.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1d568c4d7a36df52c0774d52e6d730148775ead16daed81c10dafc2569b5a38d\"},\n-    {file = \"av-13.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:aa6f76e7c5e77bc5f99a27ada29f78c64fd4e0d42da2c4d203badc650bc0a686\"},\n-    {file = \"av-13.1.0-cp311-cp311-macosx_10_13_x86_64.whl\", hash = \"sha256:867385e6701464a5c95903e24d2e0df1c7e0dbf211ed91d0ce639cd687373e10\"},\n-    {file = \"av-13.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:cb7a3f319401a46b0017771268ff4928501e77cf00b1a2aa0721e20b2fd1146e\"},\n-    {file = \"av-13.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ad904f860147bceaca65b0d3174a8153f35c570d465161d210f1879970b15559\"},\n-    {file = \"av-13.1.0-cp311-cp311-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a906e017b29d0eb80d9ccf7a98d19268122da792dbb68eb741cfebba156e6aed\"},\n-    {file = \"av-13.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5ce894d7847897da7be63277a0875bd93c51327134ac226c67978de014c7979f\"},\n-    {file = \"av-13.1.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:384bcdb5fc3238a263a5a25cc9efc690859fa4148cc4b07e00fae927178db22a\"},\n-    {file = \"av-13.1.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:261dbc3f4b55f4f8f3375b10b2258fca7f2ab7a6365c01bc65e77a0d5327a195\"},\n-    {file = \"av-13.1.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:83d259ef86b9054eb914bc7c6a7f6092a6d75cb939295e70ee979cfd92a67b99\"},\n-    {file = \"av-13.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f3b4d3ca159eceab97e3c0fb08fe756520fb95508417f76e48198fda2a5b0806\"},\n-    {file = \"av-13.1.0-cp312-cp312-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:40e8f757e373b73a2dc4640852a00cce4a4a92ef19b2e642a96d6994cd1fffbf\"},\n-    {file = \"av-13.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d8aaec2c0bfd024359db3821d679009d4e637e1bee0321d20f61c54ed6b20f41\"},\n-    {file = \"av-13.1.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:5ea0deab0e6a739cb742fba2a3983d8102f7516a3cdf3c46669f3cac0ed1f351\"},\n-    {file = \"av-13.1.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:47642ebaebfe20519b2391bd5b7c38b596efcd052bfd09c8d33058f94ddd0fd6\"},\n-    {file = \"av-13.1.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:2f079c2daa3ae06557b3f6e9bed4fb9c876e8012175bec645ccd007199a302db\"},\n-    {file = \"av-13.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1f0de8252deeeb1887637e88d4d9d18514e5cfe276bdb9e6ca8e9eef89d1667a\"},\n-    {file = \"av-13.1.0-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9ad0024f4def11b0cedfeee478fa6c6fd7ed3955e13387e0f27261fdda6121b4\"},\n-    {file = \"av-13.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cb88e2590eaed45233eb117f1dfab1a43ed9a997b2c46da9f08468dd00f14895\"},\n-    {file = \"av-13.1.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:c927e4fa4f6aeed4340b3e3b16b237d7cb743e5c1a55b92307407590ca4112aa\"},\n-    {file = \"av-13.1.0-cp39-cp39-macosx_10_13_x86_64.whl\", hash = \"sha256:fa398f0e0579bdeca4f0c31eb46e88c29562988e135e44972f73bb7525d1454e\"},\n-    {file = \"av-13.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:cd38601a0e83061af90106e5a312649cd04b1f0bba508f3895ac8dc7930bcf68\"},\n-    {file = \"av-13.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1a18b67c5b4ad725c5cd4d0d6cd825d91e39f50654e4148cb179a02913b6bd42\"},\n-    {file = \"av-13.1.0-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c53917f326e460e784cf599da3e2b4d5c76c02c9fd2d32c4b8e24b86b159b6ba\"},\n-    {file = \"av-13.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e5bc5e8a5f3811dab471c412c50b7850912d85c804f500b75358b6af93e8ee8b\"},\n-    {file = \"av-13.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:6d7ae8510ff011fb4df0e0a6c50ef495a980d70968db17d138a7ccca322896cd\"},\n-    {file = \"av-13.1.0-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:fc5118f78ee712b2c396f345e4c51e60e61e28f1f606adbd4060c4dc44b0b652\"},\n-    {file = \"av-13.1.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:81bcbd3545e523e7a350613be1866b515a5ee3fafa1d9d257d7ed02531fc2636\"},\n-    {file = \"av-13.1.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:83b2bc641e8e16bbf058de35f1ba79ebed358ac6fe3cb5a665366294774fdb18\"},\n-    {file = \"av-13.1.0-pp310-pypy310_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d956ae3e68fabdc45eb2b986c2e842a31df084d8cfc90336509f07a727a9df62\"},\n-    {file = \"av-13.1.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2ef076fcdf172aafcb21ea3ef7bd68cc9151b050016a8ace13b3dae3d08a4427\"},\n-    {file = \"av-13.1.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:bbf90397b7a466ff2879bd0944d55f796ad76c073fce50304315b83ad00113bd\"},\n-    {file = \"av-13.1.0-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:3804b57d04dc512c7ae15da9499373f37b8af7a80631899a9b3afd4c9007433b\"},\n-    {file = \"av-13.1.0-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:1b94ee5ee160794c9874b4977e5c4d76d7250b2fd6f27202c66a4df4ad23e822\"},\n-    {file = \"av-13.1.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6073ff4202e4a0c3aecab35ef99f84a3c4b4414c4b8ae771c965a2b52394148c\"},\n-    {file = \"av-13.1.0-pp39-pypy39_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c5ab17663b783e112837fb1c5f67098a561627e4a542cdf5bf1524f48478b897\"},\n-    {file = \"av-13.1.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f422360f801a6f878d73aee4d404110ee6bb8f04846bf8815edb218da83bec49\"},\n-    {file = \"av-13.1.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:799cf56dc9399a1696e0445dcee6e17dfa67e2a76030934d678cfa7d7ae40172\"},\n-    {file = \"av-13.1.0.tar.gz\", hash = \"sha256:d3da736c55847d8596eb8c26c60e036f193001db3bc5c10da8665622d906c17e\"},\n+    {file = \"av-14.0.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:6d108c064808902bce850297faaa0a334baaed11d0a2a7d89e38810ee3b5ab48\"},\n+    {file = \"av-14.0.0-cp310-cp310-macosx_11_0_x86_64.whl\", hash = \"sha256:aacd0e1ae3dbdfce9bbec7b1e536ad90207df512b54f96d12d737189978e138a\"},\n+    {file = \"av-14.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2470d287401574a05e43f0cbd954d451676b6cae7397d93e34aff5cf37d893da\"},\n+    {file = \"av-14.0.0-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:609699ee01550029f1f52de211ad8c2b82ab6ca90b2ad17a3d7e75406f96fd93\"},\n+    {file = \"av-14.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c85dca74f42dcba625a04238c56007b30ad856b91a30f0ea7ce1cab2d6497d55\"},\n+    {file = \"av-14.0.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:43666d666d334ea0b0a8d55b28514734bd407c78afd0a080ee5122204e8cd10f\"},\n+    {file = \"av-14.0.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:1854dab5619a529b1fd836c9d7a569866ea0f3eca077d555dc6bdb2c3b42cf3c\"},\n+    {file = \"av-14.0.0-cp311-cp311-macosx_11_0_x86_64.whl\", hash = \"sha256:a5057763b8b5ca10076e1bf65a9e370b30dc3c4020aecb3ca22c21b56376bf99\"},\n+    {file = \"av-14.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ed9f9c4d468a883c9e7b144fe036cee4478b7bc7bd71f561f2fb11a57d1439ef\"},\n+    {file = \"av-14.0.0-cp311-cp311-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4d1cf5afcb7e7dc56c79bfa3770adbef20aa5385136ca6f2cc6f8ee38d0a366f\"},\n+    {file = \"av-14.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:99656d0c5467b382df3ac23cafd197e2c2b5d72ed5ebc58086281ee623ea129e\"},\n+    {file = \"av-14.0.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:7ba11274dd9b051f09eafd6740bfe409cf9c435cbcb493ae6f4d7cad52576d90\"},\n+    {file = \"av-14.0.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:12449c460bf9d9166d8fd5fed585c2696038147dea0ff70c94f1258ff112bb9a\"},\n+    {file = \"av-14.0.0-cp312-cp312-macosx_11_0_x86_64.whl\", hash = \"sha256:73252035d4b0d065c9222e8c60b6b61df370c136839f8224cab697db90ab7743\"},\n+    {file = \"av-14.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1e17ec54a6f85841595bbc3fca693f2acb516fab295f746f1f8d0819ebe1dc12\"},\n+    {file = \"av-14.0.0-cp312-cp312-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8b5ac245d3d13cbf58e6f78d4d7a68fd274ed13c8a0ebf4a2b12e1e95e985673\"},\n+    {file = \"av-14.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fdcbe47de3b985ceb88fa0bc9de916200dcdfa2a932a11bdecc6705b5ffa25cf\"},\n+    {file = \"av-14.0.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:6276d9609a82bb00d265ea529cb7361d67384dd15f68fbf480e7a0291c092733\"},\n+    {file = \"av-14.0.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:54800acfe9e886a9121601bcafe32553ced2ad8529666242a7dfabafb48075e2\"},\n+    {file = \"av-14.0.0-cp313-cp313-macosx_11_0_x86_64.whl\", hash = \"sha256:eb4612015a50e474a32055e226c76032e2aaf45ba9e566e7afe32623af122c0d\"},\n+    {file = \"av-14.0.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b9b2b00ef066a7141ceb58d152037e2a7a802c8b7cf5cee573dedab47b4464ca\"},\n+    {file = \"av-14.0.0-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e747b9c4facd56d45059eeff386ccf8046bc0b9ce7daae935e8ec8f1a68f5442\"},\n+    {file = \"av-14.0.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2033b6f0a0e3f2caab68bb31ccd09ad78e5e27df64c102e34d02bffac21d29b8\"},\n+    {file = \"av-14.0.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:22125de1e63b412fbdbf5817df85f2056b2a2de86698fdae48fb8f914219ae68\"},\n+    {file = \"av-14.0.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ba462bc923d8f1927fb6758cddc39b13ef958fbd045b44d174605509f2a3883e\"},\n+    {file = \"av-14.0.0-cp39-cp39-macosx_11_0_x86_64.whl\", hash = \"sha256:52cda7649e6a3903ccff81a4cb350d48d77d63a56a0b5ba3b6d9658d065c89a6\"},\n+    {file = \"av-14.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4fa3ddc062649d04d84a97a27da92f4ca7f49139eb48cf2bef61b6f35f85efe4\"},\n+    {file = \"av-14.0.0-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d406e465aa2090aba772d95a0e00c0db99111f22e61abf27b827bc1773a8cf28\"},\n+    {file = \"av-14.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b6a0e3d2e64e280db9fa9e2f07cf03a990ffa5b59c58f07ba86f8eec9d71b5ae\"},\n+    {file = \"av-14.0.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:ab8510d0bd715b5cbb910d2eaf4be89bac6bce1f3b6408dc6fa2e82e5e9487fd\"},\n+    {file = \"av-14.0.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:dca274d365e9edc812dba6f9f4163383ca3a303e9b587d7f920483f44ef645ca\"},\n+    {file = \"av-14.0.0-pp310-pypy310_pp73-macosx_11_0_x86_64.whl\", hash = \"sha256:18ac3d008e9747ee21475ee48e96e585346b9a9727a09f08e3dad3d3d8958b9f\"},\n+    {file = \"av-14.0.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:02bb104004a92a8c37491f2d7b9abdaaeecc744869121321f9c5595a1904c59d\"},\n+    {file = \"av-14.0.0-pp310-pypy310_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:87401f99310e6d4a19f10d980b9f575f7bed416b721c848f8ac77e58256877b8\"},\n+    {file = \"av-14.0.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0015b3308034abe23af1a39a33300d09c9f8c7c092074c7f7ced31c0df2107ef\"},\n+    {file = \"av-14.0.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:8d83bdd6187715b2d6a030e28d5546ce55bb63dbfba70f557d8e23c1c526bba5\"},\n+    {file = \"av-14.0.0-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:fc7ef55dcc0ea537738f049ca48c432e37ab81dfe26541e871bc425584f4d810\"},\n+    {file = \"av-14.0.0-pp39-pypy39_pp73-macosx_11_0_x86_64.whl\", hash = \"sha256:e0503559ead5fe3bcb2640aeb720ba82745d1360fdab5bb00dd5f3ea8322b050\"},\n+    {file = \"av-14.0.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f677e0c55e885d67ceac5b3e89590c10f9341dd1f1ab0439a6c38e8647df9e70\"},\n+    {file = \"av-14.0.0-pp39-pypy39_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:43cf3a7fcc85d1e555261b6f1485130cbdaef72e01daad9e44a77285e3a07291\"},\n+    {file = \"av-14.0.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b2c57846d1694faf80668debcaf395667eef09e18e7eab1eb891cbba9b147bda\"},\n+    {file = \"av-14.0.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:50e3055e11f3553280ee69f90454c498c3caff1da7fb1e6a2ead40800bab5f86\"},\n+    {file = \"av-14.0.0.tar.gz\", hash = \"sha256:9dc5f2deca3f2dffdc08d3258855ce85e80335450e93e58cec0fff364fcbd69d\"},\n ]\n \n [[package]]\n@@ -666,13 +663,13 @@ css = [\"tinycss2 (>=1.1.0,<1.5)\"]\n \n [[package]]\n name = \"botocore\"\n-version = \"1.35.71\"\n+version = \"1.35.74\"\n description = \"Low-level, data-driven core of boto 3.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"botocore-1.35.71-py3-none-any.whl\", hash = \"sha256:fc46e7ab1df3cef66dfba1633f4da77c75e07365b36f03bd64a3793634be8fc1\"},\n-    {file = \"botocore-1.35.71.tar.gz\", hash = \"sha256:f9fa058e0393660c3fe53c1e044751beb64b586def0bd2212448a7c328b0cbba\"},\n+    {file = \"botocore-1.35.74-py3-none-any.whl\", hash = \"sha256:9ac9d33d84dd9f05b35085de081552342a2c9ae22e3c4ee105723c9e92c07bd9\"},\n+    {file = \"botocore-1.35.74.tar.gz\", hash = \"sha256:de5c4fa9a24cef3a758974857b5c5820a12fad345ebf33c052a5988e88f33634\"},\n ]\n \n [package.dependencies]\n@@ -936,13 +933,13 @@ colorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n \n [[package]]\n name = \"cohere\"\n-version = \"5.12.0\"\n+version = \"5.13.1\"\n description = \"\"\n optional = true\n python-versions = \"<4.0,>=3.8\"\n files = [\n-    {file = \"cohere-5.12.0-py3-none-any.whl\", hash = \"sha256:47f61c6db274f61fb06781da3808d717b4ac4d46b1ee487c2f727450038c14cb\"},\n-    {file = \"cohere-5.12.0.tar.gz\", hash = \"sha256:52a30edd4f7253b551045eb624df6c14e840c350306c8a69ae322e1f59743969\"},\n+    {file = \"cohere-5.13.1-py3-none-any.whl\", hash = \"sha256:fbc2499810f0c2b55d926549c19c1f6efff5be27e128186a7dc185047ba30659\"},\n+    {file = \"cohere-5.13.1.tar.gz\", hash = \"sha256:a47dffeb201f0c22f3c2cc76efed8eaa163711c3735224089aa0179513e5f268\"},\n ]\n \n [package.dependencies]\n@@ -1677,13 +1674,13 @@ files = [\n \n [[package]]\n name = \"fastapi\"\n-version = \"0.115.5\"\n+version = \"0.115.6\"\n description = \"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"fastapi-0.115.5-py3-none-any.whl\", hash = \"sha256:596b95adbe1474da47049e802f9a65ab2ffa9c2b07e7efee70eb8a66c9f2f796\"},\n-    {file = \"fastapi-0.115.5.tar.gz\", hash = \"sha256:0e7a4d0dc0d01c68df21887cce0945e72d3c48b9f4f79dfe7a7d53aa08fbb289\"},\n+    {file = \"fastapi-0.115.6-py3-none-any.whl\", hash = \"sha256:e9240b29e36fa8f4bb7290316988e90c381e5092e0cbe84e7818cc3713bcf305\"},\n+    {file = \"fastapi-0.115.6.tar.gz\", hash = \"sha256:9ec46f7addc14ea472958a96aae5b5de65f39721a46aaf5705c480d9a8b76654\"},\n ]\n \n [package.dependencies]\n@@ -1743,13 +1740,13 @@ zstandard = [\"zstandard\"]\n \n [[package]]\n name = \"fastjsonschema\"\n-version = \"2.21.0\"\n+version = \"2.21.1\"\n description = \"Fastest Python implementation of JSON schema\"\n optional = false\n python-versions = \"*\"\n files = [\n-    {file = \"fastjsonschema-2.21.0-py3-none-any.whl\", hash = \"sha256:5b23b8e7c9c6adc0ecb91c03a0768cb48cd154d9159378a69c8318532e0b5cbf\"},\n-    {file = \"fastjsonschema-2.21.0.tar.gz\", hash = \"sha256:a02026bbbedc83729da3bfff215564b71902757f33f60089f1abae193daa4771\"},\n+    {file = \"fastjsonschema-2.21.1-py3-none-any.whl\", hash = \"sha256:c9e5b7e908310918cf494a434eeb31384dd84a98b57a30bcb1f535015b554667\"},\n+    {file = \"fastjsonschema-2.21.1.tar.gz\", hash = \"sha256:794d4f0a58f848961ba16af7b9c85a3e88cd360df008c59aac6fc5ae9323b5d4\"},\n ]\n \n [package.extras]\n@@ -1841,13 +1838,13 @@ files = [\n \n [[package]]\n name = \"firecrawl-py\"\n-version = \"1.6.1\"\n+version = \"1.6.2\"\n description = \"Python SDK for Firecrawl API\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"firecrawl_py-1.6.1-py3-none-any.whl\", hash = \"sha256:910e357e3a9b2ebbada28f7c5b52aaa05281441fb1466c7354a99a7a584bb5cb\"},\n-    {file = \"firecrawl_py-1.6.1.tar.gz\", hash = \"sha256:53b093516e3e447ab6102cac22df91e019302fdd20fa73bdc32627a2fb6a03ce\"},\n+    {file = \"firecrawl_py-1.6.2-py3-none-any.whl\", hash = \"sha256:80a38af12f921ed1d596334ea3d9961dd835504bf4e35b8968646cc04c6095c5\"},\n+    {file = \"firecrawl_py-1.6.2.tar.gz\", hash = \"sha256:5c743ed6dab2be61f13ced8891dc55c947045b6bc1f2750c370616b15278a51e\"},\n ]\n \n [package.dependencies]\n@@ -1869,61 +1866,61 @@ files = [\n \n [[package]]\n name = \"fonttools\"\n-version = \"4.55.0\"\n+version = \"4.55.1\"\n description = \"Tools to manipulate font files\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"fonttools-4.55.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:51c029d4c0608a21a3d3d169dfc3fb776fde38f00b35ca11fdab63ba10a16f61\"},\n-    {file = \"fonttools-4.55.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:bca35b4e411362feab28e576ea10f11268b1aeed883b9f22ed05675b1e06ac69\"},\n-    {file = \"fonttools-4.55.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9ce4ba6981e10f7e0ccff6348e9775ce25ffadbee70c9fd1a3737e3e9f5fa74f\"},\n-    {file = \"fonttools-4.55.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:31d00f9852a6051dac23294a4cf2df80ced85d1d173a61ba90a3d8f5abc63c60\"},\n-    {file = \"fonttools-4.55.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:e198e494ca6e11f254bac37a680473a311a88cd40e58f9cc4dc4911dfb686ec6\"},\n-    {file = \"fonttools-4.55.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:7208856f61770895e79732e1dcbe49d77bd5783adf73ae35f87fcc267df9db81\"},\n-    {file = \"fonttools-4.55.0-cp310-cp310-win32.whl\", hash = \"sha256:e7e6a352ff9e46e8ef8a3b1fe2c4478f8a553e1b5a479f2e899f9dc5f2055880\"},\n-    {file = \"fonttools-4.55.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:636caaeefe586d7c84b5ee0734c1a5ab2dae619dc21c5cf336f304ddb8f6001b\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:fa34aa175c91477485c44ddfbb51827d470011e558dfd5c7309eb31bef19ec51\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:37dbb3fdc2ef7302d3199fb12468481cbebaee849e4b04bc55b77c24e3c49189\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b5263d8e7ef3c0ae87fbce7f3ec2f546dc898d44a337e95695af2cd5ea21a967\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f307f6b5bf9e86891213b293e538d292cd1677e06d9faaa4bf9c086ad5f132f6\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:f0a4b52238e7b54f998d6a56b46a2c56b59c74d4f8a6747fb9d4042190f37cd3\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:3e569711464f777a5d4ef522e781dc33f8095ab5efd7548958b36079a9f2f88c\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-win32.whl\", hash = \"sha256:2b3ab90ec0f7b76c983950ac601b58949f47aca14c3f21eed858b38d7ec42b05\"},\n-    {file = \"fonttools-4.55.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:aa046f6a63bb2ad521004b2769095d4c9480c02c1efa7d7796b37826508980b6\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:838d2d8870f84fc785528a692e724f2379d5abd3fc9dad4d32f91cf99b41e4a7\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:f46b863d74bab7bb0d395f3b68d3f52a03444964e67ce5c43ce43a75efce9246\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:33b52a9cfe4e658e21b1f669f7309b4067910321757fec53802ca8f6eae96a5a\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:732a9a63d6ea4a81b1b25a1f2e5e143761b40c2e1b79bb2b68e4893f45139a40\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:7dd91ac3fcb4c491bb4763b820bcab6c41c784111c24172616f02f4bc227c17d\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:1f0e115281a32ff532118aa851ef497a1b7cda617f4621c1cdf81ace3e36fb0c\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-win32.whl\", hash = \"sha256:6c99b5205844f48a05cb58d4a8110a44d3038c67ed1d79eb733c4953c628b0f6\"},\n-    {file = \"fonttools-4.55.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:f8c8c76037d05652510ae45be1cd8fb5dd2fd9afec92a25374ac82255993d57c\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:8118dc571921dc9e4b288d9cb423ceaf886d195a2e5329cc427df82bba872cd9\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:01124f2ca6c29fad4132d930da69158d3f49b2350e4a779e1efbe0e82bd63f6c\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:81ffd58d2691f11f7c8438796e9f21c374828805d33e83ff4b76e4635633674c\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5435e5f1eb893c35c2bc2b9cd3c9596b0fcb0a59e7a14121562986dd4c47b8dd\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:d12081729280c39d001edd0f4f06d696014c26e6e9a0a55488fabc37c28945e4\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a7ad1f1b98ab6cb927ab924a38a8649f1ffd7525c75fe5b594f5dab17af70e18\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-win32.whl\", hash = \"sha256:abe62987c37630dca69a104266277216de1023cf570c1643bb3a19a9509e7a1b\"},\n-    {file = \"fonttools-4.55.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:2863555ba90b573e4201feaf87a7e71ca3b97c05aa4d63548a4b69ea16c9e998\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:00f7cf55ad58a57ba421b6a40945b85ac7cc73094fb4949c41171d3619a3a47e\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:f27526042efd6f67bfb0cc2f1610fa20364396f8b1fc5edb9f45bb815fb090b2\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e8e67974326af6a8879dc2a4ec63ab2910a1c1a9680ccd63e4a690950fceddbe\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:61dc0a13451143c5e987dec5254d9d428f3c2789a549a7cf4f815b63b310c1cc\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:b2e526b325a903868c62155a6a7e24df53f6ce4c5c3160214d8fe1be2c41b478\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:b7ef9068a1297714e6fefe5932c33b058aa1d45a2b8be32a4c6dee602ae22b5c\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-win32.whl\", hash = \"sha256:55718e8071be35dff098976bc249fc243b58efa263768c611be17fe55975d40a\"},\n-    {file = \"fonttools-4.55.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:553bd4f8cc327f310c20158e345e8174c8eed49937fb047a8bda51daf2c353c8\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:3f901cef813f7c318b77d1c5c14cf7403bae5cb977cede023e22ba4316f0a8f6\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:8c9679fc0dd7e8a5351d321d8d29a498255e69387590a86b596a45659a39eb0d\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dd2820a8b632f3307ebb0bf57948511c2208e34a4939cf978333bc0a3f11f838\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:23bbbb49bec613a32ed1b43df0f2b172313cee690c2509f1af8fdedcf0a17438\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:a656652e1f5d55b9728937a7e7d509b73d23109cddd4e89ee4f49bde03b736c6\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:f50a1f455902208486fbca47ce33054208a4e437b38da49d6721ce2fef732fcf\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-win32.whl\", hash = \"sha256:161d1ac54c73d82a3cded44202d0218ab007fde8cf194a23d3dd83f7177a2f03\"},\n-    {file = \"fonttools-4.55.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:ca7fd6987c68414fece41c96836e945e1f320cda56fc96ffdc16e54a44ec57a2\"},\n-    {file = \"fonttools-4.55.0-py3-none-any.whl\", hash = \"sha256:12db5888cd4dd3fcc9f0ee60c6edd3c7e1fd44b7dd0f31381ea03df68f8a153f\"},\n-    {file = \"fonttools-4.55.0.tar.gz\", hash = \"sha256:7636acc6ab733572d5e7eec922b254ead611f1cdad17be3f0be7418e8bfaca71\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:c17a6f9814f83772cd6d9c9009928e1afa4ab66210a31ced721556651075a9a0\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:c4d14eecc814826a01db87a40af3407c892ba49996bc6e49961e386cd78b537c\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8589f9a15dc005592b94ecdc45b4dfae9bbe9e73542e89af5a5e776e745db83b\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bfee95bd9395bcd9e6c78955387554335109b6a613db71ef006020b42f761c58\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:34fa2ecc0bf1923d1a51bf2216a006de2c3c0db02c6aa1470ea50b62b8619bd5\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:9c1c48483148bfb1b9ad951133ceea957faa004f6cb475b67e7bc75d482b48f8\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-win32.whl\", hash = \"sha256:3e2fc388ca7d023b3c45badd71016fd4185f93e51a22cfe4bd65378af7fba759\"},\n+    {file = \"fonttools-4.55.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:c4c36c71f69d2b3ee30394b0986e5f8b2c461e7eff48dde49b08a90ded9fcdbd\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:5daab3a55d460577f45bb8f5a8eca01fa6cde43ef2ab943b527991f54b735c41\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:acf1e80cf96c2fbc79e46f669d8713a9a79faaebcc68e31a9fbe600cf8027992\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e88a0329f7f88a210f09f79c088fb64f8032fc3ab65e2390a40b7d3a11773026\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:03105b42259a8a94b2f0cbf1bee45f7a8a34e7b26c946a8fb89b4967e44091a8\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:9af3577e821649879ab5774ad0e060af34816af556c77c6d3820345d12bf415e\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:34bd5de3d0ad085359b79a96575cd6bd1bc2976320ef24a2aa152ead36dbf656\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-win32.whl\", hash = \"sha256:5da92c4b637f0155a41f345fa81143c8e17425260fcb21521cb2ad4d2cea2a95\"},\n+    {file = \"fonttools-4.55.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:f70234253d15f844e6da1178f019a931f03181463ce0c7b19648b8c370527b07\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:9c372e527d58ba64b695f15f8014e97bc8826cf64d3380fc89b4196edd3c0fa8\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:845a967d3bef3245ba81fb5582dc731f6c2c8417fa211f1068c56893504bc000\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f03be82bcd4ba4418adf10e6165743f824bb09d6594c2743d7f93ea50968805b\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c42e935cf146f826f556d977660dac88f2fa3fb2efa27d5636c0b89a60c16edf\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:96328bf91e05621d8e40d9f854af7a262cb0e8313e9b38e7f3a7f3c4c0caaa8b\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:291acec4d774e8cd2d8472d88c04643a77a3324a15247951bd6cfc969799b69e\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-win32.whl\", hash = \"sha256:6d768d6632809aec1c3fa8f195b173386d85602334701a6894a601a4d3c80368\"},\n+    {file = \"fonttools-4.55.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:2a3850afdb0be1f79a1e95340a2059226511675c5b68098d4e49bfbeb48a8aab\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:0c88d427eaf8bd8497b9051f56e0f5f9fb96a311aa7c72cda35e03e18d59cd16\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f062c95a725a79fd908fe8407b6ad63e230e1c7d6dece2d5d6ecaf843d6927f6\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f298c5324c45cad073475146bf560f4110ce2dc2488ff12231a343ec489f77bc\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7f06dbb71344ffd85a6cb7e27970a178952f0bdd8d319ed938e64ba4bcc41700\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4c46b3525166976f5855b1f039b02433dc51eb635fb54d6a111e0c5d6e6cdc4c\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:af46f52a21e086a2f89b87bd941c9f0f91e5f769e1a5eb3b37c912228814d3e5\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-win32.whl\", hash = \"sha256:cd7f36335c5725a3fd724cc667c10c3f5254e779bdc5bffefebb33cf5a75ecb1\"},\n+    {file = \"fonttools-4.55.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:5d6394897710ccac7f74df48492d7f02b9586ff0588c66a2c218844e90534b22\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:52c4f4b383c56e1a4fe8dab1b63c2269ba9eab0695d2d8e033fa037e61e6f1ef\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:d83892dafdbd62b56545c77b6bd4fa49eef6ec1d6b95e042ee2c930503d1831e\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:604d5bf16f811fcaaaec2dde139f7ce958462487565edcd54b6fadacb2942083\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a3324b92feb5fd084923a8e89a8248afd5b9f9d81ab9517d7b07cc84403bd448\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:30f8b1ca9b919c04850678d026fc330c19acaa9e3b282fcacc09a5eb3c8d20c3\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:1835c98df2cf28c86a66d234895c87df7b9325fd079a8019c5053a389ff55d23\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-win32.whl\", hash = \"sha256:9f202703720a7cc0049f2ed1a2047925e264384eb5cc4d34f80200d7b17f1b6a\"},\n+    {file = \"fonttools-4.55.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:2efff20aed0338d37c2ff58766bd67f4b9607ded61cf3d6baf1b3e25ea74e119\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:3032d9bf010c395e6eca2851666cafb1f4ecde85d420188555e928ad0144326e\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:0794055588c30ffe25426048e8a7c0a5271942727cd61fc939391e37f4d580d5\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:13ba980e3ffd3206b8c63a365f90dc10eeec27da946d5ee5373c3a325a46d77c\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5d7063babd7434a17a5e355e87de9b2306c85a5c19c7da0794be15c58aab0c39\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:ed84c15144015a58ef550dd6312884c9fb31a2dbc31a6467bcdafd63be7db476\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:e89419d88b0bbfdb55209e03a17afa2d20db3c2fa0d785543c9d0875668195d5\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-win32.whl\", hash = \"sha256:6eb781e401b93cda99356bc043ababead2a5096550984d8a4ecf3d5c9f859dc2\"},\n+    {file = \"fonttools-4.55.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:db1031acf04523c5a51c3e1ae19c21a1c32bc5f820a477dd4659a02f9cb82002\"},\n+    {file = \"fonttools-4.55.1-py3-none-any.whl\", hash = \"sha256:4bcfb11f90f48b48c366dd638d773a52fca0d1b9e056dc01df766bf5835baa08\"},\n+    {file = \"fonttools-4.55.1.tar.gz\", hash = \"sha256:85bb2e985718b0df96afc659abfe194c171726054314b019dbbfed31581673c7\"},\n ]\n \n [package.extras]\n@@ -2945,13 +2942,13 @@ test = [\"flaky\", \"ipyparallel\", \"pre-commit\", \"pytest (>=7.0)\", \"pytest-asyncio\n \n [[package]]\n name = \"ipython\"\n-version = \"8.29.0\"\n+version = \"8.30.0\"\n description = \"IPython: Productive Interactive Computing\"\n optional = true\n python-versions = \">=3.10\"\n files = [\n-    {file = \"ipython-8.29.0-py3-none-any.whl\", hash = \"sha256:0188a1bd83267192123ccea7f4a8ed0a78910535dbaa3f37671dca76ebd429c8\"},\n-    {file = \"ipython-8.29.0.tar.gz\", hash = \"sha256:40b60e15b22591450eef73e40a027cf77bd652e757523eebc5bd7c7c498290eb\"},\n+    {file = \"ipython-8.30.0-py3-none-any.whl\", hash = \"sha256:85ec56a7e20f6c38fce7727dcca699ae4ffc85985aa7b23635a8008f918ae321\"},\n+    {file = \"ipython-8.30.0.tar.gz\", hash = \"sha256:cb0a405a306d2995a5cbb9901894d240784a9f341394c6ba3f4fe8c6eb89ff6e\"},\n ]\n \n [package.dependencies]\n@@ -2961,16 +2958,16 @@ exceptiongroup = {version = \"*\", markers = \"python_version < \\\"3.11\\\"\"}\n jedi = \">=0.16\"\n matplotlib-inline = \"*\"\n pexpect = {version = \">4.3\", markers = \"sys_platform != \\\"win32\\\" and sys_platform != \\\"emscripten\\\"\"}\n-prompt-toolkit = \">=3.0.41,<3.1.0\"\n+prompt_toolkit = \">=3.0.41,<3.1.0\"\n pygments = \">=2.4.0\"\n-stack-data = \"*\"\n+stack_data = \"*\"\n traitlets = \">=5.13.0\"\n-typing-extensions = {version = \">=4.6\", markers = \"python_version < \\\"3.12\\\"\"}\n+typing_extensions = {version = \">=4.6\", markers = \"python_version < \\\"3.12\\\"\"}\n \n [package.extras]\n all = [\"ipython[black,doc,kernel,matplotlib,nbconvert,nbformat,notebook,parallel,qtconsole]\", \"ipython[test,test-extra]\"]\n black = [\"black\"]\n-doc = [\"docrepr\", \"exceptiongroup\", \"intersphinx-registry\", \"ipykernel\", \"ipython[test]\", \"matplotlib\", \"setuptools (>=18.5)\", \"sphinx (>=1.3)\", \"sphinx-rtd-theme\", \"sphinxcontrib-jquery\", \"tomli\", \"typing-extensions\"]\n+doc = [\"docrepr\", \"exceptiongroup\", \"intersphinx_registry\", \"ipykernel\", \"ipython[test]\", \"matplotlib\", \"setuptools (>=18.5)\", \"sphinx (>=1.3)\", \"sphinx-rtd-theme\", \"sphinxcontrib-jquery\", \"tomli\", \"typing_extensions\"]\n kernel = [\"ipykernel\"]\n matplotlib = [\"matplotlib\"]\n nbconvert = [\"nbconvert\"]\n@@ -3493,22 +3490,23 @@ files = [\n \n [[package]]\n name = \"litellm\"\n-version = \"1.53.1\"\n+version = \"1.53.4\"\n description = \"Library to easily interface with LLM API providers\"\n optional = true\n python-versions = \"!=2.7.*,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,!=3.7.*,>=3.8\"\n files = [\n-    {file = \"litellm-1.53.1-py3-none-any.whl\", hash = \"sha256:7a0b480c0bd4f9236910a426d8d8f46a517af4daae2a61d57e42bff4b4daf9b0\"},\n-    {file = \"litellm-1.53.1.tar.gz\", hash = \"sha256:20bb2f98a4613c4c7b86e9186df84c27d7166eca65a7b58584c1e061a29f7519\"},\n+    {file = \"litellm-1.53.4-py3-none-any.whl\", hash = \"sha256:7379b036ace79948d9a9e3302de1ca3cd60b72a35dfcea816d230f2b49251c47\"},\n+    {file = \"litellm-1.53.4.tar.gz\", hash = \"sha256:cb131b5036b5a9f7a1df5b6d2c09b7381dc0daa06d6d086da21f45e356485ce3\"},\n ]\n \n [package.dependencies]\n aiohttp = \"*\"\n click = \"*\"\n+httpx = \">=0.23.0,<0.28.0\"\n importlib-metadata = \">=6.8.0\"\n jinja2 = \">=3.1.2,<4.0.0\"\n jsonschema = \">=4.22.0,<5.0.0\"\n-openai = \">=1.54.0\"\n+openai = \">=1.55.3\"\n pydantic = \">=2.0.0,<3.0.0\"\n python-dotenv = \">=0.2.0\"\n requests = \">=2.31.0,<3.0.0\"\n@@ -3802,51 +3800,52 @@ tests = [\"pytest\", \"simplejson\"]\n \n [[package]]\n name = \"matplotlib\"\n-version = \"3.9.2\"\n+version = \"3.9.3\"\n description = \"Python plotting package\"\n optional = false\n python-versions = \">=3.9\"\n files = [\n-    {file = \"matplotlib-3.9.2-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:9d78bbc0cbc891ad55b4f39a48c22182e9bdaea7fc0e5dbd364f49f729ca1bbb\"},\n-    {file = \"matplotlib-3.9.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:c375cc72229614632c87355366bdf2570c2dac01ac66b8ad048d2dabadf2d0d4\"},\n-    {file = \"matplotlib-3.9.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1d94ff717eb2bd0b58fe66380bd8b14ac35f48a98e7c6765117fe67fb7684e64\"},\n-    {file = \"matplotlib-3.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ab68d50c06938ef28681073327795c5db99bb4666214d2d5f880ed11aeaded66\"},\n-    {file = \"matplotlib-3.9.2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:65aacf95b62272d568044531e41de26285d54aec8cb859031f511f84bd8b495a\"},\n-    {file = \"matplotlib-3.9.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:3fd595f34aa8a55b7fc8bf9ebea8aa665a84c82d275190a61118d33fbc82ccae\"},\n-    {file = \"matplotlib-3.9.2-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:d8dd059447824eec055e829258ab092b56bb0579fc3164fa09c64f3acd478772\"},\n-    {file = \"matplotlib-3.9.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c797dac8bb9c7a3fd3382b16fe8f215b4cf0f22adccea36f1545a6d7be310b41\"},\n-    {file = \"matplotlib-3.9.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d719465db13267bcef19ea8954a971db03b9f48b4647e3860e4bc8e6ed86610f\"},\n-    {file = \"matplotlib-3.9.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8912ef7c2362f7193b5819d17dae8629b34a95c58603d781329712ada83f9447\"},\n-    {file = \"matplotlib-3.9.2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:7741f26a58a240f43bee74965c4882b6c93df3e7eb3de160126d8c8f53a6ae6e\"},\n-    {file = \"matplotlib-3.9.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:ae82a14dab96fbfad7965403c643cafe6515e386de723e498cf3eeb1e0b70cc7\"},\n-    {file = \"matplotlib-3.9.2-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:ac43031375a65c3196bee99f6001e7fa5bdfb00ddf43379d3c0609bdca042df9\"},\n-    {file = \"matplotlib-3.9.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:be0fc24a5e4531ae4d8e858a1a548c1fe33b176bb13eff7f9d0d38ce5112a27d\"},\n-    {file = \"matplotlib-3.9.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf81de2926c2db243c9b2cbc3917619a0fc85796c6ba4e58f541df814bbf83c7\"},\n-    {file = \"matplotlib-3.9.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f6ee45bc4245533111ced13f1f2cace1e7f89d1c793390392a80c139d6cf0e6c\"},\n-    {file = \"matplotlib-3.9.2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:306c8dfc73239f0e72ac50e5a9cf19cc4e8e331dd0c54f5e69ca8758550f1e1e\"},\n-    {file = \"matplotlib-3.9.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:5413401594cfaff0052f9d8b1aafc6d305b4bd7c4331dccd18f561ff7e1d3bd3\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:18128cc08f0d3cfff10b76baa2f296fc28c4607368a8402de61bb3f2eb33c7d9\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:4876d7d40219e8ae8bb70f9263bcbe5714415acfdf781086601211335e24f8aa\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6d9f07a80deab4bb0b82858a9e9ad53d1382fd122be8cde11080f4e7dfedb38b\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f7c0410f181a531ec4e93bbc27692f2c71a15c2da16766f5ba9761e7ae518413\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:909645cce2dc28b735674ce0931a4ac94e12f5b13f6bb0b5a5e65e7cea2c192b\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:f32c7410c7f246838a77d6d1eff0c0f87f3cb0e7c4247aebea71a6d5a68cab49\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:37e51dd1c2db16ede9cfd7b5cabdfc818b2c6397c83f8b10e0e797501c963a03\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:b82c5045cebcecd8496a4d694d43f9cc84aeeb49fe2133e036b207abe73f4d30\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f053c40f94bc51bc03832a41b4f153d83f2062d88c72b5e79997072594e97e51\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dbe196377a8248972f5cede786d4c5508ed5f5ca4a1e09b44bda889958b33f8c\"},\n-    {file = \"matplotlib-3.9.2-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:5816b1e1fe8c192cbc013f8f3e3368ac56fbecf02fb41b8f8559303f24c5015e\"},\n-    {file = \"matplotlib-3.9.2-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:cef2a73d06601437be399908cf13aee74e86932a5ccc6ccdf173408ebc5f6bb2\"},\n-    {file = \"matplotlib-3.9.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:e0830e188029c14e891fadd99702fd90d317df294c3298aad682739c5533721a\"},\n-    {file = \"matplotlib-3.9.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:03ba9c1299c920964e8d3857ba27173b4dbb51ca4bab47ffc2c2ba0eb5e2cbc5\"},\n-    {file = \"matplotlib-3.9.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1cd93b91ab47a3616b4d3c42b52f8363b88ca021e340804c6ab2536344fad9ca\"},\n-    {file = \"matplotlib-3.9.2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:6d1ce5ed2aefcdce11904fc5bbea7d9c21fff3d5f543841edf3dea84451a09ea\"},\n-    {file = \"matplotlib-3.9.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:b2696efdc08648536efd4e1601b5fd491fd47f4db97a5fbfd175549a7365c1b2\"},\n-    {file = \"matplotlib-3.9.2-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:d52a3b618cb1cbb769ce2ee1dcdb333c3ab6e823944e9a2d36e37253815f9556\"},\n-    {file = \"matplotlib-3.9.2-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:039082812cacd6c6bec8e17a9c1e6baca230d4116d522e81e1f63a74d01d2e21\"},\n-    {file = \"matplotlib-3.9.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6758baae2ed64f2331d4fd19be38b7b4eae3ecec210049a26b6a4f3ae1c85dcc\"},\n-    {file = \"matplotlib-3.9.2-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:050598c2b29e0b9832cde72bcf97627bf00262adbc4a54e2b856426bb2ef0697\"},\n-    {file = \"matplotlib-3.9.2.tar.gz\", hash = \"sha256:96ab43906269ca64a6366934106fa01534454a69e471b7bf3d79083981aaab92\"},\n+    {file = \"matplotlib-3.9.3-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:41b016e3be4e740b66c79a031a0a6e145728dbc248142e751e8dab4f3188ca1d\"},\n+    {file = \"matplotlib-3.9.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8e0143975fc2a6d7136c97e19c637321288371e8f09cff2564ecd73e865ea0b9\"},\n+    {file = \"matplotlib-3.9.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9f459c8ee2c086455744723628264e43c884be0c7d7b45d84b8cd981310b4815\"},\n+    {file = \"matplotlib-3.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:687df7ceff57b8f070d02b4db66f75566370e7ae182a0782b6d3d21b0d6917dc\"},\n+    {file = \"matplotlib-3.9.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:edd14cf733fdc4f6e6fe3f705af97676a7e52859bf0044aa2c84e55be739241c\"},\n+    {file = \"matplotlib-3.9.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:1c40c244221a1adbb1256692b1133c6fb89418df27bf759a31a333e7912a4010\"},\n+    {file = \"matplotlib-3.9.3-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:cf2a60daf6cecff6828bc608df00dbc794380e7234d2411c0ec612811f01969d\"},\n+    {file = \"matplotlib-3.9.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:213d6dc25ce686516208d8a3e91120c6a4fdae4a3e06b8505ced5b716b50cc04\"},\n+    {file = \"matplotlib-3.9.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c52f48eb75fcc119a4fdb68ba83eb5f71656999420375df7c94cc68e0e14686e\"},\n+    {file = \"matplotlib-3.9.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d3c93796b44fa111049b88a24105e947f03c01966b5c0cc782e2ee3887b790a3\"},\n+    {file = \"matplotlib-3.9.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:cd1077b9a09b16d8c3c7075a8add5ffbfe6a69156a57e290c800ed4d435bef1d\"},\n+    {file = \"matplotlib-3.9.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:c96eeeb8c68b662c7747f91a385688d4b449687d29b691eff7068a4602fe6dc4\"},\n+    {file = \"matplotlib-3.9.3-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:0a361bd5583bf0bcc08841df3c10269617ee2a36b99ac39d455a767da908bbbc\"},\n+    {file = \"matplotlib-3.9.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:e14485bb1b83eeb3d55b6878f9560240981e7bbc7a8d4e1e8c38b9bd6ec8d2de\"},\n+    {file = \"matplotlib-3.9.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4a8d279f78844aad213c4935c18f8292a9432d51af2d88bca99072c903948045\"},\n+    {file = \"matplotlib-3.9.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b6c12514329ac0d03128cf1dcceb335f4fbf7c11da98bca68dca8dcb983153a9\"},\n+    {file = \"matplotlib-3.9.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:6e9de2b390d253a508dd497e9b5579f3a851f208763ed67fdca5dc0c3ea6849c\"},\n+    {file = \"matplotlib-3.9.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:d796272408f8567ff7eaa00eb2856b3a00524490e47ad505b0b4ca6bb8a7411f\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:203d18df84f5288973b2d56de63d4678cc748250026ca9e1ad8f8a0fd8a75d83\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:b651b0d3642991259109dc0351fc33ad44c624801367bb8307be9bfc35e427ad\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:66d7b171fecf96940ce069923a08ba3df33ef542de82c2ff4fe8caa8346fa95a\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6be0ba61f6ff2e6b68e4270fb63b6813c9e7dec3d15fc3a93f47480444fd72f0\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:9d6b2e8856dec3a6db1ae51aec85c82223e834b228c1d3228aede87eee2b34f9\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:90a85a004fefed9e583597478420bf904bb1a065b0b0ee5b9d8d31b04b0f3f70\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:3119b2f16de7f7b9212ba76d8fe6a0e9f90b27a1e04683cd89833a991682f639\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:87ad73763d93add1b6c1f9fcd33af662fd62ed70e620c52fcb79f3ac427cf3a6\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:026bdf3137ab6022c866efa4813b6bbeddc2ed4c9e7e02f0e323a7bca380dfa0\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:760a5e89ebbb172989e8273024a1024b0f084510b9105261b3b00c15e9c9f006\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:a42b9dc42de2cfe357efa27d9c50c7833fc5ab9b2eb7252ccd5d5f836a84e1e4\"},\n+    {file = \"matplotlib-3.9.3-cp313-cp313t-win_amd64.whl\", hash = \"sha256:e0fcb7da73fbf67b5f4bdaa57d85bb585a4e913d4a10f3e15b32baea56a67f0a\"},\n+    {file = \"matplotlib-3.9.3-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:031b7f5b8e595cc07def77ec5b58464e9bb67dc5760be5d6f26d9da24892481d\"},\n+    {file = \"matplotlib-3.9.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:9fa6e193c14d6944e0685cdb527cb6b38b0e4a518043e7212f214113af7391da\"},\n+    {file = \"matplotlib-3.9.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4e6eefae6effa0c35bbbc18c25ee6e0b1da44d2359c3cd526eb0c9e703cf055d\"},\n+    {file = \"matplotlib-3.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:10d3e5c7a99bd28afb957e1ae661323b0800d75b419f24d041ed1cc5d844a764\"},\n+    {file = \"matplotlib-3.9.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:816a966d5d376bf24c92af8f379e78e67278833e4c7cbc9fa41872eec629a060\"},\n+    {file = \"matplotlib-3.9.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:3fb0b37c896172899a4a93d9442ffdc6f870165f59e05ce2e07c6fded1c15749\"},\n+    {file = \"matplotlib-3.9.3-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:5f2a4ea08e6876206d511365b0bc234edc813d90b930be72c3011bbd7898796f\"},\n+    {file = \"matplotlib-3.9.3-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:9b081dac96ab19c54fd8558fac17c9d2c9cb5cc4656e7ed3261ddc927ba3e2c5\"},\n+    {file = \"matplotlib-3.9.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0a0a63cb8404d1d1f94968ef35738900038137dab8af836b6c21bb6f03d75465\"},\n+    {file = \"matplotlib-3.9.3-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:896774766fd6be4571a43bc2fcbcb1dcca0807e53cab4a5bf88c4aa861a08e12\"},\n+    {file = \"matplotlib-3.9.3.tar.gz\", hash = \"sha256:cd5dbbc8e25cad5f706845c4d100e2c8b34691b412b93717ce38d8ae803bcfa5\"},\n ]\n \n [package.dependencies]\n@@ -3861,7 +3860,7 @@ pyparsing = \">=2.3.1\"\n python-dateutil = \">=2.7\"\n \n [package.extras]\n-dev = [\"meson-python (>=0.13.1)\", \"numpy (>=1.25)\", \"pybind11 (>=2.6)\", \"setuptools (>=64)\", \"setuptools_scm (>=7)\"]\n+dev = [\"meson-python (>=0.13.1)\", \"numpy (>=1.25)\", \"pybind11 (>=2.6,!=2.13.3)\", \"setuptools (>=64)\", \"setuptools_scm (>=7)\"]\n \n [[package]]\n name = \"matplotlib-inline\"\n@@ -4223,13 +4222,13 @@ testing-docutils = [\"pygments\", \"pytest (>=8,<9)\", \"pytest-param-files (>=0.6.0,\n \n [[package]]\n name = \"narwhals\"\n-version = \"1.14.2\"\n+version = \"1.15.2\"\n description = \"Extremely lightweight compatibility layer between dataframe libraries\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"narwhals-1.14.2-py3-none-any.whl\", hash = \"sha256:2e784800b87c9e1ff47984da0046d957320f39b64c08f0e5b1b1a1208694935c\"},\n-    {file = \"narwhals-1.14.2.tar.gz\", hash = \"sha256:287406a3777d102f981d27c5827a6b5a9d8bd8c89c79cd9fbe46e2956425f078\"},\n+    {file = \"narwhals-1.15.2-py3-none-any.whl\", hash = \"sha256:00d16ed1c4466b43ba37ef6799142340981e4ac7dcd7686e461d4955abcd921d\"},\n+    {file = \"narwhals-1.15.2.tar.gz\", hash = \"sha256:bf32c4afc3b4e562be51d50a3ff4fcacd1e0c1d89dc4da1b818af81d7c28e0c7\"},\n ]\n \n [package.extras]\n@@ -4242,13 +4241,13 @@ pyarrow = [\"pyarrow (>=11.0.0)\"]\n \n [[package]]\n name = \"nbclient\"\n-version = \"0.10.0\"\n+version = \"0.10.1\"\n description = \"A client library for executing notebooks. Formerly nbconvert's ExecutePreprocessor.\"\n optional = false\n python-versions = \">=3.8.0\"\n files = [\n-    {file = \"nbclient-0.10.0-py3-none-any.whl\", hash = \"sha256:f13e3529332a1f1f81d82a53210322476a168bb7090a0289c795fe9cc11c9d3f\"},\n-    {file = \"nbclient-0.10.0.tar.gz\", hash = \"sha256:4b3f1b7dba531e498449c4db4f53da339c91d449dc11e9af3a43b4eb5c5abb09\"},\n+    {file = \"nbclient-0.10.1-py3-none-any.whl\", hash = \"sha256:949019b9240d66897e442888cfb618f69ef23dc71c01cb5fced8499c2cfc084d\"},\n+    {file = \"nbclient-0.10.1.tar.gz\", hash = \"sha256:3e93e348ab27e712acd46fccd809139e356eb9a31aab641d1a7991a6eb4e6f68\"},\n ]\n \n [package.dependencies]\n@@ -4259,7 +4258,7 @@ traitlets = \">=5.4\"\n \n [package.extras]\n dev = [\"pre-commit\"]\n-docs = [\"autodoc-traits\", \"mock\", \"moto\", \"myst-parser\", \"nbclient[test]\", \"sphinx (>=1.7)\", \"sphinx-book-theme\", \"sphinxcontrib-spelling\"]\n+docs = [\"autodoc-traits\", \"flaky\", \"ipykernel (>=6.19.3)\", \"ipython\", \"ipywidgets\", \"mock\", \"moto\", \"myst-parser\", \"nbconvert (>=7.0.0)\", \"pytest (>=7.0,<8)\", \"pytest-asyncio\", \"pytest-cov (>=4.0)\", \"sphinx (>=1.7)\", \"sphinx-book-theme\", \"sphinxcontrib-spelling\", \"testpath\", \"xmltodict\"]\n test = [\"flaky\", \"ipykernel (>=6.19.3)\", \"ipython\", \"ipywidgets\", \"nbconvert (>=7.0.0)\", \"pytest (>=7.0,<8)\", \"pytest-asyncio\", \"pytest-cov (>=4.0)\", \"testpath\", \"xmltodict\"]\n \n [[package]]\n@@ -4809,13 +4808,13 @@ sympy = \"*\"\n \n [[package]]\n name = \"openai\"\n-version = \"1.55.3\"\n+version = \"1.56.1\"\n description = \"The official Python library for the openai API\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"openai-1.55.3-py3-none-any.whl\", hash = \"sha256:2a235d0e1e312cd982f561b18c27692e253852f4e5fb6ccf08cb13540a9bdaa1\"},\n-    {file = \"openai-1.55.3.tar.gz\", hash = \"sha256:547e85b94535469f137a779d8770c8c5adebd507c2cc6340ca401a7c4d5d16f0\"},\n+    {file = \"openai-1.56.1-py3-none-any.whl\", hash = \"sha256:38e61183c2a98fedebbbb04a909a052d9f897358b070483fc0caff17300a227c\"},\n+    {file = \"openai-1.56.1.tar.gz\", hash = \"sha256:8b0449f22a0c318441eae8a8a789753c3b2cac86542be51ca45df788e26aa180\"},\n ]\n \n [package.dependencies]\n@@ -5401,57 +5400,57 @@ xmp = [\"defusedxml\"]\n \n [[package]]\n name = \"pillow-heif\"\n-version = \"0.20.0\"\n+version = \"0.21.0\"\n description = \"Python interface for libheif library\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"pillow_heif-0.20.0-cp310-cp310-macosx_12_0_x86_64.whl\", hash = \"sha256:ef2ad418f42adc9ef5d5e709547e799fb32141543856cb14f04fa4b22f83bfd7\"},\n-    {file = \"pillow_heif-0.20.0-cp310-cp310-macosx_14_0_arm64.whl\", hash = \"sha256:af229e214ec23053bea1f162972645495bfb12f2c3b5ece463bd8a01aefda17a\"},\n-    {file = \"pillow_heif-0.20.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f446a78a9d84ef75761638a7e72a477aadeffb282ac70ffe67360a98d54775b1\"},\n-    {file = \"pillow_heif-0.20.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a4a77c6e78756948a2a5fc8ec7341184fca1bc7316c11f6df0cf3fe9732e1688\"},\n-    {file = \"pillow_heif-0.20.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:d30d19b8ba9c384a06523c3d419c46d62c823abdb6d75581ffd5328503f6d3aa\"},\n-    {file = \"pillow_heif-0.20.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:0ec02ebbe88e2af0f093e80c95b716f54479a32b037da6b1c12b9f4024eab359\"},\n-    {file = \"pillow_heif-0.20.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:86a8920ea3a3b3923c827629afc850c1ee9f753b71346180c226882545028e06\"},\n-    {file = \"pillow_heif-0.20.0-cp311-cp311-macosx_12_0_x86_64.whl\", hash = \"sha256:8e3bc0bda64cce72e41f6c20a5cf3e24af308a09e146df78d31acb337a8ff58b\"},\n-    {file = \"pillow_heif-0.20.0-cp311-cp311-macosx_14_0_arm64.whl\", hash = \"sha256:a35e9e17d112573e9568d07c0e2c5cb81218a8f4c0da84a428618c7a746c4d98\"},\n-    {file = \"pillow_heif-0.20.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:618d63338afb9f49f1fb7b9a421aff6ad71ceb8092855e5988c05ab10dc21152\"},\n-    {file = \"pillow_heif-0.20.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6174d31580081d53f4eadc2428c699a5e47d111e64f136945951d12a9a277936\"},\n-    {file = \"pillow_heif-0.20.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:7d106a1c87587838e9099bbfef9ddc7eef0dd3e77e9b1b8a1292a5f9dc4ad5a2\"},\n-    {file = \"pillow_heif-0.20.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:ba9e11f56a5e1fd1d559a1fd60d498f343922affc0e118fb3d4e808902fee1a9\"},\n-    {file = \"pillow_heif-0.20.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:daf209dd79ad21b21f7b2bbd575f331702d2f1dd0b529c12cdbee00d62c24254\"},\n-    {file = \"pillow_heif-0.20.0-cp312-cp312-macosx_12_0_x86_64.whl\", hash = \"sha256:0919f7738b886ed88367b9d0247132b1cbe5d40411bac5d7536d1876980af23e\"},\n-    {file = \"pillow_heif-0.20.0-cp312-cp312-macosx_14_0_arm64.whl\", hash = \"sha256:146e55436b4feafcd086bd40211d5c3159b4d488b7f4918921560c9718c62dc9\"},\n-    {file = \"pillow_heif-0.20.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:70564e6e301498b484e467d96d25065c8102b8bba6227959dcff2df68d888d82\"},\n-    {file = \"pillow_heif-0.20.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6d14de6325eff7840d223c27fc974af28de0bb098b7678e05efe7e5cbf345e6b\"},\n-    {file = \"pillow_heif-0.20.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6ff0d429d01ac1d4b54358bc3e10ac8aea7b04913e118800641394261d4430a3\"},\n-    {file = \"pillow_heif-0.20.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:ccb16e488fc700029da111547039ac21e7cab9cae47f127ad2866824569a7a4c\"},\n-    {file = \"pillow_heif-0.20.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:ce6fb39f5d62d8a72ec2718ee110c49db529d9a1171c6ef243d7d66cfa17edc2\"},\n-    {file = \"pillow_heif-0.20.0-cp313-cp313-macosx_12_0_x86_64.whl\", hash = \"sha256:aadf4151095753b823b2ab061a51bfd4f5e56e69d6a1e125d12083eab639fd16\"},\n-    {file = \"pillow_heif-0.20.0-cp313-cp313-macosx_14_0_arm64.whl\", hash = \"sha256:4f3fac5a22946ec8df9c45a9f2d50a99407d798b2e7dce24bd2ef53b039f7f02\"},\n-    {file = \"pillow_heif-0.20.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6244a4934b21978c33651a77bdf446a9e9ae2450c332426bd2901a2523737938\"},\n-    {file = \"pillow_heif-0.20.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:47fbfbd5b87c3ee2e165de8f43260c5cea45bb282f291ef09ae8a21fdd284467\"},\n-    {file = \"pillow_heif-0.20.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:a3e9f2a87ba24468d1717c1403ceed7b6bc6c7f82023a8b888169ae494ee33d3\"},\n-    {file = \"pillow_heif-0.20.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:cc5d116713657b12becd8a2241a5c70ec28a34053fcbd58164ca08b26b23970a\"},\n-    {file = \"pillow_heif-0.20.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:b4e9162f1265ed808af872abe894398ba2b5f2297221b03031f48870638cf491\"},\n-    {file = \"pillow_heif-0.20.0-cp39-cp39-macosx_12_0_x86_64.whl\", hash = \"sha256:5647cda2566da6786f0c090fd61c268b6d530d3a2c88361ed630f5ed2bd52766\"},\n-    {file = \"pillow_heif-0.20.0-cp39-cp39-macosx_14_0_arm64.whl\", hash = \"sha256:9ae1a75deb8ffca01ae389593af6112a721415ff8a6ccc2676bb1da71186f13b\"},\n-    {file = \"pillow_heif-0.20.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:309d37303378ceb93d8408e26b67917a2091bc1e136fe0afb7c72610954de635\"},\n-    {file = \"pillow_heif-0.20.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b0ccaade96a8a7d8614374b6d5c1b259e62040e33180fadfef336089b4919ed5\"},\n-    {file = \"pillow_heif-0.20.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:1dffa961f316a9cb5a495087c17e41f2fdc83a8cbdf6d845716cbf2c9eb244bf\"},\n-    {file = \"pillow_heif-0.20.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7da99aa51bc80c24bc70fffcaa8e17c4944c4d4babdca0c38c82d5a69f7b8fa2\"},\n-    {file = \"pillow_heif-0.20.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:3f88de96b1ade76d408b4d490cd2f0de31c4790e4cf573e90503d9715082811c\"},\n-    {file = \"pillow_heif-0.20.0-pp310-pypy310_pp73-macosx_12_0_x86_64.whl\", hash = \"sha256:0a1a4ecaf150b569ad7d5fdeafde713e18d70e1a0d15395cdf96069818eae913\"},\n-    {file = \"pillow_heif-0.20.0-pp310-pypy310_pp73-macosx_14_0_arm64.whl\", hash = \"sha256:a8938faf7a48289601a5413078b2f21551228e1d1b203c41aaf7638ce156e073\"},\n-    {file = \"pillow_heif-0.20.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f9430a33f69965d067be7e5c15dc70f1e43d5e3c8b5e9dc16c8c8d52179ce1cc\"},\n-    {file = \"pillow_heif-0.20.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:da749d087ae3a7538af73d7a676cf332f81d1e6da9a6dea083aa382290d2d172\"},\n-    {file = \"pillow_heif-0.20.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:039f0c82ab3c0b364947979583d53ec9aad42d22159b9497e3c20ddde92c99bd\"},\n-    {file = \"pillow_heif-0.20.0-pp39-pypy39_pp73-macosx_12_0_x86_64.whl\", hash = \"sha256:9d42d164f378cf3ba1ddd00b2379360604a8461cee54eeebd67aac341f27ccac\"},\n-    {file = \"pillow_heif-0.20.0-pp39-pypy39_pp73-macosx_14_0_arm64.whl\", hash = \"sha256:740ef7652c7b278f24ead94e4098f0d1baf679a1e7373135e2820ce1c34a1bc5\"},\n-    {file = \"pillow_heif-0.20.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:adc56caf280e39f0540d40df925cde2cd960d2ee2492f856224e2e399f4a7590\"},\n-    {file = \"pillow_heif-0.20.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:623c0b777b15773605eeed811b23658923b4e4d822172fb62d4cbe983e5a8722\"},\n-    {file = \"pillow_heif-0.20.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:2f9515e21aa2f112252238175bbe3a1daad7a0c1020fc4ed52eae7805651431c\"},\n-    {file = \"pillow_heif-0.20.0.tar.gz\", hash = \"sha256:cac19c4434ab776f833160d61f3cbeddb347bd8ed2f82205b243eba5c572fa33\"},\n+    {file = \"pillow_heif-0.21.0-cp310-cp310-macosx_13_0_x86_64.whl\", hash = \"sha256:f54609401164b0cb58000bd2516a88516b5e3e9b2f9c52ad9500575f1851da5e\"},\n+    {file = \"pillow_heif-0.21.0-cp310-cp310-macosx_14_0_arm64.whl\", hash = \"sha256:d0a68246340d4fad4f10721a1a50b87a7011f1bd18d0a7b7d231e196776d0260\"},\n+    {file = \"pillow_heif-0.21.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:208b066bc7349b1ea1447199668edb6e2f74f36df54c86457ecb0131db8294df\"},\n+    {file = \"pillow_heif-0.21.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cea6f1519a9c486baf3bdf63487fa3f699402724895d64841bb4636258a87c90\"},\n+    {file = \"pillow_heif-0.21.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:7f9e939cd8e343237800fe998e26558a82cb25496b74d7674f29e75dc87eb636\"},\n+    {file = \"pillow_heif-0.21.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:8b30fbbb672a3413413bcfc726f9994e495c647c6b96ab9f832dccb61b67fb2f\"},\n+    {file = \"pillow_heif-0.21.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:9807c955ea7ed2caa5d105aea7d870d8c0958079ed2aba39a6ace7ef82aad402\"},\n+    {file = \"pillow_heif-0.21.0-cp311-cp311-macosx_13_0_x86_64.whl\", hash = \"sha256:0c3ffa486f56f52fe790d3b1bd522d93d2f59e22ce86045641cd596adc3c5273\"},\n+    {file = \"pillow_heif-0.21.0-cp311-cp311-macosx_14_0_arm64.whl\", hash = \"sha256:c46be20058d72a5a158ffc65e6158279a4bcb337707a29b312c5293846bd5b8a\"},\n+    {file = \"pillow_heif-0.21.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:06663c825a3d71779e51df02080467761b74d515e59fce9d780220cd75de7dd0\"},\n+    {file = \"pillow_heif-0.21.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:23efab69a03a9a3a9ff07043d8c8bf0d15ffd661ecc5c7bff59b386eb25f0466\"},\n+    {file = \"pillow_heif-0.21.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:e5eebb73268b806d3c801271126382da4f556b756990f87590c843c5a8ec14e2\"},\n+    {file = \"pillow_heif-0.21.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:3456b4cdb4da485f27c53a91c81f0488b44dc99c0be6870f6a1dc5ac85709894\"},\n+    {file = \"pillow_heif-0.21.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:d36441100756122b9d401502e39b60d0df9d876a929f5db858a4b7d05cc02e88\"},\n+    {file = \"pillow_heif-0.21.0-cp312-cp312-macosx_13_0_x86_64.whl\", hash = \"sha256:0aaea6ea45257cf74e76666b80b6109f8f56217009534726fa7f6a5694ebd563\"},\n+    {file = \"pillow_heif-0.21.0-cp312-cp312-macosx_14_0_arm64.whl\", hash = \"sha256:f28c2c934f547823de3e204e48866c571d81ebb6b3e8646c32fe2104c570c7b2\"},\n+    {file = \"pillow_heif-0.21.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e10ab63559346fc294b9612502221ddd6bfac8cd74091ace7328fefc1163a167\"},\n+    {file = \"pillow_heif-0.21.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:da2a015cfe4afec75551190d93c99dda13410aec89dc468794885b90f870f657\"},\n+    {file = \"pillow_heif-0.21.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:41693f5d87ed2b5fd01df4a6215045aff14d148a750aa0708c77e71139698154\"},\n+    {file = \"pillow_heif-0.21.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:8b27031c561ee3485a119c769fc2ef41d81fae1de530857beef935683e09615e\"},\n+    {file = \"pillow_heif-0.21.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:60196c08e9c256e81054c5da468eb5a0266c931b8564c96283a43e5fd2d7ce0e\"},\n+    {file = \"pillow_heif-0.21.0-cp313-cp313-macosx_13_0_x86_64.whl\", hash = \"sha256:9e67aae3c22a90bc7dfd42c9f0033c53a7d358e0f0d5d29aa42f2f193162fb01\"},\n+    {file = \"pillow_heif-0.21.0-cp313-cp313-macosx_14_0_arm64.whl\", hash = \"sha256:ee2d68cbc0df8ba6fd9103ac6b550ebafcaa3a179416737a96becf6e5f079586\"},\n+    {file = \"pillow_heif-0.21.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9e5c0df7b8c84e4a8c249ba45ceca2453f205028d8a6525612ec6dd0553d925d\"},\n+    {file = \"pillow_heif-0.21.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:aaedb7f16f3f18fbb315648ba576d0d7bb26b18b50c16281665123c38f73101e\"},\n+    {file = \"pillow_heif-0.21.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:6724d6a2561f36b06e14e1cd396c004d32717e81528cb03565491ac8679ed760\"},\n+    {file = \"pillow_heif-0.21.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:bf2e2b0abad455a0896118856e82a8d5358dfe5480bedd09ddd6a04b23773899\"},\n+    {file = \"pillow_heif-0.21.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:1b6ba6c3c4de739a1abf4f7fe0cdd04acd9e0c7fc661985b9a5288d94893a4b1\"},\n+    {file = \"pillow_heif-0.21.0-cp39-cp39-macosx_13_0_x86_64.whl\", hash = \"sha256:2448e180150b1ecb6576cc5030a6d14a179a7fa430b2b54d976f3beb3c5628ae\"},\n+    {file = \"pillow_heif-0.21.0-cp39-cp39-macosx_14_0_arm64.whl\", hash = \"sha256:fa9a91d6e390e78fe5670ff6083f26d13c6f1cabfaf0f61d0b272f50b5651c81\"},\n+    {file = \"pillow_heif-0.21.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dc919aa10fe97cb2134043d6e2d0d7fdbe17d7a2a833b202437e53be39fa7eae\"},\n+    {file = \"pillow_heif-0.21.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8d2fec1715ec77c2622e1eb52a6b30b58cea437b66dc45cfd28515dcb70bcc99\"},\n+    {file = \"pillow_heif-0.21.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:55cba67787dfabb20e3fe0f54e4e768ca42c0ac5aa74c6b293b3407c7782fc87\"},\n+    {file = \"pillow_heif-0.21.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:04e824c087934bfd09605a992788db3c461f045a903dbc9f14b20eba0df0c6ac\"},\n+    {file = \"pillow_heif-0.21.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:c2d2ec026094c919ce010921586192968abe9dfd2528b38bce905c74cac9b9c6\"},\n+    {file = \"pillow_heif-0.21.0-pp310-pypy310_pp73-macosx_13_0_x86_64.whl\", hash = \"sha256:9305aa837ce77d98a8b5e7bc8f86eeaefb52237686d84d60de11d55bad541d7f\"},\n+    {file = \"pillow_heif-0.21.0-pp310-pypy310_pp73-macosx_14_0_arm64.whl\", hash = \"sha256:fc9bfc50f55267d13b0abf63bd7d141b92a39e09812dadee1a88b5863d9b8808\"},\n+    {file = \"pillow_heif-0.21.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:03273b94a7548ba615f6bfc1031137f1a025b657226de6c3f09f84945295f565\"},\n+    {file = \"pillow_heif-0.21.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6576c9c7713e33150395cdc6e9cf59efd8f42c5783cf0764092ba50a048ee2c6\"},\n+    {file = \"pillow_heif-0.21.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:2813c34cdd3f07e406b6a2cb216019409eb62270e6799088ddf3d4cb08a0d503\"},\n+    {file = \"pillow_heif-0.21.0-pp39-pypy39_pp73-macosx_13_0_x86_64.whl\", hash = \"sha256:b06125d594ca71c9af3bf69118c661b8f82a3a7ce2d2ea5302328d91ebef36cb\"},\n+    {file = \"pillow_heif-0.21.0-pp39-pypy39_pp73-macosx_14_0_arm64.whl\", hash = \"sha256:22a73ed7ca5c2c8ef1b4872827dc7d8a6875938e9e791fff2db92fb4ca60f560\"},\n+    {file = \"pillow_heif-0.21.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:121451d016c450bfb4d926fe08274e165553679917eb8c85d41fcadfda5f3b2e\"},\n+    {file = \"pillow_heif-0.21.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5680a00519e5f3c7c1c51dfd41e7f1c632793dfde57a9620339ba4cc70cf9196\"},\n+    {file = \"pillow_heif-0.21.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:a39d1043ec74afdeef00086c8d24b3cc30095927817182ae5bc960ddb3422d9c\"},\n+    {file = \"pillow_heif-0.21.0.tar.gz\", hash = \"sha256:07aee1bff05e5d61feb989eaa745ae21b367011fd66ee48f7732931f8a12b49b\"},\n ]\n \n [package.dependencies]\n@@ -5668,109 +5667,93 @@ wcwidth = \"*\"\n \n [[package]]\n name = \"propcache\"\n-version = \"0.2.0\"\n+version = \"0.2.1\"\n description = \"Accelerated property cache\"\n optional = true\n-python-versions = \">=3.8\"\n+python-versions = \">=3.9\"\n files = [\n-    {file = \"propcache-0.2.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:c5869b8fd70b81835a6f187c5fdbe67917a04d7e52b6e7cc4e5fe39d55c39d58\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:952e0d9d07609d9c5be361f33b0d6d650cd2bae393aabb11d9b719364521984b\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:33ac8f098df0585c0b53009f039dfd913b38c1d2edafed0cedcc0c32a05aa110\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:97e48e8875e6c13909c800fa344cd54cc4b2b0db1d5f911f840458a500fde2c2\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:388f3217649d6d59292b722d940d4d2e1e6a7003259eb835724092a1cca0203a\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f571aea50ba5623c308aa146eb650eebf7dbe0fd8c5d946e28343cb3b5aad577\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3dfafb44f7bb35c0c06eda6b2ab4bfd58f02729e7c4045e179f9a861b07c9850\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a3ebe9a75be7ab0b7da2464a77bb27febcb4fab46a34f9288f39d74833db7f61\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:d2f0d0f976985f85dfb5f3d685697ef769faa6b71993b46b295cdbbd6be8cc37\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:a3dc1a4b165283bd865e8f8cb5f0c64c05001e0718ed06250d8cac9bec115b48\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:9e0f07b42d2a50c7dd2d8675d50f7343d998c64008f1da5fef888396b7f84630\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:e63e3e1e0271f374ed489ff5ee73d4b6e7c60710e1f76af5f0e1a6117cd26394\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:56bb5c98f058a41bb58eead194b4db8c05b088c93d94d5161728515bd52b052b\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:7665f04d0c7f26ff8bb534e1c65068409bf4687aa2534faf7104d7182debb336\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-win32.whl\", hash = \"sha256:7cf18abf9764746b9c8704774d8b06714bcb0a63641518a3a89c7f85cc02c2ad\"},\n-    {file = \"propcache-0.2.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:cfac69017ef97db2438efb854edf24f5a29fd09a536ff3a992b75990720cdc99\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:63f13bf09cc3336eb04a837490b8f332e0db41da66995c9fd1ba04552e516354\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:608cce1da6f2672a56b24a015b42db4ac612ee709f3d29f27a00c943d9e851de\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:466c219deee4536fbc83c08d09115249db301550625c7fef1c5563a584c9bc87\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fc2db02409338bf36590aa985a461b2c96fce91f8e7e0f14c50c5fcc4f229016\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a6ed8db0a556343d566a5c124ee483ae113acc9a557a807d439bcecc44e7dfbb\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:91997d9cb4a325b60d4e3f20967f8eb08dfcb32b22554d5ef78e6fd1dda743a2\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4c7dde9e533c0a49d802b4f3f218fa9ad0a1ce21f2c2eb80d5216565202acab4\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ffcad6c564fe6b9b8916c1aefbb37a362deebf9394bd2974e9d84232e3e08504\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:97a58a28bcf63284e8b4d7b460cbee1edaab24634e82059c7b8c09e65284f178\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:945db8ee295d3af9dbdbb698cce9bbc5c59b5c3fe328bbc4387f59a8a35f998d\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:39e104da444a34830751715f45ef9fc537475ba21b7f1f5b0f4d71a3b60d7fe2\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c5ecca8f9bab618340c8e848d340baf68bcd8ad90a8ecd7a4524a81c1764b3db\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:c436130cc779806bdf5d5fae0d848713105472b8566b75ff70048c47d3961c5b\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:191db28dc6dcd29d1a3e063c3be0b40688ed76434622c53a284e5427565bbd9b\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-win32.whl\", hash = \"sha256:5f2564ec89058ee7c7989a7b719115bdfe2a2fb8e7a4543b8d1c0cc4cf6478c1\"},\n-    {file = \"propcache-0.2.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:6e2e54267980349b723cff366d1e29b138b9a60fa376664a157a342689553f71\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:2ee7606193fb267be4b2e3b32714f2d58cad27217638db98a60f9efb5efeccc2\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:91ee8fc02ca52e24bcb77b234f22afc03288e1dafbb1f88fe24db308910c4ac7\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:2e900bad2a8456d00a113cad8c13343f3b1f327534e3589acc2219729237a2e8\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f52a68c21363c45297aca15561812d542f8fc683c85201df0bebe209e349f793\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1e41d67757ff4fbc8ef2af99b338bfb955010444b92929e9e55a6d4dcc3c4f09\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a64e32f8bd94c105cc27f42d3b658902b5bcc947ece3c8fe7bc1b05982f60e89\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:55346705687dbd7ef0d77883ab4f6fabc48232f587925bdaf95219bae072491e\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:00181262b17e517df2cd85656fcd6b4e70946fe62cd625b9d74ac9977b64d8d9\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6994984550eaf25dd7fc7bd1b700ff45c894149341725bb4edc67f0ffa94efa4\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:56295eb1e5f3aecd516d91b00cfd8bf3a13991de5a479df9e27dd569ea23959c\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:439e76255daa0f8151d3cb325f6dd4a3e93043e6403e6491813bcaaaa8733887\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f6475a1b2ecb310c98c28d271a30df74f9dd436ee46d09236a6b750a7599ce57\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:3444cdba6628accf384e349014084b1cacd866fbb88433cd9d279d90a54e0b23\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:4a9d9b4d0a9b38d1c391bb4ad24aa65f306c6f01b512e10a8a34a2dc5675d348\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-win32.whl\", hash = \"sha256:69d3a98eebae99a420d4b28756c8ce6ea5a29291baf2dc9ff9414b42676f61d5\"},\n-    {file = \"propcache-0.2.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:ad9c9b99b05f163109466638bd30ada1722abb01bbb85c739c50b6dc11f92dc3\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ecddc221a077a8132cf7c747d5352a15ed763b674c0448d811f408bf803d9ad7\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:0e53cb83fdd61cbd67202735e6a6687a7b491c8742dfc39c9e01e80354956763\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:92fe151145a990c22cbccf9ae15cae8ae9eddabfc949a219c9f667877e40853d\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d6a21ef516d36909931a2967621eecb256018aeb11fc48656e3257e73e2e247a\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3f88a4095e913f98988f5b338c1d4d5d07dbb0b6bad19892fd447484e483ba6b\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5a5b3bb545ead161be780ee85a2b54fdf7092815995661947812dde94a40f6fb\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:67aeb72e0f482709991aa91345a831d0b707d16b0257e8ef88a2ad246a7280bf\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3c997f8c44ec9b9b0bcbf2d422cc00a1d9b9c681f56efa6ca149a941e5560da2\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:2a66df3d4992bc1d725b9aa803e8c5a66c010c65c741ad901e260ece77f58d2f\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:3ebbcf2a07621f29638799828b8d8668c421bfb94c6cb04269130d8de4fb7136\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:1235c01ddaa80da8235741e80815ce381c5267f96cc49b1477fdcf8c047ef325\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3947483a381259c06921612550867b37d22e1df6d6d7e8361264b6d037595f44\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:d5bed7f9805cc29c780f3aee05de3262ee7ce1f47083cfe9f77471e9d6777e83\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e4a91d44379f45f5e540971d41e4626dacd7f01004826a18cb048e7da7e96544\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-win32.whl\", hash = \"sha256:f902804113e032e2cdf8c71015651c97af6418363bea8d78dc0911d56c335032\"},\n-    {file = \"propcache-0.2.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:8f188cfcc64fb1266f4684206c9de0e80f54622c3f22a910cbd200478aeae61e\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:53d1bd3f979ed529f0805dd35ddaca330f80a9a6d90bc0121d2ff398f8ed8861\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:83928404adf8fb3d26793665633ea79b7361efa0287dfbd372a7e74311d51ee6\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:77a86c261679ea5f3896ec060be9dc8e365788248cc1e049632a1be682442063\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:218db2a3c297a3768c11a34812e63b3ac1c3234c3a086def9c0fee50d35add1f\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7735e82e3498c27bcb2d17cb65d62c14f1100b71723b68362872bca7d0913d90\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:20a617c776f520c3875cf4511e0d1db847a076d720714ae35ffe0df3e440be68\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:67b69535c870670c9f9b14a75d28baa32221d06f6b6fa6f77a0a13c5a7b0a5b9\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4569158070180c3855e9c0791c56be3ceeb192defa2cdf6a3f39e54319e56b89\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:db47514ffdbd91ccdc7e6f8407aac4ee94cc871b15b577c1c324236b013ddd04\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_armv7l.whl\", hash = \"sha256:2a60ad3e2553a74168d275a0ef35e8c0a965448ffbc3b300ab3a5bb9956c2162\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:662dd62358bdeaca0aee5761de8727cfd6861432e3bb828dc2a693aa0471a563\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:25a1f88b471b3bc911d18b935ecb7115dff3a192b6fef46f0bfaf71ff4f12418\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:f60f0ac7005b9f5a6091009b09a419ace1610e163fa5deaba5ce3484341840e7\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:74acd6e291f885678631b7ebc85d2d4aec458dd849b8c841b57ef04047833bed\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-win32.whl\", hash = \"sha256:d9b6ddac6408194e934002a69bcaadbc88c10b5f38fb9307779d1c629181815d\"},\n-    {file = \"propcache-0.2.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:676135dcf3262c9c5081cc8f19ad55c8a64e3f7282a21266d05544450bffc3a5\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:25c8d773a62ce0451b020c7b29a35cfbc05de8b291163a7a0f3b7904f27253e6\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:375a12d7556d462dc64d70475a9ee5982465fbb3d2b364f16b86ba9135793638\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:1ec43d76b9677637a89d6ab86e1fef70d739217fefa208c65352ecf0282be957\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f45eec587dafd4b2d41ac189c2156461ebd0c1082d2fe7013571598abb8505d1\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bc092ba439d91df90aea38168e11f75c655880c12782facf5cf9c00f3d42b562\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fa1076244f54bb76e65e22cb6910365779d5c3d71d1f18b275f1dfc7b0d71b4d\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:682a7c79a2fbf40f5dbb1eb6bfe2cd865376deeac65acf9beb607505dced9e12\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8e40876731f99b6f3c897b66b803c9e1c07a989b366c6b5b475fafd1f7ba3fb8\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:363ea8cd3c5cb6679f1c2f5f1f9669587361c062e4899fce56758efa928728f8\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:140fbf08ab3588b3468932974a9331aff43c0ab8a2ec2c608b6d7d1756dbb6cb\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:e70fac33e8b4ac63dfc4c956fd7d85a0b1139adcfc0d964ce288b7c527537fea\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b33d7a286c0dc1a15f5fc864cc48ae92a846df287ceac2dd499926c3801054a6\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:f6d5749fdd33d90e34c2efb174c7e236829147a2713334d708746e94c4bde40d\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:22aa8f2272d81d9317ff5756bb108021a056805ce63dd3630e27d042c8092798\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-win32.whl\", hash = \"sha256:73e4b40ea0eda421b115248d7e79b59214411109a5bc47d0d48e4c73e3b8fcf9\"},\n-    {file = \"propcache-0.2.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:9517d5e9e0731957468c29dbfd0f976736a0e55afaea843726e887f36fe017df\"},\n-    {file = \"propcache-0.2.0-py3-none-any.whl\", hash = \"sha256:2ccc28197af5313706511fab3a8b66dcd6da067a1331372c82ea1cb74285e036\"},\n-    {file = \"propcache-0.2.0.tar.gz\", hash = \"sha256:df81779732feb9d01e5d513fad0122efb3d53bbc75f61b2a4f29a020bc985e70\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:6b3f39a85d671436ee3d12c017f8fdea38509e4f25b28eb25877293c98c243f6\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:39d51fbe4285d5db5d92a929e3e21536ea3dd43732c5b177c7ef03f918dff9f2\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:6445804cf4ec763dc70de65a3b0d9954e868609e83850a47ca4f0cb64bd79fea\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f9479aa06a793c5aeba49ce5c5692ffb51fcd9a7016e017d555d5e2b0045d212\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d9631c5e8b5b3a0fda99cb0d29c18133bca1e18aea9effe55adb3da1adef80d3\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3156628250f46a0895f1f36e1d4fbe062a1af8718ec3ebeb746f1d23f0c5dc4d\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6b6fb63ae352e13748289f04f37868099e69dba4c2b3e271c46061e82c745634\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:887d9b0a65404929641a9fabb6452b07fe4572b269d901d622d8a34a4e9043b2\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:a96dc1fa45bd8c407a0af03b2d5218392729e1822b0c32e62c5bf7eeb5fb3958\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:a7e65eb5c003a303b94aa2c3852ef130230ec79e349632d030e9571b87c4698c\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:999779addc413181912e984b942fbcc951be1f5b3663cd80b2687758f434c583\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:19a0f89a7bb9d8048d9c4370c9c543c396e894c76be5525f5e1ad287f1750ddf\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:1ac2f5fe02fa75f56e1ad473f1175e11f475606ec9bd0be2e78e4734ad575034\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:574faa3b79e8ebac7cb1d7930f51184ba1ccf69adfdec53a12f319a06030a68b\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-win32.whl\", hash = \"sha256:03ff9d3f665769b2a85e6157ac8b439644f2d7fd17615a82fa55739bc97863f4\"},\n+    {file = \"propcache-0.2.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:2d3af2e79991102678f53e0dbf4c35de99b6b8b58f29a27ca0325816364caaba\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:1ffc3cca89bb438fb9c95c13fc874012f7b9466b89328c3c8b1aa93cdcfadd16\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:f174bbd484294ed9fdf09437f889f95807e5f229d5d93588d34e92106fbf6717\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:70693319e0b8fd35dd863e3e29513875eb15c51945bf32519ef52927ca883bc3\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b480c6a4e1138e1aa137c0079b9b6305ec6dcc1098a8ca5196283e8a49df95a9\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d27b84d5880f6d8aa9ae3edb253c59d9f6642ffbb2c889b78b60361eed449787\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:857112b22acd417c40fa4595db2fe28ab900c8c5fe4670c7989b1c0230955465\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cf6c4150f8c0e32d241436526f3c3f9cbd34429492abddbada2ffcff506c51af\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:66d4cfda1d8ed687daa4bc0274fcfd5267873db9a5bc0418c2da19273040eeb7\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:c2f992c07c0fca81655066705beae35fc95a2fa7366467366db627d9f2ee097f\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:4a571d97dbe66ef38e472703067021b1467025ec85707d57e78711c085984e54\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:bb6178c241278d5fe853b3de743087be7f5f4c6f7d6d22a3b524d323eecec505\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ad1af54a62ffe39cf34db1aa6ed1a1873bd548f6401db39d8e7cd060b9211f82\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:e7048abd75fe40712005bcfc06bb44b9dfcd8e101dda2ecf2f5aa46115ad07ca\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:160291c60081f23ee43d44b08a7e5fb76681221a8e10b3139618c5a9a291b84e\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-win32.whl\", hash = \"sha256:819ce3b883b7576ca28da3861c7e1a88afd08cc8c96908e08a3f4dd64a228034\"},\n+    {file = \"propcache-0.2.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:edc9fc7051e3350643ad929df55c451899bb9ae6d24998a949d2e4c87fb596d3\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:081a430aa8d5e8876c6909b67bd2d937bfd531b0382d3fdedb82612c618bc41a\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:d2ccec9ac47cf4e04897619c0e0c1a48c54a71bdf045117d3a26f80d38ab1fb0\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:14d86fe14b7e04fa306e0c43cdbeebe6b2c2156a0c9ce56b815faacc193e320d\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:049324ee97bb67285b49632132db351b41e77833678432be52bdd0289c0e05e4\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1cd9a1d071158de1cc1c71a26014dcdfa7dd3d5f4f88c298c7f90ad6f27bb46d\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:98110aa363f1bb4c073e8dcfaefd3a5cea0f0834c2aab23dda657e4dab2f53b5\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:647894f5ae99c4cf6bb82a1bb3a796f6e06af3caa3d32e26d2350d0e3e3faf24\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:bfd3223c15bebe26518d58ccf9a39b93948d3dcb3e57a20480dfdd315356baff\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:d71264a80f3fcf512eb4f18f59423fe82d6e346ee97b90625f283df56aee103f\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:e73091191e4280403bde6c9a52a6999d69cdfde498f1fdf629105247599b57ec\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:3935bfa5fede35fb202c4b569bb9c042f337ca4ff7bd540a0aa5e37131659348\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f508b0491767bb1f2b87fdfacaba5f7eddc2f867740ec69ece6d1946d29029a6\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:1672137af7c46662a1c2be1e8dc78cb6d224319aaa40271c9257d886be4363a6\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:b74c261802d3d2b85c9df2dfb2fa81b6f90deeef63c2db9f0e029a3cac50b518\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-win32.whl\", hash = \"sha256:d09c333d36c1409d56a9d29b3a1b800a42c76a57a5a8907eacdbce3f18768246\"},\n+    {file = \"propcache-0.2.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:c214999039d4f2a5b2073ac506bba279945233da8c786e490d411dfc30f855c1\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:aca405706e0b0a44cc6bfd41fbe89919a6a56999157f6de7e182a990c36e37bc\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:12d1083f001ace206fe34b6bdc2cb94be66d57a850866f0b908972f90996b3e9\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:d93f3307ad32a27bda2e88ec81134b823c240aa3abb55821a8da553eed8d9439\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ba278acf14471d36316159c94a802933d10b6a1e117b8554fe0d0d9b75c9d536\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4e6281aedfca15301c41f74d7005e6e3f4ca143584ba696ac69df4f02f40d629\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5b750a8e5a1262434fb1517ddf64b5de58327f1adc3524a5e44c2ca43305eb0b\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bf72af5e0fb40e9babf594308911436c8efde3cb5e75b6f206c34ad18be5c052\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b2d0a12018b04f4cb820781ec0dffb5f7c7c1d2a5cd22bff7fb055a2cb19ebce\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:e800776a79a5aabdb17dcc2346a7d66d0777e942e4cd251defeb084762ecd17d\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:4160d9283bd382fa6c0c2b5e017acc95bc183570cd70968b9202ad6d8fc48dce\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:30b43e74f1359353341a7adb783c8f1b1c676367b011709f466f42fda2045e95\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:58791550b27d5488b1bb52bc96328456095d96206a250d28d874fafe11b3dfaf\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:0f022d381747f0dfe27e99d928e31bc51a18b65bb9e481ae0af1380a6725dd1f\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:297878dc9d0a334358f9b608b56d02e72899f3b8499fc6044133f0d319e2ec30\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-win32.whl\", hash = \"sha256:ddfab44e4489bd79bda09d84c430677fc7f0a4939a73d2bba3073036f487a0a6\"},\n+    {file = \"propcache-0.2.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:556fc6c10989f19a179e4321e5d678db8eb2924131e64652a51fe83e4c3db0e1\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:6a9a8c34fb7bb609419a211e59da8887eeca40d300b5ea8e56af98f6fbbb1541\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:ae1aa1cd222c6d205853b3013c69cd04515f9d6ab6de4b0603e2e1c33221303e\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:accb6150ce61c9c4b7738d45550806aa2b71c7668c6942f17b0ac182b6142fd4\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5eee736daafa7af6d0a2dc15cc75e05c64f37fc37bafef2e00d77c14171c2097\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f7a31fc1e1bd362874863fdeed71aed92d348f5336fd84f2197ba40c59f061bd\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:cba4cfa1052819d16699e1d55d18c92b6e094d4517c41dd231a8b9f87b6fa681\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f089118d584e859c62b3da0892b88a83d611c2033ac410e929cb6754eec0ed16\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:781e65134efaf88feb447e8c97a51772aa75e48b794352f94cb7ea717dedda0d\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:31f5af773530fd3c658b32b6bdc2d0838543de70eb9a2156c03e410f7b0d3aae\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:a7a078f5d37bee6690959c813977da5291b24286e7b962e62a94cec31aa5188b\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:cea7daf9fc7ae6687cf1e2c049752f19f146fdc37c2cc376e7d0032cf4f25347\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:8b3489ff1ed1e8315674d0775dc7d2195fb13ca17b3808721b54dbe9fd020faf\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:9403db39be1393618dd80c746cb22ccda168efce239c73af13c3763ef56ffc04\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:5d97151bc92d2b2578ff7ce779cdb9174337390a535953cbb9452fb65164c587\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-win32.whl\", hash = \"sha256:9caac6b54914bdf41bcc91e7eb9147d331d29235a7c967c150ef5df6464fd1bb\"},\n+    {file = \"propcache-0.2.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:92fc4500fcb33899b05ba73276dfb684a20d31caa567b7cb5252d48f896a91b1\"},\n+    {file = \"propcache-0.2.1-py3-none-any.whl\", hash = \"sha256:52277518d6aae65536e9cea52d4e7fd2f7a66f4aa2d30ed3f2fcea620ace3c54\"},\n+    {file = \"propcache-0.2.1.tar.gz\", hash = \"sha256:3f77ce728b19cb537714499928fe800c3dda29e8d9428778fc7c186da4c09a64\"},\n ]\n \n [[package]]\n@@ -6575,13 +6558,13 @@ files = [\n \n [[package]]\n name = \"python-multipart\"\n-version = \"0.0.17\"\n+version = \"0.0.19\"\n description = \"A streaming multipart parser for Python\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"python_multipart-0.0.17-py3-none-any.whl\", hash = \"sha256:15dc4f487e0a9476cc1201261188ee0940165cffc94429b6fc565c4d3045cb5d\"},\n-    {file = \"python_multipart-0.0.17.tar.gz\", hash = \"sha256:41330d831cae6e2f22902704ead2826ea038d0419530eadff3ea80175aec5538\"},\n+    {file = \"python_multipart-0.0.19-py3-none-any.whl\", hash = \"sha256:f8d5b0b9c618575bf9df01c684ded1d94a338839bdd8223838afacfb4bb2082d\"},\n+    {file = \"python_multipart-0.0.19.tar.gz\", hash = \"sha256:905502ef39050557b7a6af411f454bc19526529ca46ae6831508438890ce12cc\"},\n ]\n \n [[package]]\n@@ -7221,101 +7204,114 @@ six = \"*\"\n \n [[package]]\n name = \"rpds-py\"\n-version = \"0.21.0\"\n+version = \"0.22.1\"\n description = \"Python bindings to Rust's persistent data structures (rpds)\"\n optional = false\n python-versions = \">=3.9\"\n files = [\n-    {file = \"rpds_py-0.21.0-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:a017f813f24b9df929674d0332a374d40d7f0162b326562daae8066b502d0590\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:20cc1ed0bcc86d8e1a7e968cce15be45178fd16e2ff656a243145e0b439bd250\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ad116dda078d0bc4886cb7840e19811562acdc7a8e296ea6ec37e70326c1b41c\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:808f1ac7cf3b44f81c9475475ceb221f982ef548e44e024ad5f9e7060649540e\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:de552f4a1916e520f2703ec474d2b4d3f86d41f353e7680b597512ffe7eac5d0\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:efec946f331349dfc4ae9d0e034c263ddde19414fe5128580f512619abed05f1\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b80b4690bbff51a034bfde9c9f6bf9357f0a8c61f548942b80f7b66356508bf5\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:085ed25baac88953d4283e5b5bd094b155075bb40d07c29c4f073e10623f9f2e\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:daa8efac2a1273eed2354397a51216ae1e198ecbce9036fba4e7610b308b6153\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:95a5bad1ac8a5c77b4e658671642e4af3707f095d2b78a1fdd08af0dfb647624\"},\n-    {file = \"rpds_py-0.21.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:3e53861b29a13d5b70116ea4230b5f0f3547b2c222c5daa090eb7c9c82d7f664\"},\n-    {file = \"rpds_py-0.21.0-cp310-none-win32.whl\", hash = \"sha256:ea3a6ac4d74820c98fcc9da4a57847ad2cc36475a8bd9683f32ab6d47a2bd682\"},\n-    {file = \"rpds_py-0.21.0-cp310-none-win_amd64.whl\", hash = \"sha256:b8f107395f2f1d151181880b69a2869c69e87ec079c49c0016ab96860b6acbe5\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:5555db3e618a77034954b9dc547eae94166391a98eb867905ec8fcbce1308d95\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:97ef67d9bbc3e15584c2f3c74bcf064af36336c10d2e21a2131e123ce0f924c9\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4ab2c2a26d2f69cdf833174f4d9d86118edc781ad9a8fa13970b527bf8236027\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:4e8921a259f54bfbc755c5bbd60c82bb2339ae0324163f32868f63f0ebb873d9\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8a7ff941004d74d55a47f916afc38494bd1cfd4b53c482b77c03147c91ac0ac3\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5145282a7cd2ac16ea0dc46b82167754d5e103a05614b724457cffe614f25bd8\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:de609a6f1b682f70bb7163da745ee815d8f230d97276db049ab447767466a09d\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:40c91c6e34cf016fa8e6b59d75e3dbe354830777fcfd74c58b279dceb7975b75\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:d2132377f9deef0c4db89e65e8bb28644ff75a18df5293e132a8d67748397b9f\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:0a9e0759e7be10109645a9fddaaad0619d58c9bf30a3f248a2ea57a7c417173a\"},\n-    {file = \"rpds_py-0.21.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:9e20da3957bdf7824afdd4b6eeb29510e83e026473e04952dca565170cd1ecc8\"},\n-    {file = \"rpds_py-0.21.0-cp311-none-win32.whl\", hash = \"sha256:f71009b0d5e94c0e86533c0b27ed7cacc1239cb51c178fd239c3cfefefb0400a\"},\n-    {file = \"rpds_py-0.21.0-cp311-none-win_amd64.whl\", hash = \"sha256:e168afe6bf6ab7ab46c8c375606298784ecbe3ba31c0980b7dcbb9631dcba97e\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:30b912c965b2aa76ba5168fd610087bad7fcde47f0a8367ee8f1876086ee6d1d\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ca9989d5d9b1b300bc18e1801c67b9f6d2c66b8fd9621b36072ed1df2c977f72\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6f54e7106f0001244a5f4cf810ba8d3f9c542e2730821b16e969d6887b664266\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:fed5dfefdf384d6fe975cc026886aece4f292feaf69d0eeb716cfd3c5a4dd8be\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:590ef88db231c9c1eece44dcfefd7515d8bf0d986d64d0caf06a81998a9e8cab\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f983e4c2f603c95dde63df633eec42955508eefd8d0f0e6d236d31a044c882d7\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b229ce052ddf1a01c67d68166c19cb004fb3612424921b81c46e7ea7ccf7c3bf\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:ebf64e281a06c904a7636781d2e973d1f0926a5b8b480ac658dc0f556e7779f4\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:998a8080c4495e4f72132f3d66ff91f5997d799e86cec6ee05342f8f3cda7dca\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:98486337f7b4f3c324ab402e83453e25bb844f44418c066623db88e4c56b7c7b\"},\n-    {file = \"rpds_py-0.21.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:a78d8b634c9df7f8d175451cfeac3810a702ccb85f98ec95797fa98b942cea11\"},\n-    {file = \"rpds_py-0.21.0-cp312-none-win32.whl\", hash = \"sha256:a58ce66847711c4aa2ecfcfaff04cb0327f907fead8945ffc47d9407f41ff952\"},\n-    {file = \"rpds_py-0.21.0-cp312-none-win_amd64.whl\", hash = \"sha256:e860f065cc4ea6f256d6f411aba4b1251255366e48e972f8a347cf88077b24fd\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:ee4eafd77cc98d355a0d02f263efc0d3ae3ce4a7c24740010a8b4012bbb24937\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:688c93b77e468d72579351a84b95f976bd7b3e84aa6686be6497045ba84be560\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c38dbf31c57032667dd5a2f0568ccde66e868e8f78d5a0d27dcc56d70f3fcd3b\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:2d6129137f43f7fa02d41542ffff4871d4aefa724a5fe38e2c31a4e0fd343fb0\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:520ed8b99b0bf86a176271f6fe23024323862ac674b1ce5b02a72bfeff3fff44\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:aaeb25ccfb9b9014a10eaf70904ebf3f79faaa8e60e99e19eef9f478651b9b74\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:af04ac89c738e0f0f1b913918024c3eab6e3ace989518ea838807177d38a2e94\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:b9b76e2afd585803c53c5b29e992ecd183f68285b62fe2668383a18e74abe7a3\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:5afb5efde74c54724e1a01118c6e5c15e54e642c42a1ba588ab1f03544ac8c7a\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:52c041802a6efa625ea18027a0723676a778869481d16803481ef6cc02ea8cb3\"},\n-    {file = \"rpds_py-0.21.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:ee1e4fc267b437bb89990b2f2abf6c25765b89b72dd4a11e21934df449e0c976\"},\n-    {file = \"rpds_py-0.21.0-cp313-none-win32.whl\", hash = \"sha256:0c025820b78817db6a76413fff6866790786c38f95ea3f3d3c93dbb73b632202\"},\n-    {file = \"rpds_py-0.21.0-cp313-none-win_amd64.whl\", hash = \"sha256:320c808df533695326610a1b6a0a6e98f033e49de55d7dc36a13c8a30cfa756e\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:2c51d99c30091f72a3c5d126fad26236c3f75716b8b5e5cf8effb18889ced928\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:cbd7504a10b0955ea287114f003b7ad62330c9e65ba012c6223dba646f6ffd05\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6dcc4949be728ede49e6244eabd04064336012b37f5c2200e8ec8eb2988b209c\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:f414da5c51bf350e4b7960644617c130140423882305f7574b6cf65a3081cecb\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9afe42102b40007f588666bc7de82451e10c6788f6f70984629db193849dced1\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3b929c2bb6e29ab31f12a1117c39f7e6d6450419ab7464a4ea9b0b417174f044\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8404b3717da03cbf773a1d275d01fec84ea007754ed380f63dfc24fb76ce4592\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:e12bb09678f38b7597b8346983d2323a6482dcd59e423d9448108c1be37cac9d\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:58a0e345be4b18e6b8501d3b0aa540dad90caeed814c515e5206bb2ec26736fd\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:c3761f62fcfccf0864cc4665b6e7c3f0c626f0380b41b8bd1ce322103fa3ef87\"},\n-    {file = \"rpds_py-0.21.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:c2b2f71c6ad6c2e4fc9ed9401080badd1469fa9889657ec3abea42a3d6b2e1ed\"},\n-    {file = \"rpds_py-0.21.0-cp39-none-win32.whl\", hash = \"sha256:b21747f79f360e790525e6f6438c7569ddbfb1b3197b9e65043f25c3c9b489d8\"},\n-    {file = \"rpds_py-0.21.0-cp39-none-win_amd64.whl\", hash = \"sha256:0626238a43152918f9e72ede9a3b6ccc9e299adc8ade0d67c5e142d564c9a83d\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:6b4ef7725386dc0762857097f6b7266a6cdd62bfd209664da6712cb26acef035\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:6bc0e697d4d79ab1aacbf20ee5f0df80359ecf55db33ff41481cf3e24f206919\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da52d62a96e61c1c444f3998c434e8b263c384f6d68aca8274d2e08d1906325c\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:98e4fe5db40db87ce1c65031463a760ec7906ab230ad2249b4572c2fc3ef1f9f\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:30bdc973f10d28e0337f71d202ff29345320f8bc49a31c90e6c257e1ccef4333\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:faa5e8496c530f9c71f2b4e1c49758b06e5f4055e17144906245c99fa6d45356\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:32eb88c30b6a4f0605508023b7141d043a79b14acb3b969aa0b4f99b25bc7d4a\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:a89a8ce9e4e75aeb7fa5d8ad0f3fecdee813802592f4f46a15754dcb2fd6b061\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:241e6c125568493f553c3d0fdbb38c74babf54b45cef86439d4cd97ff8feb34d\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:3b766a9f57663396e4f34f5140b3595b233a7b146e94777b97a8413a1da1be18\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:af4a644bf890f56e41e74be7d34e9511e4954894d544ec6b8efe1e21a1a8da6c\"},\n-    {file = \"rpds_py-0.21.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:3e30a69a706e8ea20444b98a49f386c17b26f860aa9245329bab0851ed100677\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:031819f906bb146561af051c7cef4ba2003d28cff07efacef59da973ff7969ba\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:b876f2bc27ab5954e2fd88890c071bd0ed18b9c50f6ec3de3c50a5ece612f7a6\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dc5695c321e518d9f03b7ea6abb5ea3af4567766f9852ad1560f501b17588c7b\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:b4de1da871b5c0fd5537b26a6fc6814c3cc05cabe0c941db6e9044ffbb12f04a\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:878f6fea96621fda5303a2867887686d7a198d9e0f8a40be100a63f5d60c88c9\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a8eeec67590e94189f434c6d11c426892e396ae59e4801d17a93ac96b8c02a6c\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1ff2eba7f6c0cb523d7e9cff0903f2fe1feff8f0b2ceb6bd71c0e20a4dcee271\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:a429b99337062877d7875e4ff1a51fe788424d522bd64a8c0a20ef3021fdb6ed\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:d167e4dbbdac48bd58893c7e446684ad5d425b407f9336e04ab52e8b9194e2ed\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:4eb2de8a147ffe0626bfdc275fc6563aa7bf4b6db59cf0d44f0ccd6ca625a24e\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:e78868e98f34f34a88e23ee9ccaeeec460e4eaf6db16d51d7a9b883e5e785a5e\"},\n-    {file = \"rpds_py-0.21.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:4991ca61656e3160cdaca4851151fd3f4a92e9eba5c7a530ab030d6aee96ec89\"},\n-    {file = \"rpds_py-0.21.0.tar.gz\", hash = \"sha256:ed6378c9d66d0de903763e7706383d60c33829581f0adff47b6535f1802fa6db\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:ab27dd4edd84b13309f268ffcdfc07aef8339135ffab7b6d43f16884307a2a48\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:9d5b925156a746dc1f5f52376fdd1fbdd3f6ffe1fcd6f5e06f77ca79abb940a3\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:201650b309c419143775c15209c620627de3c09a27c7fb58375325aec5cce260\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:31264187fc934ff1024a4f56775f33c9252d3f4f3e27ec07d1995a26b52702c3\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:97c5ffe47ccf92d8b17e10f8a5ce28d015aa1196edc3359684cf31504eae6a14\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e9ac7280bd045f472b50306d7efeee051b69e3a2dd1b90f46bd7e86e63b1efa2\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5f941fb86195f97be7f6efe04a21b223f05dfe4d1dfb159999e2f8d101e44cc4\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:f91bfc39f7a64168e08ab831fa497ec5438c1d6c6e2f9e12848d95ad11ac8523\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:effcae2152afe7937a28376dbabb25c770ef99ed4e16a4ffeb8e6a4f7c4f06aa\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:2177e59c033bf0d1bf7de1ced561205963583caf3242c6c700a723034bfb5f8e\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:66f4f48a89cdd30ab3a47335df81c76e9a63799d0d84b29c0618371c66fa37b0\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-win32.whl\", hash = \"sha256:b07fa9e634234e84096adfa4be3828c8f26e238679c122824b2b3d7131bec578\"},\n+    {file = \"rpds_py-0.22.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:ca4657e9fd0b1b5376942d403d634ce188f79064f0873aa853ab05b10185ceec\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:608c84699b2db09c6a8743845b1a3dad36fae53eaaecb241d45b13dff74405fb\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:9dae4eb9b5534e09ba6c6ab496a757e5e394b7e7b08767d25ca37e8d36491114\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:09a1f000c5f6e08b298275bae00921e9fbbf2a35dae0a86db2821c058c2201a9\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:580ccbf11f02f948add4cb641843030a89f1463d7c0740cbfc9aca91e9dc34b3\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:96559e05bdf938b2048353e10a7920b98f853cefe4482c2064a718d7d0a50bd7\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:128cbaed7ba26116820bcb992405d6a13ea18c8fca1b8c4f59906d858e91e979\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:734783dd7da58f76222f458346ddebdb3621686a1a2a667db5049caf0c9956b9\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:c9ce6b83597d45bec44a2690857ede62fc98223772135f8a7fa90884eb726501\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:bca4428c4a957b78ded3e6e62884ab03f029dce8fa8d34818da0f80f61332b49\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:1ded65691a1d3fd7d2aa89d2c91aa51f941601bb2ce099739909034d957fef4b\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:72407065ad459db9f3d052ea8c51e02534f02533fc61e51cbab3bd94166f086c\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-win32.whl\", hash = \"sha256:eb013aa01b404219f28dc973d9e6310fd4db216d7299253dd355629952e0564e\"},\n+    {file = \"rpds_py-0.22.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:8bd9ec1db79a664f4cbb12878693b73416f4d2cb425d3e27eccc1bdfbdc826ef\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:8ec41049c90d204a6561238a9ad6c7263ebb7009d9759c98b58078d9d2fec9ba\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:102be79c4cc47a4aeb5912401185c404cd2601c15a7163bbecff7f1bfe20b669\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8a603155db408f773637f9e3a712c6e3cbc521aaa8fa2b99f9ba6106c59a2496\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:5dbff9402c2bdf00bf0df9905694b3c292a3847c725651938a72f554351a5fcb\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:96b3759d8ab2323324e0a92b2f44834f9d88089b8d1ab6f533b61f4be3411cef\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c3029f481b31f329b1fdb4ec4b56935d82210ddd9c6f86ea5a87c06f1e97b161\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d280b4bf09f719b89fd9aab3b71067acc0d0449b7d1eba99a2ade4939cef8296\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:6c8e97e19aa7b0b0d801a159f932ce4435f1049c8c38e2bb372bb5bee559ce50\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:50e4b5d291105f7063259fe0125b1af902fb34499444d7c5c521dd8328b00939\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:d3777c446bb1c5fcd82dc3f8776e1a146cd91e80cc1892f8634575ace438d22f\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:447ae1104fb32197b9262f772d565d38e834cc2e9edd89350b37b88fed636e70\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-win32.whl\", hash = \"sha256:55d371b9d8b0c2a68a50413a8cb01c3c3ce1ea4f768bf77b66669a9a486e101e\"},\n+    {file = \"rpds_py-0.22.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:413a30a99d8683dace3765885920ed27ab662efbb6c98d81db76c397ad1ffd71\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:aa2ba0176037c915d8660a4e46581d645e2c22b5373e466bc8640a794d45861a\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:4ba6c66fbc6015b2f99e7176fec41793cecb00c4cc357cad038dff85e6ac42ab\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:15fa4ca658f8ad22645d3531682b17e5580832efbfa87304c3e62214c79c1e8a\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:d7833ef6f5d6cb634f296abfd93452fb3eb44c4e9a6ae95c1021eab704c1cee2\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c0467838c90435b80793cde486a318fc916ee57f2af54e4b10c72b20cbdcbaa9\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d962e2e89b3a95e3597a34b8c93ced1e98958502c5b8096c9fd69deff279f561\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8ce729f1dc8a4a190c34b69f75377bddc004079b2963ab722ab91fafe040be6d\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:8080467df22feca0fc9c46567001777c6fbc2b4a2683a7137420896051874ca1\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0f9eb37d3a60b262a98ab51ee899cac039de9ca0ce68dcf1a6518a09719020b0\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:153248f48d6f90a295a502f53ec544a3ffbd21b0bb32f5dca39c4b93a764d6a2\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:0a53592cdf98cec3dfcdb24ffec8a4797e7656b65700099af43ec7df023b6de4\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-win32.whl\", hash = \"sha256:e8056adcefa2dcb67e8bc91ea5eee26df66e8b297a8cd6ff0903f85c70908fa0\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:a451dba533be77454ebcffc85189108fc05f279100835ac76e7989edacb89156\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-macosx_10_12_x86_64.whl\", hash = \"sha256:2ea23f1525d4f64286dbe0947c929d45c3ffe963b2dbed1d3844a2e4938bda42\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:3aaa22487477de9618ce3b37f99fbe81219ba96f3c2ca84f576f0ab451b83aba\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8954b9ffe60f479a0c0ba40987db2546c735ab02a725ea7fd89342152d4d821d\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:c8502a02ae3ae67084f5a0bf5a8253b19fa7a887f824e41e016cdb0ac532a06f\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a083221b6a4ecdef38a60c95d8d3223d99449cb4da2544e9644958dc16664eb9\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:542eb246d5be31b5e0a9c8ddb9539416f9b31f58f75bd4ee328bff2b5c58d6fd\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ffae97d28ea4f2c613a751d087b75a97fb78311b38cc2e9a2f4587e473ace167\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:d0ff8d5b13ce2357fa8b33a0a2e3775aa71df5bf7c8ba060634c9d15ab12f357\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:0f057a0c546c42964836b209d8de9ea1a4f4b0432006c6343cbe633d8ca14571\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:48ee97c7c6027fd423058675b5a39d0b5f7a1648250b671563d5c9f74ff13ff0\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:babec324e8654a59122aaa66936a9a483faa03276db9792f51332475c2dddc4a\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-win32.whl\", hash = \"sha256:e69acdbc132c9592c8dc393af85e38e206ca847c7019a953ff625191c3a12312\"},\n+    {file = \"rpds_py-0.22.1-cp313-cp313t-win_amd64.whl\", hash = \"sha256:c783e4ed68200f4e03c125690d23158b1c49c4b186d458a18debc109bbdc3c2e\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:2143c3aed85992604d758bbe67da839fb4aab3dd2e1c6dddab5b3ca7162b34a2\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:f57e2d0f8022783426121b586d7c842ea40ea832a29e28ca36c881b54c74fb28\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8c0c324879d483504b07f7b18eb1b50567c434263bbe4866ecce33056162668a\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:1c40e02cc4f3e18fd39344edb10eebe04bd11cfd13119606b5771e5ea51630d3\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f76c6f319e57007ad52e671ec741d801324760a377e3d4992c9bb8200333ebac\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f5cae9b415ea8a6a563566dbf46650222eccc5971c7daa16fbee63aef92ae543\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b09209cdfcacf5eba9cf80367130532e6c02e695252e1f64d3cfcc2356e6e19f\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:dbe428d0ac6eacaf05402adbaf137f59ad6063848182d1ff294f95ce0f24005b\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:626b9feb01bff049a5aec4804f0c58db12585778b4902e5376a95b01f80a7a16\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:ec1ccc2a9f764cd632fb8ab28fdde166250df54fc8d97315a4a6948dc5367639\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:ef92b1fbe6aa2e7885eb90853cc016b1fc95439a8cc8da6d526880e9e2148695\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-win32.whl\", hash = \"sha256:c88535f83f7391cf3a45af990237e3939a6fdfbedaed2571633bfdd0bceb36b0\"},\n+    {file = \"rpds_py-0.22.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:7839b7528faa4d134c183b1f2dd1ee4dc2ca2f899f4f0cfdf00fc04c255262a7\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:a0ed14a4162c2c2b21a162c9fcf90057e3e7da18cd171ab344c1e1664f75090e\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:05fdeae9010533e47715c37df83264df0122584e40d691d50cf3607c060952a3\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4659b2e4a5008715099e216050f5c6976e5a4329482664411789968b82e3f17d\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:a18aedc032d6468b73ebbe4437129cb30d54fe543cde2f23671ecad76c3aea24\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:149b4d875ef9b12a8f5e303e86a32a58f8ef627e57ec97a7d0e4be819069d141\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fdaee3947eaaa52dae3ceb9d9f66329e13d8bae35682b1e5dd54612938693934\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:36ce951800ed2acc6772fd9f42150f29d567f0423989748052fdb39d9e2b5795\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:ab784621d3e2a41916e21f13a483602cc989fd45fff637634b9231ba43d4383b\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:c2a214bf5b79bd39a9de1c991353aaaacafda83ba1374178309e92be8e67d411\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:85060e96953647871957d41707adb8d7bff4e977042fd0deb4fc1881b98dd2fe\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:c6f3fd617db422c9d4e12cb8d84c984fe07d6d9cb0950cbf117f3bccc6268d05\"},\n+    {file = \"rpds_py-0.22.1-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:f2d1b58a0c3a73f0361759642e80260a6d28eee6501b40fe25b82af33ef83f21\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:76eaa4c087a061a2c8a0a92536405069878a8f530c00e84a9eaf332e70f5561f\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:959ae04ed30cde606f3a0320f0a1f4167a107e685ef5209cce28c5080590bd31\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:198067aa6f3d942ff5d0d655bb1e91b59ae85279d47590682cba2834ac1b97d2\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:3e7e99e2af59c56c59b6c964d612511b8203480d39d1ef83edc56f2cb42a3f5d\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:0545928bdf53dfdfcab284468212efefb8a6608ca3b6910c7fb2e5ed8bdc2dc0\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ef7282d8a14b60dd515e47060638687710b1d518f4b5e961caad43fb3a3606f9\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fe3f245c2f39a5692d9123c174bc48f6f9fe3e96407e67c6d04541a767d99e72\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:efb2ad60ca8637d5f9f653f9a9a8d73964059972b6b95036be77e028bffc68a3\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:d8306f27418361b788e3fca9f47dec125457f80122e7e31ba7ff5cdba98343f8\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:4c8dc7331e8cbb1c0ea2bcb550adb1777365944ffd125c69aa1117fdef4887f5\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:776a06cb5720556a549829896a49acebb5bdd96c7bba100191a994053546975a\"},\n+    {file = \"rpds_py-0.22.1-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:e4f91d702b9ce1388660b3d4a28aa552614a1399e93f718ed0dacd68f23b3d32\"},\n+    {file = \"rpds_py-0.22.1.tar.gz\", hash = \"sha256:157a023bded0618a1eea54979fe2e0f9309e9ddc818ef4b8fc3b884ff38fedd5\"},\n ]\n \n [[package]]\n@@ -8331,13 +8327,13 @@ blobfile = [\"blobfile (>=2)\"]\n \n [[package]]\n name = \"timm\"\n-version = \"1.0.11\"\n+version = \"1.0.12\"\n description = \"PyTorch Image Models\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"timm-1.0.11-py3-none-any.whl\", hash = \"sha256:52a6f895e2cbec35a87d0846870419c2c0aa40de9b205bcda917f38278bf3044\"},\n-    {file = \"timm-1.0.11.tar.gz\", hash = \"sha256:a005f72b87e67ed30cdbf405a9ffd4e723360c780a43b1cefe266af8ecc9d151\"},\n+    {file = \"timm-1.0.12-py3-none-any.whl\", hash = \"sha256:6b2770674213f10b7f193be5598ce48bd010ab21cc8af77dba6aeef58b1298a1\"},\n+    {file = \"timm-1.0.12.tar.gz\", hash = \"sha256:9da490683bd06302ec40e1892f1ccf87985f033e41f3580887d886b9aee9449a\"},\n ]\n \n [package.dependencies]\n@@ -9851,93 +9847,93 @@ files = [\n \n [[package]]\n name = \"yarl\"\n-version = \"1.18.0\"\n+version = \"1.18.3\"\n description = \"Yet another URL library\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"yarl-1.18.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:074fee89caab89a97e18ef5f29060ef61ba3cae6cd77673acc54bfdd3214b7b7\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b026cf2c32daf48d90c0c4e406815c3f8f4cfe0c6dfccb094a9add1ff6a0e41a\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:ae38bd86eae3ba3d2ce5636cc9e23c80c9db2e9cb557e40b98153ed102b5a736\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:685cc37f3f307c6a8e879986c6d85328f4c637f002e219f50e2ef66f7e062c1d\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8254dbfce84ee5d1e81051ee7a0f1536c108ba294c0fdb5933476398df0654f3\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:20de4a8b04de70c49698dc2390b7fd2d18d424d3b876371f9b775e2b462d4b41\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b0a2074a37285570d54b55820687de3d2f2b9ecf1b714e482e48c9e7c0402038\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3f576ed278860df2721a5d57da3381040176ef1d07def9688a385c8330db61a1\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:3a3709450a574d61be6ac53d582496014342ea34876af8dc17cc16da32826c9a\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:bd80ed29761490c622edde5dd70537ca8c992c2952eb62ed46984f8eff66d6e8\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:32141e13a1d5a48525e519c9197d3f4d9744d818d5c7d6547524cc9eccc8971e\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:8b8d3e4e014fb4274f1c5bf61511d2199e263909fb0b8bda2a7428b0894e8dc6\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:701bb4a8f4de191c8c0cc9a1e6d5142f4df880e9d1210e333b829ca9425570ed\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:a45d94075ac0647621eaaf693c8751813a3eccac455d423f473ffed38c8ac5c9\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-win32.whl\", hash = \"sha256:34176bfb082add67cb2a20abd85854165540891147f88b687a5ed0dc225750a0\"},\n-    {file = \"yarl-1.18.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:73553bbeea7d6ec88c08ad8027f4e992798f0abc459361bf06641c71972794dc\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:b8e8c516dc4e1a51d86ac975b0350735007e554c962281c432eaa5822aa9765c\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:2e6b4466714a73f5251d84b471475850954f1fa6acce4d3f404da1d55d644c34\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c893f8c1a6d48b25961e00922724732d00b39de8bb0b451307482dc87bddcd74\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:13aaf2bdbc8c86ddce48626b15f4987f22e80d898818d735b20bd58f17292ee8\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:dd21c0128e301851de51bc607b0a6da50e82dc34e9601f4b508d08cc89ee7929\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:205de377bd23365cd85562c9c6c33844050a93661640fda38e0567d2826b50df\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ed69af4fe2a0949b1ea1d012bf065c77b4c7822bad4737f17807af2adb15a73c\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8e1c18890091aa3cc8a77967943476b729dc2016f4cfe11e45d89b12519d4a93\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:91b8fb9427e33f83ca2ba9501221ffaac1ecf0407f758c4d2f283c523da185ee\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:536a7a8a53b75b2e98ff96edb2dfb91a26b81c4fed82782035767db5a465be46\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:a64619a9c47c25582190af38e9eb382279ad42e1f06034f14d794670796016c0\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c73a6bbc97ba1b5a0c3c992ae93d721c395bdbb120492759b94cc1ac71bc6350\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:a173401d7821a2a81c7b47d4e7d5c4021375a1441af0c58611c1957445055056\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:7520e799b1f84e095cce919bd6c23c9d49472deeef25fe1ef960b04cca51c3fc\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-win32.whl\", hash = \"sha256:c4cb992d8090d5ae5f7afa6754d7211c578be0c45f54d3d94f7781c495d56716\"},\n-    {file = \"yarl-1.18.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:52c136f348605974c9b1c878addd6b7a60e3bf2245833e370862009b86fa4689\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:1ece25e2251c28bab737bdf0519c88189b3dd9492dc086a1d77336d940c28ced\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:454902dc1830d935c90b5b53c863ba2a98dcde0fbaa31ca2ed1ad33b2a7171c6\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:01be8688fc211dc237e628fcc209dda412d35de7642453059a0553747018d075\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4d26f1fa9fa2167bb238f6f4b20218eb4e88dd3ef21bb8f97439fa6b5313e30d\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b234a4a9248a9f000b7a5dfe84b8cb6210ee5120ae70eb72a4dcbdb4c528f72f\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fe94d1de77c4cd8caff1bd5480e22342dbd54c93929f5943495d9c1e8abe9f42\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9b4c90c5363c6b0a54188122b61edb919c2cd1119684999d08cd5e538813a28e\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:49a98ecadc5a241c9ba06de08127ee4796e1009555efd791bac514207862b43d\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:9106025c7f261f9f5144f9aa7681d43867eed06349a7cfb297a1bc804de2f0d1\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:f275ede6199d0f1ed4ea5d55a7b7573ccd40d97aee7808559e1298fe6efc8dbd\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:f7edeb1dcc7f50a2c8e08b9dc13a413903b7817e72273f00878cb70e766bdb3b\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c083f6dd6951b86e484ebfc9c3524b49bcaa9c420cb4b2a78ef9f7a512bfcc85\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:80741ec5b471fbdfb997821b2842c59660a1c930ceb42f8a84ba8ca0f25a66aa\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:b1a3297b9cad594e1ff0c040d2881d7d3a74124a3c73e00c3c71526a1234a9f7\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-win32.whl\", hash = \"sha256:cd6ab7d6776c186f544f893b45ee0c883542b35e8a493db74665d2e594d3ca75\"},\n-    {file = \"yarl-1.18.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:039c299a0864d1f43c3e31570045635034ea7021db41bf4842693a72aca8df3a\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:6fb64dd45453225f57d82c4764818d7a205ee31ce193e9f0086e493916bd4f72\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:3adaaf9c6b1b4fc258584f4443f24d775a2086aee82d1387e48a8b4f3d6aecf6\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:da206d1ec78438a563c5429ab808a2b23ad7bc025c8adbf08540dde202be37d5\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:576d258b21c1db4c6449b1c572c75d03f16a482eb380be8003682bdbe7db2f28\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c60e547c0a375c4bfcdd60eef82e7e0e8698bf84c239d715f5c1278a73050393\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e3818eabaefb90adeb5e0f62f047310079d426387991106d4fbf3519eec7d90a\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a5f72421246c21af6a92fbc8c13b6d4c5427dfd949049b937c3b731f2f9076bd\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7fa7d37f2ada0f42e0723632993ed422f2a679af0e200874d9d861720a54f53e\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:42ba84e2ac26a3f252715f8ec17e6fdc0cbf95b9617c5367579fafcd7fba50eb\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:6a49ad0102c0f0ba839628d0bf45973c86ce7b590cdedf7540d5b1833ddc6f00\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:96404e8d5e1bbe36bdaa84ef89dc36f0e75939e060ca5cd45451aba01db02902\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:a0509475d714df8f6d498935b3f307cd122c4ca76f7d426c7e1bb791bcd87eda\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:1ff116f0285b5c8b3b9a2680aeca29a858b3b9e0402fc79fd850b32c2bcb9f8b\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e2580c1d7e66e6d29d6e11855e3b1c6381971e0edd9a5066e6c14d79bc8967af\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-win32.whl\", hash = \"sha256:14408cc4d34e202caba7b5ac9cc84700e3421a9e2d1b157d744d101b061a4a88\"},\n-    {file = \"yarl-1.18.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:1db1537e9cb846eb0ff206eac667f627794be8b71368c1ab3207ec7b6f8c5afc\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:fa2c9cb607e0f660d48c54a63de7a9b36fef62f6b8bd50ff592ce1137e73ac7d\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:c0f4808644baf0a434a3442df5e0bedf8d05208f0719cedcd499e168b23bfdc4\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:7db9584235895a1dffca17e1c634b13870852094f6389b68dcc6338086aa7b08\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:309f8d27d6f93ceeeb80aa6980e883aa57895270f7f41842b92247e65d7aeddf\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:609ffd44fed2ed88d9b4ef62ee860cf86446cf066333ad4ce4123505b819e581\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f172b8b2c72a13a06ea49225a9c47079549036ad1b34afa12d5491b881f5b993\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d89ae7de94631b60d468412c18290d358a9d805182373d804ec839978b120422\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:466d31fd043ef9af822ee3f1df8fdff4e8c199a7f4012c2642006af240eade17\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:7609b8462351c4836b3edce4201acb6dd46187b207c589b30a87ffd1813b48dc\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:d9d4f5e471e8dc49b593a80766c2328257e405f943c56a3dc985c125732bc4cf\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:67b336c15e564d76869c9a21316f90edf546809a5796a083b8f57c845056bc01\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b212452b80cae26cb767aa045b051740e464c5129b7bd739c58fbb7deb339e7b\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:38b39b7b3e692b6c92b986b00137a3891eddb66311b229d1940dcbd4f025083c\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:a7ee6884a8848792d58b854946b685521f41d8871afa65e0d4a774954e9c9e89\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-win32.whl\", hash = \"sha256:b4095c5019bb889aa866bf12ed4c85c0daea5aafcb7c20d1519f02a1e738f07f\"},\n-    {file = \"yarl-1.18.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:2d90f2e4d16a5b0915ee065218b435d2ef619dd228973b1b47d262a6f7cd8fa5\"},\n-    {file = \"yarl-1.18.0-py3-none-any.whl\", hash = \"sha256:dbf53db46f7cf176ee01d8d98c39381440776fcda13779d269a8ba664f69bec0\"},\n-    {file = \"yarl-1.18.0.tar.gz\", hash = \"sha256:20d95535e7d833889982bfe7cc321b7f63bf8879788fee982c76ae2b24cfb715\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:7df647e8edd71f000a5208fe6ff8c382a1de8edfbccdbbfe649d263de07d8c34\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:c69697d3adff5aa4f874b19c0e4ed65180ceed6318ec856ebc423aa5850d84f7\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:602d98f2c2d929f8e697ed274fbadc09902c4025c5a9963bf4e9edfc3ab6f7ed\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c654d5207c78e0bd6d749f6dae1dcbbfde3403ad3a4b11f3c5544d9906969dde\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5094d9206c64181d0f6e76ebd8fb2f8fe274950a63890ee9e0ebfd58bf9d787b\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:35098b24e0327fc4ebdc8ffe336cee0a87a700c24ffed13161af80124b7dc8e5\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3236da9272872443f81fedc389bace88408f64f89f75d1bdb2256069a8730ccc\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e2c08cc9b16f4f4bc522771d96734c7901e7ebef70c6c5c35dd0f10845270bcd\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:80316a8bd5109320d38eef8833ccf5f89608c9107d02d2a7f985f98ed6876990\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:c1e1cc06da1491e6734f0ea1e6294ce00792193c463350626571c287c9a704db\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:fea09ca13323376a2fdfb353a5fa2e59f90cd18d7ca4eaa1fd31f0a8b4f91e62\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:e3b9fd71836999aad54084906f8663dffcd2a7fb5cdafd6c37713b2e72be1760\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:757e81cae69244257d125ff31663249b3013b5dc0a8520d73694aed497fb195b\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:b1771de9944d875f1b98a745bc547e684b863abf8f8287da8466cf470ef52690\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-win32.whl\", hash = \"sha256:8874027a53e3aea659a6d62751800cf6e63314c160fd607489ba5c2edd753cf6\"},\n+    {file = \"yarl-1.18.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:93b2e109287f93db79210f86deb6b9bbb81ac32fc97236b16f7433db7fc437d8\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:8503ad47387b8ebd39cbbbdf0bf113e17330ffd339ba1144074da24c545f0069\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:02ddb6756f8f4517a2d5e99d8b2f272488e18dd0bfbc802f31c16c6c20f22193\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:67a283dd2882ac98cc6318384f565bffc751ab564605959df4752d42483ad889\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d980e0325b6eddc81331d3f4551e2a333999fb176fd153e075c6d1c2530aa8a8\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b643562c12680b01e17239be267bc306bbc6aac1f34f6444d1bded0c5ce438ca\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c017a3b6df3a1bd45b9fa49a0f54005e53fbcad16633870104b66fa1a30a29d8\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:75674776d96d7b851b6498f17824ba17849d790a44d282929c42dbb77d4f17ae\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ccaa3a4b521b780a7e771cc336a2dba389a0861592bbce09a476190bb0c8b4b3\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:2d06d3005e668744e11ed80812e61efd77d70bb7f03e33c1598c301eea20efbb\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:9d41beda9dc97ca9ab0b9888cb71f7539124bc05df02c0cff6e5acc5a19dcc6e\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:ba23302c0c61a9999784e73809427c9dbedd79f66a13d84ad1b1943802eaaf59\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:6748dbf9bfa5ba1afcc7556b71cda0d7ce5f24768043a02a58846e4a443d808d\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:0b0cad37311123211dc91eadcb322ef4d4a66008d3e1bdc404808992260e1a0e\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:0fb2171a4486bb075316ee754c6d8382ea6eb8b399d4ec62fde2b591f879778a\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-win32.whl\", hash = \"sha256:61b1a825a13bef4a5f10b1885245377d3cd0bf87cba068e1d9a88c2ae36880e1\"},\n+    {file = \"yarl-1.18.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:b9d60031cf568c627d028239693fd718025719c02c9f55df0a53e587aab951b5\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:1dd4bdd05407ced96fed3d7f25dbbf88d2ffb045a0db60dbc247f5b3c5c25d50\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:7c33dd1931a95e5d9a772d0ac5e44cac8957eaf58e3c8da8c1414de7dd27c576\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:25b411eddcfd56a2f0cd6a384e9f4f7aa3efee14b188de13048c25b5e91f1640\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:436c4fc0a4d66b2badc6c5fc5ef4e47bb10e4fd9bf0c79524ac719a01f3607c2\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e35ef8683211db69ffe129a25d5634319a677570ab6b2eba4afa860f54eeaf75\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:84b2deecba4a3f1a398df819151eb72d29bfeb3b69abb145a00ddc8d30094512\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:00e5a1fea0fd4f5bfa7440a47eff01d9822a65b4488f7cff83155a0f31a2ecba\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d0e883008013c0e4aef84dcfe2a0b172c4d23c2669412cf5b3371003941f72bb\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:5a3f356548e34a70b0172d8890006c37be92995f62d95a07b4a42e90fba54272\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:ccd17349166b1bee6e529b4add61727d3f55edb7babbe4069b5764c9587a8cc6\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:b958ddd075ddba5b09bb0be8a6d9906d2ce933aee81100db289badbeb966f54e\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c7d79f7d9aabd6011004e33b22bc13056a3e3fb54794d138af57f5ee9d9032cb\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:4891ed92157e5430874dad17b15eb1fda57627710756c27422200c52d8a4e393\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:ce1af883b94304f493698b00d0f006d56aea98aeb49d75ec7d98cd4a777e9285\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-win32.whl\", hash = \"sha256:f91c4803173928a25e1a55b943c81f55b8872f0018be83e3ad4938adffb77dd2\"},\n+    {file = \"yarl-1.18.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:7e2ee16578af3b52ac2f334c3b1f92262f47e02cc6193c598502bd46f5cd1477\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:90adb47ad432332d4f0bc28f83a5963f426ce9a1a8809f5e584e704b82685dcb\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:913829534200eb0f789d45349e55203a091f45c37a2674678744ae52fae23efa\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:ef9f7768395923c3039055c14334ba4d926f3baf7b776c923c93d80195624782\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:88a19f62ff30117e706ebc9090b8ecc79aeb77d0b1f5ec10d2d27a12bc9f66d0\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e17c9361d46a4d5addf777c6dd5eab0715a7684c2f11b88c67ac37edfba6c482\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1a74a13a4c857a84a845505fd2d68e54826a2cd01935a96efb1e9d86c728e186\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:41f7ce59d6ee7741af71d82020346af364949314ed3d87553763a2df1829cc58\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f52a265001d830bc425f82ca9eabda94a64a4d753b07d623a9f2863fde532b53\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:82123d0c954dc58db301f5021a01854a85bf1f3bb7d12ae0c01afc414a882ca2\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:2ec9bbba33b2d00999af4631a3397d1fd78290c48e2a3e52d8dd72db3a067ac8\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:fbd6748e8ab9b41171bb95c6142faf068f5ef1511935a0aa07025438dd9a9bc1\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:877d209b6aebeb5b16c42cbb377f5f94d9e556626b1bfff66d7b0d115be88d0a\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:b464c4ab4bfcb41e3bfd3f1c26600d038376c2de3297760dfe064d2cb7ea8e10\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:8d39d351e7faf01483cc7ff7c0213c412e38e5a340238826be7e0e4da450fdc8\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-win32.whl\", hash = \"sha256:61ee62ead9b68b9123ec24bc866cbef297dd266175d53296e2db5e7f797f902d\"},\n+    {file = \"yarl-1.18.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:578e281c393af575879990861823ef19d66e2b1d0098414855dd367e234f5b3c\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:61e5e68cb65ac8f547f6b5ef933f510134a6bf31bb178be428994b0cb46c2a04\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:fe57328fbc1bfd0bd0514470ac692630f3901c0ee39052ae47acd1d90a436719\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a440a2a624683108a1b454705ecd7afc1c3438a08e890a1513d468671d90a04e\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:09c7907c8548bcd6ab860e5f513e727c53b4a714f459b084f6580b49fa1b9cee\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b4f6450109834af88cb4cc5ecddfc5380ebb9c228695afc11915a0bf82116789\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a9ca04806f3be0ac6d558fffc2fdf8fcef767e0489d2684a21912cc4ed0cd1b8\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:77a6e85b90a7641d2e07184df5557132a337f136250caafc9ccaa4a2a998ca2c\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6333c5a377c8e2f5fae35e7b8f145c617b02c939d04110c76f29ee3676b5f9a5\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:0b3c92fa08759dbf12b3a59579a4096ba9af8dd344d9a813fc7f5070d86bbab1\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:4ac515b860c36becb81bb84b667466885096b5fc85596948548b667da3bf9f24\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:045b8482ce9483ada4f3f23b3774f4e1bf4f23a2d5c912ed5170f68efb053318\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:a4bb030cf46a434ec0225bddbebd4b89e6471814ca851abb8696170adb163985\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:54d6921f07555713b9300bee9c50fb46e57e2e639027089b1d795ecd9f7fa910\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:1d407181cfa6e70077df3377938c08012d18893f9f20e92f7d2f314a437c30b1\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-win32.whl\", hash = \"sha256:ac36703a585e0929b032fbaab0707b75dc12703766d0b53486eabd5139ebadd5\"},\n+    {file = \"yarl-1.18.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:ba87babd629f8af77f557b61e49e7c7cac36f22f871156b91e10a6e9d4f829e9\"},\n+    {file = \"yarl-1.18.3-py3-none-any.whl\", hash = \"sha256:b57f4f58099328dfb26c6a771d09fb20dbbae81d20cfb66141251ea063bd101b\"},\n+    {file = \"yarl-1.18.3.tar.gz\", hash = \"sha256:ac1801c45cbf77b6c99242eeff4fffb5e4e73a800b5c4ad4fc0be5def634d2e1\"},\n ]\n \n [package.dependencies]\n@@ -9947,23 +9943,23 @@ propcache = \">=0.2.0\"\n \n [[package]]\n name = \"yt-dlp\"\n-version = \"2024.11.18\"\n+version = \"2024.12.3\"\n description = \"A feature-rich command-line audio/video downloader\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"yt_dlp-2024.11.18-py3-none-any.whl\", hash = \"sha256:b9741695911dc566498b5f115cdd6b1abbc5be61cb01fd98abe649990a41656c\"},\n-    {file = \"yt_dlp-2024.11.18.tar.gz\", hash = \"sha256:b8a4c23d3c9afd7e476bcdb87f38b6c0e8e12e3a239d7988f13acb434200f54d\"},\n+    {file = \"yt_dlp-2024.12.3-py3-none-any.whl\", hash = \"sha256:a6b32ea879ce3f95b47b9b57948b755b4d61f3700d4fc24602b17537ddf0cf90\"},\n+    {file = \"yt_dlp-2024.12.3.tar.gz\", hash = \"sha256:35abff51c5762033103f2330ba0a8a1f48c4388a413a2d8cdc9b84642fe8edd4\"},\n ]\n \n [package.extras]\n build = [\"build\", \"hatchling\", \"pip\", \"setuptools (>=71.0.2)\", \"wheel\"]\n curl-cffi = [\"curl-cffi (==0.5.10)\", \"curl-cffi (>=0.5.10,!=0.6.*,<0.7.2)\"]\n-default = [\"brotli\", \"brotlicffi\", \"certifi\", \"mutagen\", \"pycryptodomex\", \"requests (>=2.32.2,<3)\", \"urllib3 (>=1.26.17,<3)\", \"websockets (>=13.0,<14)\"]\n-dev = [\"autopep8 (>=2.0,<3.0)\", \"pre-commit\", \"pytest (>=8.1,<9.0)\", \"pytest-rerunfailures (>=14.0,<15.0)\", \"ruff (>=0.7.0,<0.8.0)\"]\n+default = [\"brotli\", \"brotlicffi\", \"certifi\", \"mutagen\", \"pycryptodomex\", \"requests (>=2.32.2,<3)\", \"urllib3 (>=1.26.17,<3)\", \"websockets (>=13.0)\"]\n+dev = [\"autopep8 (>=2.0,<3.0)\", \"pre-commit\", \"pytest (>=8.1,<9.0)\", \"pytest-rerunfailures (>=14.0,<15.0)\", \"ruff (>=0.8.0,<0.9.0)\"]\n pyinstaller = [\"pyinstaller (>=6.11.1)\"]\n secretstorage = [\"cffi\", \"secretstorage\"]\n-static-analysis = [\"autopep8 (>=2.0,<3.0)\", \"ruff (>=0.7.0,<0.8.0)\"]\n+static-analysis = [\"autopep8 (>=2.0,<3.0)\", \"ruff (>=0.8.0,<0.9.0)\"]\n test = [\"pytest (>=8.1,<9.0)\", \"pytest-rerunfailures (>=14.0,<15.0)\"]\n \n [[package]]\n",
        "test_patch": "diff --git a/.github/workflows/pytest_package.yml b/.github/workflows/pytest_package.yml\nindex 2b45b0b953..a515fc064f 100644\n--- a/.github/workflows/pytest_package.yml\n+++ b/.github/workflows/pytest_package.yml\n@@ -48,6 +48,7 @@ jobs:\n         ASKNEWS_CLIENT_ID: \"${{ secrets.ASKNEWS_CLIENT_ID }}\"\n         ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n         CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n+        MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n       run: poetry run pytest --fast-test-mode test/\n \n   pytest_package_llm_test:\n@@ -85,6 +86,7 @@ jobs:\n         ASKNEWS_CLIENT_ID: \"${{ secrets.ASKNEWS_CLIENT_ID }}\"\n         ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n         CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n+        MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n       run: poetry run pytest --llm-test-only test/\n \n   pytest_package_very_slow_test:\n@@ -122,4 +124,5 @@ jobs:\n         ASKNEWS_CLIENT_ID: \"${{ secrets.ASKNEWS_CLIENT_ID }}\"\n         ASKNEWS_CLIENT_SECRET: \"${{ secrets.ASKNEWS_CLIENT_SECRET }}\"\n         CHUNKR_API_KEY: \"${{ secrets.CHUNKR_API_KEY }}\"\n+        MESHY_API_KEY: \"${{ secrets.MESHY_API_KEY }}\"\n       run: poetry run pytest --very-slow-test-only test/\ndiff --git a/test/toolkits/test_meshy_function.py b/test/toolkits/test_meshy_function.py\nnew file mode 100644\nindex 0000000000..bfd49eefa7\n--- /dev/null\n+++ b/test/toolkits/test_meshy_function.py\n@@ -0,0 +1,176 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import unittest\n+from unittest.mock import MagicMock, patch\n+\n+from camel.toolkits import MeshyToolkit\n+\n+\n+class TestMeshyToolkit(unittest.TestCase):\n+    @patch(\"requests.post\")\n+    def test_generate_3d_preview(self, mock_post):\n+        # Arrange\n+        mock_response = MagicMock()\n+        mock_response.raise_for_status = MagicMock()\n+        mock_response.json.return_value = {\"result\": \"task_id_123\"}\n+        mock_post.return_value = mock_response\n+\n+        toolkit = MeshyToolkit()\n+        prompt = \"A 3D model of a cat\"\n+        art_style = \"cartoon\"\n+        negative_prompt = \"No dogs\"\n+\n+        # Act\n+        result = toolkit.generate_3d_preview(\n+            prompt, art_style, negative_prompt\n+        )\n+\n+        # Assert\n+        mock_post.assert_called_once_with(\n+            \"https://api.meshy.ai/v2/text-to-3d\",\n+            headers={\"Authorization\": f\"Bearer {toolkit.api_key}\"},\n+            json={\n+                \"mode\": \"preview\",\n+                \"prompt\": prompt,\n+                \"art_style\": art_style,\n+                \"negative_prompt\": negative_prompt,\n+            },\n+        )\n+        self.assertEqual(result, {\"result\": \"task_id_123\"})\n+\n+    @patch(\"requests.post\")\n+    def test_refine_3d_model(self, mock_post):\n+        # Arrange\n+        mock_response = MagicMock()\n+        mock_response.raise_for_status = MagicMock()\n+        mock_response.json.return_value = {\"result\": \"task_id_456\"}\n+        mock_post.return_value = mock_response\n+\n+        toolkit = MeshyToolkit()\n+        preview_task_id = \"task_id_123\"\n+\n+        # Act\n+        result = toolkit.refine_3d_model(preview_task_id)\n+\n+        # Assert\n+        mock_post.assert_called_once_with(\n+            \"https://api.meshy.ai/v2/text-to-3d\",\n+            headers={\"Authorization\": f\"Bearer {toolkit.api_key}\"},\n+            json={\"mode\": \"refine\", \"preview_task_id\": preview_task_id},\n+        )\n+        self.assertEqual(result, {\"result\": \"task_id_456\"})\n+\n+    @patch(\"requests.get\")\n+    def test_get_task_status(self, mock_get):\n+        # Arrange\n+        mock_response = MagicMock()\n+        mock_response.raise_for_status = MagicMock()\n+        mock_response.json.return_value = {\n+            \"status\": \"SUCCEEDED\",\n+            \"result\": \"final_task_id\",\n+        }\n+        mock_get.return_value = mock_response\n+\n+        toolkit = MeshyToolkit()\n+        task_id = \"task_id_123\"\n+\n+        # Act\n+        result = toolkit.get_task_status(task_id)\n+\n+        # Assert\n+        mock_get.assert_called_once_with(\n+            f\"https://api.meshy.ai/v2/text-to-3d/{task_id}\",\n+            headers={\"Authorization\": f\"Bearer {toolkit.api_key}\"},\n+        )\n+        self.assertEqual(\n+            result, {\"status\": \"SUCCEEDED\", \"result\": \"final_task_id\"}\n+        )\n+\n+    @patch(\"requests.get\")\n+    @patch(\"time.sleep\", return_value=None)\n+    def test_wait_for_task_completion_success(self, mock_sleep, mock_get):\n+        # Arrange\n+        mock_response = MagicMock()\n+        mock_response.raise_for_status = MagicMock()\n+        mock_response.json.return_value = {\n+            \"status\": \"SUCCEEDED\",\n+            \"result\": \"final_task_id\",\n+        }\n+        mock_get.return_value = mock_response\n+\n+        toolkit = MeshyToolkit()\n+        task_id = \"task_id_123\"\n+\n+        # Act\n+        result = toolkit.wait_for_task_completion(task_id)\n+\n+        # Assert\n+        mock_get.assert_called()\n+        self.assertEqual(\n+            result, {\"status\": \"SUCCEEDED\", \"result\": \"final_task_id\"}\n+        )\n+\n+    @patch(\"requests.get\")\n+    @patch(\"time.sleep\", return_value=None)\n+    def test_wait_for_task_completion_timeout(self, mock_sleep, mock_get):\n+        # Arrange\n+        toolkit = MeshyToolkit()\n+        task_id = \"task_id_123\"\n+        mock_get.return_value.json.return_value = {\n+            \"status\": \"PENDING\"\n+        }  # Simulate pending status\n+\n+        # Act & Assert\n+        with self.assertRaises(TimeoutError):\n+            toolkit.wait_for_task_completion(\n+                task_id, timeout=1\n+            )  # Timeout after 1 second\n+\n+    @patch(\"requests.post\")\n+    @patch(\"requests.get\")\n+    @patch(\"time.sleep\", return_value=None)\n+    def test_generate_3d_model_complete(self, mock_sleep, mock_get, mock_post):\n+        # Arrange\n+        mock_preview_response = MagicMock()\n+        mock_preview_response.raise_for_status = MagicMock()\n+        mock_preview_response.json.return_value = {\"result\": \"preview_task_id\"}\n+        mock_post.return_value = mock_preview_response\n+\n+        mock_refine_response = MagicMock()\n+        mock_refine_response.raise_for_status = MagicMock()\n+        mock_refine_response.json.return_value = {\"result\": \"refine_task_id\"}\n+        mock_post.return_value = mock_refine_response\n+\n+        mock_status_response = MagicMock()\n+        mock_status_response.raise_for_status = MagicMock()\n+        mock_status_response.json.return_value = {\n+            \"status\": \"SUCCEEDED\",\n+            \"result\": \"final_task_id\",\n+        }\n+        mock_get.return_value = mock_status_response\n+\n+        toolkit = MeshyToolkit()\n+        prompt = \"A 3D model of a cat\"\n+        art_style = \"cartoon\"\n+        negative_prompt = \"No dogs\"\n+\n+        # Act\n+        result = toolkit.generate_3d_model_complete(\n+            prompt, art_style, negative_prompt\n+        )\n+\n+        # Assert\n+        self.assertEqual(\n+            result, {\"status\": \"SUCCEEDED\", \"result\": \"final_task_id\"}\n+        )\n",
        "problem_statement": "[Feature Request] Text to 3D models\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\n3D model generation has seen significant advancements and popularity recently, with major players like Adobe and NVIDIA investing in high-quality text-to-3D and image-to-3D models.  In addition, this is a modality that CAMEL does not support at the moment. This feature should allow users to create 3D assets directly from text or image inputs.\n\n### Solution\n\nIntegrate text and image to 3D assets model\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-12-01T13:36:08Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            ".github/workflows/pytest_package.yml"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1255,
        "instance_id": "camel-ai__camel-1255",
        "issue_numbers": [
            "923"
        ],
        "base_commit": "b3a2fde31a22713bfb5d979e95dbaf3f90c0c067",
        "patch": "diff --git a/camel/configs/__init__.py b/camel/configs/__init__.py\nindex ff4cc8c280..fcd9b7a9c4 100644\n--- a/camel/configs/__init__.py\n+++ b/camel/configs/__init__.py\n@@ -30,6 +30,7 @@\n     SambaCloudAPIConfig,\n     SambaVerseAPIConfig,\n )\n+from .sglang_config import SGLANG_API_PARAMS, SGLangConfig\n from .togetherai_config import TOGETHERAI_API_PARAMS, TogetherAIConfig\n from .vllm_config import VLLM_API_PARAMS, VLLMConfig\n from .yi_config import YI_API_PARAMS, YiConfig\n@@ -55,6 +56,8 @@\n     'Gemini_API_PARAMS',\n     'VLLMConfig',\n     'VLLM_API_PARAMS',\n+    'SGLangConfig',\n+    'SGLANG_API_PARAMS',\n     'MistralConfig',\n     'MISTRAL_API_PARAMS',\n     'RekaConfig',\ndiff --git a/camel/configs/sglang_config.py b/camel/configs/sglang_config.py\nnew file mode 100644\nindex 0000000000..8216981578\n--- /dev/null\n+++ b/camel/configs/sglang_config.py\n@@ -0,0 +1,71 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+from __future__ import annotations\n+\n+from typing import Sequence, Union\n+\n+from camel.configs.base_config import BaseConfig\n+from camel.types import NOT_GIVEN, NotGiven\n+\n+\n+class SGLangConfig(BaseConfig):\n+    r\"\"\"Defines the parameters for generating chat completions using the\n+    OpenAI API.\n+\n+    Reference: https://sgl-project.github.io/references/sampling_params.html\n+\n+    Args:\n+        stop (str or list, optional): Up to :obj:`4` sequences where the API\n+            will stop generating further tokens. (default: :obj:`None`)\n+        temperature (float, optional): Sampling temperature to use, between\n+            :obj:`0` and :obj:`2`. Higher values make the output more random,\n+            while lower values make it more focused and deterministic.\n+            (default: :obj:`1.0`)\n+        top_p (float, optional): An alternative to sampling with temperature,\n+            called nucleus sampling, where the model considers the results of\n+            the tokens with top_p probability mass. So :obj:`0.1` means only\n+            the tokens comprising the top 10% probability mass are considered.\n+            (default: :obj:`1.0`)\n+        n (int, optional): How many chat completion choices to generate for\n+            each input message. (default: :obj:`1`)\n+        frequency_penalty (float, optional): Number between :obj:`-2.0` and\n+            :obj:`2.0`. Positive values penalize new tokens based on their\n+            existing frequency in the text so far, decreasing the model's\n+            likelihood to repeat the same line verbatim. See more information\n+            about frequency and presence penalties. (default: :obj:`0.0`)\n+        presence_penalty (float, optional): Number between :obj:`-2.0` and\n+            :obj:`2.0`. Positive values penalize new tokens based on whether\n+            they appear in the text so far, increasing the model's likelihood\n+            to talk about new topics. See more information about frequency and\n+            presence penalties. (default: :obj:`0.0`)\n+        stream (bool, optional): Whether to stream the generated output in\n+            chunks. If set to `True`, the response will be streamed as it is\n+            generated. (default: :obj:`False`)\n+        max_tokens (int, optional): The maximum number of tokens to generate\n+            in the chat completion. The total length of input tokens and\n+            generated tokens is limited by the model's context length.\n+            (default: :obj:`None`)\n+    \"\"\"\n+\n+    stop: Union[str, Sequence[str], NotGiven] = NOT_GIVEN\n+    temperature: float = 1.0\n+    top_p: float = 1.0\n+    n: int = 1\n+    frequency_penalty: float = 0.0\n+    presence_penalty: float = 0.0\n+    stream: bool = False\n+    max_tokens: Union[int, NotGiven] = NOT_GIVEN\n+\n+\n+SGLANG_API_PARAMS = {param for param in SGLangConfig.model_fields.keys()}\ndiff --git a/camel/models/__init__.py b/camel/models/__init__.py\nindex 15dad9fd2c..94fc012bfa 100644\n--- a/camel/models/__init__.py\n+++ b/camel/models/__init__.py\n@@ -31,6 +31,7 @@\n from .qwen_model import QwenModel\n from .reka_model import RekaModel\n from .samba_model import SambaModel\n+from .sglang_model import SGLangModel\n from .stub_model import StubModel\n from .togetherai_model import TogetherAIModel\n from .vllm_model import VLLMModel\n@@ -55,6 +56,7 @@\n     'NvidiaModel',\n     'OllamaModel',\n     'VLLMModel',\n+    'SGLangModel',\n     'GeminiModel',\n     'OpenAICompatibleModel',\n     'RekaModel',\ndiff --git a/camel/models/model_factory.py b/camel/models/model_factory.py\nindex f9250b54a8..309c3dce67 100644\n--- a/camel/models/model_factory.py\n+++ b/camel/models/model_factory.py\n@@ -29,6 +29,7 @@\n from camel.models.qwen_model import QwenModel\n from camel.models.reka_model import RekaModel\n from camel.models.samba_model import SambaModel\n+from camel.models.sglang_model import SGLangModel\n from camel.models.stub_model import StubModel\n from camel.models.togetherai_model import TogetherAIModel\n from camel.models.vllm_model import VLLMModel\n@@ -86,6 +87,8 @@ def create(\n             model_class = OllamaModel\n         elif model_platform.is_vllm:\n             model_class = VLLMModel\n+        elif model_platform.is_sglang:\n+            model_class = SGLangModel\n         elif model_platform.is_openai_compatible_model:\n             model_class = OpenAICompatibleModel\n         elif model_platform.is_samba:\ndiff --git a/camel/models/sglang_model.py b/camel/models/sglang_model.py\nnew file mode 100644\nindex 0000000000..67c846e86d\n--- /dev/null\n+++ b/camel/models/sglang_model.py\n@@ -0,0 +1,225 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import logging\n+import threading\n+import time\n+from typing import Any, Dict, List, Optional, Union\n+\n+from openai import OpenAI, Stream\n+\n+from camel.configs import SGLANG_API_PARAMS, SGLangConfig\n+from camel.messages import OpenAIMessage\n+from camel.models import BaseModelBackend\n+from camel.types import (\n+    ChatCompletion,\n+    ChatCompletionChunk,\n+    ModelType,\n+)\n+from camel.utils import BaseTokenCounter, OpenAITokenCounter\n+\n+\n+class SGLangModel(BaseModelBackend):\n+    r\"\"\"SGLang service interface.\n+\n+    Args:\n+        model_type (Union[ModelType, str]): Model for which a backend is\n+            created.\n+        model_config_dict (Optional[Dict[str, Any]], optional): A dictionary\n+            that will be fed into:obj:`openai.ChatCompletion.create()`. If\n+            :obj:`None`, :obj:`SGLangConfig().as_dict()` will be used.\n+            (default: :obj:`None`)\n+        api_key (Optional[str], optional): The API key for authenticating with\n+            the model service. SGLang doesn't need API key, it would be ignored\n+            if set. (default: :obj:`None`)\n+        url (Optional[str], optional): The url to the model service. If not\n+            provided, :obj:`\"http://127.0.0.1:30000/v1\"` will be used.\n+            (default: :obj:`None`)\n+        token_counter (Optional[BaseTokenCounter], optional): Token counter to\n+            use for the model. If not provided, :obj:`OpenAITokenCounter(\n+            ModelType.GPT_4O_MINI)` will be used.\n+            (default: :obj:`None`)\n+\n+    Reference: https://sgl-project.github.io/backend/openai_api_completions.html\n+    \"\"\"\n+\n+    def __init__(\n+        self,\n+        model_type: Union[ModelType, str],\n+        model_config_dict: Optional[Dict[str, Any]] = None,\n+        api_key: Optional[str] = None,\n+        url: Optional[str] = None,\n+        token_counter: Optional[BaseTokenCounter] = None,\n+    ) -> None:\n+        if model_config_dict is None:\n+            model_config_dict = SGLangConfig().as_dict()\n+\n+        self.server_process = None\n+        self.last_run_time: Optional[float] = (\n+            None  # Will be set when the server starts\n+        )\n+        self._lock = threading.Lock()\n+        self._inactivity_thread: Optional[threading.Thread] = None\n+\n+        super().__init__(\n+            model_type, model_config_dict, api_key, url, token_counter\n+        )\n+\n+        self._client = None\n+\n+        if self._url:\n+            # Initialize the client if an existing URL is provided\n+            self._client = OpenAI(\n+                timeout=60,\n+                max_retries=3,\n+                api_key=\"Set-but-ignored\",  # required but ignored\n+                base_url=self._url,\n+            )\n+\n+    def _start_server(self) -> None:\n+        from sglang.utils import (  # type: ignore[import-untyped]\n+            execute_shell_command,\n+            wait_for_server,\n+        )\n+\n+        try:\n+            if not self._url:\n+                cmd = (\n+                    f\"python -m sglang.launch_server \"\n+                    f\"--model-path {self.model_type} \"\n+                    f\"--port 30000 \"\n+                    f\"--host 0.0.0.0\"\n+                )\n+\n+                server_process = execute_shell_command(cmd)\n+                wait_for_server(\"http://localhost:30000\")\n+                self._url = \"http://127.0.0.1:30000/v1\"\n+                self.server_process = server_process\n+                # Start the inactivity monitor in a background thread\n+                self._inactivity_thread = threading.Thread(\n+                    target=self._monitor_inactivity, daemon=True\n+                )\n+                self._inactivity_thread.start()\n+            self.last_run_time = time.time()\n+            # Initialize the client after the server starts\n+            self._client = OpenAI(\n+                timeout=60,\n+                max_retries=3,\n+                api_key=\"Set-but-ignored\",  # required but ignored\n+                base_url=self._url,\n+            )\n+        except Exception as e:\n+            raise RuntimeError(f\"Failed to start SGLang server: {e}\") from e\n+\n+    def _ensure_server_running(self) -> None:\n+        r\"\"\"Ensures that the server is running. If not, starts the server.\"\"\"\n+        with self._lock:\n+            if self.server_process is None:\n+                self._start_server()\n+\n+    def _monitor_inactivity(self):\n+        r\"\"\"Monitor whether the server process has been inactive for over 10\n+        minutes.\n+        \"\"\"\n+        from sglang.utils import terminate_process\n+\n+        while True:\n+            # Check every 10 seconds\n+            time.sleep(10)\n+            # Over 10 minutes\n+            with self._lock:\n+                # Over 10 minutes\n+                if self.last_run_time and (\n+                    time.time() - self.last_run_time > 600\n+                ):\n+                    if self.server_process:\n+                        terminate_process(self.server_process)\n+                        self.server_process = None\n+                        self._client = None  # Invalidate the client\n+                        logging.info(\n+                            \"Server process terminated due to inactivity.\"\n+                        )\n+                    break\n+\n+    @property\n+    def token_counter(self) -> BaseTokenCounter:\n+        r\"\"\"Initialize the token counter for the model backend.\n+\n+        Returns:\n+            BaseTokenCounter: The token counter following the model's\n+                tokenization style.\n+        \"\"\"\n+        if not self._token_counter:\n+            self._token_counter = OpenAITokenCounter(ModelType.GPT_4O_MINI)\n+        return self._token_counter\n+\n+    def check_model_config(self):\n+        r\"\"\"Check whether the model configuration contains any\n+        unexpected arguments to SGLang API.\n+\n+        Raises:\n+            ValueError: If the model configuration dictionary contains any\n+                unexpected arguments to OpenAI API.\n+        \"\"\"\n+        for param in self.model_config_dict:\n+            if param not in SGLANG_API_PARAMS:\n+                raise ValueError(\n+                    f\"Unexpected argument `{param}` is \"\n+                    \"input into SGLang model backend.\"\n+                )\n+\n+    def run(\n+        self,\n+        messages: List[OpenAIMessage],\n+    ) -> Union[ChatCompletion, Stream[ChatCompletionChunk]]:\n+        r\"\"\"Runs inference of OpenAI chat completion.\n+\n+        Args:\n+            messages (List[OpenAIMessage]): Message list with the chat history\n+                in OpenAI API format.\n+\n+        Returns:\n+            Union[ChatCompletion, Stream[ChatCompletionChunk]]:\n+                `ChatCompletion` in the non-stream mode, or\n+                `Stream[ChatCompletionChunk]` in the stream mode.\n+        \"\"\"\n+\n+        # Ensure server is running\n+        self._ensure_server_running()\n+\n+        with self._lock:\n+            # Update last run time\n+            self.last_run_time = time.time()\n+\n+        if self._client is None:\n+            raise RuntimeError(\n+                \"Client is not initialized. Ensure the server is running.\"\n+            )\n+\n+        response = self._client.chat.completions.create(\n+            messages=messages,\n+            model=self.model_type,\n+            **self.model_config_dict,\n+        )\n+\n+        return response\n+\n+    @property\n+    def stream(self) -> bool:\n+        r\"\"\"Returns whether the model is in stream mode, which sends partial\n+        results each time.\n+\n+        Returns:\n+            bool: Whether the model is in stream mode.\n+        \"\"\"\n+        return self.model_config_dict.get('stream', False)\ndiff --git a/camel/types/enums.py b/camel/types/enums.py\nindex 00aa0b85f2..353bc7aaca 100644\n--- a/camel/types/enums.py\n+++ b/camel/types/enums.py\n@@ -621,6 +621,7 @@ class ModelPlatformType(Enum):\n     QWEN = \"tongyi-qianwen\"\n     NVIDIA = \"nvidia\"\n     DEEPSEEK = \"deepseek\"\n+    SGLANG = \"sglang\"\n \n     @property\n     def is_openai(self) -> bool:\n@@ -652,6 +653,11 @@ def is_vllm(self) -> bool:\n         r\"\"\"Returns whether this platform is vllm.\"\"\"\n         return self is ModelPlatformType.VLLM\n \n+    @property\n+    def is_sglang(self) -> bool:\n+        r\"\"\"Returns whether this platform is sglang.\"\"\"\n+        return self is ModelPlatformType.SGLANG\n+\n     @property\n     def is_together(self) -> bool:\n         r\"\"\"Returns whether this platform is together.\"\"\"\ndiff --git a/examples/models/sglang_model_example.py b/examples/models/sglang_model_example.py\nnew file mode 100644\nindex 0000000000..8a50a74697\n--- /dev/null\n+++ b/examples/models/sglang_model_example.py\n@@ -0,0 +1,56 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+\n+\n+from dotenv import load_dotenv\n+\n+from camel.agents import ChatAgent\n+from camel.models import ModelFactory\n+from camel.types import ModelPlatformType\n+\n+r\"\"\"\n+Before using sglang to run LLM model offline,\n+you need to install flashinfer which cannot \n+be installed by poetry.\n+Consider your machine's configuration and \n+install flashinfer in a appropriate version.\n+For more details, please refer to:\n+https://sgl-project.github.io/start/install.html\n+https://docs.flashinfer.ai/installation.html\n+\n+Please load HF_token in your environment variable.\n+export HF_TOKEN=\"\"\n+\"\"\"\n+load_dotenv()\n+sglang_model = ModelFactory.create(\n+    model_platform=ModelPlatformType.SGLANG,\n+    model_type=\"meta-llama/Llama-3.2-1B\",\n+    model_config_dict={\"temperature\": 0.0},\n+    api_key=\"sglang\",\n+)\n+\n+assistant_sys_msg = \"You are a helpful assistant.\"\n+\n+agent = ChatAgent(assistant_sys_msg, model=sglang_model, token_limit=4096)\n+\n+user_msg = \"Say hi to CAMEL AI\"\n+\n+assistant_response = agent.step(user_msg)\n+print(assistant_response.msg.content)\n+\n+\"\"\"\n+===============================================================================\n+CAMEL AI ReferentialAction\n+===============================================================================\n+\"\"\"\ndiff --git a/poetry.lock b/poetry.lock\nindex aeecbd0712..b1c1317847 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -1,4 +1,4 @@\n-# This file is automatically @generated by Poetry 1.8.3 and should not be changed by hand.\n+# This file is automatically @generated by Poetry 1.8.4 and should not be changed by hand.\n \n [[package]]\n name = \"accelerate\"\n@@ -1839,13 +1839,13 @@ files = [\n \n [[package]]\n name = \"firecrawl-py\"\n-version = \"1.6.3\"\n+version = \"1.6.4\"\n description = \"Python SDK for Firecrawl API\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"firecrawl_py-1.6.3-py3-none-any.whl\", hash = \"sha256:c561c6b3cb4dd6c499c1a5298b1cf7b38ae23f875ee897ae1141cff440e699c9\"},\n-    {file = \"firecrawl_py-1.6.3.tar.gz\", hash = \"sha256:cb7d82a9a551b84c07f236368e2c8c274c27978ccb10ac91757e97fb6b581bd6\"},\n+    {file = \"firecrawl_py-1.6.4-py3-none-any.whl\", hash = \"sha256:3b8be937f7f91d68c636d40188fe5de26808b0c9e6578a9ad10ef81595f2cd03\"},\n+    {file = \"firecrawl_py-1.6.4.tar.gz\", hash = \"sha256:35422a518b37c4194d5e238776128d66e92c1e1c0832a10bebee3057dc65e59a\"},\n ]\n \n [package.dependencies]\n@@ -3918,7 +3918,6 @@ python-versions = \">=3.7\"\n files = [\n     {file = \"milvus_lite-2.4.10-py3-none-macosx_10_9_x86_64.whl\", hash = \"sha256:fc4246d3ed7d1910847afce0c9ba18212e93a6e9b8406048436940578dfad5cb\"},\n     {file = \"milvus_lite-2.4.10-py3-none-macosx_11_0_arm64.whl\", hash = \"sha256:74a8e07c5e3b057df17fbb46913388e84df1dc403a200f4e423799a58184c800\"},\n-    {file = \"milvus_lite-2.4.10-py3-none-manylinux2014_aarch64.whl\", hash = \"sha256:240c7386b747bad696ecb5bd1f58d491e86b9d4b92dccee3315ed7256256eddc\"},\n     {file = \"milvus_lite-2.4.10-py3-none-manylinux2014_x86_64.whl\", hash = \"sha256:211d2e334a043f9282bdd9755f76b9b2d93b23bffa7af240919ffce6a8dfe325\"},\n ]\n \n@@ -4813,13 +4812,13 @@ sympy = \"*\"\n \n [[package]]\n name = \"openai\"\n-version = \"1.57.2\"\n+version = \"1.57.3\"\n description = \"The official Python library for the openai API\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"openai-1.57.2-py3-none-any.whl\", hash = \"sha256:f7326283c156fdee875746e7e54d36959fb198eadc683952ee05e3302fbd638d\"},\n-    {file = \"openai-1.57.2.tar.gz\", hash = \"sha256:5f49fd0f38e9f2131cda7deb45dafdd1aee4f52a637e190ce0ecf40147ce8cee\"},\n+    {file = \"openai-1.57.3-py3-none-any.whl\", hash = \"sha256:c4034a5676eb252ef2e0ed1f46d040ca3bdde24bb61b432f50bb0b38d0cf9ecf\"},\n+    {file = \"openai-1.57.3.tar.gz\", hash = \"sha256:2c98ca6532b30d8bc5029974d2fcbd793b650009c2b014f47ffd4f9fdfc1f9eb\"},\n ]\n \n [package.dependencies]\n@@ -5024,31 +5023,43 @@ python-versions = \">=3.9\"\n files = [\n     {file = \"pandas-2.2.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:1948ddde24197a0f7add2bdc4ca83bf2b1ef84a1bc8ccffd95eda17fd836ecb5\"},\n     {file = \"pandas-2.2.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:381175499d3802cde0eabbaf6324cce0c4f5d52ca6f8c377c29ad442f50f6348\"},\n+    {file = \"pandas-2.2.3-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:d9c45366def9a3dd85a6454c0e7908f2b3b8e9c138f5dc38fed7ce720d8453ed\"},\n     {file = \"pandas-2.2.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:86976a1c5b25ae3f8ccae3a5306e443569ee3c3faf444dfd0f41cda24667ad57\"},\n+    {file = \"pandas-2.2.3-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:b8661b0238a69d7aafe156b7fa86c44b881387509653fdf857bebc5e4008ad42\"},\n     {file = \"pandas-2.2.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:37e0aced3e8f539eccf2e099f65cdb9c8aa85109b0be6e93e2baff94264bdc6f\"},\n     {file = \"pandas-2.2.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:56534ce0746a58afaf7942ba4863e0ef81c9c50d3f0ae93e9497d6a41a057645\"},\n     {file = \"pandas-2.2.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:66108071e1b935240e74525006034333f98bcdb87ea116de573a6a0dccb6c039\"},\n     {file = \"pandas-2.2.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:7c2875855b0ff77b2a64a0365e24455d9990730d6431b9e0ee18ad8acee13dbd\"},\n+    {file = \"pandas-2.2.3-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:cd8d0c3be0515c12fed0bdbae072551c8b54b7192c7b1fda0ba56059a0179698\"},\n     {file = \"pandas-2.2.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c124333816c3a9b03fbeef3a9f230ba9a737e9e5bb4060aa2107a86cc0a497fc\"},\n+    {file = \"pandas-2.2.3-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:63cc132e40a2e084cf01adf0775b15ac515ba905d7dcca47e9a251819c575ef3\"},\n     {file = \"pandas-2.2.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:29401dbfa9ad77319367d36940cd8a0b3a11aba16063e39632d98b0e931ddf32\"},\n     {file = \"pandas-2.2.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:3fc6873a41186404dad67245896a6e440baacc92f5b716ccd1bc9ed2995ab2c5\"},\n     {file = \"pandas-2.2.3-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:b1d432e8d08679a40e2a6d8b2f9770a5c21793a6f9f47fdd52c5ce1948a5a8a9\"},\n     {file = \"pandas-2.2.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:a5a1595fe639f5988ba6a8e5bc9649af3baf26df3998a0abe56c02609392e0a4\"},\n+    {file = \"pandas-2.2.3-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:5de54125a92bb4d1c051c0659e6fcb75256bf799a732a87184e5ea503965bce3\"},\n     {file = \"pandas-2.2.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fffb8ae78d8af97f849404f21411c95062db1496aeb3e56f146f0355c9989319\"},\n+    {file = \"pandas-2.2.3-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6dfcb5ee8d4d50c06a51c2fffa6cff6272098ad6540aed1a76d15fb9318194d8\"},\n     {file = \"pandas-2.2.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:062309c1b9ea12a50e8ce661145c6aab431b1e99530d3cd60640e255778bd43a\"},\n     {file = \"pandas-2.2.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:59ef3764d0fe818125a5097d2ae867ca3fa64df032331b7e0917cf5d7bf66b13\"},\n     {file = \"pandas-2.2.3-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f00d1345d84d8c86a63e476bb4955e46458b304b9575dcf71102b5c705320015\"},\n     {file = \"pandas-2.2.3-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:3508d914817e153ad359d7e069d752cdd736a247c322d932eb89e6bc84217f28\"},\n+    {file = \"pandas-2.2.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:22a9d949bfc9a502d320aa04e5d02feab689d61da4e7764b62c30b991c42c5f0\"},\n     {file = \"pandas-2.2.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f3a255b2c19987fbbe62a9dfd6cff7ff2aa9ccab3fc75218fd4b7530f01efa24\"},\n+    {file = \"pandas-2.2.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:800250ecdadb6d9c78eae4990da62743b857b470883fa27f652db8bdde7f6659\"},\n     {file = \"pandas-2.2.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:6374c452ff3ec675a8f46fd9ab25c4ad0ba590b71cf0656f8b6daa5202bca3fb\"},\n     {file = \"pandas-2.2.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:61c5ad4043f791b61dd4752191d9f07f0ae412515d59ba8f005832a532f8736d\"},\n     {file = \"pandas-2.2.3-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:3b71f27954685ee685317063bf13c7709a7ba74fc996b84fc6821c59b0f06468\"},\n     {file = \"pandas-2.2.3-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:38cf8125c40dae9d5acc10fa66af8ea6fdf760b2714ee482ca691fc66e6fcb18\"},\n+    {file = \"pandas-2.2.3-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:ba96630bc17c875161df3818780af30e43be9b166ce51c9a18c1feae342906c2\"},\n     {file = \"pandas-2.2.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1db71525a1538b30142094edb9adc10be3f3e176748cd7acc2240c2f2e5aa3a4\"},\n+    {file = \"pandas-2.2.3-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:15c0e1e02e93116177d29ff83e8b1619c93ddc9c49083f237d4312337a61165d\"},\n     {file = \"pandas-2.2.3-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:ad5b65698ab28ed8d7f18790a0dc58005c7629f227be9ecc1072aa74c0c1d43a\"},\n     {file = \"pandas-2.2.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:bc6b93f9b966093cb0fd62ff1a7e4c09e6d546ad7c1de191767baffc57628f39\"},\n     {file = \"pandas-2.2.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:5dbca4c1acd72e8eeef4753eeca07de9b1db4f398669d5994086f788a5d7cc30\"},\n+    {file = \"pandas-2.2.3-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:8cd6d7cc958a3910f934ea8dbdf17b2364827bb4dafc38ce6eef6bb3d65ff09c\"},\n     {file = \"pandas-2.2.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:99df71520d25fade9db7c1076ac94eb994f4d2673ef2aa2e86ee039b6746d20c\"},\n+    {file = \"pandas-2.2.3-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:31d0ced62d4ea3e231a9f228366919a5ea0b07440d9d4dac345376fd8e1477ea\"},\n     {file = \"pandas-2.2.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7eee9e7cea6adf3e3d24e304ac6b8300646e2a5d1cd3a3c2abed9101b0846761\"},\n     {file = \"pandas-2.2.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:4850ba03528b6dd51d6c5d273c46f183f39a9baf3f0143e566b89450965b105e\"},\n     {file = \"pandas-2.2.3.tar.gz\", hash = \"sha256:4f18ba62b61d7e192368b84517265a99b4d7ee8912f8708660fb4a366cc82667\"},\n@@ -5902,7 +5913,6 @@ description = \"Pure-Python implementation of ASN.1 types and DER/BER/CER codecs\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"pyasn1-0.6.1-py3-none-any.whl\", hash = \"sha256:0d632f46f2ba09143da3a8afe9e33fb6f92fa2320ab7e886e2d0f7672af84629\"},\n     {file = \"pyasn1-0.6.1.tar.gz\", hash = \"sha256:6f580d2bdd84365380830acf45550f2511469f673cb4a5ae3857a3170128b034\"},\n ]\n \n@@ -5913,7 +5923,6 @@ description = \"A collection of ASN.1-based protocols modules\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"pyasn1_modules-0.4.1-py3-none-any.whl\", hash = \"sha256:49bfa96b45a292b711e986f222502c1c9a5e1f4e568fc30e2574a6c7d07838fd\"},\n     {file = \"pyasn1_modules-0.4.1.tar.gz\", hash = \"sha256:c28e2dbf9c06ad61c71a075c7e0f9fd0f1b0bb2d2ad4377f240d33ac2ab60a7c\"},\n ]\n \n@@ -7824,6 +7833,42 @@ enabler = [\"pytest-enabler (>=2.2)\"]\n test = [\"build[virtualenv] (>=1.0.3)\", \"filelock (>=3.4.0)\", \"ini2toml[lite] (>=0.14)\", \"jaraco.develop (>=7.21)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"jaraco.test (>=5.5)\", \"packaging (>=24.2)\", \"pip (>=19.1)\", \"pyproject-hooks (!=1.1)\", \"pytest (>=6,!=8.1.*)\", \"pytest-home (>=0.5)\", \"pytest-perf\", \"pytest-subprocess\", \"pytest-timeout\", \"pytest-xdist (>=3)\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel (>=0.44.0)\"]\n type = [\"importlib_metadata (>=7.0.2)\", \"jaraco.develop (>=7.21)\", \"mypy (>=1.12,<1.14)\", \"pytest-mypy\"]\n \n+[[package]]\n+name = \"sglang\"\n+version = \"0.4.0.post1\"\n+description = \"SGLang is yet another fast serving framework for large language models and vision language models.\"\n+optional = true\n+python-versions = \">=3.8\"\n+files = [\n+    {file = \"sglang-0.4.0.post1-py3-none-any.whl\", hash = \"sha256:5989da07be334b69aac12efba454a20b1e6eb72803d80bf064f71d5e62145acf\"},\n+    {file = \"sglang-0.4.0.post1.tar.gz\", hash = \"sha256:a82aec4ce1ef1988bc57561b7700a9d7b0f5465ed343bb43b10496ee13f95c50\"},\n+]\n+\n+[package.dependencies]\n+IPython = \"*\"\n+numpy = \"*\"\n+requests = \"*\"\n+tqdm = \"*\"\n+\n+[package.extras]\n+all = [\"sglang[anthropic]\", \"sglang[litellm]\", \"sglang[openai]\", \"sglang[srt]\"]\n+all-hip = [\"sglang[anthropic]\", \"sglang[litellm]\", \"sglang[openai]\", \"sglang[srt-hip]\"]\n+all-hpu = [\"sglang[anthropic]\", \"sglang[litellm]\", \"sglang[openai]\", \"sglang[srt-hpu]\"]\n+all-xpu = [\"sglang[anthropic]\", \"sglang[litellm]\", \"sglang[openai]\", \"sglang[srt-xpu]\"]\n+anthropic = [\"anthropic (>=0.20.0)\"]\n+dev = [\"sglang[all]\", \"sglang[test]\"]\n+dev-hip = [\"sglang[all-hip]\", \"sglang[test]\"]\n+dev-hpu = [\"sglang[all-hpu]\", \"sglang[test]\"]\n+dev-xpu = [\"sglang[all-xpu]\", \"sglang[test]\"]\n+litellm = [\"litellm (>=1.0.0)\"]\n+openai = [\"openai (>=1.0)\", \"tiktoken\"]\n+runtime-common = [\"aiohttp\", \"decord\", \"fastapi\", \"hf_transfer\", \"huggingface_hub\", \"interegular\", \"modelscope\", \"orjson\", \"outlines (>=0.0.44,<0.1.0)\", \"packaging\", \"pillow\", \"prometheus-client (>=0.20.0)\", \"psutil\", \"pydantic\", \"python-multipart\", \"pyzmq (>=25.1.2)\", \"torchao\", \"uvicorn\", \"uvloop\", \"xgrammar (>=0.1.4)\"]\n+srt = [\"cuda-python\", \"flashinfer (>=0.1.6)\", \"sglang[runtime-common]\", \"torch\", \"vllm (>=0.6.3.post1,<=0.6.4.post1)\"]\n+srt-hip = [\"sglang[runtime-common]\", \"torch\", \"vllm (==0.6.3.dev13)\"]\n+srt-hpu = [\"sglang[runtime-common]\"]\n+srt-xpu = [\"sglang[runtime-common]\"]\n+test = [\"accelerate\", \"jsonlines\", \"matplotlib\", \"pandas\", \"peft\", \"sentence_transformers\"]\n+\n [[package]]\n name = \"sgmllib3k\"\n version = \"1.0.0\"\n@@ -9899,12 +9944,12 @@ test = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\",\n type = [\"pytest-mypy\"]\n \n [extras]\n-all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"ffmpeg-python\", \"firecrawl-py\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"nltk\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n+all = [\"PyMuPDF\", \"accelerate\", \"agentops\", \"anthropic\", \"apify_client\", \"arxiv\", \"arxiv2text\", \"asknews\", \"azure-storage-blob\", \"beautifulsoup4\", \"botocore\", \"cohere\", \"cohere\", \"datacommons\", \"datacommons_pandas\", \"datasets\", \"diffusers\", \"discord.py\", \"docker\", \"docx2txt\", \"duckduckgo-search\", \"ffmpeg-python\", \"firecrawl-py\", \"google-cloud-storage\", \"google-generativeai\", \"googlemaps\", \"imageio\", \"ipykernel\", \"jupyter_client\", \"litellm\", \"mistralai\", \"nebula3-python\", \"neo4j\", \"newspaper3k\", \"nltk\", \"notion-client\", \"openapi-spec-validator\", \"opencv-python\", \"pdfplumber\", \"pillow\", \"prance\", \"praw\", \"pyTelegramBotAPI\", \"pydub\", \"pygithub\", \"pymilvus\", \"pyowm\", \"pyyaml\", \"qdrant-client\", \"rank-bm25\", \"redis\", \"reka-api\", \"requests_oauthlib\", \"scholarly\", \"sentence-transformers\", \"sentencepiece\", \"sglang\", \"slack-bolt\", \"slack-sdk\", \"soundfile\", \"tavily-python\", \"textblob\", \"torch\", \"torch\", \"transformers\", \"unstructured\", \"wikipedia\", \"wolframalpha\", \"yt-dlp\"]\n encoders = [\"sentence-transformers\"]\n graph-storages = [\"nebula3-python\", \"neo4j\"]\n huggingface-agent = [\"accelerate\", \"datasets\", \"diffusers\", \"opencv-python\", \"sentencepiece\", \"soundfile\", \"torch\", \"torch\", \"transformers\"]\n kv-stroages = [\"redis\"]\n-model-platforms = [\"anthropic\", \"cohere\", \"google-generativeai\", \"litellm\", \"mistralai\", \"reka-api\"]\n+model-platforms = [\"anthropic\", \"cohere\", \"google-generativeai\", \"litellm\", \"mistralai\", \"reka-api\", \"sglang\"]\n object-storages = [\"azure-storage-blob\", \"botocore\", \"google-cloud-storage\"]\n rag = [\"cohere\", \"nebula3-python\", \"neo4j\", \"pymilvus\", \"qdrant-client\", \"rank-bm25\", \"sentence-transformers\", \"unstructured\"]\n retrievers = [\"cohere\", \"rank-bm25\"]\n@@ -9917,4 +9962,4 @@ vector-databases = [\"pymilvus\", \"qdrant-client\"]\n [metadata]\n lock-version = \"2.0\"\n python-versions = \">=3.10,<3.13\"\n-content-hash = \"66d081b88fb592beaee2ce10058723920f82106a987f90490f6d75b746e43085\"\n+content-hash = \"f131fd25b9baded1d7b3695ef0b732e49e149f138c2c79443af87e72e99c6972\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex aa12354433..1791ba228a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -49,7 +49,7 @@ mistralai = { version = \"^1.1.0\", optional = true }\n reka-api = { version = \"^3.0.8\", optional = true }\n anthropic = { version = \"^0.29.0\", optional = true }\n cohere = { version = \"^5.11.0\", optional = true }\n-\n+sglang = { version = \"^0.4.0\", optional = true }\n \n # huggingface-agent\n transformers = { version = \"^4\", optional = true }\n@@ -162,6 +162,7 @@ model-platforms = [\n     \"reka-api\",\n     \"anthropic\",\n     \"cohere\",\n+    'sglang',\n ]\n \n huggingface-agent = [\n@@ -323,6 +324,7 @@ all = [\n     \"google-generativeai\",\n     \"anthropic\",\n     \"reka-api\",\n+    \"sglang\",\n     # kv-storages\n     \"redis\",\n     # object-storages\n@@ -472,6 +474,7 @@ module = [\n     \"mistralai\",\n     \"cohere\",\n     \"reka-api\",\n+    \"sglang\",\n     \"agentops\",\n     \"botocore.*\",\n     \"asknews\",\n",
        "test_patch": "diff --git a/test/models/test_sglang_model.py b/test/models/test_sglang_model.py\nnew file mode 100644\nindex 0000000000..07c87d1823\n--- /dev/null\n+++ b/test/models/test_sglang_model.py\n@@ -0,0 +1,57 @@\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+import re\n+\n+import pytest\n+\n+from camel.configs import SGLangConfig\n+from camel.models import SGLangModel\n+from camel.types import ModelType, UnifiedModelType\n+from camel.utils import OpenAITokenCounter\n+\n+\n+@pytest.mark.model_backend\n+@pytest.mark.parametrize(\n+    \"model_type\",\n+    [\n+        ModelType.GPT_4,\n+        ModelType.GPT_4_TURBO,\n+        ModelType.GPT_4O,\n+        ModelType.GPT_4O_MINI,\n+    ],\n+)\n+def test_sglang_model(model_type: ModelType):\n+    model = SGLangModel(model_type, api_key=\"sglang\")\n+    assert model.model_type == model_type\n+    assert model.model_config_dict == SGLangConfig().as_dict()\n+    assert isinstance(model.token_counter, OpenAITokenCounter)\n+    assert isinstance(model.model_type, UnifiedModelType)\n+    assert isinstance(model.token_limit, int)\n+\n+\n+@pytest.mark.model_backend\n+def test_sglang_model_unexpected_argument():\n+    model_type = ModelType.GPT_4\n+    model_config_dict = {\"model_path\": \"vicuna-7b-v1.5\"}\n+\n+    with pytest.raises(\n+        ValueError,\n+        match=re.escape(\n+            (\n+                \"Unexpected argument `model_path` is \"\n+                \"input into SGLang model backend.\"\n+            )\n+        ),\n+    ):\n+        _ = SGLangModel(model_type, model_config_dict, api_key=\"sglang\")\n",
        "problem_statement": "[Feature Request] Integrate `SGlang`\n### Required prerequisites\r\n\r\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\r\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\r\n\r\n### Motivation\r\n\r\nIntegrate `SGlang` for fast serving.\r\n\r\nhttps://github.com/sgl-project/sglang\r\n\r\n### Solution\r\n\r\n_No response_\r\n\r\n### Alternatives\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-11-30T10:22:06Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": []
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1247,
        "instance_id": "camel-ai__camel-1247",
        "issue_numbers": [
            "1240"
        ],
        "base_commit": "15946a4e88950ffe1b7df529ae207f0cb7275c58",
        "patch": "diff --git a/.github/ISSUE_TEMPLATE/bug_report.yml b/.github/ISSUE_TEMPLATE/bug_report.yml\nindex b28e2910fa..0744a16bd4 100644\n--- a/.github/ISSUE_TEMPLATE/bug_report.yml\n+++ b/.github/ISSUE_TEMPLATE/bug_report.yml\n@@ -26,7 +26,7 @@ body:\n     attributes:\n       label: What version of camel are you using?\n       description: Run command `python3 -c 'print(__import__(\"camel\").__version__)'` in your shell and paste the output here.\n-      placeholder: E.g., 0.2.9\n+      placeholder: E.g., 0.2.10\n     validations:\n       required: true\n \ndiff --git a/README.md b/README.md\nindex f35f7379ca..1155d8db9b 100644\n--- a/README.md\n+++ b/README.md\n@@ -144,7 +144,7 @@ conda create --name camel python=3.10\n conda activate camel\n \n # Clone github repo\n-git clone -b v0.2.9 https://github.com/camel-ai/camel.git\n+git clone -b v0.2.10 https://github.com/camel-ai/camel.git\n \n # Change directory into project directory\n cd camel\ndiff --git a/camel/__init__.py b/camel/__init__.py\nindex aa2932864a..1bfa5e757b 100644\n--- a/camel/__init__.py\n+++ b/camel/__init__.py\n@@ -12,7 +12,7 @@\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n \n-__version__ = '0.2.9'\n+__version__ = '0.2.10'\n \n __all__ = [\n     '__version__',\ndiff --git a/camel/agents/chat_agent.py b/camel/agents/chat_agent.py\nindex 18a4716f1d..9d6c45853a 100644\n--- a/camel/agents/chat_agent.py\n+++ b/camel/agents/chat_agent.py\n@@ -183,7 +183,7 @@ def __init__(\n \n         self.model_type = self.model_backend.model_type\n \n-        # tool registration\n+        # Tool registration\n         external_tools = external_tools or []\n         tools = tools or []\n         all_tools = tools + external_tools\n@@ -195,16 +195,18 @@ def __init__(\n         }\n         self.tool_dict = {tool.get_function_name(): tool for tool in all_tools}\n \n-        # If the user hasn't configured tools in `BaseModelBackend`,\n-        # the tools set from `ChatAgent` will be used.\n-        # This design simplifies the interface while retaining tool-running\n-        # capabilities for `BaseModelBackend`.\n-        if all_tools and not self.model_backend.model_config_dict.get(\"tools\"):\n+        # If the user set tools from `ChatAgent`, it will override the\n+        # configured tools in `BaseModelBackend`.\n+        if all_tools:\n+            logger.warning(\n+                \"Overriding the configured tools in `BaseModelBackend` with the tools from `ChatAgent`.\"\n+            )\n             tool_schema_list = [\n                 tool.get_openai_tool_schema() for tool in all_tools\n             ]\n             self.model_backend.model_config_dict['tools'] = tool_schema_list\n             self.tool_schema_list = tool_schema_list\n+\n         self.model_config_dict = self.model_backend.model_config_dict\n \n         self.model_token_limit = token_limit or self.model_backend.token_limit\ndiff --git a/camel/embeddings/openai_compatible_embedding.py b/camel/embeddings/openai_compatible_embedding.py\nindex a925c2ad17..7fb2dbd453 100644\n--- a/camel/embeddings/openai_compatible_embedding.py\n+++ b/camel/embeddings/openai_compatible_embedding.py\n@@ -1,16 +1,16 @@\n-# =========== Copyright 2023 @ CAMEL-AI.org. All Rights Reserved. ===========\n-# Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n # you may not use this file except in compliance with the License.\n # You may obtain a copy of the License at\n #\n #     http://www.apache.org/licenses/LICENSE-2.0\n #\n # Unless required by applicable law or agreed to in writing, software\n-# distributed under the License is distributed on an \u201cAS IS\u201d BASIS,\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n-# =========== Copyright 2023 @ CAMEL-AI.org. All Rights Reserved. ===========\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n from __future__ import annotations\n \n import os\ndiff --git a/camel/types/enums.py b/camel/types/enums.py\nindex f1896c811b..2fe68f9f7b 100644\n--- a/camel/types/enums.py\n+++ b/camel/types/enums.py\n@@ -110,6 +110,7 @@ class ModelType(UnifiedModelType, Enum):\n     QWEN_2_5_72B = \"qwen2.5-72b-instruct\"\n     QWEN_2_5_32B = \"qwen2.5-32b-instruct\"\n     QWEN_2_5_14B = \"qwen2.5-14b-instruct\"\n+    QWEN_QWQ_32B = \"qwq-32b-preview\"\n \n     # Yi models (01-ai)\n     YI_LIGHTNING = \"yi-lightning\"\n@@ -309,6 +310,7 @@ def is_qwen(self) -> bool:\n             ModelType.QWEN_2_5_72B,\n             ModelType.QWEN_2_5_32B,\n             ModelType.QWEN_2_5_14B,\n+            ModelType.QWEN_QWQ_32B,\n         }\n \n     @property\n@@ -368,6 +370,7 @@ def token_limit(self) -> int:\n             ModelType.YI_LARGE_FC,\n             ModelType.QWEN_MAX,\n             ModelType.QWEN_VL_MAX,\n+            ModelType.QWEN_QWQ_32B,\n         }:\n             return 32_768\n         elif self in {\ndiff --git a/docs/conf.py b/docs/conf.py\nindex b71839d24e..65966b04a9 100644\n--- a/docs/conf.py\n+++ b/docs/conf.py\n@@ -27,7 +27,7 @@\n project = 'CAMEL'\n copyright = '2024, CAMEL-AI.org'\n author = 'CAMEL-AI.org'\n-release = '0.2.9'\n+release = '0.2.10'\n \n html_favicon = (\n     'https://raw.githubusercontent.com/camel-ai/camel/master/misc/favicon.png'\ndiff --git a/docs/cookbooks/agents_message.ipynb b/docs/cookbooks/agents_message.ipynb\nindex e0a34436af..f945249f70 100644\n--- a/docs/cookbooks/agents_message.ipynb\n+++ b/docs/cookbooks/agents_message.ipynb\n@@ -101,7 +101,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/agents_prompting.ipynb b/docs/cookbooks/agents_prompting.ipynb\nindex de48a2cac6..b718d91847 100644\n--- a/docs/cookbooks/agents_prompting.ipynb\n+++ b/docs/cookbooks/agents_prompting.ipynb\n@@ -64,7 +64,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/agents_society.ipynb b/docs/cookbooks/agents_society.ipynb\nindex 97139977c7..85e78e9935 100644\n--- a/docs/cookbooks/agents_society.ipynb\n+++ b/docs/cookbooks/agents_society.ipynb\n@@ -192,7 +192,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/agents_tracking.ipynb b/docs/cookbooks/agents_tracking.ipynb\nindex baf596e061..c4090248fd 100644\n--- a/docs/cookbooks/agents_tracking.ipynb\n+++ b/docs/cookbooks/agents_tracking.ipynb\n@@ -64,7 +64,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"%pip install camel-ai[all]==0.2.9\\n\",\n+        \"%pip install camel-ai[all]==0.2.10\\n\",\n         \"%pip install agentops==0.3.10\"\n       ]\n     },\ndiff --git a/docs/cookbooks/agents_with_memory.ipynb b/docs/cookbooks/agents_with_memory.ipynb\nindex 6c49266bd7..ae01737624 100644\n--- a/docs/cookbooks/agents_with_memory.ipynb\n+++ b/docs/cookbooks/agents_with_memory.ipynb\n@@ -73,7 +73,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/agents_with_rag.ipynb b/docs/cookbooks/agents_with_rag.ipynb\nindex a3fdb071fa..43b47385c6 100644\n--- a/docs/cookbooks/agents_with_rag.ipynb\n+++ b/docs/cookbooks/agents_with_rag.ipynb\n@@ -75,7 +75,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/agents_with_tools.ipynb b/docs/cookbooks/agents_with_tools.ipynb\nindex 74ef11d948..84e5fecec1 100644\n--- a/docs/cookbooks/agents_with_tools.ipynb\n+++ b/docs/cookbooks/agents_with_tools.ipynb\n@@ -77,7 +77,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/create_your_first_agent.ipynb b/docs/cookbooks/create_your_first_agent.ipynb\nindex e333f27a59..3fb1a45d0b 100644\n--- a/docs/cookbooks/create_your_first_agent.ipynb\n+++ b/docs/cookbooks/create_your_first_agent.ipynb\n@@ -83,7 +83,7 @@\n     {\n       \"cell_type\": \"code\",\n       \"source\": [\n-        \"!pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ],\n       \"metadata\": {\n         \"id\": \"UtcC3c-KVZmU\"\ndiff --git a/docs/cookbooks/create_your_first_agents_society.ipynb b/docs/cookbooks/create_your_first_agents_society.ipynb\nindex a5c2120aac..3547e55631 100644\n--- a/docs/cookbooks/create_your_first_agents_society.ipynb\n+++ b/docs/cookbooks/create_your_first_agents_society.ipynb\n@@ -77,7 +77,7 @@\n     {\n       \"cell_type\": \"code\",\n       \"source\": [\n-        \"!pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai==0.2.10\\\"\"\n       ],\n       \"metadata\": {\n         \"id\": \"RiwfwyyLYYxo\"\ndiff --git a/docs/cookbooks/critic_agents_and_tree_search.ipynb b/docs/cookbooks/critic_agents_and_tree_search.ipynb\nindex 6c1c524458..58b6c63ab7 100644\n--- a/docs/cookbooks/critic_agents_and_tree_search.ipynb\n+++ b/docs/cookbooks/critic_agents_and_tree_search.ipynb\n@@ -84,7 +84,7 @@\n     {\n       \"cell_type\": \"code\",\n       \"source\": [\n-        \"%pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"%pip install \\\"camel-ai==0.2.10\\\"\"\n       ],\n       \"metadata\": {\n         \"id\": \"UtcC3c-KVZmU\"\ndiff --git a/docs/cookbooks/embodied_agents.ipynb b/docs/cookbooks/embodied_agents.ipynb\nindex 068ce639bb..0e7fb0c5dd 100644\n--- a/docs/cookbooks/embodied_agents.ipynb\n+++ b/docs/cookbooks/embodied_agents.ipynb\n@@ -67,7 +67,7 @@\n     {\n       \"cell_type\": \"code\",\n       \"source\": [\n-        \"%pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"%pip install \\\"camel-ai==0.2.10\\\"\"\n       ],\n       \"metadata\": {\n         \"id\": \"UtcC3c-KVZmU\"\ndiff --git a/docs/cookbooks/ingest_data_from_websites_with_Firecrawl.ipynb b/docs/cookbooks/ingest_data_from_websites_with_Firecrawl.ipynb\nindex 1bb6a4942b..54b27445ea 100644\n--- a/docs/cookbooks/ingest_data_from_websites_with_Firecrawl.ipynb\n+++ b/docs/cookbooks/ingest_data_from_websites_with_Firecrawl.ipynb\n@@ -81,7 +81,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/knowledge_graph.ipynb b/docs/cookbooks/knowledge_graph.ipynb\nindex 742c9336f0..9ab1b9679d 100644\n--- a/docs/cookbooks/knowledge_graph.ipynb\n+++ b/docs/cookbooks/knowledge_graph.ipynb\n@@ -73,7 +73,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/model_speed_comparison.ipynb b/docs/cookbooks/model_speed_comparison.ipynb\nindex d5f3c5e328..f71eebbba7 100644\n--- a/docs/cookbooks/model_speed_comparison.ipynb\n+++ b/docs/cookbooks/model_speed_comparison.ipynb\n@@ -63,7 +63,7 @@\n     {\n       \"cell_type\": \"code\",\n       \"source\": [\n-        \"!pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai==0.2.10\\\"\"\n       ],\n       \"metadata\": {\n         \"id\": \"UtcC3c-KVZmU\"\ndiff --git a/docs/cookbooks/roleplaying_scraper.ipynb b/docs/cookbooks/roleplaying_scraper.ipynb\nindex 185a069ac9..a4bf74c16b 100644\n--- a/docs/cookbooks/roleplaying_scraper.ipynb\n+++ b/docs/cookbooks/roleplaying_scraper.ipynb\n@@ -89,7 +89,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/task_generation.ipynb b/docs/cookbooks/task_generation.ipynb\nindex 282a7388c4..5809e1d6db 100644\n--- a/docs/cookbooks/task_generation.ipynb\n+++ b/docs/cookbooks/task_generation.ipynb\n@@ -62,7 +62,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"!pip install \\\"camel-ai==0.2.9\\\"\"\n+        \"!pip install \\\"camel-ai==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/cookbooks/video_analysis.ipynb b/docs/cookbooks/video_analysis.ipynb\nindex a32049af50..eea17b9175 100644\n--- a/docs/cookbooks/video_analysis.ipynb\n+++ b/docs/cookbooks/video_analysis.ipynb\n@@ -28,7 +28,7 @@\n    },\n    \"outputs\": [],\n    \"source\": [\n-    \"%pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+    \"%pip install \\\"camel-ai[all]==0.2.10\\\"\"\n    ]\n   },\n   {\ndiff --git a/docs/cookbooks/workforce_judge_committee.ipynb b/docs/cookbooks/workforce_judge_committee.ipynb\nindex 203cf99a4d..6e2ed35819 100644\n--- a/docs/cookbooks/workforce_judge_committee.ipynb\n+++ b/docs/cookbooks/workforce_judge_committee.ipynb\n@@ -28,7 +28,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"%pip install \\\"camel-ai[all]==0.2.9\\\"\"\n+        \"%pip install \\\"camel-ai[all]==0.2.10\\\"\"\n       ]\n     },\n     {\ndiff --git a/docs/get_started/installation.md b/docs/get_started/installation.md\nindex db0f3687d8..03f34fefc7 100644\n--- a/docs/get_started/installation.md\n+++ b/docs/get_started/installation.md\n@@ -60,7 +60,7 @@ conda create --name camel python=3.10\n conda activate camel\n \n # Clone github repo\n-git clone -b v0.2.9 https://github.com/camel-ai/camel.git\n+git clone -b v0.2.10 https://github.com/camel-ai/camel.git\n \n # Change directory into project directory\n cd camel\ndiff --git a/docs/key_modules/loaders.md b/docs/key_modules/loaders.md\nindex bc9b02e39f..533179a9b3 100644\n--- a/docs/key_modules/loaders.md\n+++ b/docs/key_modules/loaders.md\n@@ -336,14 +336,14 @@ response = jina_reader.read_content(\"https://docs.camel-ai.org/\")\n print(response)\n ```\n ```markdown\n->>>Welcome to CAMEL\u2019s documentation! \u2014 CAMEL 0.2.9 documentation\n+>>>Welcome to CAMEL\u2019s documentation! \u2014 CAMEL 0.2.10 documentation\n ===============\n \n [Skip to main content](https://docs.camel-ai.org/#main-content)\n \n Back to top Ctrl+K\n \n- [![Image 1](https://raw.githubusercontent.com/camel-ai/camel/master/misc/logo_light.png) ![Image 2](https://raw.githubusercontent.com/camel-ai/camel/master/misc/logo_light.png)CAMEL 0.2.9](https://docs.camel-ai.org/#)\n+ [![Image 1](https://raw.githubusercontent.com/camel-ai/camel/master/misc/logo_light.png) ![Image 2](https://raw.githubusercontent.com/camel-ai/camel/master/misc/logo_light.png)CAMEL 0.2.10](https://docs.camel-ai.org/#)\n \n Search Ctrl+K\n \ndiff --git a/docs/key_modules/models.md b/docs/key_modules/models.md\nindex f8f4d63db1..157e7098c8 100644\n--- a/docs/key_modules/models.md\n+++ b/docs/key_modules/models.md\n@@ -51,6 +51,7 @@ The following table lists currently supported model platforms by CAMEL.\n | Lingyiwanwu | yi-spark | N |\n | Lingyiwanwu | yi-large-rag | N |\n | Lingyiwanwu | yi-large-fc | N |\n+| Qwen | qwq-32b-preview | N |\n | Qwen | qwen-max | N |\n | Qwen | qwen-plus | N |\n | Qwen | qwen-turbo | N |\ndiff --git a/examples/embeddings/openai_compatible_embedding_example.py b/examples/embeddings/openai_compatible_embedding_example.py\nindex 950ea7bbab..5537c07f93 100644\n--- a/examples/embeddings/openai_compatible_embedding_example.py\n+++ b/examples/embeddings/openai_compatible_embedding_example.py\n@@ -1,16 +1,16 @@\n-# =========== Copyright 2023 @ CAMEL-AI.org. All Rights Reserved. ===========\n-# Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n # you may not use this file except in compliance with the License.\n # You may obtain a copy of the License at\n #\n #     http://www.apache.org/licenses/LICENSE-2.0\n #\n # Unless required by applicable law or agreed to in writing, software\n-# distributed under the License is distributed on an \u201cAS IS\u201d BASIS,\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n-# =========== Copyright 2023 @ CAMEL-AI.org. All Rights Reserved. ===========\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n \n from camel.embeddings import OpenAICompatibleEmbedding\n \ndiff --git a/poetry.lock b/poetry.lock\nindex 869937cb6f..a7fd4dbc55 100644\n--- a/poetry.lock\n+++ b/poetry.lock\n@@ -1,4 +1,4 @@\n-# This file is automatically @generated by Poetry 1.8.3 and should not be changed by hand.\n+# This file is automatically @generated by Poetry 1.8.4 and should not be changed by hand.\n \n [[package]]\n name = \"accelerate\"\n@@ -95,87 +95,87 @@ files = [\n \n [[package]]\n name = \"aiohttp\"\n-version = \"3.11.7\"\n+version = \"3.11.8\"\n description = \"Async http client/server framework (asyncio)\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"aiohttp-3.11.7-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:8bedb1f6cb919af3b6353921c71281b1491f948ca64408871465d889b4ee1b66\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:f5022504adab881e2d801a88b748ea63f2a9d130e0b2c430824682a96f6534be\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:e22d1721c978a6494adc824e0916f9d187fa57baeda34b55140315fa2f740184\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e993676c71288618eb07e20622572b1250d8713e7e00ab3aabae28cb70f3640d\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e13a05db87d3b241c186d0936808d0e4e12decc267c617d54e9c643807e968b6\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:4ba8d043fed7ffa117024d7ba66fdea011c0e7602327c6d73cacaea38abe4491\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dda3ed0a7869d2fa16aa41f9961ade73aa2c2e3b2fcb0a352524e7b744881889\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:43bfd25113c1e98aec6c70e26d5f4331efbf4aa9037ba9ad88f090853bf64d7f\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:3dd3e7e7c9ef3e7214f014f1ae260892286647b3cf7c7f1b644a568fd410f8ca\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:78c657ece7a73b976905ab9ec8be9ef2df12ed8984c24598a1791c58ce3b4ce4\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:db70a47987e34494b451a334605bee57a126fe8d290511349e86810b4be53b01\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:9e67531370a3b07e49b280c1f8c2df67985c790ad2834d1b288a2f13cd341c5f\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:9202f184cc0582b1db15056f2225ab4c1e3dac4d9ade50dd0613ac3c46352ac2\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-win32.whl\", hash = \"sha256:2257bdd5cf54a4039a4337162cd8048f05a724380a2283df34620f55d4e29341\"},\n-    {file = \"aiohttp-3.11.7-cp310-cp310-win_amd64.whl\", hash = \"sha256:b7215bf2b53bc6cb35808149980c2ae80a4ae4e273890ac85459c014d5aa60ac\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:cea52d11e02123f125f9055dfe0ccf1c3857225fb879e4a944fae12989e2aef2\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:3ce18f703b7298e7f7633efd6a90138d99a3f9a656cb52c1201e76cb5d79cf08\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:670847ee6aeb3a569cd7cdfbe0c3bec1d44828bbfbe78c5d305f7f804870ef9e\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4dda726f89bfa5c465ba45b76515135a3ece0088dfa2da49b8bb278f3bdeea12\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c25b74a811dba37c7ea6a14d99eb9402d89c8d739d50748a75f3cf994cf19c43\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e5522ee72f95661e79db691310290c4618b86dff2d9b90baedf343fd7a08bf79\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1fbf41a6bbc319a7816ae0f0177c265b62f2a59ad301a0e49b395746eb2a9884\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:59ee1925b5a5efdf6c4e7be51deee93984d0ac14a6897bd521b498b9916f1544\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:24054fce8c6d6f33a3e35d1c603ef1b91bbcba73e3f04a22b4f2f27dac59b347\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:351849aca2c6f814575c1a485c01c17a4240413f960df1bf9f5deb0003c61a53\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:12724f3a211fa243570e601f65a8831372caf1a149d2f1859f68479f07efec3d\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:7ea4490360b605804bea8173d2d086b6c379d6bb22ac434de605a9cbce006e7d\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:e0bf378db07df0a713a1e32381a1b277e62ad106d0dbe17b5479e76ec706d720\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-win32.whl\", hash = \"sha256:cd8d62cab363dfe713067027a5adb4907515861f1e4ce63e7be810b83668b847\"},\n-    {file = \"aiohttp-3.11.7-cp311-cp311-win_amd64.whl\", hash = \"sha256:bf0e6cce113596377cadda4e3ac5fb89f095bd492226e46d91b4baef1dd16f60\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:4bb7493c3e3a36d3012b8564bd0e2783259ddd7ef3a81a74f0dbfa000fce48b7\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:e143b0ef9cb1a2b4f74f56d4fbe50caa7c2bb93390aff52f9398d21d89bc73ea\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:f7c58a240260822dc07f6ae32a0293dd5bccd618bb2d0f36d51c5dbd526f89c0\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8d20cfe63a1c135d26bde8c1d0ea46fd1200884afbc523466d2f1cf517d1fe33\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:12e4d45847a174f77b2b9919719203769f220058f642b08504cf8b1cf185dacf\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:cf4efa2d01f697a7dbd0509891a286a4af0d86902fc594e20e3b1712c28c0106\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9ee6a4cdcbf54b8083dc9723cdf5f41f722c00db40ccf9ec2616e27869151129\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c6095aaf852c34f42e1bd0cf0dc32d1e4b48a90bfb5054abdbb9d64b36acadcb\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:1cf03d27885f8c5ebf3993a220cc84fc66375e1e6e812731f51aab2b2748f4a6\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:1a17f6a230f81eb53282503823f59d61dff14fb2a93847bf0399dc8e87817307\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:481f10a1a45c5f4c4a578bbd74cff22eb64460a6549819242a87a80788461fba\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:db37248535d1ae40735d15bdf26ad43be19e3d93ab3f3dad8507eb0f85bb8124\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:9d18a8b44ec8502a7fde91446cd9c9b95ce7c49f1eacc1fb2358b8907d4369fd\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-win32.whl\", hash = \"sha256:3d1c9c15d3999107cbb9b2d76ca6172e6710a12fda22434ee8bd3f432b7b17e8\"},\n-    {file = \"aiohttp-3.11.7-cp312-cp312-win_amd64.whl\", hash = \"sha256:018f1b04883a12e77e7fc161934c0f298865d3a484aea536a6a2ca8d909f0ba0\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:241a6ca732d2766836d62c58c49ca7a93d08251daef0c1e3c850df1d1ca0cbc4\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:aa3705a8d14de39898da0fbad920b2a37b7547c3afd2a18b9b81f0223b7d0f68\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:9acfc7f652b31853eed3b92095b0acf06fd5597eeea42e939bd23a17137679d5\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dcefcf2915a2dbdbce37e2fc1622129a1918abfe3d06721ce9f6cdac9b6d2eaa\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c1f6490dd1862af5aae6cfcf2a274bffa9a5b32a8f5acb519a7ecf5a99a88866\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f1ac5462582d6561c1c1708853a9faf612ff4e5ea5e679e99be36143d6eabd8e\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4c1a6309005acc4b2bcc577ba3b9169fea52638709ffacbd071f3503264620da\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f5b973cce96793725ef63eb449adfb74f99c043c718acb76e0d2a447ae369962\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:ce91a24aac80de6be8512fb1c4838a9881aa713f44f4e91dd7bb3b34061b497d\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:875f7100ce0e74af51d4139495eec4025affa1a605280f23990b6434b81df1bd\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c171fc35d3174bbf4787381716564042a4cbc008824d8195eede3d9b938e29a8\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:ee9afa1b0d2293c46954f47f33e150798ad68b78925e3710044e0d67a9487791\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:8360c7cc620abb320e1b8d603c39095101391a82b1d0be05fb2225471c9c5c52\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-win32.whl\", hash = \"sha256:7a9318da4b4ada9a67c1dd84d1c0834123081e746bee311a16bb449f363d965e\"},\n-    {file = \"aiohttp-3.11.7-cp313-cp313-win_amd64.whl\", hash = \"sha256:fc6da202068e0a268e298d7cd09b6e9f3997736cd9b060e2750963754552a0a9\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:17829f37c0d31d89aa6b8b010475a10233774771f9b6dc2cc352ea4f8ce95d9a\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:d6177077a31b1aecfc3c9070bd2f11419dbb4a70f30f4c65b124714f525c2e48\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:badda65ac99555791eed75e234afb94686ed2317670c68bff8a4498acdaee935\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0de6466b9d742b4ee56fe1b2440706e225eb48c77c63152b1584864a236e7a50\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:04b0cc74d5a882c9dacaeeccc1444f0233212b6f5be8bc90833feef1e1ce14b9\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:28c7af3e50e5903d21d7b935aceed901cc2475463bc16ddd5587653548661fdb\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c63f898f683d1379b9be5afc3dd139e20b30b0b1e0bf69a3fc3681f364cf1629\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:fdadc3f6a32d6eca45f9a900a254757fd7855dfb2d8f8dcf0e88f0fae3ff8eb1\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:d329300fb23e14ed1f8c6d688dfd867d1dcc3b1d7cd49b7f8c5b44e797ce0932\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:5578cf40440eafcb054cf859964bc120ab52ebe0e0562d2b898126d868749629\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7b2f8107a3c329789f3c00b2daad0e35f548d0a55cda6291579136622099a46e\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:43dd89a6194f6ab02a3fe36b09e42e2df19c211fc2050ce37374d96f39604997\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:d2fa6fc7cc865d26ff42480ac9b52b8c9b7da30a10a6442a9cdf429de840e949\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-win32.whl\", hash = \"sha256:a7d9a606355655617fee25dd7e54d3af50804d002f1fd3118dd6312d26692d70\"},\n-    {file = \"aiohttp-3.11.7-cp39-cp39-win_amd64.whl\", hash = \"sha256:53c921b58fdc6485d6b2603e0132bb01cd59b8f0620ffc0907f525e0ba071687\"},\n-    {file = \"aiohttp-3.11.7.tar.gz\", hash = \"sha256:01a8aca4af3da85cea5c90141d23f4b0eee3cbecfd33b029a45a80f28c66c668\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:2d2ca685c6a851ce64e511fbcb906e4dd97d13e567ca7ecb5cb30b184e15dc6d\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:52913bb8a0a72a57479f54b281300c9d23036aa9aa3ebbc9a32a643484eadfc2\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:35dafc70051b6cbd6dafb533b4e3f0df6225a4896be373ef86367b2987409331\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:561b9596a9f90266673ef0b950c27e04ab597cdb53785e2ac91b83b33c31b509\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d479c1fdcc920056a06d04059db52eb8590ecbbb3acdcaeeea26a88ff782e94a\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9ce8eb6444bb6e862feca664ce365afa8e2e32db24dcf1a502719a8a002f9274\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:df9bf08eb93611b1d4d6245b6fecf88728e90eece00e00d554e1b0c445557d83\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5a20ddaa58fea717177fac9a4a1fb8b39be868aa4fed2af6de4313b7a08f0f71\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:9f4aadfea6b48cfa17aef1a68ba6bee5a0246374f5a588e299a4f4ff5bd1c77b\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:aa7deebb4bc5143745e6282139d7b9de50beb6d06609df64d2c993ef496bc7eb\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:fe503a76b9e3a13b62e64545693c9463afe9d429e0909120f7bb66de91ed8bc2\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:1c5838a68e31712354129add1b5fe32b06aa05275f835130edc650e6288af05f\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:832e58d9454fe501b0d092cdf660c0e34e16005f61acd06e1c79b0fc45019c94\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-win32.whl\", hash = \"sha256:00618c37a350884c08e87cf9a6532be274d564227ac49e0b474cf41f27e1f190\"},\n+    {file = \"aiohttp-3.11.8-cp310-cp310-win_amd64.whl\", hash = \"sha256:8eeaac75203da1a54afe1faea3c855a1973026b54929112aa9b67bceadbcb0ca\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:f8dd02b44555893adfe7cc4b3b454fee04f9dcec45cf66ef5bb53ebf393f0505\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:658052941324edea3dee1f681375e70779f55e437e07bdfc4b5bbe65ad53cefb\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:6c829471a9e2266da4a0666f8a9e215f19320f79778af379c1c7db324ac24ed2\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d21951756690f5d86d0215da38eb0fd65def03b5e2a1c08a4a39718a6d0d48f2\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2fa50ddc6b21cc1ae23e13524d6f75b27e279fdf5cf905b2df6fd171891ac4e2\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2a5afbd805e449048ecebb1a256176e953d4ca9e48bab387d4d1c8524f1c7a95\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ea68db69f2a4ddc24b28b8e754fc0b963ed7f9b9a76137f06fe44643d6821fbd\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:80b3ac163145660ce660aed2f1005e6d4de840d39728990b7250525eeec4e4a8\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:e9ac0cce897904b77e109e5403ed713187dbdf96832bfd061ac07164264be16c\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:3260c77cff4e35245bc517658bd54d7a64787f71f3c4f723877c82f22835b032\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f7fd9c11ffad6b022bf02a41a70418cb2ab3b33f2c27842a5999e3ab78daf280\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:16bda233a7b159ab08107e8858fedca90a9de287057fab54cafde51bd83f9819\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:4867008617bbf86e9fb5b00f72dd0e3a00a579b32233caff834320867f9b7cac\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-win32.whl\", hash = \"sha256:17e6b9d8e29e3bfc7f893f327e92c9769d3582cee2fb1652c1431ac3f60115a0\"},\n+    {file = \"aiohttp-3.11.8-cp311-cp311-win_amd64.whl\", hash = \"sha256:7f3be4961a5c2c670f31caab7641a37ea2a97031f0d8ae15bcfd36b6bf273200\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:0e3b5bfef913d6be270c81976fbc0cbf66625cd92663bbb7e03b3adbd6aa4ac6\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:cb51a81cb637b9a072c9cfae1839e35c6579638861eb3479eb5d6e6ce8bc6782\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:dd2ca84e5f7a35f313a62eb7d6a50bac6760b60bafce34586750712731c0aeff\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:47c6663df9446aa848b478413219600da4b54bc0409e1ac4bc80fb1a81501363\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c665ed4b52256614858b20711bbbd2755b0e19ec86870f8ff1645acf9ae9e760\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:35d4545e7684da7a954ffc2dce495462cb16a902dffdebe98572408f6aaaee83\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:85be3899e6860dd2cd3f4370ded6708e939d00d5ec922a8eb328d114db605a47\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a0ed9f1f2697713c48efc9ec483ad5d062e4aa91854f090a3eba0b19c002851d\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:c0dbae99737badf3f5e862088a118e28d3b36f03eb608a6382eddfd68178e05b\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:beae08f900b2980af4353a0200eb162b39f276fd8a6e43079a540f83964671f4\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d6f9e5fd1b3ecbaca3e04a15a02d1fa213248608caee99fd5bdddd4759959cf7\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:a7def89a41fe32120d89cd4577f5efbab3c52234c5890066ced8a2f7202dff88\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:98f596cf59292e779bc387f22378a3d2c5e052c9fe2bf822ac4f547c6fe57758\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-win32.whl\", hash = \"sha256:b64fa6b76b35b695cd3e5c42a4e568cbea8d41c9e59165e2a43da00976e2027e\"},\n+    {file = \"aiohttp-3.11.8-cp312-cp312-win_amd64.whl\", hash = \"sha256:afba47981ff73b1794c00dce774334dcfe62664b3b4f78f278b77d21ce9daf43\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:a81525430da5ca356fae6e889daeb6f5cc0d5f0cef88e59cdde48e2394ea1365\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:7565689e86a88c1d258351ebd14e343337b76a56ca5c0a2c1db96ec28149386f\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:d0f9dbe9763c014c408ad51a027dc9582518e992dc63e2ffe359ac1b4840a560\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8ca580edc3ccd7f6ea76ad9cf59f5a8756d338e770b5eda7be26bcda8fa7ef53\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7d141631a7348038fc7b5d1a81b3c9afa9aa056188ded7902fe754028fdea5c5\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:64e6b14608a56a4c76c60daac730b0c0eeaf9d10dfc3231f7fc26521a0d628fd\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0983d0ce329f2f9dbeb355c3744bd6333f34e0dc56025b6b7d4f285b90acb51e\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d96b93a46a3742880fa21bcb35c6c40cf27714ec0fb8ec85fe444d73b95131b9\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:f4f1779c3142d913c509c2ed1de8b8f920e07a5cd65ac1f57c61cfb6bfded5a4\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:48be7cff468c9c0d86a02e6a826e1fe159094b16d5aa2c17703e7317f791b0f9\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:daea456b79ca2bacc7f062845bbb1139c3b3231fc83169da5a682cf385416dd1\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:c92e763cf641e10ad9342597d20060ba23de5e411aada96660e679e3f9371189\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a750ee5a177e0f873d6b2d7d0fa6e1e7c658fc0ca8ea56438dcba2ac94bedb09\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-win32.whl\", hash = \"sha256:4448c9c7f77bad48a6569062c0c16deb77fbb7363de1dc71ed087f66fb3b3c96\"},\n+    {file = \"aiohttp-3.11.8-cp313-cp313-win_amd64.whl\", hash = \"sha256:481075a1949de79a8a6841e0086f2f5f464785c592cf527ed0db2c0cbd0e1ba2\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:72779bfb34d6d6b51e55a7f4901b410e416b5431738b367d49696928c91a2ca8\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:3e6523f39071a01757048985e4cc22d04aa130bc40d9128503f3a61a3ee98328\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:220bbce18b3046973465be45415430f1cab39d7fdc40cbcf0a8c05485c6902fe\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:336bbf7a33dd8cb4a7afb98c70e9935a81e5e88f7ac595ba2e84b1fb5da190d6\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3c5e4f1ba5059b85e05c551961a448ce2689c6249ed6a2e2174796842c191d10\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e9f9fd5c672c962389429abd11ed32c9c93f7932fd58584cae1e43951b141c6b\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:58bd94ad48143e1d42e05fc055da41de0a9933f378ad87760595b8aec83d317b\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9bf52642b12d70d78c18882915201bc5345f7c8f0f2ab8919d99b886aa6475a7\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:fee12d8487b0df2b683424cca2a0d8fb7281d5607518d742e98119a74af01026\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:65fd04f1fea668ad1af48ac31b752000e222dccffedcad3de8ccf9d34489ccd3\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c3f397e0511a0ec4fe331e602fc057dfd336d352062deb9969ebd81e253a149c\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:cf8f05f4abe3288fe2e106e1461fd20d8abf6103886ddfb6d746a5b8fb830d2b\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7d71d4ac0792ff89541179394d303be846a0b6cd3821ae67286ee69ecec16f9f\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-win32.whl\", hash = \"sha256:2b6f8716044ae5e5f2a3b4e4b6bfee48e97c8b2a92e56f43aadd728c7fd26b7d\"},\n+    {file = \"aiohttp-3.11.8-cp39-cp39-win_amd64.whl\", hash = \"sha256:da343903214bf9f9d314b913caa499fa19e26d73e6e23a3db7d4898ea6d47028\"},\n+    {file = \"aiohttp-3.11.8.tar.gz\", hash = \"sha256:7bc9d64a2350cbb29a9732334e1a0743cbb6844de1731cbdf5949b235653f3fd\"},\n ]\n \n [package.dependencies]\n@@ -666,13 +666,13 @@ css = [\"tinycss2 (>=1.1.0,<1.5)\"]\n \n [[package]]\n name = \"botocore\"\n-version = \"1.35.69\"\n+version = \"1.35.71\"\n description = \"Low-level, data-driven core of boto 3.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"botocore-1.35.69-py3-none-any.whl\", hash = \"sha256:cad8d9305f873404eee4b197d84e60a40975d43cbe1ab63abe893420ddfe6e3c\"},\n-    {file = \"botocore-1.35.69.tar.gz\", hash = \"sha256:f9f23dd76fb247d9b0e8d411d2995e6f847fc451c026f1e58e300f815b0b36eb\"},\n+    {file = \"botocore-1.35.71-py3-none-any.whl\", hash = \"sha256:fc46e7ab1df3cef66dfba1633f4da77c75e07365b36f03bd64a3793634be8fc1\"},\n+    {file = \"botocore-1.35.71.tar.gz\", hash = \"sha256:f9fa058e0393660c3fe53c1e044751beb64b586def0bd2212448a7c328b0cbba\"},\n ]\n \n [package.dependencies]\n@@ -936,13 +936,13 @@ colorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n \n [[package]]\n name = \"cohere\"\n-version = \"5.11.4\"\n+version = \"5.12.0\"\n description = \"\"\n optional = true\n python-versions = \"<4.0,>=3.8\"\n files = [\n-    {file = \"cohere-5.11.4-py3-none-any.whl\", hash = \"sha256:59fb427e5426e0ee1c25b9deec83f0418a1c082240c57007f41384b34cd41552\"},\n-    {file = \"cohere-5.11.4.tar.gz\", hash = \"sha256:5586335a20de3bf6816f34151f9d9f2928880cdf776c57aae793b5cca58d1826\"},\n+    {file = \"cohere-5.12.0-py3-none-any.whl\", hash = \"sha256:47f61c6db274f61fb06781da3808d717b4ac4d46b1ee487c2f727450038c14cb\"},\n+    {file = \"cohere-5.12.0.tar.gz\", hash = \"sha256:52a30edd4f7253b551045eb624df6c14e840c350306c8a69ae322e1f59743969\"},\n ]\n \n [package.dependencies]\n@@ -1562,18 +1562,18 @@ files = [\n \n [[package]]\n name = \"duckduckgo-search\"\n-version = \"6.3.6\"\n+version = \"6.3.7\"\n description = \"Search for words, documents, images, news, maps and text translation using the DuckDuckGo.com search engine.\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"duckduckgo_search-6.3.6-py3-none-any.whl\", hash = \"sha256:0fb9e05df335619797828d0520fe5a84e43009600836b2eb61e034a645d2379c\"},\n-    {file = \"duckduckgo_search-6.3.6.tar.gz\", hash = \"sha256:58e020270e6a1515ead2ba386a86f9c5187c886654ddc7db62e3ddbc65489ff1\"},\n+    {file = \"duckduckgo_search-6.3.7-py3-none-any.whl\", hash = \"sha256:6a831a27977751e8928222f04c99a5d069ff80e2a7c78b699c9b9ac6cb48c41b\"},\n+    {file = \"duckduckgo_search-6.3.7.tar.gz\", hash = \"sha256:53d84966429a6377647e2a1ea7224b657575c7a4d506729bdb837e4ee12915ed\"},\n ]\n \n [package.dependencies]\n click = \">=8.1.7\"\n-primp = \">=0.8.0\"\n+primp = \">=0.8.1\"\n \n [package.extras]\n dev = [\"mypy (>=1.11.1)\", \"pytest (>=8.3.1)\", \"pytest-asyncio (>=0.23.8)\", \"ruff (>=0.6.1)\"]\n@@ -1743,13 +1743,13 @@ zstandard = [\"zstandard\"]\n \n [[package]]\n name = \"fastjsonschema\"\n-version = \"2.20.0\"\n+version = \"2.21.0\"\n description = \"Fastest Python implementation of JSON schema\"\n optional = false\n python-versions = \"*\"\n files = [\n-    {file = \"fastjsonschema-2.20.0-py3-none-any.whl\", hash = \"sha256:5875f0b0fa7a0043a91e93a9b8f793bcbbba9691e7fd83dca95c28ba26d21f0a\"},\n-    {file = \"fastjsonschema-2.20.0.tar.gz\", hash = \"sha256:3d48fc5300ee96f5d116f10fe6f28d938e6008f59a6a025c2649475b87f76a23\"},\n+    {file = \"fastjsonschema-2.21.0-py3-none-any.whl\", hash = \"sha256:5b23b8e7c9c6adc0ecb91c03a0768cb48cd154d9159378a69c8318532e0b5cbf\"},\n+    {file = \"fastjsonschema-2.21.0.tar.gz\", hash = \"sha256:a02026bbbedc83729da3bfff215564b71902757f33f60089f1abae193daa4771\"},\n ]\n \n [package.extras]\n@@ -1841,13 +1841,13 @@ files = [\n \n [[package]]\n name = \"firecrawl-py\"\n-version = \"1.5.0\"\n+version = \"1.6.1\"\n description = \"Python SDK for Firecrawl API\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"firecrawl_py-1.5.0-py3-none-any.whl\", hash = \"sha256:1787d0ff69aa808498243571d40fa5732b9fb393880d99ea1952dd2aa4dc5679\"},\n-    {file = \"firecrawl_py-1.5.0.tar.gz\", hash = \"sha256:b313743c463e6a7a92982053b0b9e1ef1763e4c0945e579e999cf10e387f1889\"},\n+    {file = \"firecrawl_py-1.6.1-py3-none-any.whl\", hash = \"sha256:910e357e3a9b2ebbada28f7c5b52aaa05281441fb1466c7354a99a7a584bb5cb\"},\n+    {file = \"firecrawl_py-1.6.1.tar.gz\", hash = \"sha256:53b093516e3e447ab6102cac22df91e019302fdd20fa73bdc32627a2fb6a03ce\"},\n ]\n \n [package.dependencies]\n@@ -2709,13 +2709,13 @@ files = [\n \n [[package]]\n name = \"huggingface-hub\"\n-version = \"0.26.2\"\n+version = \"0.26.3\"\n description = \"Client library to download and publish models, datasets and other repos on the huggingface.co hub\"\n optional = false\n python-versions = \">=3.8.0\"\n files = [\n-    {file = \"huggingface_hub-0.26.2-py3-none-any.whl\", hash = \"sha256:98c2a5a8e786c7b2cb6fdeb2740893cba4d53e312572ed3d8afafda65b128c46\"},\n-    {file = \"huggingface_hub-0.26.2.tar.gz\", hash = \"sha256:b100d853465d965733964d123939ba287da60a547087783ddff8a323f340332b\"},\n+    {file = \"huggingface_hub-0.26.3-py3-none-any.whl\", hash = \"sha256:e66aa99e569c2d5419240a9e553ad07245a5b1300350bfbc5a4945cf7432991b\"},\n+    {file = \"huggingface_hub-0.26.3.tar.gz\", hash = \"sha256:90e1fe62ffc26757a073aaad618422b899ccf9447c2bba8c902a90bef5b42e1d\"},\n ]\n \n [package.dependencies]\n@@ -2796,13 +2796,13 @@ all = [\"flake8 (>=7.1.1)\", \"mypy (>=1.11.2)\", \"pytest (>=8.3.2)\", \"ruff (>=0.6.2\n \n [[package]]\n name = \"imageio\"\n-version = \"2.36.0\"\n+version = \"2.36.1\"\n description = \"Library for reading and writing a wide range of image, video, scientific, and volumetric data formats.\"\n optional = false\n python-versions = \">=3.9\"\n files = [\n-    {file = \"imageio-2.36.0-py3-none-any.whl\", hash = \"sha256:471f1eda55618ee44a3c9960911c35e647d9284c68f077e868df633398f137f0\"},\n-    {file = \"imageio-2.36.0.tar.gz\", hash = \"sha256:1c8f294db862c256e9562354d65aa54725b8dafed7f10f02bb3ec20ec1678850\"},\n+    {file = \"imageio-2.36.1-py3-none-any.whl\", hash = \"sha256:20abd2cae58e55ca1af8a8dcf43293336a59adf0391f1917bf8518633cfc2cdf\"},\n+    {file = \"imageio-2.36.1.tar.gz\", hash = \"sha256:e4e1d231f47f9a9e16100b0f7ce1a86e8856fb4d1c0fa2c4365a316f1746be62\"},\n ]\n \n [package.dependencies]\n@@ -3058,84 +3058,86 @@ i18n = [\"Babel (>=2.7)\"]\n \n [[package]]\n name = \"jiter\"\n-version = \"0.7.1\"\n+version = \"0.8.0\"\n description = \"Fast iterable JSON parser.\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"jiter-0.7.1-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:262e96d06696b673fad6f257e6a0abb6e873dc22818ca0e0600f4a1189eb334f\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:be6de02939aac5be97eb437f45cfd279b1dc9de358b13ea6e040e63a3221c40d\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:935f10b802bc1ce2b2f61843e498c7720aa7f4e4bb7797aa8121eab017293c3d\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:9cd3cccccabf5064e4bb3099c87bf67db94f805c1e62d1aefd2b7476e90e0ee2\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4aa919ebfc5f7b027cc368fe3964c0015e1963b92e1db382419dadb098a05192\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5ae2d01e82c94491ce4d6f461a837f63b6c4e6dd5bb082553a70c509034ff3d4\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9f9568cd66dbbdab67ae1b4c99f3f7da1228c5682d65913e3f5f95586b3cb9a9\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:9ecbf4e20ec2c26512736284dc1a3f8ed79b6ca7188e3b99032757ad48db97dc\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:b1a0508fddc70ce00b872e463b387d49308ef02b0787992ca471c8d4ba1c0fa1\"},\n-    {file = \"jiter-0.7.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:f84c9996664c460f24213ff1e5881530abd8fafd82058d39af3682d5fd2d6316\"},\n-    {file = \"jiter-0.7.1-cp310-none-win32.whl\", hash = \"sha256:c915e1a1960976ba4dfe06551ea87063b2d5b4d30759012210099e712a414d9f\"},\n-    {file = \"jiter-0.7.1-cp310-none-win_amd64.whl\", hash = \"sha256:75bf3b7fdc5c0faa6ffffcf8028a1f974d126bac86d96490d1b51b3210aa0f3f\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:ad04a23a91f3d10d69d6c87a5f4471b61c2c5cd6e112e85136594a02043f462c\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:1e47a554de88dff701226bb5722b7f1b6bccd0b98f1748459b7e56acac2707a5\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1e44fff69c814a2e96a20b4ecee3e2365e9b15cf5fe4e00869d18396daa91dab\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:df0a1d05081541b45743c965436f8b5a1048d6fd726e4a030113a2699a6046ea\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f22cf8f236a645cb6d8ffe2a64edb5d2b66fb148bf7c75eea0cb36d17014a7bc\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:da8589f50b728ea4bf22e0632eefa125c8aa9c38ed202a5ee6ca371f05eeb3ff\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f20de711224f2ca2dbb166a8d512f6ff48c9c38cc06b51f796520eb4722cc2ce\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:8a9803396032117b85ec8cbf008a54590644a062fedd0425cbdb95e4b2b60479\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:3d8bae77c82741032e9d89a4026479061aba6e646de3bf5f2fc1ae2bbd9d06e0\"},\n-    {file = \"jiter-0.7.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:3dc9939e576bbc68c813fc82f6620353ed68c194c7bcf3d58dc822591ec12490\"},\n-    {file = \"jiter-0.7.1-cp311-none-win32.whl\", hash = \"sha256:f7605d24cd6fab156ec89e7924578e21604feee9c4f1e9da34d8b67f63e54892\"},\n-    {file = \"jiter-0.7.1-cp311-none-win_amd64.whl\", hash = \"sha256:f3ea649e7751a1a29ea5ecc03c4ada0a833846c59c6da75d747899f9b48b7282\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:ad36a1155cbd92e7a084a568f7dc6023497df781adf2390c345dd77a120905ca\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:7ba52e6aaed2dc5c81a3d9b5e4ab95b039c4592c66ac973879ba57c3506492bb\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2b7de0b6f6728b678540c7927587e23f715284596724be203af952418acb8a2d\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:9463b62bd53c2fb85529c700c6a3beb2ee54fde8bef714b150601616dcb184a6\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:627164ec01d28af56e1f549da84caf0fe06da3880ebc7b7ee1ca15df106ae172\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:25d0e5bf64e368b0aa9e0a559c3ab2f9b67e35fe7269e8a0d81f48bbd10e8963\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c244261306f08f8008b3087059601997016549cb8bb23cf4317a4827f07b7d74\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:7ded4e4b75b68b843b7cea5cd7c55f738c20e1394c68c2cb10adb655526c5f1b\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:80dae4f1889b9d09e5f4de6b58c490d9c8ce7730e35e0b8643ab62b1538f095c\"},\n-    {file = \"jiter-0.7.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:5970cf8ec943b51bce7f4b98d2e1ed3ada170c2a789e2db3cb484486591a176a\"},\n-    {file = \"jiter-0.7.1-cp312-none-win32.whl\", hash = \"sha256:701d90220d6ecb3125d46853c8ca8a5bc158de8c49af60fd706475a49fee157e\"},\n-    {file = \"jiter-0.7.1-cp312-none-win_amd64.whl\", hash = \"sha256:7824c3ecf9ecf3321c37f4e4d4411aad49c666ee5bc2a937071bdd80917e4533\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:097676a37778ba3c80cb53f34abd6943ceb0848263c21bf423ae98b090f6c6ba\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:3298af506d4271257c0a8f48668b0f47048d69351675dd8500f22420d4eec378\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:12fd88cfe6067e2199964839c19bd2b422ca3fd792949b8f44bb8a4e7d21946a\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:dacca921efcd21939123c8ea8883a54b9fa7f6545c8019ffcf4f762985b6d0c8\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:de3674a5fe1f6713a746d25ad9c32cd32fadc824e64b9d6159b3b34fd9134143\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:65df9dbae6d67e0788a05b4bad5706ad40f6f911e0137eb416b9eead6ba6f044\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7ba9a358d59a0a55cccaa4957e6ae10b1a25ffdabda863c0343c51817610501d\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:576eb0f0c6207e9ede2b11ec01d9c2182973986514f9c60bc3b3b5d5798c8f50\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:e550e29cdf3577d2c970a18f3959e6b8646fd60ef1b0507e5947dc73703b5627\"},\n-    {file = \"jiter-0.7.1-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:81d968dbf3ce0db2e0e4dec6b0a0d5d94f846ee84caf779b07cab49f5325ae43\"},\n-    {file = \"jiter-0.7.1-cp313-none-win32.whl\", hash = \"sha256:f892e547e6e79a1506eb571a676cf2f480a4533675f834e9ae98de84f9b941ac\"},\n-    {file = \"jiter-0.7.1-cp313-none-win_amd64.whl\", hash = \"sha256:0302f0940b1455b2a7fb0409b8d5b31183db70d2b07fd177906d83bf941385d1\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-macosx_10_12_x86_64.whl\", hash = \"sha256:c65a3ce72b679958b79d556473f192a4dfc5895e8cc1030c9f4e434690906076\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:e80052d3db39f9bb8eb86d207a1be3d9ecee5e05fdec31380817f9609ad38e60\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:70a497859c4f3f7acd71c8bd89a6f9cf753ebacacf5e3e799138b8e1843084e3\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:c1288bc22b9e36854a0536ba83666c3b1fb066b811019d7b682c9cf0269cdf9f\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b096ca72dd38ef35675e1d3b01785874315182243ef7aea9752cb62266ad516f\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8dbbd52c50b605af13dbee1a08373c520e6fcc6b5d32f17738875847fea4e2cd\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:af29c5c6eb2517e71ffa15c7ae9509fa5e833ec2a99319ac88cc271eca865519\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:f114a4df1e40c03c0efbf974b376ed57756a1141eb27d04baee0680c5af3d424\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:191fbaee7cf46a9dd9b817547bf556facde50f83199d07fc48ebeff4082f9df4\"},\n-    {file = \"jiter-0.7.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:0e2b445e5ee627fb4ee6bbceeb486251e60a0c881a8e12398dfdff47c56f0723\"},\n-    {file = \"jiter-0.7.1-cp38-none-win32.whl\", hash = \"sha256:47ac4c3cf8135c83e64755b7276339b26cd3c7ddadf9e67306ace4832b283edf\"},\n-    {file = \"jiter-0.7.1-cp38-none-win_amd64.whl\", hash = \"sha256:60b49c245cd90cde4794f5c30f123ee06ccf42fb8730a019a2870cd005653ebd\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:8f212eeacc7203256f526f550d105d8efa24605828382cd7d296b703181ff11d\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:d9e247079d88c00e75e297e6cb3a18a039ebcd79fefc43be9ba4eb7fb43eb726\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f0aacaa56360139c53dcf352992b0331f4057a0373bbffd43f64ba0c32d2d155\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:bc1b55314ca97dbb6c48d9144323896e9c1a25d41c65bcb9550b3e0c270ca560\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f281aae41b47e90deb70e7386558e877a8e62e1693e0086f37d015fa1c102289\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:93c20d2730a84d43f7c0b6fb2579dc54335db742a59cf9776d0b80e99d587382\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e81ccccd8069110e150613496deafa10da2f6ff322a707cbec2b0d52a87b9671\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:0a7d5e85766eff4c9be481d77e2226b4c259999cb6862ccac5ef6621d3c8dcce\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:f52ce5799df5b6975439ecb16b1e879d7655e1685b6e3758c9b1b97696313bfb\"},\n-    {file = \"jiter-0.7.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:e0c91a0304373fdf97d56f88356a010bba442e6d995eb7773cbe32885b71cdd8\"},\n-    {file = \"jiter-0.7.1-cp39-none-win32.whl\", hash = \"sha256:5c08adf93e41ce2755970e8aa95262298afe2bf58897fb9653c47cd93c3c6cdc\"},\n-    {file = \"jiter-0.7.1-cp39-none-win_amd64.whl\", hash = \"sha256:6592f4067c74176e5f369228fb2995ed01400c9e8e1225fb73417183a5e635f0\"},\n-    {file = \"jiter-0.7.1.tar.gz\", hash = \"sha256:448cf4f74f7363c34cdef26214da527e8eeffd88ba06d0b80b485ad0667baf5d\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:dee4eeb293ffcd2c3b31ebab684dbf7f7b71fe198f8eddcdf3a042cc6e10205a\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:aad1e6e9b01cf0304dcee14db03e92e0073287a6297caf5caf2e9dbfea16a924\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:504099fb7acdbe763e10690d560a25d4aee03d918d6a063f3a761d8a09fb833f\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:2373487caad7fe39581f588ab5c9262fc1ade078d448626fec93f4ffba528858\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c341ecc3f9bccde952898b0c97c24f75b84b56a7e2f8bbc7c8e38cab0875a027\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0e48e7a336529b9419d299b70c358d4ebf99b8f4b847ed3f1000ec9f320e8c0c\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f5ee157a8afd2943be690db679f82fafb8d347a8342e8b9c34863de30c538d55\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:d7dceae3549b80087f913aad4acc2a7c1e0ab7cb983effd78bdc9c41cabdcf18\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:e29e9ecce53d396772590438214cac4ab89776f5e60bd30601f1050b34464019\"},\n+    {file = \"jiter-0.8.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:fa1782f22d5f92c620153133f35a9a395d3f3823374bceddd3e7032e2fdfa0b1\"},\n+    {file = \"jiter-0.8.0-cp310-none-win32.whl\", hash = \"sha256:f754ef13b4e4f67a3bf59fe974ef4342523801c48bf422f720bd37a02a360584\"},\n+    {file = \"jiter-0.8.0-cp310-none-win_amd64.whl\", hash = \"sha256:796f750b65f5d605f5e7acaccc6b051675e60c41d7ac3eab40dbd7b5b81a290f\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:f6f4e645efd96b4690b9b6091dbd4e0fa2885ba5c57a0305c1916b75b4f30ff6\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:f61cf6d93c1ade9b8245c9f14b7900feadb0b7899dbe4aa8de268b705647df81\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0396bc5cb1309c6dab085e70bb3913cdd92218315e47b44afe9eace68ee8adaa\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:62d0e42ec5dc772bd8554a304358220be5d97d721c4648b23f3a9c01ccc2cb26\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ec4b711989860705733fc59fb8c41b2def97041cea656b37cf6c8ea8dee1c3f4\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:859cc35bf304ab066d88f10a44a3251a9cd057fb11ec23e00be22206db878f4f\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5000195921aa293b39b9b5bc959d7fa658e7f18f938c0e52732da8e3cc70a278\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:36050284c0abde57aba34964d3920f3d6228211b65df7187059bb7c7f143759a\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:a88f608e050cfe45c48d771e86ecdbf5258314c883c986d4217cc79e1fb5f689\"},\n+    {file = \"jiter-0.8.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:646cf4237665b2e13b4159d8f26d53f59bc9f2e6e135e3a508a2e5dd26d978c6\"},\n+    {file = \"jiter-0.8.0-cp311-none-win32.whl\", hash = \"sha256:21fe5b8345db1b3023052b2ade9bb4d369417827242892051244af8fae8ba231\"},\n+    {file = \"jiter-0.8.0-cp311-none-win_amd64.whl\", hash = \"sha256:30c2161c5493acf6b6c3c909973fb64ae863747def01cc7574f3954e0a15042c\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:d91a52d8f49ada2672a4b808a0c5c25d28f320a2c9ca690e30ebd561eb5a1002\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:c38cf25cf7862f61410b7a49684d34eb3b5bcbd7ddaf4773eea40e0bd43de706\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c6189beb5c4b3117624be6b2e84545cff7611f5855d02de2d06ff68e316182be\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:e13fa849c0e30643554add089983caa82f027d69fad8f50acadcb21c462244ab\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d7765ca159d0a58e8e0f8ca972cd6d26a33bc97b4480d0d2309856763807cd28\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1b0befe7c6e9fc867d5bed21bab0131dfe27d1fa5cd52ba2bced67da33730b7d\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e7d6363d4c6f1052b1d8b494eb9a72667c3ef5f80ebacfe18712728e85327000\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:a873e57009863eeac3e3969e4653f07031d6270d037d6224415074ac17e5505c\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:2582912473c0d9940791479fe1bf2976a34f212eb8e0a82ee9e645ac275c5d16\"},\n+    {file = \"jiter-0.8.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:646163201af42f55393ee6e8f6136b8df488253a6533f4230a64242ecbfe6048\"},\n+    {file = \"jiter-0.8.0-cp312-none-win32.whl\", hash = \"sha256:96e75c9abfbf7387cba89a324d2356d86d8897ac58c956017d062ad510832dae\"},\n+    {file = \"jiter-0.8.0-cp312-none-win_amd64.whl\", hash = \"sha256:ed6074552b4a32e047b52dad5ab497223721efbd0e9efe68c67749f094a092f7\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:dd5e351cb9b3e676ec3360a85ea96def515ad2b83c8ae3a251ce84985a2c9a6f\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:ba9f12b0f801ecd5ed0cec29041dc425d1050922b434314c592fc30d51022467\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a7ba461c3681728d556392e8ae56fb44a550155a24905f01982317b367c21dd4\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:3a15ed47ab09576db560dbc5c2c5a64477535beb056cd7d997d5dd0f2798770e\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cef55042816d0737142b0ec056c0356a5f681fb8d6aa8499b158e87098f4c6f8\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:549f170215adeb5e866f10617c3d019d8eb4e6d4e3c6b724b3b8c056514a3487\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f867edeb279d22020877640d2ea728de5817378c60a51be8af731a8a8f525306\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:aef8845f463093799db4464cee2aa59d61aa8edcb3762aaa4aacbec3f478c929\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:d0d6e22e4062c3d3c1bf3594baa2f67fc9dcdda8275abad99e468e0c6540bc54\"},\n+    {file = \"jiter-0.8.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:079e62e64696241ac3f408e337aaac09137ed760ccf2b72b1094b48745c13641\"},\n+    {file = \"jiter-0.8.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:74d2b56ed3da5760544df53b5f5c39782e68efb64dc3aa0bba4cc08815e6fae8\"},\n+    {file = \"jiter-0.8.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:798dafe108cba58a7bb0a50d4d5971f98bb7f3c974e1373e750de6eb21c1a329\"},\n+    {file = \"jiter-0.8.0-cp313-none-win32.whl\", hash = \"sha256:ca6d3064dfc743eb0d3d7539d89d4ba886957c717567adc72744341c1e3573c9\"},\n+    {file = \"jiter-0.8.0-cp313-none-win_amd64.whl\", hash = \"sha256:38caedda64fe1f04b06d7011fc15e86b3b837ed5088657bf778656551e3cd8f9\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-macosx_10_12_x86_64.whl\", hash = \"sha256:bb5c8a0a8d081c338db22e5b8d53a89a121790569cbb85f7d3cfb1fe0fbe9836\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:202dbe8970bfb166fab950eaab8f829c505730a0b33cc5e1cfb0a1c9dd56b2f9\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9046812e5671fdcfb9ae02881fff1f6a14d484b7e8b3316179a372cdfa1e8026\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:e6ac56425023e52d65150918ae25480d0a1ce2a6bf5ea2097f66a2cc50f6d692\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7dfcf97210c6eab9d2a1c6af15dd39e1d5154b96a7145d0a97fa1df865b7b834\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d4e3c8444d418686f78c9a547b9b90031faf72a0a1a46bfec7fb31edbd889c0d\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6507011a299b7f578559084256405a8428875540d8d13530e00b688e41b09493\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:0aae4738eafdd34f0f25c2d3668ce9e8fa0d7cb75a2efae543c9a69aebc37323\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:7f5d782e790396b13f2a7b36bdcaa3736a33293bdda80a4bf1a3ce0cd5ef9f15\"},\n+    {file = \"jiter-0.8.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:cc7f993bc2c4e03015445adbb16790c303282fce2e8d9dc3a3905b1d40e50564\"},\n+    {file = \"jiter-0.8.0-cp38-none-win32.whl\", hash = \"sha256:d4a8a6eda018a991fa58ef707dd51524055d11f5acb2f516d70b1be1d15ab39c\"},\n+    {file = \"jiter-0.8.0-cp38-none-win_amd64.whl\", hash = \"sha256:4cca948a3eda8ea24ed98acb0ee19dc755b6ad2e570ec85e1527d5167f91ff67\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:ef89663678d8257063ce7c00d94638e05bd72f662c5e1eb0e07a172e6c1a9a9f\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:c402ddcba90b4cc71db3216e8330f4db36e0da2c78cf1d8a9c3ed8f272602a94\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1a6dfe795b7a173a9f8ba7421cdd92193d60c1c973bbc50dc3758a9ad0fa5eb6\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:8ec29a31b9abd6be39453a2c45da067138a3005d65d2c0507c530e0f1fdcd9a4\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2a488f8c54bddc3ddefaf3bfd6de4a52c97fc265d77bc2dcc6ee540c17e8c342\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:aeb5561adf4d26ca0d01b5811b4d7b56a8986699a473d700757b4758ef787883\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4ab961858d7ad13132328517d29f121ae1b2d94502191d6bcf96bddcc8bb5d1c\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:a207e718d114d23acf0850a2174d290f42763d955030d9924ffa4227dbd0018f\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:733bc9dc8ff718a0ae4695239e9268eb93e88b73b367dfac3ec227d8ce2f1e77\"},\n+    {file = \"jiter-0.8.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:d1ec27299e22d05e13a06e460bf7f75f26f9aaa0e0fb7d060f40e88df1d81faa\"},\n+    {file = \"jiter-0.8.0-cp39-none-win32.whl\", hash = \"sha256:e8dbfcb46553e6661d3fc1f33831598fcddf73d0f67834bce9fc3e9ebfe5c439\"},\n+    {file = \"jiter-0.8.0-cp39-none-win_amd64.whl\", hash = \"sha256:af2ce2487b3a93747e2cb5150081d4ae1e5874fce5924fc1a12e9e768e489ad8\"},\n+    {file = \"jiter-0.8.0.tar.gz\", hash = \"sha256:86fee98b569d4cc511ff2e3ec131354fafebd9348a487549c31ad371ae730310\"},\n ]\n \n [[package]]\n@@ -3491,13 +3493,13 @@ files = [\n \n [[package]]\n name = \"litellm\"\n-version = \"1.52.16\"\n+version = \"1.53.1\"\n description = \"Library to easily interface with LLM API providers\"\n optional = true\n python-versions = \"!=2.7.*,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,!=3.7.*,>=3.8\"\n files = [\n-    {file = \"litellm-1.52.16-py3-none-any.whl\", hash = \"sha256:9c3cffb71d5a2e2f3a814d06b6360c4983b9718713100b9f094f5f464a0aab75\"},\n-    {file = \"litellm-1.52.16.tar.gz\", hash = \"sha256:afeb60492b4790bbc23b351a5270c86ef1d063b01cc9f25fa06505c020cf789e\"},\n+    {file = \"litellm-1.53.1-py3-none-any.whl\", hash = \"sha256:7a0b480c0bd4f9236910a426d8d8f46a517af4daae2a61d57e42bff4b4daf9b0\"},\n+    {file = \"litellm-1.53.1.tar.gz\", hash = \"sha256:20bb2f98a4613c4c7b86e9186df84c27d7166eca65a7b58584c1e061a29f7519\"},\n ]\n \n [package.dependencies]\n@@ -3914,7 +3916,6 @@ python-versions = \">=3.7\"\n files = [\n     {file = \"milvus_lite-2.4.10-py3-none-macosx_10_9_x86_64.whl\", hash = \"sha256:fc4246d3ed7d1910847afce0c9ba18212e93a6e9b8406048436940578dfad5cb\"},\n     {file = \"milvus_lite-2.4.10-py3-none-macosx_11_0_arm64.whl\", hash = \"sha256:74a8e07c5e3b057df17fbb46913388e84df1dc403a200f4e423799a58184c800\"},\n-    {file = \"milvus_lite-2.4.10-py3-none-manylinux2014_aarch64.whl\", hash = \"sha256:240c7386b747bad696ecb5bd1f58d491e86b9d4b92dccee3315ed7256256eddc\"},\n     {file = \"milvus_lite-2.4.10-py3-none-manylinux2014_x86_64.whl\", hash = \"sha256:211d2e334a043f9282bdd9755f76b9b2d93b23bffa7af240919ffce6a8dfe325\"},\n ]\n \n@@ -4358,21 +4359,21 @@ six = \">=1.16.0\"\n \n [[package]]\n name = \"neo4j\"\n-version = \"5.26.0\"\n+version = \"5.27.0\"\n description = \"Neo4j Bolt driver for Python\"\n optional = true\n python-versions = \">=3.7\"\n files = [\n-    {file = \"neo4j-5.26.0-py3-none-any.whl\", hash = \"sha256:511a6a9468ca89b521bf686f885a2070acc462b1d09821d43710bd477acdf11e\"},\n-    {file = \"neo4j-5.26.0.tar.gz\", hash = \"sha256:51b25ba127b7b9fdae1ddf48ae697ddfab331e60f4b6d8488d1fc1f74ec60dcc\"},\n+    {file = \"neo4j-5.27.0-py3-none-any.whl\", hash = \"sha256:929c14b9e5341267324eca170b39d1798b032bffacc26a0529eacaf678ae483f\"},\n+    {file = \"neo4j-5.27.0.tar.gz\", hash = \"sha256:f82ee807cd15b178898d83f41a66372e11719a25dd487fd7bea48fd4b7323765\"},\n ]\n \n [package.dependencies]\n pytz = \"*\"\n \n [package.extras]\n-numpy = [\"numpy (>=1.7.0,<2.0.0)\"]\n-pandas = [\"numpy (>=1.7.0,<2.0.0)\", \"pandas (>=1.1.0,<3.0.0)\"]\n+numpy = [\"numpy (>=1.7.0,<3.0.0)\"]\n+pandas = [\"numpy (>=1.7.0,<3.0.0)\", \"pandas (>=1.1.0,<3.0.0)\"]\n pyarrow = [\"pyarrow (>=1.0.0)\"]\n \n [[package]]\n@@ -4808,13 +4809,13 @@ sympy = \"*\"\n \n [[package]]\n name = \"openai\"\n-version = \"1.55.1\"\n+version = \"1.55.3\"\n description = \"The official Python library for the openai API\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"openai-1.55.1-py3-none-any.whl\", hash = \"sha256:d10d96a4f9dc5f05d38dea389119ec8dcd24bc9698293c8357253c601b4a77a5\"},\n-    {file = \"openai-1.55.1.tar.gz\", hash = \"sha256:471324321e7739214f16a544e801947a046d3c5d516fae8719a317234e4968d3\"},\n+    {file = \"openai-1.55.3-py3-none-any.whl\", hash = \"sha256:2a235d0e1e312cd982f561b18c27692e253852f4e5fb6ccf08cb13540a9bdaa1\"},\n+    {file = \"openai-1.55.3.tar.gz\", hash = \"sha256:547e85b94535469f137a779d8770c8c5adebd507c2cc6340ca401a7c4d5d16f0\"},\n ]\n \n [package.dependencies]\n@@ -5632,19 +5633,20 @@ virtualenv = \">=20.10.0\"\n \n [[package]]\n name = \"primp\"\n-version = \"0.8.0\"\n+version = \"0.8.1\"\n description = \"HTTP client that can impersonate web browsers, mimicking their headers and `TLS/JA3/JA4/HTTP2` fingerprints\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"primp-0.8.0-cp38-abi3-macosx_10_12_x86_64.whl\", hash = \"sha256:5cb4d1db83d92a95fb4506d4605484b389a988fb962e80089caa73c035185f58\"},\n-    {file = \"primp-0.8.0-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:135e6350a6c509fcc3d1cc03d2025edd54783bca671a39a2d4f240ce5d406576\"},\n-    {file = \"primp-0.8.0-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:609f4363fb591bde351e6372ba0caaf1ac963d38cbf942bc42dc3284575b4cdf\"},\n-    {file = \"primp-0.8.0-cp38-abi3-manylinux_2_34_aarch64.whl\", hash = \"sha256:e341c821fa265f2eaf2a0de80924e465f7bc20a84e9ce28e65cee350ad2cc300\"},\n-    {file = \"primp-0.8.0-cp38-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:6672554a653f4ef5e672f3985481bc4afff9bfbeaf2bc7b70b9230b7672d49d6\"},\n-    {file = \"primp-0.8.0-cp38-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:ea18ebc1f664898beac62cfa092ff38ad70c7eb0b3120aecd18ab7a776b6b3fb\"},\n-    {file = \"primp-0.8.0-cp38-abi3-win_amd64.whl\", hash = \"sha256:bcf9895f8dd97d49843adbed635d713e3a1c2dc0a4b08ac0879292be83f1e447\"},\n-    {file = \"primp-0.8.0.tar.gz\", hash = \"sha256:6472651b8270247b3121f728b613e312301b8f7e9170944a4e71771dd58eaa8b\"},\n+    {file = \"primp-0.8.1-cp38-abi3-macosx_10_12_x86_64.whl\", hash = \"sha256:8294db817701ad76b6a186c16e22cc49d36fac5986647a83657ad4a58ddeee42\"},\n+    {file = \"primp-0.8.1-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:e8117531dcdb0dbcf9855fdbac73febdde5967ca0332a2c05b5961d2fbcfe749\"},\n+    {file = \"primp-0.8.1-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:993cc4284e8c5c858254748f078e872ba250c9339d64398dc000a8f9cffadda3\"},\n+    {file = \"primp-0.8.1-cp38-abi3-manylinux_2_34_aarch64.whl\", hash = \"sha256:4a27ac642be5c616fc5f139a5ad391dcd0c5964ace56fe6cf31cbffb972a7480\"},\n+    {file = \"primp-0.8.1-cp38-abi3-manylinux_2_34_armv7l.whl\", hash = \"sha256:e8483b8d9eec9fc43d77bb448555466030f29cdd99d9375eb75155e9f832e5bd\"},\n+    {file = \"primp-0.8.1-cp38-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:92f5f8267216252cfb27f2149811e14682bb64f0c5d37f00d218d1592e02f0b9\"},\n+    {file = \"primp-0.8.1-cp38-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:98f7f3a9481c55c56e7eff9024f29e16379a87d5b0a1b683e145dd8fcbdcc46b\"},\n+    {file = \"primp-0.8.1-cp38-abi3-win_amd64.whl\", hash = \"sha256:6f0018a26be787431504e32548b296a278abbe85da43bcbaf2d4982ac3dcd332\"},\n+    {file = \"primp-0.8.1.tar.gz\", hash = \"sha256:ddf05754a7b70d59df8a014a8585e418f9c04e0b69065bab6633f4a9b92bad93\"},\n ]\n \n [package.extras]\n@@ -6187,13 +6189,13 @@ windows-terminal = [\"colorama (>=0.4.6)\"]\n \n [[package]]\n name = \"pyjwt\"\n-version = \"2.10.0\"\n+version = \"2.10.1\"\n description = \"JSON Web Token implementation in Python\"\n optional = true\n python-versions = \">=3.9\"\n files = [\n-    {file = \"PyJWT-2.10.0-py3-none-any.whl\", hash = \"sha256:543b77207db656de204372350926bed5a86201c4cbff159f623f79c7bb487a15\"},\n-    {file = \"pyjwt-2.10.0.tar.gz\", hash = \"sha256:7628a7eb7938959ac1b26e819a1df0fd3259505627b575e4bad6d08f76db695c\"},\n+    {file = \"PyJWT-2.10.1-py3-none-any.whl\", hash = \"sha256:dcdd193e30abefd5debf142f9adfcdd2b58004e644f25406ffaebd50bd98dacb\"},\n+    {file = \"pyjwt-2.10.1.tar.gz\", hash = \"sha256:3cc5772eb20009233caf06e9d8a0577824723b44e6648ee0a2aedb6cf9381953\"},\n ]\n \n [package.dependencies]\n@@ -7682,13 +7684,13 @@ test = [\"Cython\", \"array-api-strict (>=2.0)\", \"asv\", \"gmpy2\", \"hypothesis (>=6.3\n \n [[package]]\n name = \"selenium\"\n-version = \"4.27.0\"\n+version = \"4.27.1\"\n description = \"Official Python bindings for Selenium WebDriver\"\n optional = true\n python-versions = \">=3.8\"\n files = [\n-    {file = \"selenium-4.27.0-py3-none-any.whl\", hash = \"sha256:70ff70cc8d08f19bda0e89d6a521c0f1c3ae648088c34dcf9fa177f1374c3b5f\"},\n-    {file = \"selenium-4.27.0.tar.gz\", hash = \"sha256:e8850834c482dc93d92060586139cf8ff8be6c6f0e93db640fa65358548f426b\"},\n+    {file = \"selenium-4.27.1-py3-none-any.whl\", hash = \"sha256:b89b1f62b5cfe8025868556fe82360d6b649d464f75d2655cb966c8f8447ea18\"},\n+    {file = \"selenium-4.27.1.tar.gz\", hash = \"sha256:5296c425a75ff1b44d0d5199042b36a6d1ef76c04fb775b97b40be739a9caae2\"},\n ]\n \n [package.dependencies]\n@@ -8536,13 +8538,43 @@ files = [\n \n [[package]]\n name = \"tomli\"\n-version = \"2.1.0\"\n+version = \"2.2.1\"\n description = \"A lil' TOML parser\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"tomli-2.1.0-py3-none-any.whl\", hash = \"sha256:a5c57c3d1c56f5ccdf89f6523458f60ef716e210fc47c4cfb188c5ba473e0391\"},\n-    {file = \"tomli-2.1.0.tar.gz\", hash = \"sha256:3f646cae2aec94e17d04973e4249548320197cfabdf130015d023de4b74d8ab8\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:678e4fa69e4575eb77d103de3df8a895e1591b48e740211bd1067378c69e8249\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:023aa114dd824ade0100497eb2318602af309e5a55595f76b626d6d9f3b7b0a6\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ece47d672db52ac607a3d9599a9d48dcb2f2f735c6c2d1f34130085bb12b112a\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6972ca9c9cc9f0acaa56a8ca1ff51e7af152a9f87fb64623e31d5c83700080ee\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c954d2250168d28797dd4e3ac5cf812a406cd5a92674ee4c8f123c889786aa8e\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:8dd28b3e155b80f4d54beb40a441d366adcfe740969820caf156c019fb5c7ec4\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:e59e304978767a54663af13c07b3d1af22ddee3bb2fb0618ca1593e4f593a106\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:33580bccab0338d00994d7f16f4c4ec25b776af3ffaac1ed74e0b3fc95e885a8\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-win32.whl\", hash = \"sha256:465af0e0875402f1d226519c9904f37254b3045fc5084697cefb9bdde1ff99ff\"},\n+    {file = \"tomli-2.2.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:2d0f2fdd22b02c6d81637a3c95f8cd77f995846af7414c5c4b8d0545afa1bc4b\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:4a8f6e44de52d5e6c657c9fe83b562f5f4256d8ebbfe4ff922c495620a7f6cea\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:8d57ca8095a641b8237d5b079147646153d22552f1c637fd3ba7f4b0b29167a8\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4e340144ad7ae1533cb897d406382b4b6fede8890a03738ff1683af800d54192\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:db2b95f9de79181805df90bedc5a5ab4c165e6ec3fe99f970d0e302f384ad222\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:40741994320b232529c802f8bc86da4e1aa9f413db394617b9a256ae0f9a7f77\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:400e720fe168c0f8521520190686ef8ef033fb19fc493da09779e592861b78c6\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:02abe224de6ae62c19f090f68da4e27b10af2b93213d36cf44e6e1c5abd19fdd\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:b82ebccc8c8a36f2094e969560a1b836758481f3dc360ce9a3277c65f374285e\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-win32.whl\", hash = \"sha256:889f80ef92701b9dbb224e49ec87c645ce5df3fa2cc548664eb8a25e03127a98\"},\n+    {file = \"tomli-2.2.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:7fc04e92e1d624a4a63c76474610238576942d6b8950a2d7f908a340494e67e4\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f4039b9cbc3048b2416cc57ab3bda989a6fcf9b36cf8937f01a6e731b64f80d7\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:286f0ca2ffeeb5b9bd4fcc8d6c330534323ec51b2f52da063b11c502da16f30c\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a92ef1a44547e894e2a17d24e7557a5e85a9e1d0048b0b5e7541f76c5032cb13\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9316dc65bed1684c9a98ee68759ceaed29d229e985297003e494aa825ebb0281\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e85e99945e688e32d5a35c1ff38ed0b3f41f43fad8df0bdf79f72b2ba7bc5272\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:ac065718db92ca818f8d6141b5f66369833d4a80a9d74435a268c52bdfa73140\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:d920f33822747519673ee656a4b6ac33e382eca9d331c87770faa3eef562aeb2\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a198f10c4d1b1375d7687bc25294306e551bf1abfa4eace6650070a5c1ae2744\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-win32.whl\", hash = \"sha256:d3f5614314d758649ab2ab3a62d4f2004c825922f9e370b29416484086b264ec\"},\n+    {file = \"tomli-2.2.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:a38aa0308e754b0e3c67e344754dff64999ff9b513e691d0e786265c93583c69\"},\n+    {file = \"tomli-2.2.1-py3-none-any.whl\", hash = \"sha256:cb55c73c5f4408779d0cf3eef9f762b9c9f147a77de7b258bef0a5628adc85cc\"},\n+    {file = \"tomli-2.2.1.tar.gz\", hash = \"sha256:cd45e1dc79c835ce60f7404ec8119f2eb06d38b1deba146f07ced3bbc44505ff\"},\n ]\n \n [[package]]\n@@ -8905,13 +8937,13 @@ files = [\n \n [[package]]\n name = \"types-docutils\"\n-version = \"0.21.0.20241005\"\n+version = \"0.21.0.20241128\"\n description = \"Typing stubs for docutils\"\n optional = false\n python-versions = \">=3.8\"\n files = [\n-    {file = \"types-docutils-0.21.0.20241005.tar.gz\", hash = \"sha256:48f804a2b50da3a1b1681c4ca1b6184416a6e4129e302d15c44e9d97c59b3365\"},\n-    {file = \"types_docutils-0.21.0.20241005-py3-none-any.whl\", hash = \"sha256:4d9021422f2f3fca8b0726fb8949395f66a06c0d951479eb3b1387d75b134430\"},\n+    {file = \"types_docutils-0.21.0.20241128-py3-none-any.whl\", hash = \"sha256:e0409204009639e9b0bf4521eeabe58b5e574ce9c0db08421c2ac26c32be0039\"},\n+    {file = \"types_docutils-0.21.0.20241128.tar.gz\", hash = \"sha256:4dd059805b83ac6ec5a223699195c4e9eeb0446a4f7f2aeff1759a4a7cc17473\"},\n ]\n \n [[package]]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex e4fa78a566..a46992a117 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -4,7 +4,7 @@ build-backend = \"poetry.core.masonry.api\"\n \n [tool.poetry]\n name = \"camel-ai\"\n-version = \"0.2.9\"\n+version = \"0.2.10\"\n authors = [\"CAMEL-AI.org\"]\n description = \"Communicative Agents for AI Society Study\"\n readme = \"README.md\"\n",
        "test_patch": "diff --git a/test/embeddings/test_openai_compatible_embedding.py b/test/embeddings/test_openai_compatible_embedding.py\nindex b19bdf0d66..d003080ddf 100644\n--- a/test/embeddings/test_openai_compatible_embedding.py\n+++ b/test/embeddings/test_openai_compatible_embedding.py\n@@ -1,16 +1,16 @@\n-# =========== Copyright 2023 @ CAMEL-AI.org. All Rights Reserved. ===========\n-# Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n # you may not use this file except in compliance with the License.\n # You may obtain a copy of the License at\n #\n #     http://www.apache.org/licenses/LICENSE-2.0\n #\n # Unless required by applicable law or agreed to in writing, software\n-# distributed under the License is distributed on an \u201cAS IS\u201d BASIS,\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n # See the License for the specific language governing permissions and\n # limitations under the License.\n-# =========== Copyright 2023 @ CAMEL-AI.org. All Rights Reserved. ===========\n+# ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n \n import unittest\n from unittest.mock import MagicMock, patch\ndiff --git a/test/models/test_qwen_model.py b/test/models/test_qwen_model.py\nindex 428c37665e..a781c442f1 100644\n--- a/test/models/test_qwen_model.py\n+++ b/test/models/test_qwen_model.py\n@@ -38,6 +38,7 @@\n         ModelType.QWEN_2_5_72B,\n         ModelType.QWEN_2_5_32B,\n         ModelType.QWEN_2_5_14B,\n+        ModelType.QWEN_QWQ_32B,\n     ],\n )\n def test_qwen_model(model_type: ModelType):\n",
        "problem_statement": "[BUG] `model_config_dict ` modified in `ChatAgent` for tool passing\n### Required prerequisites\n\n- [X] I have read the documentation <https://camel-ai.github.io/camel/camel.html>.\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### What version of camel are you using?\n\n0.2.9\n\n### System information\n\nx\n\n### Problem description\n\nhttps://github.com/camel-ai/camel/blob/073ddb0a3166d7d9267895a2913059c52601fb31/camel/agents/chat_agent.py#L206\r\nmodel config would be changed if we pass tools to `ChatAgent`\n\n### Reproducible example code\n\nThe Python snippets:\r\n\r\n```python\r\n\r\n```\r\n\r\nCommand lines:\r\n\r\n```bash\r\n\r\n```\r\n\r\nExtra dependencies:\r\n\r\n```text\r\n\r\n```\r\n\r\nSteps to reproduce:\r\n\r\n1.\r\n2.\r\n3.\r\n\n\n### Traceback\n\n_No response_\n\n### Expected behavior\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-11-28T18:34:40Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "test/embeddings/test_openai_compatible_embedding.py",
            "test/models/test_qwen_model.py"
        ]
    },
    {
        "repo": "camel-ai/camel",
        "pull_number": 1246,
        "instance_id": "camel-ai__camel-1246",
        "issue_numbers": [
            "1228"
        ],
        "base_commit": "8e4602c1f141ff7f7f62bf6f3d21ad59e4f45680",
        "patch": "diff --git a/camel/toolkits/code_execution.py b/camel/toolkits/code_execution.py\nindex 4d277db689..d30c5f4659 100644\n--- a/camel/toolkits/code_execution.py\n+++ b/camel/toolkits/code_execution.py\n@@ -11,9 +11,14 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n # ========= Copyright 2023-2024 @ CAMEL-AI.org. All Rights Reserved. =========\n-from typing import List, Literal, Optional\n+from typing import List, Literal, Optional, Union\n \n-from camel.interpreters import InternalPythonInterpreter\n+from camel.interpreters import (\n+    DockerInterpreter,\n+    InternalPythonInterpreter,\n+    JupyterKernelInterpreter,\n+    SubprocessInterpreter,\n+)\n from camel.toolkits import FunctionTool\n from camel.toolkits.base import BaseToolkit\n \n@@ -29,26 +34,55 @@ class CodeExecutionToolkit(BaseToolkit):\n             by `eval()` without any security check. (default: :obj:`False`)\n         import_white_list ( Optional[List[str]]): A list of allowed imports.\n             (default: :obj:`None`)\n+        require_confirm (bool): Whether to require confirmation before executing code.\n+            (default: :obj:`False`)\n     \"\"\"\n \n     def __init__(\n         self,\n         sandbox: Literal[\n-            \"internal_python\", \"jupyter\", \"docker\"\n+            \"internal_python\", \"jupyter\", \"docker\", \"subprocess\"\n         ] = \"internal_python\",\n         verbose: bool = False,\n         unsafe_mode: bool = False,\n         import_white_list: Optional[List[str]] = None,\n+        require_confirm: bool = False,\n     ) -> None:\n-        # TODO: Add support for docker and jupyter.\n         self.verbose = verbose\n         self.unsafe_mode = unsafe_mode\n         self.import_white_list = import_white_list or list()\n+\n+        # Type annotation for interpreter to allow all possible types\n+        self.interpreter: Union[\n+            InternalPythonInterpreter,\n+            JupyterKernelInterpreter,\n+            DockerInterpreter,\n+            SubprocessInterpreter,\n+        ]\n+\n         if sandbox == \"internal_python\":\n             self.interpreter = InternalPythonInterpreter(\n                 unsafe_mode=self.unsafe_mode,\n                 import_white_list=self.import_white_list,\n             )\n+        elif sandbox == \"jupyter\":\n+            self.interpreter = JupyterKernelInterpreter(\n+                require_confirm=require_confirm,\n+                print_stdout=self.verbose,\n+                print_stderr=self.verbose,\n+            )\n+        elif sandbox == \"docker\":\n+            self.interpreter = DockerInterpreter(\n+                require_confirm=require_confirm,\n+                print_stdout=self.verbose,\n+                print_stderr=self.verbose,\n+            )\n+        elif sandbox == \"subprocess\":\n+            self.interpreter = SubprocessInterpreter(\n+                require_confirm=require_confirm,\n+                print_stdout=self.verbose,\n+                print_stderr=self.verbose,\n+            )\n         else:\n             raise RuntimeError(\n                 f\"The sandbox type `{sandbox}` is not supported.\"\n",
        "test_patch": "diff --git a/test/toolkits/test_code_execution.py b/test/toolkits/test_code_execution.py\nindex b93ecb5603..b62915b0e9 100644\n--- a/test/toolkits/test_code_execution.py\n+++ b/test/toolkits/test_code_execution.py\n@@ -15,6 +15,7 @@\n import pytest\n \n from camel.toolkits.code_execution import CodeExecutionToolkit\n+from camel.utils import is_docker_running\n \n \n @pytest.fixture\n@@ -22,6 +23,35 @@ def code_execution_toolkit():\n     return CodeExecutionToolkit()\n \n \n+@pytest.fixture\n+def jupyter_code_execution_toolkit():\n+    return CodeExecutionToolkit(\n+        sandbox=\"jupyter\",\n+        verbose=True,\n+        require_confirm=False,\n+    )\n+\n+\n+@pytest.fixture\n+def docker_code_execution_toolkit():\n+    if not is_docker_running():\n+        pytest.skip(\"Docker is not running\")\n+    return CodeExecutionToolkit(\n+        sandbox=\"docker\",\n+        verbose=True,\n+        require_confirm=False,\n+    )\n+\n+\n+@pytest.fixture\n+def subprocess_code_execution_toolkit():\n+    return CodeExecutionToolkit(\n+        sandbox=\"subprocess\",\n+        verbose=True,\n+        require_confirm=False,\n+    )\n+\n+\n def test_execute_code(code_execution_toolkit):\n     code = \"x = 'a'\\ny = 'b'\\nx + y\"\n     result = code_execution_toolkit.execute_code(code)\n@@ -29,3 +59,92 @@ def test_execute_code(code_execution_toolkit):\n     # ruff: noqa: E501\n     expected_result = f\"Executed the code below:\\n```py\\n{code}\\n```\\n> Executed Results:\\nab\"\n     assert expected_result == result\n+\n+\n+def test_jupyter_execute_code(jupyter_code_execution_toolkit):\n+    code = \"\"\"\n+def add(a, b):\n+    return a + b\n+    \n+result = add(10, 20)\n+print(result)\n+\"\"\"\n+    result = jupyter_code_execution_toolkit.execute_code(code)\n+    assert \"30\" in result\n+\n+\n+def test_jupyter_execute_code_error(jupyter_code_execution_toolkit):\n+    code = \"\"\"\n+def divide(a, b):\n+    return a / b\n+    \n+result = divide(10, 0)\n+print(result)\n+\"\"\"\n+    result = jupyter_code_execution_toolkit.execute_code(code)\n+    assert \"ZeroDivisionError: division by zero\" in result\n+\n+\n+def test_docker_execute_code(docker_code_execution_toolkit):\n+    code = \"\"\"\n+def multiply(a, b):\n+    return a * b\n+    \n+result = multiply(6, 7)\n+print(result)\n+\"\"\"\n+    result = docker_code_execution_toolkit.execute_code(code)\n+    assert \"42\" in result\n+\n+\n+def test_docker_execute_code_error(docker_code_execution_toolkit):\n+    code = \"\"\"\n+import nonexistent_module\n+\"\"\"\n+    result = docker_code_execution_toolkit.execute_code(code)\n+    assert (\n+        \"ModuleNotFoundError: No module named 'nonexistent_module'\" in result\n+    )\n+\n+\n+def test_subprocess_execute_code(subprocess_code_execution_toolkit):\n+    code = \"\"\"\n+def factorial(n):\n+    if n <= 1:\n+        return 1\n+    return n * factorial(n - 1)\n+    \n+result = factorial(5)\n+print(result)\n+\"\"\"\n+    result = subprocess_code_execution_toolkit.execute_code(code)\n+    assert \"120\" in result\n+\n+\n+def test_subprocess_execute_code_error(subprocess_code_execution_toolkit):\n+    code = \"\"\"\n+x = [1, 2, 3]\n+print(x[10])\n+\"\"\"\n+    result = subprocess_code_execution_toolkit.execute_code(code)\n+    assert \"IndexError: list index out of range\" in result\n+\n+\n+def test_invalid_sandbox_type():\n+    with pytest.raises(RuntimeError) as exc_info:\n+        CodeExecutionToolkit(sandbox=\"invalid\")\n+    assert \"not supported\" in str(exc_info.value)\n+\n+\n+def test_get_tools(code_execution_toolkit):\n+    tools = code_execution_toolkit.get_tools()\n+    assert len(tools) == 1\n+    assert tools[0].get_function_name() == \"execute_code\"\n+\n+\n+def test_verbose_output(code_execution_toolkit):\n+    \"\"\"Test that verbose output works correctly.\"\"\"\n+    toolkit = CodeExecutionToolkit(sandbox=\"internal_python\", verbose=True)\n+    code = \"print('test')\"\n+    result = toolkit.execute_code(code)\n+    assert \"test\" in result\n",
        "problem_statement": "[Feature Request] Add other code `interpreters` into `CodeExecutionToolkit`\n### Required prerequisites\n\n- [X] I have searched the [Issue Tracker](https://github.com/camel-ai/camel/issues) and [Discussions](https://github.com/camel-ai/camel/discussions) that this hasn't already been reported. (+1 or comment there if it has.)\n- [ ] Consider asking first in a [Discussion](https://github.com/camel-ai/camel/discussions/new).\n\n### Motivation\n\nAdd other code interpreter into `CodeExecutionToolkit`\n\n### Solution\n\n_No response_\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n",
        "hints_text": "",
        "created_at": "2024-11-28T13:51:23Z",
        "version": "0.2",
        "PASS_TO_PASS": [],
        "FAIL_TO_PASS": [
            "test/toolkits/test_code_execution.py"
        ]
    }
]